<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a2" title="Sutra">
  <file path="sJSONP.php" hash="2597270603382124d61cefcd9d64cbd3" package="Sutra">
    <docblock line="2">
      <description><![CDATA[Extension to Flourish fJSON class to provide methods for JSONP support.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
      <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
      <tag line="2" name="package" description="Sutra"/>
      <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
      <tag line="2" name="version" description="1.2"/>
    </docblock>
    <class final="false" abstract="false" namespace="default" line="14" package="Sutra">
      <name>sJSONP</name>
      <full_name>\sJSONP</full_name>
      <extends>\fJSON</extends>
      <docblock line="2">
        <description><![CDATA[Extension to Flourish fJSON class to provide methods for JSONP support.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
        <tag line="2" name="version" description="1.2"/>
      </docblock>
      <property final="false" static="true" visibility="private" line="20" package="Sutra">
        <name>$reserved_words</name>
        <default><![CDATA[array(
    'break',
    'do',
    'instanceof',
    'typeof',
    'case',
    'else',
    'new',
    'var',
    'catch',
    'finally',
    'return',
    'void',
    'continue',
    'for',
    'switch',
    'while',
    'debugger',
    'function',
    'this',
    'with',
    'default',
    'if',
    'throw',
    'delete',
    'in',
    'try',
    'class',
    'enum',
    'extends',
    'super',
    'const',
    'export',
    'import',
    'implements',
    'let',
    'private',
    'public',
    'yield',
    'interface',
    'package',
    'protected',
    'static',
    'null',
    'true',
    'false',
  )]]></default>
        <docblock line="15">
          <description><![CDATA[JavaScript reserved words, as per the ECMA 3 standard.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="15" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="74" package="Sutra">
        <name>$identifier_syntax</name>
        <default><![CDATA['/^[$_\p{L}][$_\p{L}\p{Mn}\p{Mc}\p{Nd}\p{Pc}\x{200C}\x{200D}]*+$/u']]></default>
        <docblock line="68">
          <description><![CDATA[The JavaScript identifier syntax regular expression.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="68" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="68" name="credit" description="http://www.geekality.net/2010/06/27/php-how-to-easily-provide-json-and-jsonp/"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="86" package="">
        <name>encode</name>
        <type>function</type>
        <docblock line="76">
          <description><![CDATA[Overrides encode method to wrap around the callback received.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="76" name="throws" description="If the callback is invalid." type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="76" name="param" description="Data to encode." type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="76" name="param" description="Optional. If not passed, will be retrieved from GET paramater 'callback'. If no such parameter is found, 'fn' will be used." type="string" variable="$callback">
            <type by_reference="false">string</type>
          </tag>
          <tag line="76" name="return" description="Encoded JSONP data." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="86">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="86">
          <name>$callback</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="default" line="105" package="">
        <name>isValidCallback</name>
        <type>function</type>
        <docblock line="98">
          <description><![CDATA[Validate a callback name is not a reserved word in JavaScript and does not have
  invalid characters.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="98" name="param" description="The callback name." type="string" variable="$subject">
            <type by_reference="false">string</type>
          </tag>
          <tag line="98" name="return" description="TRUE if the callback can be used, FALSE otherwise." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="105">
          <name>$subject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="115" package="">
        <name>sendHeader</name>
        <type>function</type>
        <docblock line="110">
          <description><![CDATA[Overrides sendHeader to send a text/javascript response instead.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="110" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="126" package="">
        <name>__construct</name>
        <type>function</type>
        <docblock line="121">
          <description><![CDATA[Force use as a static class.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="121" name="return" description="" type="\sJSONP">
            <type by_reference="false">\sJSONP</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="sCache.php" hash="969f5788d8bcd903f8f2bfc40b820064" package="Sutra">
    <docblock line="2">
      <description><![CDATA[Extension to sCache. This is almost the same but invisibly provides
  site-unique keys so that one site's cache entry does not conflict with
  another.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
      <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
      <tag line="2" name="package" description="Sutra"/>
      <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
      <tag line="2" name="version" description="1.2"/>
    </docblock>
    <class final="false" abstract="false" namespace="default" line="16" package="Sutra">
      <name>sCache</name>
      <full_name>\sCache</full_name>
      <extends>\fCache</extends>
      <docblock line="2">
        <description><![CDATA[Extension to sCache. This is almost the same but invisibly provides
  site-unique keys so that one site's cache entry does not conflict with
  another.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
        <tag line="2" name="version" description="1.2"/>
      </docblock>
      <property final="false" static="true" visibility="private" line="22" package="Sutra">
        <name>$cwd</name>
        <default><![CDATA['']]></default>
        <docblock line="17">
          <description><![CDATA[The current working directory.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="17" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="private" namespace="default" line="29" package="">
        <name>initialize</name>
        <type>function</type>
        <docblock line="24">
          <description><![CDATA[Initialises the class.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="24" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="default" line="41" package="">
        <name>getSiteUniqueKey</name>
        <type>function</type>
        <docblock line="35">
          <description><![CDATA[Get a key unique to the site.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="35" name="param" description="Key to use." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="35" name="return" description="Key that can be used for cache storage." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="41">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="56" package="">
        <name>add</name>
        <type>function</type>
        <docblock line="46">
          <description><![CDATA[Tries to set a value to the cache, but stops if a value already exists.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="46" name="param" description="The key to store as, this should not exceed 250 characters." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="46" name="param" description="The value to store, this will be serialized." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="46" name="param" description="The number of seconds to keep the cache valid for, 0 for no limit." type="integer" variable="$ttl">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="46" name="return" description="If the key/value pair were added successfully." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="56">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="56">
          <name>$ttl</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="67" package="">
        <name>delete</name>
        <type>function</type>
        <docblock line="61">
          <description><![CDATA[Deletes a value from the cache.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="61" name="param" description="The key to delete." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="61" name="return" description="If the delete succeeded." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="67">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="80" package="">
        <name>get</name>
        <type>function</type>
        <docblock line="72">
          <description><![CDATA[Returns a value from the cache.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="72" name="param" description="The key to return the value for." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="72" name="param" description="The value to return if the key did not exist." type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="72" name="return" description="The cached value or the default value if no cached value was found." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="80">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="80">
          <name>$default</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="95" package="">
        <name>set</name>
        <type>function</type>
        <docblock line="85">
          <description><![CDATA[Sets a value to the cache, overriding any previous value.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="85" name="param" description="The key to store as, this should not exceed 250 characters." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="85" name="param" description="The value to store, this will be serialized." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="85" name="param" description="The number of seconds to keep the cache valid for, 0 for no limit." type="integer" variable="$ttl">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="85" name="return" description="If the value was successfully saved." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="95">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="95">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="95">
          <name>$ttl</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="sGrammar.php" hash="ced73c0965af7dff5695b33ba2e8f7b6" package="Sutra">
    <docblock line="2">
      <description><![CDATA[Extends fGrammar.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
      <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
      <tag line="2" name="package" description="Sutra"/>
      <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
      <tag line="2" name="version" description="1.2"/>
    </docblock>
    <class final="false" abstract="false" namespace="default" line="14" package="Sutra">
      <name>sGrammar</name>
      <full_name>\sGrammar</full_name>
      <extends>\fGrammar</extends>
      <docblock line="2">
        <description><![CDATA[Extends fGrammar.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
        <tag line="2" name="version" description="1.2"/>
      </docblock>
      <property final="false" static="true" visibility="private" line="20" package="Sutra">
        <name>$dashize_cache</name>
        <default><![CDATA[array()]]></default>
        <docblock line="15">
          <description><![CDATA[Cache of strings that have been run through sGrammar::dashize().]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="15" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="27" package="Sutra">
        <name>$dashize_rules</name>
        <default><![CDATA[array()]]></default>
        <docblock line="22">
          <description><![CDATA[Exceptions for sGrammar::dashize().]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="22" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="38" package="">
        <name>addDashizeRule</name>
        <type>function</type>
        <docblock line="29">
          <description><![CDATA[Add an exception string for sGrammar::dashize().]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="29" name="param" description="Original string." type="string" variable="$original">
            <type by_reference="false">string</type>
          </tag>
          <tag line="29" name="param" description="The string to return in case this string is passed to sGrammar::dashize()." type="string" variable="$returnString">
            <type by_reference="false">string</type>
          </tag>
          <tag line="29" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="29" name="see" description="\sGrammar::removeDashizeRule()" refers="\sGrammar::removeDashizeRule()"/>
        </docblock>
        <argument line="38">
          <name>$original</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="38">
          <name>$returnString</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="56" package="">
        <name>removeDashizeRule</name>
        <type>function</type>
        <docblock line="49">
          <description><![CDATA[Removes a rule used by sGrammar::dashize().]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="49" name="param" description="Original string that would be processed." type="string" variable="$original">
            <type by_reference="false">string</type>
          </tag>
          <tag line="49" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="49" name="see" description="\sGrammar::addDashizeRule()" refers="\sGrammar::addDashizeRule()"/>
        </docblock>
        <argument line="56">
          <name>$original</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="78" package="">
        <name>dashize</name>
        <type>function</type>
        <docblock line="69">
          <description><![CDATA[Converts an underscore_notation or camelCase notation to dash-notation.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="69" name="todo" description="camelCase must work."/>
          <tag line="69" name="param" description="String to convert." type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="69" name="return" description="Converted string." type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="69" name="see" description="\sGrammar::addDashizeRule()" refers="\sGrammar::addDashizeRule()"/>
        </docblock>
        <argument line="78">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="sArray.php" hash="85b74fc06cdbd26b858ad736bf3eeca9" package="Sutra">
    <docblock line="2">
      <description><![CDATA[Array utility functions.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
      <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
      <tag line="2" name="package" description="Sutra"/>
      <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
      <tag line="2" name="version" description="1.2"/>
    </docblock>
    <class final="false" abstract="false" namespace="default" line="14" package="Sutra">
      <name>sArray</name>
      <full_name>\sArray</full_name>
      <extends/>
      <docblock line="2">
        <description><![CDATA[Array utility functions.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
        <tag line="2" name="version" description="1.2"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="26" package="">
        <name>hasRequiredKeys</name>
        <type>function</type>
        <docblock line="15">
          <description><![CDATA[Checks if an array has all required keys.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="15" name="param" description="Array to check." type="array" variable="$array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="15" name="param" description="Keys that must be in the array." type="array" variable="$required_keys">
            <type by_reference="false">array</type>
          </tag>
          <tag line="15" name="param" description="If the array should only have the required keys." type="boolean" variable="$only_required">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="15" name="return" description="Returns boolean TRUE if the array is valid, or the missing key." type="string|boolean">
            <type by_reference="false">string</type>
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="15" name="SuppressWarnings" description="(PHPMD.UnusedLocalVariable)"/>
        </docblock>
        <argument line="26">
          <name>$array</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
        <argument line="26">
          <name>$required_keys</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
        <argument line="26">
          <name>$only_required</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="sORMJSON.php" hash="d560917f7bab5c84639af5f248686cf1" package="Sutra">
    <docblock line="2">
      <description><![CDATA[Extension to fORMJSON.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
      <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
      <tag line="2" name="package" description="Sutra"/>
      <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
      <tag line="2" name="version" description="1.2"/>
    </docblock>
    <class final="false" abstract="false" namespace="default" line="14" package="Sutra">
      <name>sORMJSON</name>
      <full_name>\sORMJSON</full_name>
      <extends>\fORMJSON</extends>
      <docblock line="2">
        <description><![CDATA[Extension to fORMJSON.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
        <tag line="2" name="version" description="1.2"/>
      </docblock>
      <property final="false" static="true" visibility="private" line="20" package="Sutra">
        <name>$json_columns</name>
        <default><![CDATA[array()]]></default>
        <docblock line="15">
          <description><![CDATA[Columns => class names registered.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="15" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="27" package="Sutra">
        <name>$callbacks_registered</name>
        <default><![CDATA[FALSE]]></default>
        <docblock line="22">
          <description><![CDATA[If the callbacks are registered.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="22" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="41" package="">
        <name>configureJSONSerializedColumn</name>
        <type>function</type>
        <docblock line="29">
          <description><![CDATA[Configure a column string column (VARCHAR or TEXT) to store a JSON
  serialised object. Conversion to an array and back is transparent. If
  there are validations to perform on these columns when they are in their
  original data type, those callbacks should be registered before calling
  this method.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="29" name="param" description="Class name or instance of the class." type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="29" name="param" description="The column name." type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="29" name="param" description="Force the JSON to be converted to be an array." type="boolean" variable="$force_array">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="29" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="41">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="41">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="41">
          <name>$force_array</name>
          <default><![CDATA[TRUE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="83" package="">
        <name>JSONToValue</name>
        <type>function</type>
        <docblock line="69">
          <description><![CDATA[Converts the JSON string to the value after getting retrieved from the database.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="69" name="internal" description=""/>
          <tag line="69" name="param" description="The fActiveRecord instance." type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="69" name="param" description="Current values array reference." type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="69" name="param" description="Old values array reference." type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="69" name="param" description="Related records array reference." type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="69" name="param" description="Cache array reference." type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="69" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="69" name="SuppressWarnings" description="(PHPMD.UnusedFormalParameter)"/>
        </docblock>
        <argument line="83">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="83">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="83">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="83">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="83">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="110" package="">
        <name>valueToJSON</name>
        <type>function</type>
        <docblock line="96">
          <description><![CDATA[Converts the value to a JSON string before validation.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="96" name="internal" description=""/>
          <tag line="96" name="param" description="The fActiveRecord instance." type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="96" name="param" description="Current values array reference." type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="96" name="param" description="Old values array reference." type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="96" name="param" description="Related records array reference." type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="96" name="param" description="Cache array reference." type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="96" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="96" name="SuppressWarnings" description="(PHPMD.UnusedFormalParameter)"/>
        </docblock>
        <argument line="110">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="110">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="110">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="110">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="110">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="129" package="">
        <name>__construct</name>
        <type>function</type>
        <docblock line="124">
          <description><![CDATA[Forces use as a static class.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="124" name="return" description="" type="\sORMJSON">
            <type by_reference="false">\sORMJSON</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="sProcessException.php" hash="a72280b012792ed24e5f504c303fad63" package="Sutra">
    <docblock line="2">
      <description><![CDATA[Exceptions specific to the class sProcess.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
      <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
      <tag line="2" name="package" description="Sutra"/>
      <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
      <tag line="2" name="version" description="1.2"/>
    </docblock>
    <class final="false" abstract="false" namespace="default" line="14" package="Sutra">
      <name>sProcessException</name>
      <full_name>\sProcessException</full_name>
      <extends>\fUnexpectedException</extends>
      <docblock line="2">
        <description><![CDATA[Exceptions specific to the class sProcess.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
        <tag line="2" name="version" description="1.2"/>
      </docblock>
    </class>
  </file>
  <file path="sProcess.php" hash="587d656c95219b77b189dcc9d6358cbc" package="Sutra">
    <docblock line="2">
      <description><![CDATA[Manages processes external to PHP, including interactive processes.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="copyright" description="Copyright (c) 2012 Poluza."/>
      <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
      <tag line="2" name="package" description="Sutra"/>
      <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
      <tag line="2" name="version" description="1.2"/>
    </docblock>
    <class final="false" abstract="false" namespace="default" line="14" package="Sutra">
      <name>sProcess</name>
      <full_name>\sProcess</full_name>
      <extends/>
      <docblock line="2">
        <description><![CDATA[Manages processes external to PHP, including interactive processes.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 Poluza."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
        <tag line="2" name="version" description="1.2"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="20" package="Sutra">
        <name>$program</name>
        <default><![CDATA[]]></default>
        <docblock line="15">
          <description><![CDATA[The process that will be run.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="15" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="27" package="Sutra">
        <name>$arguments</name>
        <default><![CDATA[array()]]></default>
        <docblock line="22">
          <description><![CDATA[Array of arguments for the process.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="22" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="34" package="Sutra">
        <name>$path</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="29">
          <description><![CDATA[Paths for the system delimited by : (Linux and similar) or ; (Windows).]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="29" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="41" package="Sutra">
        <name>$toss</name>
        <default><![CDATA[FALSE]]></default>
        <docblock line="36">
          <description><![CDATA[Toss if the program returns an unexpected exit code.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="36" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="48" package="Sutra">
        <name>$popen_handle</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="43">
          <description><![CDATA[Handle to popen().]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="43" name="var" description="" type="resource">
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="54" package="Sutra">
        <name>$pipe_file</name>
        <default><![CDATA[]]></default>
        <docblock line="50">
          <description><![CDATA[File to pipe output to when using mode 'w' with popen().]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="50" name="var" description="" type="\fFile">
            <type by_reference="false">\fFile</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="61" package="Sutra">
        <name>$work_dir</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="56">
          <description><![CDATA[Working directory. Defaults to current directory.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="56" name="var" description="" type="\fDirectory">
            <type by_reference="false">\fDirectory</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="68" package="Sutra">
        <name>$prior_dir</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="63">
          <description><![CDATA[Current directory before going into working directory.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="63" name="var" description="" type="\fDirectory">
            <type by_reference="false">\fDirectory</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="75" package="Sutra">
        <name>$redirect_standard_error</name>
        <default><![CDATA[FALSE]]></default>
        <docblock line="70">
          <description><![CDATA[Redirect standard error.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="70" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="82" package="Sutra">
        <name>$stderr_target</name>
        <default><![CDATA['/dev/null']]></default>
        <docblock line="77">
          <description><![CDATA[Where standard error gets sent to.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="77" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="89" package="">
        <name>stripQuotesInArguments</name>
        <type>function</type>
        <docblock line="84">
          <description><![CDATA[Strips double and singular surrounding quotes out of all arguments.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="84" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="104" package="">
        <name>parseNameAndArguments</name>
        <type>function</type>
        <docblock line="98">
          <description><![CDATA[Parses the name and arguments from the arguments given to __construct().]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="98" name="param" description="Arguments passed." type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
          <tag line="98" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="104">
          <name>$arguments</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="155" package="">
        <name>__construct</name>
        <type>function</type>
        <docblock line="140">
          <description><![CDATA[Constructor.]]></description>
          <long-description><![CDATA[<p>On Windows, can include the .exe but this will be removed.</p>

<p>You may also pass arguments to this instead of an array.
  Example: new sProcess('app', '--help').</p>]]></long-description>
          <tag line="140" name="throws" description="If the binary is invalid." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="140" name="param" description="If string, the program to run, optionally with path and arguments. If array, each part of the command line separated. These will be implode()'d with spaces." type="array|string" variable="$name">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="140" name="return" description="The object." type="\sProcess">
            <type by_reference="false">\sProcess</type>
          </tag>
        </docblock>
        <argument line="155">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="181" package="">
        <name>setWorkingDirectory</name>
        <type>function</type>
        <docblock line="170">
          <description><![CDATA[Set the working directory. Note that this changes into the specified
  directory, so you may want to save the current directory before calling
  this method.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="170" name="throws" description="If the working directory is not writable or does not exist." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="170" name="param" description="Path." type="string" variable="$dir">
            <type by_reference="false">string</type>
          </tag>
          <tag line="170" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="170" name="see" description="\getcwd()" refers="\getcwd()"/>
        </docblock>
        <argument line="181">
          <name>$dir</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="198" package="">
        <name>checkOS</name>
        <type>function</type>
        <docblock line="190">
          <description><![CDATA[Check the current operating system. Alias for fCore::checkOS().]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="190" name="param" description="One of: windows, linux, mac." type="string" variable="$os">
            <type by_reference="false">string</type>
          </tag>
          <tag line="190" name="return" description="Whether or not the system matches." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="190" name="see" description="\fCore::checkOS()" refers="\fCore::checkOS()"/>
        </docblock>
        <argument line="198">
          <name>$os</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="212" package="">
        <name>setPath</name>
        <type>function</type>
        <docblock line="202">
          <description><![CDATA[Set the PATH or in the case of Windows 'Path' variable to this object.]]></description>
          <long-description><![CDATA[<p>By default, this class will use the environment variable PATH
  (Windows: 'Path').</p>]]></long-description>
          <tag line="202" name="param" description="Optional. Delimited paths to search for the binary. If not passed, will use environment variables." type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="202" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="212">
          <name>$path</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="236" package="">
        <name>getPath</name>
        <type>function</type>
        <docblock line="229">
          <description><![CDATA[Get the list of paths from the environment variables PATH (UNIX and
  UNIX-like) or Path (Windows).]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="229" name="param" description="Return array if set to TRUE." type="boolean" variable="$array">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="229" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="236">
          <name>$array</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="default" line="250" package="">
        <name>exists</name>
        <type>function</type>
        <docblock line="242">
          <description><![CDATA[Find out if a binary exists on the system in PATH. The binary is NOT
  tested for executability.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="242" name="param" description="Binary without any path. Can include .exe on Windows but that is not required." type="string" variable="$bin_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="242" name="return" description="TRUE If the binary is found, FALSE otherwise." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="250">
          <name>$bin_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="271" package="">
        <name>tossIfUnexpected</name>
        <type>function</type>
        <docblock line="265">
          <description><![CDATA[Throw an sProcessException if the return value does not match expected
  return value.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="265" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="285" package="">
        <name>execute</name>
        <type>function</type>
        <docblock line="275">
          <description><![CDATA[Execute the program. This is for non-interactive processes.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="275" name="throws" description="If tossing is enabled, and the return value does not match the one passed." type="\sProcessException">
            <type by_reference="false">\sProcessException</type>
          </tag>
          <tag line="275" name="param" description="Return value expected. Default is 0. Ignored if the class is not set to throw an exception on an invalid return value." type="int" variable="$rv">
            <type by_reference="false">int</type>
          </tag>
          <tag line="275" name="return" description="Output of the program." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="285">
          <name>$rv</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="304" package="">
        <name>getTemporaryFileName</name>
        <type>function</type>
        <docblock line="299">
          <description><![CDATA[Get the temporary file name to write to.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="299" name="return" description="File name to write to, including full path." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="319" package="">
        <name>commandLine</name>
        <type>function</type>
        <docblock line="313">
          <description><![CDATA[Get the complete command line, escaped, including any piping.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="313" name="param" description="Whether or not popen() is being used." type="boolean" variable="$popen">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="313" name="return" description="The complete command line." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="319">
          <name>$popen</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="351" package="">
        <name>beginInteractive</name>
        <type>function</type>
        <docblock line="344">
          <description><![CDATA[Begin an interactive session with the process.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="344" name="return" description="The object to allow for method chaining." type="\sProcess">
            <type by_reference="false">\sProcess</type>
          </tag>
          <tag line="344" name="see" description="\popen()" refers="\popen()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="372" package="">
        <name>redirectStandardError</name>
        <type>function</type>
        <docblock line="363">
          <description><![CDATA[Redirect standard error.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="363" name="param" description="Defauls to TRUE. Class instantiates with this set to FALSE." type="boolean" variable="$bool">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="363" name="param" description="Where the output should go to. Example could be '&amp;1' or a file name." type="string" variable="$where">
            <type by_reference="false">string</type>
          </tag>
          <tag line="363" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="372">
          <name>$bool</name>
          <default><![CDATA[TRUE]]></default>
          <type/>
        </argument>
        <argument line="372">
          <name>$where</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="400" package="">
        <name>redirectStdErr</name>
        <type>function</type>
        <docblock line="390">
          <description><![CDATA[Redirect standard error. Convenience alias for redirectStandardError().]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="390" name="param" description="Defauls to TRUE." type="boolean" variable="$bool">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="390" name="param" description="Where the output should go to. Example could be '&amp;1' or a file name." type="string" variable="$where">
            <type by_reference="false">string</type>
          </tag>
          <tag line="390" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="390" name="see" description="\sProcess::redirectStandardError()" refers="\sProcess::redirectStandardError()"/>
        </docblock>
        <argument line="400">
          <name>$bool</name>
          <default><![CDATA[TRUE]]></default>
          <type/>
        </argument>
        <argument line="400">
          <name>$where</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="415" package="">
        <name>write</name>
        <type>function</type>
        <docblock line="404">
          <description><![CDATA[Write to the interactive process.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="404" name="throws" description="If the handle cannot be written to or if the string passed was of zero-length." type="\sProcessException">
            <type by_reference="false">\sProcessException</type>
          </tag>
          <tag line="404" name="param" description="A formatted string and arguments. Example: &quot;%s&quot;, 'string'." type="\$format,..." variable="$format">
            <type by_reference="false">\$format,...</type>
          </tag>
          <tag line="404" name="return" description="The object to allow for method chaining." type="\sProcess">
            <type by_reference="false">\sProcess</type>
          </tag>
          <tag line="404" name="see" description="\fprintf()" refers="\fprintf()"/>
        </docblock>
        <argument line="415">
          <name>$format</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="438" package="">
        <name>EOF</name>
        <type>function</type>
        <docblock line="428">
          <description><![CDATA[End the interactive session.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="428" name="throws" description="If tossing is enabled and the return value does not match the one passed; if attempting to close a non-existent popen handle." type="\sProcessException">
            <type by_reference="false">\sProcessException</type>
          </tag>
          <tag line="428" name="param" description="Return value expected. Defaults to 0." type="int" variable="$rv">
            <type by_reference="false">int</type>
          </tag>
          <tag line="428" name="return" description="Output of the session." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="438">
          <name>$rv</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="468" package="">
        <name>addArgument</name>
        <type>function</type>
        <docblock line="459">
          <description><![CDATA[Add argument (or arguments) to the current set of arguments.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="459" name="throws" description="If attempting to add arguments to a process already running." type="\sProcessException">
            <type by_reference="false">\sProcessException</type>
          </tag>
          <tag line="459" name="param" description="Arguments to add." type="\string,..." variable="$arg">
            <type by_reference="false">\string,...</type>
          </tag>
          <tag line="459" name="return" description="The object to allow for method chaining." type="\sProcess">
            <type by_reference="false">\sProcess</type>
          </tag>
        </docblock>
        <argument line="468">
          <name>$arg</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="sLoader.php" hash="fb26b03015c19cab04898ab880e909fe" package="Sutra">
    <docblock line="2">
      <description><![CDATA[Manages loading of classes.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
      <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
      <tag line="2" name="package" description="Sutra"/>
      <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
      <tag line="2" name="version" description="1.2"/>
    </docblock>
    <class final="false" abstract="false" namespace="default" line="14" package="Sutra">
      <name>sLoader</name>
      <full_name>\sLoader</full_name>
      <extends>\fLoader</extends>
      <docblock line="2">
        <description><![CDATA[Manages loading of classes.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
        <tag line="2" name="version" description="1.2"/>
      </docblock>
      <property final="false" static="true" visibility="private" line="20" package="Sutra">
        <name>$path</name>
        <default><![CDATA['']]></default>
        <docblock line="15">
          <description><![CDATA[Path where Sutra is installed.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="15" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="27" package="Sutra">
        <name>$classes</name>
        <default><![CDATA[array(
    'sArray',
    'sAuthorization',
    'sCache',
    'sGrammar',
    'sHTML',
    'sImage',
    'sJSONP',
    'sNumber',
    'sORMJSON',
    'sProcess',
    'sProcessException',
    'sRequest',
    'sResponse',
    'sTemplate',
    'sTimestamp',
  )]]></default>
        <docblock line="22">
          <description><![CDATA[All the Sutra classes.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="22" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="51" package="">
        <name>best</name>
        <type>function</type>
        <docblock line="45">
          <description><![CDATA[Override best() method.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="45" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="45" name="see" description="\sLoader::eagar()" refers="\sLoader::eagar()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="default" line="66" package="">
        <name>createConstructorFunctions</name>
        <type>function</type>
        <docblock line="59">
          <description><![CDATA[Creates constructor functions. This makes it possible to write:]]></description>
          <long-description><![CDATA[<pre><code>new sProcess('node myscript')->execute();</code></pre>]]></long-description>
          <tag line="59" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="90" package="">
        <name>eagar</name>
        <type>function</type>
        <docblock line="85">
          <description><![CDATA[Override eager() method to load Sutra classes after Flourish's.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="85" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="default" line="106" package="">
        <name>setPath</name>
        <type>function</type>
        <docblock line="101">
          <description><![CDATA[Determines where Sutra is installed.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="101" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="117" package="">
        <name>lazy</name>
        <type>function</type>
        <docblock line="112">
          <description><![CDATA[Registers a class auto-loader to load Sutra classes.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="112" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="134" package="">
        <name>autoload</name>
        <type>function</type>
        <docblock line="126">
          <description><![CDATA[Tries to load a Sutra class.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="126" name="internal" description=""/>
          <tag line="126" name="param" description="The class to load." type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="126" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="134">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="sTemplate.php" hash="056bb9b99da6bdbf6c8e29465eb99f57" package="Sutra">
    <docblock line="2">
      <description><![CDATA[Manages templating.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
      <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
      <tag line="2" name="package" description="Sutra"/>
      <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
      <tag line="2" name="version" description="1.2"/>
    </docblock>
    <class final="false" abstract="false" namespace="default" line="14" package="Sutra">
      <name>sTemplate</name>
      <full_name>\sTemplate</full_name>
      <extends/>
      <docblock line="2">
        <description><![CDATA[Manages templating.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
        <tag line="2" name="version" description="1.2"/>
      </docblock>
      <property final="false" static="true" visibility="protected" line="20" package="Sutra">
        <name>$cache</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="15">
          <description><![CDATA[The sCache instance.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="15" name="var" description="" type="\sCache">
            <type by_reference="false">\sCache</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="28" package="Sutra">
        <name>$template_name</name>
        <default><![CDATA['default']]></default>
        <docblock line="22">
          <description><![CDATA[The template name. Matches directory name in './template'. Defaults to
  'default'.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="22" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="35" package="Sutra">
        <name>$template_fallback</name>
        <default><![CDATA['default']]></default>
        <docblock line="30">
          <description><![CDATA[The fallback template.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="30" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="42" package="Sutra">
        <name>$templates_path</name>
        <default><![CDATA['./template']]></default>
        <docblock line="37">
          <description><![CDATA[The templates path without any ending directory separator (like /).]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="37" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="49" package="Sutra">
        <name>$production_mode_template_path</name>
        <default><![CDATA['./template']]></default>
        <docblock line="44">
          <description><![CDATA[The templates path used when production mode is enabled.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="44" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="56" package="Sutra">
        <name>$javascript_files</name>
        <default><![CDATA[array(
    'head' => array(),
    'body' => array(),
  )]]></default>
        <docblock line="51">
          <description><![CDATA[The JavaScript files (which appear normally at the bottom of the page).]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="51" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="66" package="Sutra">
        <name>$compiled_javascript_files</name>
        <default><![CDATA[array(
    'head' => array(),
    'body' => array(),
  )]]></default>
        <docblock line="61">
          <description><![CDATA[The minified/compiled JavaScript files used in production mode.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="61" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="76" package="Sutra">
        <name>$in_production_mode</name>
        <default><![CDATA[FALSE]]></default>
        <docblock line="71">
          <description><![CDATA[Whether or not the site is in production mode or not.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="71" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="83" package="Sutra">
        <name>$body_classes</name>
        <default><![CDATA[array()]]></default>
        <docblock line="78">
          <description><![CDATA[Array of strings of class names to apply to the body element.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="78" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="90" package="Sutra">
        <name>$cdns</name>
        <default><![CDATA[array()]]></default>
        <docblock line="85">
          <description><![CDATA[Array of CDN URL prefixes.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="85" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="99" package="Sutra">
        <name>$query_strings_enabled</name>
        <default><![CDATA[TRUE]]></default>
        <docblock line="92">
          <description><![CDATA[If resources such as CSS and JavaScript while not in production mode
  should be printed with query strings added to prevent caching (in
  particular with IE).]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="92" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="106" package="Sutra">
        <name>$registered_callbacks</name>
        <default><![CDATA[array('*' => array())]]></default>
        <docblock line="101">
          <description><![CDATA[Registered callbacks.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="101" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="113" package="Sutra">
        <name>$css_files</name>
        <default><![CDATA[array(
    'all' => array(),
    'screen' => array(),
    'print' => array(),
  )]]></default>
        <docblock line="108">
          <description><![CDATA[CSS file paths. The keys are the media types.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="108" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="124" package="Sutra">
        <name>$css_media_order</name>
        <default><![CDATA[array('all', 'screen', 'print')]]></default>
        <docblock line="119">
          <description><![CDATA[CSS media order.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="119" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="131" package="Sutra">
        <name>$language</name>
        <default><![CDATA['en']]></default>
        <docblock line="126">
          <description><![CDATA[The language of the page.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="126" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="138" package="Sutra">
        <name>$text_direction</name>
        <default><![CDATA['ltr']]></default>
        <docblock line="133">
          <description><![CDATA[The text direction of the page.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="133" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="145" package="Sutra">
        <name>$site_name</name>
        <default><![CDATA['No Site Name']]></default>
        <docblock line="140">
          <description><![CDATA[The site name.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="140" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="152" package="Sutra">
        <name>$site_slogan</name>
        <default><![CDATA['']]></default>
        <docblock line="147">
          <description><![CDATA[The site slogan.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="147" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="159" package="Sutra">
        <name>$minifed_css_path</name>
        <default><![CDATA['files']]></default>
        <docblock line="154">
          <description><![CDATA[Where minified CSS should be stored.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="154" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="167" package="">
        <name>setCache</name>
        <type>function</type>
        <docblock line="161">
          <description><![CDATA[Set the sCache instance sTemplate will use.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="161" name="param" description="The cache object." type="\sCache" variable="$cache">
            <type by_reference="false">\sCache</type>
          </tag>
          <tag line="161" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="167">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type>sCache</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="179" package="">
        <name>getCache</name>
        <type>function</type>
        <docblock line="171">
          <description><![CDATA[Gets the sCache instance this is using.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="171" name="throws" description="If cache is NULL." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="171" name="return" description="The sCache instance." type="\sCache">
            <type by_reference="false">\sCache</type>
          </tag>
          <tag line="171" name="see" description="\sTemplate::setCache()" refers="\sTemplate::setCache()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="195" package="">
        <name>setMinifiedCSSPath</name>
        <type>function</type>
        <docblock line="186">
          <description><![CDATA[Set where minified CSS should be stored. This directory will be in the site root.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="186" name="throws" description="If the directory is not writable." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="186" name="param" description="Path in which to store minified CSS. Should not have a leading '/', or './' at the beginning." type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="186" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="195">
          <name>$path</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="211" package="">
        <name>setSiteSlogan</name>
        <type>function</type>
        <docblock line="205">
          <description><![CDATA[Set the site slogan.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="205" name="param" description="Slogan string." type="string" variable="$slogan">
            <type by_reference="false">string</type>
          </tag>
          <tag line="205" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="211">
          <name>$slogan</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="221" package="">
        <name>setSiteName</name>
        <type>function</type>
        <docblock line="215">
          <description><![CDATA[Set the site name.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="215" name="param" description="Name for the site." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="215" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="221">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="240" package="">
        <name>setMode</name>
        <type>function</type>
        <docblock line="225">
          <description><![CDATA[Set the current mode. In production mode, the site will use minified CSS
  and only minified JavaScript files which are added using
  sTemplate::addMinifiedJavaScriptFile().]]></description>
          <long-description><![CDATA[<p>In development mode, the site will use the CSS and JavaScript files, and
  will append a query string to each resource to prevent caching by
  default. This can be disabled by calling:
  sTemplate::enableQueryStrings() with FALSE as the first argument.</p>]]></long-description>
          <tag line="225" name="param" description="One of 'development' or 'production'." type="string" variable="$mode">
            <type by_reference="false">string</type>
          </tag>
          <tag line="225" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="225" name="see" description="\sTemplate::addMinifiedJavaScriptFile()" refers="\sTemplate::addMinifiedJavaScriptFile()"/>
          <tag line="225" name="see" description="\sTemplate::enableQueryStrings()" refers="\sTemplate::enableQueryStrings()"/>
        </docblock>
        <argument line="240">
          <name>$mode</name>
          <default><![CDATA['development']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="256" package="">
        <name>getMode</name>
        <type>function</type>
        <docblock line="251">
          <description><![CDATA[Get the current working mode.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="251" name="return" description="One of: 'development', 'production'." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="267" package="">
        <name>enableQueryStrings</name>
        <type>function</type>
        <docblock line="260">
          <description><![CDATA[Enable or disable query strings on resource URLs such as CSS while in
  development mode.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="260" name="param" description="Value to set. TRUE or FALSE." type="boolean" variable="$bool">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="260" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="267">
          <name>$bool</name>
          <default><![CDATA[TRUE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="283" package="">
        <name>registerCallback</name>
        <type>function</type>
        <docblock line="271">
          <description><![CDATA[Register a callback to be called when the template name specified is about
  to be rendered.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="271" name="param" description="Callback. All callbacks must return an array of keys to string values. They must be registered before the template will be used with sTemplate::buffer()." type="callback" variable="$callback">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="271" name="param" description="Template name (without .tpl.php) to listen for." type="string" variable="$template_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="271" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="271" name="see" description="\sTemplate::buffer()" refers="\sTemplate::buffer()"/>
        </docblock>
        <argument line="283">
          <name>$callback</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="283">
          <name>$template_name</name>
          <default><![CDATA['*']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="default" line="293" package="">
        <name>callCallbacks</name>
        <type>function</type>
        <docblock line="287">
          <description><![CDATA[Calls all the registered callback for * and this template.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="287" name="param" description="Template name." type="string" variable="$template_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="287" name="return" description="Array of key =&gt; value pairs for use in the template." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="293">
          <name>$template_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="319" package="">
        <name>setTemplatesPath</name>
        <type>function</type>
        <docblock line="309">
          <description><![CDATA[Set the templates path.]]></description>
          <long-description><![CDATA[<p>The path is run through fDirectory. If it is not useable, then
  fDirectory::__construct() will throw an fValidationException.</p>]]></long-description>
          <tag line="309" name="param" description="Path without ending separator, such as / or \\." type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="309" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="309" name="see" description="\fDirectory::__construct()" refers="\fDirectory::__construct()"/>
        </docblock>
        <argument line="319">
          <name>$path</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="332" package="">
        <name>addJavaScriptFile</name>
        <type>function</type>
        <docblock line="324">
          <description><![CDATA[Add a JavaScript file.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="324" name="param" description="File name. Should be relative to site root or can be full URIs." type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="324" name="param" description="Where the script should go. One of: 'head', 'body'." type="string" variable="$where">
            <type by_reference="false">string</type>
          </tag>
          <tag line="324" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="332">
          <name>$filename</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="332">
          <name>$where</name>
          <default><![CDATA['body']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="352" package="">
        <name>addMinifiedJavaScriptFile</name>
        <type>function</type>
        <docblock line="344">
          <description><![CDATA[Add a minified JavaScript file. Should be relative to site path, or can be
  full URIs. These are only added during production mode.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="344" name="param" description="File name. Example: '/files/themin.min.js'" type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="344" name="param" description="Where the script should go. One of: 'head', 'body'." type="string" variable="$where">
            <type by_reference="false">string</type>
          </tag>
          <tag line="344" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="352">
          <name>$filename</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="352">
          <name>$where</name>
          <default><![CDATA['body']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="372" package="">
        <name>getJavaScriptFiles</name>
        <type>function</type>
        <docblock line="364">
          <description><![CDATA[Load/get all JavaScript files in an array. If no argument is specified,
  then all JavaScript file paths will be in the array, with first level
  keys being 'head' and 'body'.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="364" name="param" description="Which to get. One of: 'head', 'body'." type="string" variable="$where">
            <type by_reference="false">string</type>
          </tag>
          <tag line="364" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="372">
          <name>$where</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="default" line="394" package="">
        <name>getTemplatesPath</name>
        <type>function</type>
        <docblock line="389">
          <description><![CDATA[Gets the correct templates path.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="389" name="return" description="The path." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="407" package="">
        <name>addCSSFile</name>
        <type>function</type>
        <docblock line="398">
          <description><![CDATA[Add a CSS file path.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="398" name="param" description="Path to the CSS file. Should be in the site root." type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="398" name="param" description="Media type." type="string" variable="$media">
            <type by_reference="false">string</type>
          </tag>
          <tag line="398" name="param" description="If this CSS file sould be first." type="boolean" variable="$prepend">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="398" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="398" name="see" description="\sTemplate::setCSSMediaOrder()" refers="\sTemplate::setCSSMediaOrder()"/>
        </docblock>
        <argument line="407">
          <name>$path</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="407">
          <name>$media</name>
          <default><![CDATA['all']]></default>
          <type/>
        </argument>
        <argument line="407">
          <name>$prepend</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="428" package="">
        <name>setCSSMediaOrder</name>
        <type>function</type>
        <docblock line="422">
          <description><![CDATA[Set the CSS media type order.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="422" name="param" description="Array of media query strings such as 'screen'." type="array" variable="$order">
            <type by_reference="false">array</type>
          </tag>
          <tag line="422" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="428">
          <name>$order</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="442" package="">
        <name>setActiveTemplate</name>
        <type>function</type>
        <docblock line="432">
          <description><![CDATA[Set the active template.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="432" name="throws" description="If any directory is not found or not readable." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="432" name="param" description="String of template name." type="string" variable="$template_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="432" name="param" description="The fallback template." type="string" variable="$fallback_template">
            <type by_reference="false">string</type>
          </tag>
          <tag line="432" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="442">
          <name>$template_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="442">
          <name>$fallback_template</name>
          <default><![CDATA['default']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="467" package="">
        <name>buffer</name>
        <type>function</type>
        <docblock line="456">
          <description><![CDATA[Buffer a file in for content.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="456" name="param" description="File name to include without extension." type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="456" name="param" description="Array of key =&gt; value pairs, which will be turned into local variables before the template file is included." type="array" variable="$variables">
            <type by_reference="false">array</type>
          </tag>
          <tag line="456" name="throws" description="If the file cannot be found." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="456" name="return" description="The captured content." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="467">
          <name>$filename</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="467">
          <name>$variables</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="497" package="">
        <name>setProductionModeTemplatesPath</name>
        <type>function</type>
        <docblock line="490">
          <description><![CDATA[Set the template path used when production mode is enabled. If this is not
  set, the default path will be used.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="490" name="param" description="Path to use." type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="490" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="497">
          <name>$path</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="default" line="509" package="">
        <name>getStylesheetsHTMLProductionMode</name>
        <type>function</type>
        <docblock line="502">
          <description><![CDATA[Makes the stylesheets HTML when in production mode.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="502" name="throws" description="If a file is unable to read or found." type="\fUnexpectedException">
            <type by_reference="false">\fUnexpectedException</type>
          </tag>
          <tag line="502" name="return" description="The HTML link tags." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="default" line="634" package="">
        <name>getStylesheetsHTML</name>
        <type>function</type>
        <docblock line="626">
          <description><![CDATA[Get the list of stylesheets in order.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="626" name="throws" description="If the CSS file cannot be read (production mode only)." type="\fUnexpectedException">
            <type by_reference="false">\fUnexpectedException</type>
          </tag>
          <tag line="626" name="return" description="String of link HTML tags." type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="626" name="see" description="\sTemplate::setCSSMediaOrder()" refers="\sTemplate::setCSSMediaOrder()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="default" line="696" package="">
        <name>getJavaScriptHTML</name>
        <type>function</type>
        <docblock line="686">
          <description><![CDATA[Get string of HTML scripts for use in the head element.]]></description>
          <long-description><![CDATA[<p>JavaScript here can only be dependent on scripts that are also
  in the head element.
Make this script optionally compile-able.</p>]]></long-description>
          <tag line="686" name="param" description="Which scripts to get. One of: 'head', 'body'." type="string" variable="$where">
            <type by_reference="false">string</type>
          </tag>
          <tag line="686" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="696">
          <name>$where</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="725" package="">
        <name>templateExists</name>
        <type>function</type>
        <docblock line="719">
          <description><![CDATA[Check if a certain template file exists.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="719" name="param" description="Template name to check, without .tpl.php." type="string" variable="$template_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="719" name="return" description="TRUE if the template exists, otherwise FALSE." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="725">
          <name>$template_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="735" package="">
        <name>addCDN</name>
        <type>function</type>
        <docblock line="729">
          <description><![CDATA[Add a CDN URL prefix WITHOUT including the final slash.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="729" name="param" description="The prefix URL to use." type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="729" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="735">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="745" package="">
        <name>removeCDN</name>
        <type>function</type>
        <docblock line="739">
          <description><![CDATA[Remove a specified CDN URL.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="739" name="param" description="The URL to remove." type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="739" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="745">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="760" package="">
        <name>setCDNs</name>
        <type>function</type>
        <docblock line="754">
          <description><![CDATA[Set the CDNs to use.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="754" name="param" description="Array of URL prefixes WITHOUT the ending /." type="array" variable="$urls">
            <type by_reference="false">array</type>
          </tag>
          <tag line="754" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="760">
          <name>$urls</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="769" package="">
        <name>getCDNs</name>
        <type>function</type>
        <docblock line="764">
          <description><![CDATA[Get the CDNs in currently in use.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="764" name="returns" description="array Array of string URLs."/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="778" package="">
        <name>removeCDNs</name>
        <type>function</type>
        <docblock line="773">
          <description><![CDATA[Remove all CDNs.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="773" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="787" package="">
        <name>getACDN</name>
        <type>function</type>
        <docblock line="782">
          <description><![CDATA[Get a CDN to use.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="782" name="return" description="Empty string, or CDN URL prefix." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="804" package="">
        <name>addBodyClass</name>
        <type>function</type>
        <docblock line="797">
          <description><![CDATA[Add a body class. This would normally be output in the class attribute of
  the <body> element.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="797" name="param" description="Class name to add." type="string" variable="$class_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="797" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="804">
          <name>$class_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="813" package="">
        <name>getBodyClasses</name>
        <type>function</type>
        <docblock line="808">
          <description><![CDATA[Get the body classes.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="808" name="return" description="Array of strings." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="default" line="824" package="">
        <name>getPageTemplate</name>
        <type>function</type>
        <docblock line="817">
          <description><![CDATA[Get the correct page template for this URL.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="817" name="throws" description="If a candidate file cannot be found." type="\fUnexpectedException">
            <type by_reference="false">\fUnexpectedException</type>
          </tag>
          <tag line="817" name="return" description="Template file name (with .tpl.php) to use." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="855" package="">
        <name>render</name>
        <type>function</type>
        <docblock line="843">
          <description><![CDATA[Perform final rendering. Call this at the end of the router's main action
  method.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="843" name="throws" description="If the template cannot be found." type="\fUnexpectedException">
            <type by_reference="false">\fUnexpectedException</type>
          </tag>
          <tag line="843" name="throws" description="If the keys title or content are missing." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="843" name="param" description="Array of key =&gt; value pairs, which will be turned into local variables before the template file is included. Must have the keys content and title." type="array" variable="$variables">
            <type by_reference="false">array</type>
          </tag>
          <tag line="843" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="855">
          <name>$variables</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="923" package="">
        <name>__construct</name>
        <type>function</type>
        <docblock line="918">
          <description><![CDATA[Forces use as a static class.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="918" name="return" description="" type="\sTemplate">
            <type by_reference="false">\sTemplate</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="sNumber.php" hash="39f2fca7a97556815134ec01ea676e84" package="Sutra">
    <docblock line="2">
      <description><![CDATA[Provides getting ordinal numbers as an extension to fNumber.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
      <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
      <tag line="2" name="package" description="Sutra"/>
      <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
      <tag line="2" name="version" description="1.2"/>
    </docblock>
    <class final="false" abstract="false" namespace="default" line="14" package="Sutra">
      <name>sNumber</name>
      <full_name>\sNumber</full_name>
      <extends>\fNumber</extends>
      <docblock line="2">
        <description><![CDATA[Provides getting ordinal numbers as an extension to fNumber.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
        <tag line="2" name="version" description="1.2"/>
      </docblock>
      <property final="false" static="true" visibility="private" line="21" package="Sutra">
        <name>$valid_locales</name>
        <default><![CDATA[array(
    'af-ZA' => TRUE,
    'am-ET' => TRUE,
    'ar-AE' => TRUE,
    'ar-BH' => TRUE,
    'ar-DZ' => TRUE,
    'ar-EG' => TRUE,
    'ar-IQ' => TRUE,
    'ar-JO' => TRUE,
    'ar-KW' => TRUE,
    'ar-LB' => TRUE,
    'ar-LY' => TRUE,
    'ar-MA' => TRUE,
    'arn-CL' => TRUE,
    'ar-OM' => TRUE,
    'ar-QA' => TRUE,
    'ar-SA' => TRUE,
    'ar-SY' => TRUE,
    'ar-TN' => TRUE,
    'ar-YE' => TRUE,
    'as-IN' => TRUE,
    'az-Cyrl-AZ' => TRUE,
    'az-Latn-AZ' => TRUE,
    'ba-RU' => TRUE,
    'be-BY' => TRUE,
    'bg-BG' => TRUE,
    'bn-BD' => TRUE,
    'bn-IN' => TRUE,
    'bo-CN' => TRUE,
    'br-FR' => TRUE,
    'bs-Cyrl-BA' => TRUE,
    'bs-Latn-BA' => TRUE,
    'ca-ES' => TRUE,
    'co-FR' => TRUE,
    'cs-CZ' => TRUE,
    'cy-GB' => TRUE,
    'da-DK' => TRUE,
    'de-AT' => TRUE,
    'de-CH' => TRUE,
    'de-DE' => TRUE,
    'de-LI' => TRUE,
    'de-LU' => TRUE,
    'dsb-DE' => TRUE,
    'dv-MV' => TRUE,
    'el-GR' => TRUE,
    'en-029' => TRUE,
    'en-AU' => TRUE,
    'en-BZ' => TRUE,
    'en-CA' => TRUE,
    'en-GB' => TRUE,
    'en-IE' => TRUE,
    'en-IN' => TRUE,
    'en-JM' => TRUE,
    'en-MY' => TRUE,
    'en-NZ' => TRUE,
    'en-PH' => TRUE,
    'en-SG' => TRUE,
    'en-TT' => TRUE,
    'en-US' => TRUE,
    'en-ZA' => TRUE,
    'en-ZW' => TRUE,
    'es-AR' => TRUE,
    'es-BO' => TRUE,
    'es-CL' => TRUE,
    'es-CO' => TRUE,
    'es-CR' => TRUE,
    'es-DO' => TRUE,
    'es-EC' => TRUE,
    'es-ES' => TRUE,
    'es-GT' => TRUE,
    'es-HN' => TRUE,
    'es-MX' => TRUE,
    'es-NI' => TRUE,
    'es-PA' => TRUE,
    'es-PE' => TRUE,
    'es-PR' => TRUE,
    'es-PY' => TRUE,
    'es-SV' => TRUE,
    'es-US' => TRUE,
    'es-UY' => TRUE,
    'es-VE' => TRUE,
    'et-EE' => TRUE,
    'eu-ES' => TRUE,
    'fa-IR' => TRUE,
    'fi-FI' => TRUE,
    'fil-PH' => TRUE,
    'fo-FO' => TRUE,
    'fr-BE' => TRUE,
    'fr-CA' => TRUE,
    'fr-CH' => TRUE,
    'fr-FR' => TRUE,
    'fr-LU' => TRUE,
    'fr-MC' => TRUE,
    'fy-NL' => TRUE,
    'ga-IE' => TRUE,
    'gd-GB' => TRUE,
    'gl-ES' => TRUE,
    'gsw-FR' => TRUE,
    'gu-IN' => TRUE,
    'ha-Latn-NG' => TRUE,
    'he-IL' => TRUE,
    'hi-IN' => TRUE,
    'hr-BA' => TRUE,
    'hr-HR' => TRUE,
    'hsb-DE' => TRUE,
    'hu-HU' => TRUE,
    'hy-AM' => TRUE,
    'id-ID' => TRUE,
    'ig-NG' => TRUE,
    'ii-CN' => TRUE,
    'is-IS' => TRUE,
    'it-CH' => TRUE,
    'it-IT' => TRUE,
    'iu-Cans-CA' => TRUE,
    'iu-Latn-CA' => TRUE,
    'ja-JP' => TRUE,
    'ka-GE' => TRUE,
    'kk-KZ' => TRUE,
    'kl-GL' => TRUE,
    'km-KH' => TRUE,
    'kn-IN' => TRUE,
    'kok-IN' => TRUE,
    'ko-KR' => TRUE,
    'ky-KG' => TRUE,
    'lb-LU' => TRUE,
    'lo-LA' => TRUE,
    'lt-LT' => TRUE,
    'lv-LV' => TRUE,
    'mi-NZ' => TRUE,
    'mk-MK' => TRUE,
    'ml-IN' => TRUE,
    'mn-MN' => TRUE,
    'mn-Mong-CN' => TRUE,
    'moh-CA' => TRUE,
    'mr-IN' => TRUE,
    'ms-BN' => TRUE,
    'ms-MY' => TRUE,
    'mt-MT' => TRUE,
    'nb-NO' => TRUE,
    'ne-NP' => TRUE,
    'nl-BE' => TRUE,
    'nl-NL' => TRUE,
    'nn-NO' => TRUE,
    'nso-ZA' => TRUE,
    'oc-FR' => TRUE,
    'or-IN' => TRUE,
    'pa-IN' => TRUE,
    'pl-PL' => TRUE,
    'prs-AF' => TRUE,
    'ps-AF' => TRUE,
    'pt-BR' => TRUE,
    'pt-PT' => TRUE,
    'qut-GT' => TRUE,
    'quz-BO' => TRUE,
    'quz-EC' => TRUE,
    'quz-PE' => TRUE,
    'rm-CH' => TRUE,
    'ro-RO' => TRUE,
    'ru-RU' => TRUE,
    'rw-RW' => TRUE,
    'sah-RU' => TRUE,
    'sa-IN' => TRUE,
    'se-FI' => TRUE,
    'se-NO' => TRUE,
    'se-SE' => TRUE,
    'si-LK' => TRUE,
    'sk-SK' => TRUE,
    'sl-SI' => TRUE,
    'sma-NO' => TRUE,
    'sma-SE' => TRUE,
    'smj-NO' => TRUE,
    'smj-SE' => TRUE,
    'smn-FI' => TRUE,
    'sms-FI' => TRUE,
    'sq-AL' => TRUE,
    'sr-Cyrl-BA' => TRUE,
    'sr-Cyrl-CS' => TRUE,
    'sr-Cyrl-ME' => TRUE,
    'sr-Cyrl-RS' => TRUE,
    'sr-Latn-BA' => TRUE,
    'sr-Latn-CS' => TRUE,
    'sr-Latn-ME' => TRUE,
    'sr-Latn-RS' => TRUE,
    'sv-FI' => TRUE,
    'sv-SE' => TRUE,
    'sw-KE' => TRUE,
    'syr-SY' => TRUE,
    'ta-IN' => TRUE,
    'te-IN' => TRUE,
    'tg-Cyrl-TJ' => TRUE,
    'th-TH' => TRUE,
    'tk-TM' => TRUE,
    'tn-ZA' => TRUE,
    'tr-TR' => TRUE,
    'tt-RU' => TRUE,
    'tzm-Latn-DZ' => TRUE,
    'ug-CN' => TRUE,
    'uk-UA' => TRUE,
    'ur-PK' => TRUE,
    'uz-Cyrl-UZ' => TRUE,
    'uz-Latn-UZ' => TRUE,
    'vi-VN' => TRUE,
    'wo-SN' => TRUE,
    'xh-ZA' => TRUE,
    'yo-NG' => TRUE,
    'zh-CN' => TRUE,
    'zh-HK' => TRUE,
    'zh-MO' => TRUE,
    'zh-SG' => TRUE,
    'zh-TW' => TRUE,
    'zu-ZA' => TRUE,
  )]]></default>
        <docblock line="15">
          <description><![CDATA[Common list of locales.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="15" name="see" description="\http://www.iana.org/assignments/language-subtag-registry" refers="\http://www.iana.org/assignments/language-subtag-registry"/>
          <tag line="15" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="239" package="Sutra">
        <name>$locale</name>
        <default><![CDATA['en-US']]></default>
        <docblock line="234">
          <description><![CDATA[The locale for the class. Defaults to US English.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="234" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="247" package="Sutra">
        <name>$fallback_locale</name>
        <default><![CDATA['en-US']]></default>
        <docblock line="241">
          <description><![CDATA[The fallback to use if the locale has no callback for the locale in use.]]></description>
          <long-description><![CDATA[<p>Defaults to US English.</p>]]></long-description>
          <tag line="241" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="254" package="Sutra">
        <name>$callbacks</name>
        <default><![CDATA[array(
    'en-AU' => array( // Australia
      'ordinal' => 'sNumber::ordinalNumberPrefixedCallback',
      'ordinalSuffix' => 'sNumber::ordinalSuffix',
    ),
    'en-CA' => array( // Canada
      'ordinal' => 'sNumber::ordinalNumberPrefixedCallback',
      'ordinalSuffix' => 'sNumber::ordinalSuffix',
    ),
    'en-GB' => array( // United Kingdom
      'ordinal' => 'sNumber::ordinalNumberPrefixedCallback',
      'ordinalSuffix' => 'sNumber::ordinalSuffix',
    ),
    'en-IE' => array( // Ireland
      'ordinal' => 'sNumber::ordinalNumberPrefixedCallback',
      'ordinalSuffix' => 'sNumber::ordinalSuffix',
    ),
    'en-IN' => array( // India
      'ordinal' => 'sNumber::ordinalNumberPrefixedCallback',
      'ordinalSuffix' => 'sNumber::ordinalSuffix',
    ),
    'en-MT' => array( // Malta
      'ordinal' => 'sNumber::ordinalNumberPrefixedCallback',
      'ordinalSuffix' => 'sNumber::ordinalSuffix',
    ),
    'en-NZ' => array( // New Zealand
      'ordinal' => 'sNumber::ordinalNumberPrefixedCallback',
      'ordinalSuffix' => 'sNumber::ordinalSuffix',
    ),
    'en-PH' => array( // Philippines
      'ordinal' => 'sNumber::ordinalNumberPrefixedCallback',
      'ordinalSuffix' => 'sNumber::ordinalSuffix',
    ),
    'en-SG' => array( // Singapore
      'ordinal' => 'sNumber::ordinalNumberPrefixedCallback',
      'ordinalSuffix' => 'sNumber::ordinalSuffix',
    ),
    'en-US' => array( // United States
      'ordinal' => 'sNumber::ordinalNumberPrefixedCallback',
      'ordinalSuffix' => 'sNumber::ordinalSuffix',
    ),
    'en-ZA' => array( // South Africa
      'ordinal' => 'sNumber::ordinalNumberPrefixedCallback',
      'ordinalSuffix' => 'sNumber::ordinalSuffix',
    ),
  )]]></default>
        <docblock line="249">
          <description><![CDATA[Callbacks for other languages.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="249" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="private" namespace="default" line="309" package="">
        <name>tossIfInvalidLocale</name>
        <type>function</type>
        <docblock line="301">
          <description><![CDATA[Checks if a locale is valid.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="301" name="throws" description="If the locale is invalid." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="301" name="param" description="Locale to check." type="string" variable="$locale">
            <type by_reference="false">string</type>
          </tag>
          <tag line="301" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="309">
          <name>$locale</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="default" line="328" package="">
        <name>addDefaultCallbacks</name>
        <type>function</type>
        <docblock line="319">
          <description><![CDATA[Adds an array of callbacks with the default methods in this class for a
  specified locale.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="319" name="throws" description="If the locale is invalid." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="319" name="param" description="Locale name, such as fr-FR." type="string" variable="$locale">
            <type by_reference="false">string</type>
          </tag>
          <tag line="319" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="328">
          <name>$locale</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="357" package="">
        <name>addCallback</name>
        <type>function</type>
        <docblock line="340">
          <description><![CDATA[Add a callback that will be used in place of the ones here.]]></description>
          <long-description><![CDATA[<p>For use with different languages and locales.</p>

<p>All callbacks must receive one value, an integer, and return a string.</p>]]></long-description>
          <tag line="340" name="throws" description="If the method name or locale is invalid." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="340" name="param" description="The locale name. Should be a standard locale name such as en-GB, fr-FR, etc." type="string" variable="$locale">
            <type by_reference="false">string</type>
          </tag>
          <tag line="340" name="param" description="Method name in this class to override. One of: ordinal, ordinalSuffix. The instance methods will also use this callback." type="string" variable="$method_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="340" name="param" description="Callback to use." type="string|array" variable="$callback">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="340" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="357">
          <name>$locale</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="357">
          <name>$method_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="357">
          <name>$callback</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="385" package="">
        <name>removeLocale</name>
        <type>function</type>
        <docblock line="379">
          <description><![CDATA[Remove a locale's set of callbacks.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="379" name="param" description="Locale name." type="string" variable="$locale_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="379" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="385">
          <name>$locale_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="408" package="">
        <name>setLocale</name>
        <type>function</type>
        <docblock line="398">
          <description><![CDATA[Set the current locale in use for this class. If no callbacks yet exist,
  the defaults in this class will be assigned.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="398" name="throws" description="If the locale is invalid." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="398" name="param" description="The locale name. Should be a standard locale name such as en-GB, fr-FR, etc." type="string" variable="$locale">
            <type by_reference="false">string</type>
          </tag>
          <tag line="398" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="408">
          <name>$locale</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="427" package="">
        <name>setFallbackLocale</name>
        <type>function</type>
        <docblock line="419">
          <description><![CDATA[Set the fallback locale if the current locale set does not have a
  callback for the method requested. If no callbacks yet exist,
  the defaults in this class will be assigned.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="419" name="param" description="Locale name." type="string" variable="$locale">
            <type by_reference="false">string</type>
          </tag>
          <tag line="419" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="427">
          <name>$locale</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="default" line="445" package="">
        <name>getValidCallback</name>
        <type>function</type>
        <docblock line="438">
          <description><![CDATA[Get the correct callback based on the locale and fallback locale set in
  the class.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="438" name="param" description="Method name to check for." type="string" variable="$fn">
            <type by_reference="false">string</type>
          </tag>
          <tag line="438" name="return" description="Callback name." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="445">
          <name>$fn</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="459" package="">
        <name>ordinal</name>
        <type>function</type>
        <docblock line="453">
          <description><![CDATA[Format a number to be ordinal.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="453" name="param" description="Number to use." type="int" variable="$value">
            <type by_reference="false">int</type>
          </tag>
          <tag line="453" name="return" description="Number with proper English suffix." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="459">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="473" package="">
        <name>ordinalNumberPrefixedCallback</name>
        <type>function</type>
        <docblock line="463">
          <description><![CDATA[Callback for English ordinal numbers (where numbers come before the
  ordinal keyword).]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="463" name="internal" description="For internal use."/>
          <tag line="463" name="access" description="private"/>
          <tag line="463" name="param" description="" type="integer" variable="$value">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="463" name="return" description="The value, formatted." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="473">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="484" package="">
        <name>ordinalSuffix</name>
        <type>function</type>
        <docblock line="478">
          <description><![CDATA[Get the correct oridinal suffix for a number.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="478" name="param" description="Number to use." type="integer" variable="$value">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="478" name="return" description="Correct suffix." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="484">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="515" package="">
        <name>isEqualToIntCast</name>
        <type>function</type>
        <docblock line="509">
          <description><![CDATA[Checks if a number is equal to its integer-casted counterpart.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="509" name="param" description="Value to check." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="509" name="return" description="If the int-casted value is the same." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="515">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="528" package="">
        <name>getOrdinalSuffix</name>
        <type>function</type>
        <docblock line="523">
          <description><![CDATA[Get the correct suffix for the current number.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="523" name="return" description="Correct English suffix." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="539" package="">
        <name>formatWithOrdinalSuffix</name>
        <type>function</type>
        <docblock line="532">
          <description><![CDATA[Get the number formatted with the oridinal suffix.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="532" name="param" description="If TRUE and all digits after the decimal place are 0, the decimal place and all zeros are removed." type="boolean" variable="$remove_zero_fraction">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="532" name="return" description="Number with proper English suffix." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="539">
          <name>$remove_zero_fraction</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="sRequest.php" hash="85e4343d04c982e0d88ebf72d0ad21f3" package="Sutra">
    <docblock line="2">
      <description><![CDATA[Manages POST requests.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="copyright" description="Copyright (c) 2011 Poluza."/>
      <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@poluza.com&gt;"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
      <tag line="2" name="package" description="Sutra"/>
      <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
      <tag line="2" name="version" description="1.2"/>
    </docblock>
    <class final="false" abstract="false" namespace="default" line="14" package="Sutra">
      <name>sRequest</name>
      <full_name>\sRequest</full_name>
      <extends>\fRequest</extends>
      <docblock line="2">
        <description><![CDATA[Manages POST requests.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2011 Poluza."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@poluza.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
        <tag line="2" name="version" description="1.2"/>
      </docblock>
      <constant namespace="default" line="21" package="Sutra">
        <name>LAST_POST_SESSION_KEY</name>
        <value><![CDATA['sPostRequest::last_post']]></value>
        <docblock line="15">
          <description><![CDATA[The key in session that holds the last POST values. The last POST values
  are only stored when a validation error occurs.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="15" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="true" visibility="private" line="28" package="Sutra">
        <name>$registered_callbacks</name>
        <default><![CDATA[array(
    'after' => array('*' => array()),
    'before' => array('*' => array()),
  )]]></default>
        <docblock line="23">
          <description><![CDATA[Registered callbacks.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="23" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="46" package="">
        <name>validatePost</name>
        <type>function</type>
        <docblock line="33">
          <description><![CDATA[Validate a request and redirect to a URL. All POST values are saved
  when a validation exception occurs.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="33" name="param" description="fValidation instance to try to validate." type="\fValidation" variable="$validation">
            <type by_reference="false">\fValidation</type>
          </tag>
          <tag line="33" name="param" description="If not specified, will redirect to the same URL. Also can specify a callback to call on success." type="string|callback" variable="$redirect_to">
            <type by_reference="false">string</type>
            <type by_reference="false">callback</type>
          </tag>
          <tag line="33" name="param" description="Where to redirect if an error occurs. Also can specify a callback to call on error." type="string" variable="$error_redirect">
            <type by_reference="false">string</type>
          </tag>
          <tag line="33" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="33" name="see" description="\sRequest::restoreLastPOSTValues()" refers="\sRequest::restoreLastPOSTValues()"/>
          <tag line="33" name="see" description="\sRequest::deleteLastPOSTValues()" refers="\sRequest::deleteLastPOSTValues()"/>
        </docblock>
        <argument line="46">
          <name>$validation</name>
          <default><![CDATA[]]></default>
          <type>fValidation</type>
        </argument>
        <argument line="46">
          <name>$redirect_to</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="46">
          <name>$error_redirect</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="94" package="">
        <name>registerCallback</name>
        <type>function</type>
        <docblock line="82">
          <description><![CDATA[Register a callback to be called after before or after validation.]]></description>
          <long-description><![CDATA[<p>Callbacks registered should have no knowledge of other registered
  callbacks.</p>]]></long-description>
          <tag line="82" name="param" description="Callback." type="callback" variable="$callback">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="82" name="param" description="When to call. One of: 'after' for after successful validation,'before' for before any processing by the routing method." type="string" variable="$when">
            <type by_reference="false">string</type>
          </tag>
          <tag line="82" name="param" description="URL (beginning with /) that this will be called for. By default, this is all URLs." type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="82" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="94">
          <name>$callback</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="94">
          <name>$when</name>
          <default><![CDATA['after']]></default>
          <type/>
        </argument>
        <argument line="94">
          <name>$url</name>
          <default><![CDATA['*']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="default" line="110" package="">
        <name>callCallbacks</name>
        <type>function</type>
        <docblock line="104">
          <description><![CDATA[Calls registered callbacks.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="104" name="param" description="One of: 'after', 'before'." type="string" variable="$when">
            <type by_reference="false">string</type>
          </tag>
          <tag line="104" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="110">
          <name>$when</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="default" line="130" package="">
        <name>savePOSTValues</name>
        <type>function</type>
        <docblock line="124">
          <description><![CDATA[Saves the POST values to sessions.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="124" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="124" name="SuppressWarnings" description="(PHPMD.UnusedLocalVariable)"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="143" package="">
        <name>restoreLastPOSTValues</name>
        <type>function</type>
        <docblock line="138">
          <description><![CDATA[Restore last POST values so that they may be used in form generation.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="138" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="155" package="">
        <name>deleteLastPOSTValues</name>
        <type>function</type>
        <docblock line="150">
          <description><![CDATA[Deletes all POST values stored.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="150" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="sImage.php" hash="9ab360efe3f0f3b0596e309a9a5e0f25" package="Sutra">
    <docblock line="2">
      <description><![CDATA[Provides more methods to fImage, most notably rotation based on EXIF data
  which may be present in the file.]]></description>
      <long-description><![CDATA[<p>Requires Flourish's fImage::determineProcessor() method to be made at least
  protected (at the moment it is private).</p>]]></long-description>
      <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
      <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
      <tag line="2" name="package" description="Sutra"/>
      <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
      <tag line="2" name="version" description="1.2"/>
    </docblock>
    <class final="false" abstract="false" namespace="default" line="18" package="Sutra">
      <name>sImage</name>
      <full_name>\sImage</full_name>
      <extends>\fImage</extends>
      <docblock line="2">
        <description><![CDATA[Provides more methods to fImage, most notably rotation based on EXIF data
  which may be present in the file.]]></description>
        <long-description><![CDATA[<p>Requires Flourish's fImage::determineProcessor() method to be made at least
  protected (at the moment it is private).</p>]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
        <tag line="2" name="version" description="1.2"/>
      </docblock>
      <constant namespace="default" line="24" package="Sutra">
        <name>DIRECTION_UPSIDE_UP</name>
        <value><![CDATA[0]]></value>
        <docblock line="19">
          <description><![CDATA[Rotation direction upside-up.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="19" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="default" line="31" package="Sutra">
        <name>DIRECTION_UPSIDE_DOWN</name>
        <value><![CDATA[1]]></value>
        <docblock line="26">
          <description><![CDATA[Rotation direction upside-down.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="26" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="default" line="38" package="Sutra">
        <name>DIRECTION_UPSIDE_LEFT</name>
        <value><![CDATA[2]]></value>
        <docblock line="33">
          <description><![CDATA[Rotation direction upside-left.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="33" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="default" line="45" package="Sutra">
        <name>DIRECTION_UPSIDE_RIGHT</name>
        <value><![CDATA[3]]></value>
        <docblock line="40">
          <description><![CDATA[Rotation direction upside-right.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="40" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="default" line="52" package="Sutra">
        <name>FLIP_HORIZONTAL</name>
        <value><![CDATA[0]]></value>
        <docblock line="47">
          <description><![CDATA[Flip direction horizontal.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="47" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="default" line="59" package="Sutra">
        <name>FLIP_VERTICAL</name>
        <value><![CDATA[1]]></value>
        <docblock line="54">
          <description><![CDATA[Flip direction vertical.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="54" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="default" line="66" package="Sutra">
        <name>FLIP_BOTH</name>
        <value><![CDATA[2]]></value>
        <docblock line="61">
          <description><![CDATA[Flip direction both ways.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="61" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="default" line="73" package="Sutra">
        <name>FLIP_NONE</name>
        <value><![CDATA[3]]></value>
        <docblock line="68">
          <description><![CDATA[No flip.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="68" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </constant>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="106" package="">
        <name>flip</name>
        <type>function</type>
        <docblock line="75">
          <description><![CDATA[Flip the image in a specified direction. If PECL Imagick class is
  not found, GD will be used.]]></description>
          <long-description><![CDATA[<p>Unlike fImage, these changes are immediate.</p>]]></long-description>
          <tag line="75" name="throws" description="If Imagick fails to return data, or if an ImagickException is thrown." type="\fUnexpectedException">
            <type by_reference="false">\fUnexpectedException</type>
          </tag>
          <tag line="75" name="throws" description="If no image processor is found; if the image type is invalid for GD. Additional notes: - To use ImageMagick (which is much faster), you must install the PECL Imagick extension. - PJPEG is not supported if GD is used. - This overwrites the data in the file before returning (this is NOT part of the operation queue). If the second argument is of internal type boolean, it will be treated as the $overwrite argument. The JPEG quality will be 90." type="\fEnvironmentException">
            <type by_reference="false">\fEnvironmentException</type>
          </tag>
          <tag line="75" name="param" description="One of the FLIP_* constants." type="integer" variable="$type">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="75" name="param" description="Because this saves changes to the file directly, if the image is JPEG, specify a quality from 0 (worst quality) to 100 (best quality). Default is 90." type="integer" variable="$jpeg_quality">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="75" name="param" description="If the file should be overwritten." type="boolean" variable="$overwrite">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="75" name="param" description="Override the processor. Must be one of: 'imagemagick', 'gd'. This is generally for testing purposes only." type="string" variable="$processor_override">
            <type by_reference="false">string</type>
          </tag>
          <tag line="75" name="return" description="The image object, to allow method chaining. If $overwrite is FALSE, then a new sImage object is returned." type="\sImage">
            <type by_reference="false">\sImage</type>
          </tag>
        </docblock>
        <argument line="106">
          <name>$type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="106">
          <name>$jpeg_quality</name>
          <default><![CDATA[90]]></default>
          <type/>
        </argument>
        <argument line="106">
          <name>$overwrite</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
        <argument line="106">
          <name>$processor_override</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="272" package="">
        <name>rotateAccordingToEXIFData</name>
        <type>function</type>
        <docblock line="257">
          <description><![CDATA[Rotate an image a certain way based on EXIF information embedded. Only
  JPEG and TIFF images are supported.]]></description>
          <long-description><![CDATA[<p>Unlike fImage, these changes are immediate.</p>]]></long-description>
          <tag line="257" name="throws" description="If the EXIF extension is not installed." type="\fEnvironmentException">
            <type by_reference="false">\fEnvironmentException</type>
          </tag>
          <tag line="257" name="param" description="Optional. One of the DIRECTION_* constant values. Default is up-side up." type="integer" variable="$direction">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="257" name="param" description="If the file should be overwritten." type="boolean" variable="$overwrite">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="257" name="param" description="JPEG quality on a scale from 0 to 100." type="integer" variable="$jpeg_quality">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="257" name="return" description="Object to allow method chaining. If $overwrite is FALSE, then a new sImage object is returned." type="\sImage">
            <type by_reference="false">\sImage</type>
          </tag>
        </docblock>
        <argument line="272">
          <name>$direction</name>
          <default><![CDATA[self::DIRECTION_UPSIDE_UP]]></default>
          <type/>
        </argument>
        <argument line="272">
          <name>$overwrite</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
        <argument line="272">
          <name>$jpeg_quality</name>
          <default><![CDATA[90]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="sTimestamp.php" hash="6d7901f26485239030c55c9cdae63523" package="Sutra">
    <docblock line="2">
      <description><![CDATA[Utility functions for timestamp and time/date/time zone representations.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
      <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
      <tag line="2" name="package" description="Sutra"/>
      <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
      <tag line="2" name="version" description="1.2"/>
    </docblock>
    <class final="false" abstract="false" namespace="default" line="14" package="Sutra">
      <name>sTimestamp</name>
      <full_name>\sTimestamp</full_name>
      <extends>\fTimestamp</extends>
      <docblock line="2">
        <description><![CDATA[Utility functions for timestamp and time/date/time zone representations.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
        <tag line="2" name="version" description="1.2"/>
      </docblock>
      <constant namespace="default" line="22" package="Sutra">
        <name>DATETIME_REGEX</name>
        <value><![CDATA['/^([1-2][0-9]{3})\-([0-1][0-9])\-([0-3][0-9])(?:\s+)?T([0-2][0-9])\:([0-5][0-9])\:([0-5][0-9](?:\.\d+)?)(?:Z|(?:[\-\+]([0-1][0-9])\:00))?$/']]></value>
        <docblock line="15">
          <description><![CDATA[Loose regular expression to match timestamp as defined by W3C for
  HTML 5 date/datetime fields. The main difference is allowing for
  a space between the date and the literal 'T'.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="15" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="30" package="">
        <name>formatTimezoneNumber</name>
        <type>function</type>
        <docblock line="24">
          <description><![CDATA[Get a formatted timezone string such as +08:00 from 8 or -12:00 from -12.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="24" name="param" description="The timezone, can be decimal." type="float" variable="$value">
            <type by_reference="false">float</type>
          </tag>
          <tag line="24" name="return" description="String, such as +08:00." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="73" package="">
        <name>RFC3339ToTimestamp</name>
        <type>function</type>
        <docblock line="54">
          <description><![CDATA[Convert an RFC3339 (HTML 5 version) timestamp to UNIX. Timezone is
  ignored.]]></description>
          <long-description><![CDATA[<p>HTML 5 mandates 2 extra constraints:
- the literal letters T and Z in the date/time syntax must always be uppercase
- the date-fullyear production is instead defined as four or more digits
    representing a number greater than 0</p>]]></long-description>
          <tag line="54" name="throws" description="If $throw is set to TRUE and the timestamp is invalid." type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="54" name="param" description="The RFC value, like: 1990-12-31T23:59:60Z or 1996-12-19T16:39:57-08:00." type="string" variable="$rfc">
            <type by_reference="false">string</type>
          </tag>
          <tag line="54" name="param" description="Throw an fValidationException if the timestamp is is invalid. Defaults to FALSE." type="boolean" variable="$throw">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="54" name="return" description="UNIX timestamp or boolean FALSE. If FALSE is returned, the string was invalid." type="integer|boolean">
            <type by_reference="false">integer</type>
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$rfc</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="73">
          <name>$throw</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="sHTML.php" hash="0c87fe59c79fcb1ec2f4be0bc8ea41c5" package="Sutra">
    <docblock line="2">
      <description><![CDATA[Library to help with rendering HTML tags cleanly and validly. Note that
  only some element attributes are checked for validity and fixed.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
      <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
      <tag line="2" name="package" description="Sutra"/>
      <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
      <tag line="2" name="version" description="1.2"/>
    </docblock>
    <class final="false" abstract="false" namespace="default" line="15" package="Sutra">
      <name>sHTML</name>
      <full_name>\sHTML</full_name>
      <extends>\fHTML</extends>
      <docblock line="2">
        <description><![CDATA[Library to help with rendering HTML tags cleanly and validly. Note that
  only some element attributes are checked for validity and fixed.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
        <tag line="2" name="version" description="1.2"/>
      </docblock>
      <property final="false" static="true" visibility="private" line="21" package="Sutra">
        <name>$form_element_ids</name>
        <default><![CDATA[array()]]></default>
        <docblock line="16">
          <description><![CDATA[Stores all form element IDs so that all generated via this class are unique.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="16" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="28" package="Sutra">
        <name>$safe_ascii</name>
        <default><![CDATA[array(
    'A',
    'B',
    'C',
    'D',
    'E',
    'F',
    'G',
    'H',
    'I',
    'J',
    'K',
    'L',
    'M',
    'N',
    'O',
    'P',
    'Q',
    'R',
    'S',
    'T',
    'U',
    'V',
    'W',
    'X',
    'Y',
    'Z',
    'a',
    'b',
    'c',
    'd',
    'e',
    'f',
    'g',
    'h',
    'i',
    'j',
    'k',
    'l',
    'm',
    'n',
    'o',
    'p',
    'q',
    'r',
    's',
    't',
    'u',
    'v',
    'w',
    'x',
    'y',
    'z',
    '0',
    '1',
    '2',
    '3',
    '4',
    '5',
    '6',
    '7',
    '8',
    '9',
    '0',
    '-',
  )]]></default>
        <docblock line="23">
          <description><![CDATA[ASCII safe values used by stripNonASCIIFromString.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="23" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="102" package="Sutra">
        <name>$input_type_values</name>
        <default><![CDATA[array(
    'hidden',
    'text',
    'textfield',
    'search',
    'tel',
    'url',
    'email',
    'password',
    'datetime',
    'date',
    'month',
    'week',
    'time',
    'datetime-local',
    'number',
    'range',
    'color',
    'checkbox',
    'radio',
    'file',
    'submit',
    'image',
    'reset',
    'button',
  )]]></default>
        <docblock line="95">
          <description><![CDATA[Valid values for the element input type attribute.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="95" name="link" description="http://dev.w3.org/html5/spec/Overview.html#states-of-the-type-attribute" link="http://dev.w3.org/html5/spec/Overview.html#states-of-the-type-attribute"/>
          <tag line="95" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="135" package="Sutra">
        <name>$special_enumerated_attributes</name>
        <default><![CDATA[array(
    'spellcheck' => array(
      TRUE => 'true',
      FALSE => 'false',
    ),
    'autocomplete' => array(
      TRUE => 'on',
      FALSE => 'off',
    ),
  )]]></default>
        <docblock line="129">
          <description><![CDATA[Special attributes like spellcheck and their valid values for states on
  and off (enumerated attributes that only have on/off states).]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="129" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="151" package="Sutra">
        <name>$boolean_attributes</name>
        <default><![CDATA[array(
    'scoped',
    'reveresed',
    'ismap',
    'seamless',
    'typemustmatch',
    'loop',
    'autoplay',
    'controls',
    'muted',
    'checked',
    'readonly',
    'required',
    'multiple',
    'disabled',
    'selected',
    'autofocus',
    'open',
    'hidden',
    'truespeed',
  )]]></default>
        <docblock line="146">
          <description><![CDATA[Boolean attributes that must be omitted if the state is to be off.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="146" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="private" namespace="default" line="179" package="">
        <name>formElementIDWithName</name>
        <type>function</type>
        <docblock line="173">
          <description><![CDATA[Create a form element ID.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="173" name="param" description="Name attribute of the element." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="173" name="return" description="Unique identifier for use with the id attribute." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="179">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="default" line="210" package="">
        <name>makeTextarea</name>
        <type>function</type>
        <docblock line="203">
          <description><![CDATA[Handles creating textarea tags.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="203" name="param" description="Name of the field." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="203" name="param" description="Label HTML." type="string" variable="$label">
            <type by_reference="false">string</type>
          </tag>
          <tag line="203" name="param" description="Attributes." type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="210">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="210">
          <name>$label</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
        <argument line="210">
          <name>$attributes</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="default" line="232" package="">
        <name>makeSelectElement</name>
        <type>function</type>
        <docblock line="225">
          <description><![CDATA[Handles creating select fields with options.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="225" name="param" description="Name of the field." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="225" name="param" description="Label HTML." type="string" variable="$label">
            <type by_reference="false">string</type>
          </tag>
          <tag line="225" name="param" description="Attributes." type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="232">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="232">
          <name>$label</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
        <argument line="232">
          <name>$attributes</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="295" package="">
        <name>makeFormElement</name>
        <type>function</type>
        <docblock line="277">
          <description><![CDATA[Create a form element.]]></description>
          <long-description><![CDATA[<p>If specifying a select element, it may be desirable to have a default
  selected option. To do so, specify a 'value' key with a string value
  in the $attr argument. For optgroups, use a 2-dimensional array in
  the 'options' key in the $attr argument.</p>]]></long-description>
          <tag line="277" name="throws" description="If the type argument is invalid." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="277" name="param" description="One of the HTML 5 element types for use with the input tags, 'select', and 'textarea'." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="277" name="param" description="Form element name, unique to the form." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="277" name="param" description="Array of key =&gt; value attributes. Use 'label' to provide a string for use with a label element (which will have the for attribute set properly)." type="array" variable="$attr">
            <type by_reference="false">array</type>
          </tag>
          <tag line="277" name="return" description="HTML tags ready for use." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="295">
          <name>$type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="295">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="295">
          <name>$attr</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="368" package="">
        <name>stripNonASCIIFromString</name>
        <type>function</type>
        <docblock line="359">
          <description><![CDATA[Strip out non-ASCII characters and accents out of the string.]]></description>
          <long-description><![CDATA[<p>Basically, this removes all characters NOT within the range of:
  ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz01234567890-</p>]]></long-description>
          <tag line="359" name="param" description="String to process." type="string" variable="$str">
            <type by_reference="false">string</type>
          </tag>
          <tag line="359" name="param" description="Lower case if set to TRUE (default)." type="boolean" variable="$lower">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="359" name="return" description="String, processed." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="368">
          <name>$str</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="368">
          <name>$lower</name>
          <default><![CDATA[TRUE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="default" line="397" package="">
        <name>validAttributeValue</name>
        <type>function</type>
        <docblock line="388">
          <description><![CDATA[Get a valid value for an enumerated (only ones that represent on or off)
  or boolean attribute.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="388" name="param" description="Attribute name." type="string" variable="$attribute_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="388" name="param" description="Boolean value for the attribute." type="boolean" variable="$value">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="388" name="return" description="If this function returns FALSE, the attribute must be omitted." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="397">
          <name>$attribute_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="397">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="413" package="">
        <name>attributesString</name>
        <type>function</type>
        <docblock line="406">
          <description><![CDATA[Convert an array of key => value attributes for an HTML tag to a
  string for use in HTML.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="406" name="param" description="Attributes array." type="array" variable="$attr">
            <type by_reference="false">array</type>
          </tag>
          <tag line="406" name="return" description="String ready for use within HTML tag." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="413">
          <name>$attr</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="default" line="468" package="">
        <name>tagRequiresEnd</name>
        <type>function</type>
        <docblock line="459">
          <description><![CDATA[Some tags require end tags while some others do not. Example: <p> does
  not in HTML, but in XHTML like all tags requires an end tag. However,
  some browsers are not going to do the same thing when encountering
  several <p> tags with no endings, so it returns TRUE.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="459" name="param" description="Tag name." type="string" variable="$tag">
            <type by_reference="false">string</type>
          </tag>
          <tag line="459" name="return" description="TRUE if the end tag is required, FALSE otherwise." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="468">
          <name>$tag</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="488" package="">
        <name>tag</name>
        <type>function</type>
        <docblock line="480">
          <description><![CDATA[Create a tag HTML string.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="480" name="param" description="Tag name." type="string" variable="$tag">
            <type by_reference="false">string</type>
          </tag>
          <tag line="480" name="param" description="Attributes array." type="array" variable="$attr">
            <type by_reference="false">array</type>
          </tag>
          <tag line="480" name="param" description="Content to place within HTML. If the tag never uses an end tag, this parameter will be ignored. In particular, &lt;input&gt;, &lt;link&gt; and similar tags." type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="480" name="return" description="HTML tag, ready to be displayed." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="488">
          <name>$tag</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="488">
          <name>$attr</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="488">
          <name>$content</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="516" package="">
        <name>conditionalTag</name>
        <type>function</type>
        <docblock line="507">
          <description><![CDATA[Create a tag HTML string wrapped by a MSIE conditional comment.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="507" name="param" description="The IE rule. Examples: 'lt IE 9', 'IE 8', 'gt IE 6'." type="string" variable="$rule">
            <type by_reference="false">string</type>
          </tag>
          <tag line="507" name="param" description="Tag name." type="string" variable="$tag">
            <type by_reference="false">string</type>
          </tag>
          <tag line="507" name="param" description="Attributes array." type="array" variable="$attr">
            <type by_reference="false">array</type>
          </tag>
          <tag line="507" name="param" description="Content to place within the HTML." type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="507" name="return" description="The HTML tag, ready to be displayed." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="516">
          <name>$rule</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="516">
          <name>$tag</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="516">
          <name>$attr</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
        <argument line="516">
          <name>$content</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="528" package="">
        <name>linkIsURI</name>
        <type>function</type>
        <docblock line="521">
          <description><![CDATA[Check if a URL is a full URI or not.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="521" name="param" description="URL to check." type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="521" name="param" description="Other protocols to check." type="array" variable="$other_protocols">
            <type by_reference="false">array</type>
          </tag>
          <tag line="521" name="return" description="TRUE if the path is full URI beginning with http or https, FALSE otherwise." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="528">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="528">
          <name>$other_protocols</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="549" package="">
        <name>paragraphify</name>
        <type>function</type>
        <docblock line="543">
          <description><![CDATA[Create paragraphs from 2 or more new lines.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="543" name="param" description="Unfiltered string to paragraphify." type="string" variable="$html">
            <type by_reference="false">string</type>
          </tag>
          <tag line="543" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="549">
          <name>$html</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="580" package="">
        <name>makeList</name>
        <type>function</type>
        <docblock line="569">
          <description><![CDATA[Create a list. 'first', 'last', 'odd', 'even', 'item-INDEX' classes
  will be automatically added to each li element.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="569" name="param" description="Array of strings." type="array" variable="$items">
            <type by_reference="false">array</type>
          </tag>
          <tag line="569" name="param" description="'ul' or 'ol', defaults to 'ul' even if an invalid value is passed." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="569" name="param" description="Array of attributes for the parent element." type="array" variable="$attr">
            <type by_reference="false">array</type>
          </tag>
          <tag line="569" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="580">
          <name>$items</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="580">
          <name>$type</name>
          <default><![CDATA['ul']]></default>
          <type/>
        </argument>
        <argument line="580">
          <name>$attr</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="628" package="">
        <name>__construct</name>
        <type>function</type>
        <docblock line="623">
          <description><![CDATA[Private to force use as static class.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="623" name="return" description="" type="\sHTML">
            <type by_reference="false">\sHTML</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="sAuthorization.php" hash="b1d33be21d1462269ce20c6b39f02226" package="Sutra">
    <docblock line="2">
      <description><![CDATA[Allows defining and checking user authentication.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
      <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
      <tag line="2" name="package" description="Sutra"/>
      <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
      <tag line="2" name="version" description="1.2"/>
    </docblock>
    <class final="false" abstract="false" namespace="default" line="14" package="Sutra">
      <name>sAuthorization</name>
      <full_name>\sAuthorization</full_name>
      <extends>\fAuthorization</extends>
      <docblock line="2">
        <description><![CDATA[Allows defining and checking user authentication.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
        <tag line="2" name="version" description="1.2"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="21" package="">
        <name>requireNotLoggedIn</name>
        <type>function</type>
        <docblock line="15">
          <description><![CDATA[Require that a user not be logged in.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="15" name="param" description="Where to redirect if the user is logged in." type="string" variable="$redirect">
            <type by_reference="false">string</type>
          </tag>
          <tag line="15" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="21">
          <name>$redirect</name>
          <default><![CDATA['/']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="33" package="">
        <name>__construct</name>
        <type>function</type>
        <docblock line="28">
          <description><![CDATA[Forces use as a static class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="28" name="return" description="" type="\sAuthorization">
            <type by_reference="false">\sAuthorization</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="sResponse.php" hash="5fc67fe2588e20a2bc6179f9594c6b9d" package="Sutra">
    <docblock line="2">
      <description><![CDATA[Common non-file related HTTP response helper class.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="2" name="copyright" description="Copyright (c) 2012 Poluza."/>
      <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@poluza.com&gt;"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
      <tag line="2" name="package" description="Sutra"/>
      <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
      <tag line="2" name="version" description="1.2"/>
    </docblock>
    <class final="false" abstract="false" namespace="default" line="14" package="Sutra">
      <name>sResponse</name>
      <full_name>\sResponse</full_name>
      <extends/>
      <docblock line="2">
        <description><![CDATA[Common non-file related HTTP response helper class.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 Poluza."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@poluza.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
        <tag line="2" name="version" description="1.2"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="28" package="">
        <name>sendNotModifiedHeader</name>
        <type>function</type>
        <docblock line="15">
          <description><![CDATA[Send a 304 not modified header, if the content hasn't changed according to
  the headers sent in by the client.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="15" name="param" description="Time the file was last modified (fTimestamp object or UNIX timestamp)." type="\fTimestamp|integer" variable="$last_modified">
            <type by_reference="false">\fTimestamp</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="15" name="param" description="Etag to use for this request." type="string" variable="$etag">
            <type by_reference="false">string</type>
          </tag>
          <tag line="15" name="param" description="Time in seconds to cache for. Default is 2 weeks." type="integer" variable="$cache_time">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="15" name="param" description="Send Vary: Accept-Encoding header. Default is TRUE." type="boolean" variable="$accept_encoding">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="15" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="28">
          <name>$last_modified</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="28">
          <name>$etag</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="28">
          <name>$cache_time</name>
          <default><![CDATA[1209600]]></default>
          <type/>
        </argument>
        <argument line="28">
          <name>$accept_encoding</name>
          <default><![CDATA[TRUE]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <package name="" full_name=""/>
  <package name="Sutra" full_name="Sutra"/>
  <namespace name="default" full_name="default"/>
  <marker count="1">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
