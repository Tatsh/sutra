<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a10" title="Sutra">
  <file path="sutra/classes/sProcess.php" hash="6fc9773e086fdafb0c8e64b62efe7fee" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="14" package="Sutra">
      <extends/>
      <name>sProcess</name>
      <full_name>\sProcess</full_name>
      <docblock line="2">
        <description><![CDATA[Manages processes external to PHP, including interactive processes.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 Poluza."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
        <tag line="2" name="version" description="1.2"/>
      </docblock>
      <constant namespace="global" line="15" package="Sutra">
        <name>checkOS</name>
        <full_name>checkOS</full_name>
        <value><![CDATA['sProcess::checkOS']]></value>
      </constant>
      <constant namespace="global" line="16" package="Sutra">
        <name>setPath</name>
        <full_name>setPath</full_name>
        <value><![CDATA['sProcess::setPath']]></value>
      </constant>
      <constant namespace="global" line="17" package="Sutra">
        <name>getPath</name>
        <full_name>getPath</full_name>
        <value><![CDATA['sProcess::getPath']]></value>
      </constant>
      <property final="false" static="false" visibility="private" line="24" namespace="global" package="Sutra">
        <name>$program</name>
        <default><![CDATA[]]></default>
        <docblock line="19">
          <description><![CDATA[The process that will be run.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="19" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="31" namespace="global" package="Sutra">
        <name>$arguments</name>
        <default><![CDATA[array()]]></default>
        <docblock line="26">
          <description><![CDATA[Array of arguments for the process.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="38" namespace="global" package="Sutra">
        <name>$path</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="33">
          <description><![CDATA[Paths for the system delimited by : (Linux and similar) or ; (Windows).]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="33" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="45" namespace="global" package="Sutra">
        <name>$toss</name>
        <default><![CDATA[FALSE]]></default>
        <docblock line="40">
          <description><![CDATA[Toss if the program returns an unexpected exit code.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="40" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="52" namespace="global" package="Sutra">
        <name>$popen_handle</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="47">
          <description><![CDATA[Handle to popen().]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="47" name="var" description="" type="resource">
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="59" namespace="global" package="Sutra">
        <name>$pipe_file</name>
        <default><![CDATA[]]></default>
        <docblock line="54">
          <description><![CDATA[File to pipe output to when using mode 'w' with popen().]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="54" name="var" description="" type="\fFile">
            <type by_reference="false">\fFile</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="66" namespace="global" package="Sutra">
        <name>$work_dir</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="61">
          <description><![CDATA[Working directory.]]></description>
          <long-description><![CDATA[<p>Defaults to current directory.</p>]]></long-description>
          <tag line="61" name="var" description="" type="\fDirectory">
            <type by_reference="false">\fDirectory</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="73" namespace="global" package="Sutra">
        <name>$prior_dir</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="68">
          <description><![CDATA[Current directory before going into working directory.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="68" name="var" description="" type="\fDirectory">
            <type by_reference="false">\fDirectory</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="80" namespace="global" package="Sutra">
        <name>$redirect_standard_error</name>
        <default><![CDATA[FALSE]]></default>
        <docblock line="75">
          <description><![CDATA[Redirect standard error.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="75" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="87" namespace="global" package="Sutra">
        <name>$stderr_target</name>
        <default><![CDATA['/dev/null']]></default>
        <docblock line="82">
          <description><![CDATA[Where standard error gets sent to.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="82" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="94" package="Sutra">
        <name>stripQuotesInArguments</name>
        <full_name>stripQuotesInArguments</full_name>
        <docblock line="89">
          <description><![CDATA[Strips double and singular surrounding quotes out of all arguments.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="89" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="109" package="Sutra">
        <name>parseNameAndArguments</name>
        <full_name>parseNameAndArguments</full_name>
        <docblock line="103">
          <description><![CDATA[Parses the name and arguments from the arguments given to __construct().]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="103" name="param" description="Arguments passed." type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
          <tag line="103" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="109">
          <name>$arguments</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="160" package="Sutra">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="145">
          <description><![CDATA[Constructor.]]></description>
          <long-description><![CDATA[<p>On Windows, can include the .exe but this will be removed.</p>

<p>You may also pass arguments to this instead of an array.
  Example: new sProcess('app', '--help').</p>]]></long-description>
          <tag line="145" name="throws" description="If the binary is invalid." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="145" name="param" description="If string, the program to run, optionally with path and arguments. If array, each part of the command line separated. These will be implode()'d with spaces." type="array|string" variable="$name">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="145" name="return" description="The object." type="\sProcess">
            <type by_reference="false">\sProcess</type>
          </tag>
        </docblock>
        <argument line="160">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="186" package="Sutra">
        <name>setWorkingDirectory</name>
        <full_name>setWorkingDirectory</full_name>
        <docblock line="175">
          <description><![CDATA[Set the working directory.]]></description>
          <long-description><![CDATA[<p>Note that this changes into the specified
  directory, so you may want to save the current directory before calling
  this method.</p>]]></long-description>
          <tag line="175" name="throws" description="If the working directory is not writable or does not exist." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="175" name="param" description="Path." type="string" variable="$dir">
            <type by_reference="false">string</type>
          </tag>
          <tag line="175" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="175" name="see" description="\global\getcwd()" refers="\global\getcwd()"/>
        </docblock>
        <argument line="186">
          <name>$dir</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="203" package="Sutra">
        <name>checkOS</name>
        <full_name>checkOS</full_name>
        <docblock line="195">
          <description><![CDATA[Check the current operating system.]]></description>
          <long-description><![CDATA[<p>Alias for fCore::checkOS().</p>]]></long-description>
          <tag line="195" name="param" description="One of: windows, linux, mac." type="string" variable="$os">
            <type by_reference="false">string</type>
          </tag>
          <tag line="195" name="return" description="Whether or not the system matches." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="195" name="see" description="\global\fCore::checkOS()" refers="\global\fCore::checkOS()"/>
        </docblock>
        <argument line="203">
          <name>$os</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="217" package="Sutra">
        <name>setPath</name>
        <full_name>setPath</full_name>
        <docblock line="207">
          <description><![CDATA[Set the PATH or in the case of Windows 'Path' variable for all objects.]]></description>
          <long-description><![CDATA[<p>By default, this class will use the environment variable PATH
  (Windows: 'Path').</p>]]></long-description>
          <tag line="207" name="param" description="Optional. Delimited paths to search for the binary. If not passed, will use environment variables." type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="207" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="217">
          <name>$path</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="241" package="Sutra">
        <name>getPath</name>
        <full_name>getPath</full_name>
        <docblock line="234">
          <description><![CDATA[Get the list of paths from the environment variables PATH (UNIX and
  UNIX-like) or Path (Windows).]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="234" name="param" description="Return array if set to TRUE." type="boolean" variable="$array">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="234" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="241">
          <name>$array</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="255" package="Sutra">
        <name>exists</name>
        <full_name>exists</full_name>
        <docblock line="247">
          <description><![CDATA[Find out if a binary exists on the system in PATH.]]></description>
          <long-description><![CDATA[<p>The binary is NOT
  tested for executability.</p>]]></long-description>
          <tag line="247" name="param" description="Binary without any path. Can include .exe on Windows but that is not required." type="string" variable="$bin_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="247" name="return" description="TRUE If the binary is found, FALSE otherwise." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="255">
          <name>$bin_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="276" package="Sutra">
        <name>tossIfUnexpected</name>
        <full_name>tossIfUnexpected</full_name>
        <docblock line="270">
          <description><![CDATA[Throw an sProcessException if the return value does not match expected
  return value.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="270" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="290" package="Sutra">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="280">
          <description><![CDATA[Execute the program.]]></description>
          <long-description><![CDATA[<p>This is for non-interactive processes.</p>]]></long-description>
          <tag line="280" name="throws" description="If tossing is enabled, and the return value&#10;  does not match the one passed." type="\sProcessException">
            <type by_reference="false">\sProcessException</type>
          </tag>
          <tag line="280" name="param" description="Return value expected. Default is 0. Ignored if the class is not set to throw an exception on an invalid return value." type="int" variable="$rv">
            <type by_reference="false">int</type>
          </tag>
          <tag line="280" name="return" description="Output of the program." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="290">
          <name>$rv</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="309" package="Sutra">
        <name>getTemporaryFileName</name>
        <full_name>getTemporaryFileName</full_name>
        <docblock line="304">
          <description><![CDATA[Get the temporary file name to write to.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="304" name="return" description="File name to write to, including full path." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="324" package="Sutra">
        <name>commandLine</name>
        <full_name>commandLine</full_name>
        <docblock line="318">
          <description><![CDATA[Get the complete command line, escaped, including any piping.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="318" name="param" description="Whether or not popen() is being used." type="boolean" variable="$popen">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="318" name="return" description="The complete command line." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="324">
          <name>$popen</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="356" package="Sutra">
        <name>beginInteractive</name>
        <full_name>beginInteractive</full_name>
        <docblock line="349">
          <description><![CDATA[Begin an interactive session with the process.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="349" name="return" description="The object to allow for method chaining." type="\sProcess">
            <type by_reference="false">\sProcess</type>
          </tag>
          <tag line="349" name="see" description="\global\popen()" refers="\global\popen()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="377" package="Sutra">
        <name>redirectStandardError</name>
        <full_name>redirectStandardError</full_name>
        <docblock line="368">
          <description><![CDATA[Redirect standard error.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="368" name="param" description="Defauls to TRUE. Class instantiates with this set to FALSE." type="boolean" variable="$bool">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="368" name="param" description="Where the output should go to. Example could be '&amp;1' or a file name." type="string" variable="$where">
            <type by_reference="false">string</type>
          </tag>
          <tag line="368" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="377">
          <name>$bool</name>
          <default><![CDATA[TRUE]]></default>
          <type/>
        </argument>
        <argument line="377">
          <name>$where</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="405" package="Sutra">
        <name>redirectStdErr</name>
        <full_name>redirectStdErr</full_name>
        <docblock line="395">
          <description><![CDATA[Redirect standard error.]]></description>
          <long-description><![CDATA[<p>Convenience alias for redirectStandardError().</p>]]></long-description>
          <tag line="395" name="param" description="Defauls to TRUE." type="boolean" variable="$bool">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="395" name="param" description="Where the output should go to. Example could be '&amp;1' or a file name." type="string" variable="$where">
            <type by_reference="false">string</type>
          </tag>
          <tag line="395" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="395" name="see" description="\global\sProcess::redirectStandardError()" refers="\global\sProcess::redirectStandardError()"/>
        </docblock>
        <argument line="405">
          <name>$bool</name>
          <default><![CDATA[TRUE]]></default>
          <type/>
        </argument>
        <argument line="405">
          <name>$where</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="420" package="Sutra">
        <name>write</name>
        <full_name>write</full_name>
        <docblock line="409">
          <description><![CDATA[Write to the interactive process.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="409" name="throws" description="If the handle cannot be written to or if the&#10;  string passed was of zero-length." type="\sProcessException">
            <type by_reference="false">\sProcessException</type>
          </tag>
          <tag line="409" name="param" description="A formatted string and arguments. Example: &quot;%s&quot;, 'string'." type="\$format,..." variable="$format">
            <type by_reference="false">\$format,...</type>
          </tag>
          <tag line="409" name="return" description="The object to allow for method chaining." type="\sProcess">
            <type by_reference="false">\sProcess</type>
          </tag>
          <tag line="409" name="see" description="\global\fprintf()" refers="\global\fprintf()"/>
        </docblock>
        <argument line="420">
          <name>$format</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="443" package="Sutra">
        <name>EOF</name>
        <full_name>EOF</full_name>
        <docblock line="433">
          <description><![CDATA[End the interactive session.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="433" name="throws" description="If tossing is enabled and the return value does&#10;  not match the one passed; if attempting to close a non-existent popen&#10;  handle." type="\sProcessException">
            <type by_reference="false">\sProcessException</type>
          </tag>
          <tag line="433" name="param" description="Return value expected. Defaults to 0." type="int" variable="$rv">
            <type by_reference="false">int</type>
          </tag>
          <tag line="433" name="return" description="Output of the session." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="443">
          <name>$rv</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="473" package="Sutra">
        <name>addArgument</name>
        <full_name>addArgument</full_name>
        <docblock line="464">
          <description><![CDATA[Add argument (or arguments) to the current set of arguments.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="464" name="throws" description="If attempting to add arguments to a process&#10;  already running." type="\sProcessException">
            <type by_reference="false">\sProcessException</type>
          </tag>
          <tag line="464" name="param" description="Arguments to add." type="\string,..." variable="$arg">
            <type by_reference="false">\string,...</type>
          </tag>
          <tag line="464" name="return" description="The object to allow for method chaining." type="\sProcess">
            <type by_reference="false">\sProcess</type>
          </tag>
        </docblock>
        <argument line="473">
          <name>$arg</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file sutra/classes/sProcess.php</error>
    </parse_markers>
  </file>
  <file path="sutra/classes/sString.php" hash="5d718ef59bda4c62a9b3e66a5968db9d" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="15" package="Sutra">
      <extends/>
      <implements>\ArrayAccess</implements>
      <implements>\Countable</implements>
      <implements>\IteratorAggregate</implements>
      <name>sString</name>
      <full_name>\sString</full_name>
      <docblock line="2">
        <description><![CDATA[Provides object-oriented interface to strings.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 Charles S, others"/>
        <tag line="2" name="author" description="Charles S [cs] &lt;hopelesscode@gmail.com&gt;"/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="https://github.com/tatsh/sutra" link="https://github.com/tatsh/sutra"/>
        <tag line="2" name="version" description="1.3"/>
      </docblock>
      <constant namespace="global" line="21" package="Sutra">
        <name>ENCODING_BASE64</name>
        <full_name>ENCODING_BASE64</full_name>
        <value><![CDATA['base64_encode']]></value>
        <docblock line="16">
          <description><![CDATA[The callback to encode into base64.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="16" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="28" package="Sutra">
        <name>ENCODING_JSON</name>
        <full_name>ENCODING_JSON</full_name>
        <value><![CDATA['fJSON::encode']]></value>
        <docblock line="23">
          <description><![CDATA[The callback to encode into JSON.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="23" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="35" package="Sutra">
        <name>ENCODING_URL</name>
        <full_name>ENCODING_URL</full_name>
        <value><![CDATA['urlencode']]></value>
        <docblock line="30">
          <description><![CDATA[The callback to encode into URI Component.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="30" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="42" package="Sutra">
        <name>ENCODING_RAWURL</name>
        <full_name>ENCODING_RAWURL</full_name>
        <value><![CDATA['rawurlencode']]></value>
        <docblock line="37">
          <description><![CDATA[The callback to encode into Raw URI Component.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="37" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="private" line="49" namespace="global" package="Sutra">
        <name>$string</name>
        <default><![CDATA[]]></default>
        <docblock line="44">
          <description><![CDATA[The string.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="44" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="57" package="Sutra">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="51">
          <description><![CDATA[Constructor.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="51" name="param" description="The string to manipulate." type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="51" name="return" description="" type="\sString">
            <type by_reference="false">\sString</type>
          </tag>
        </docblock>
        <argument line="57">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="75" package="Sutra">
        <name>replace</name>
        <full_name>replace</full_name>
        <docblock line="64">
          <description><![CDATA[Replaces matching parts of the string.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="64" name="see" description="\global\fUTF8::replace()" refers="\global\fUTF8::replace()"/>
          <tag line="64" name="param" description="The string or array to search for." type="mixed" variable="$search">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="64" name="param" description="The string or array of replacements." type="mixed" variable="$replace">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="64" name="param" description="Determines to check for case sensitive strings" type="boolean" variable="$case_sensitive">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="64" name="return" description="The replaced string." type="\sString">
            <type by_reference="false">\sString</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$search</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="75">
          <name>$replace</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="75">
          <name>$case_sensitive</name>
          <default><![CDATA[TRUE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="91" package="Sutra">
        <name>offsetExists</name>
        <full_name>offsetExists</full_name>
        <docblock line="81">
          <description><![CDATA[Checks if the offset exists.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="81" name="internal" description=""/>
          <tag line="81" name="throws" description="If the offset is not an integer." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="81" name="param" description="Offset." type="integer" variable="$offset">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="81" name="return" description="If the offset exists." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$offset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="110" package="Sutra">
        <name>offsetGet</name>
        <full_name>offsetGet</full_name>
        <docblock line="100">
          <description><![CDATA[Gets the value at a specific offset.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="100" name="internal" description=""/>
          <tag line="100" name="throws" description="If the offset is not an integer." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="100" name="param" description="Offset." type="integer" variable="$offset">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="100" name="return" description="The value or NULL." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="110">
          <name>$offset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="128" package="Sutra">
        <name>offsetSet</name>
        <full_name>offsetSet</full_name>
        <docblock line="119">
          <description><![CDATA[Sets the value at an offset.]]></description>
          <long-description><![CDATA[<p>The offset is ignored.</p>]]></long-description>
          <tag line="119" name="internal" description=""/>
          <tag line="119" name="param" description="Offset to set to. Ignored." type="integer" variable="$offset">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="119" name="param" description="Value to set." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="119" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="128">
          <name>$offset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="128">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="149" package="Sutra">
        <name>offsetUnset</name>
        <full_name>offsetUnset</full_name>
        <docblock line="139">
          <description><![CDATA[Unsets the value at an offset.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="139" name="internal" description=""/>
          <tag line="139" name="throws" description="If the offset is not an integer." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="139" name="param" description="Offset." type="integer" variable="$offset">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="139" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="149">
          <name>$offset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="165" package="Sutra">
        <name>charAt</name>
        <full_name>charAt</full_name>
        <docblock line="159">
          <description><![CDATA[Get the character within the string specified by numerical index.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="159" name="param" description="Index to use." type="integer" variable="$index">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="159" name="return" description="The character at $index or NULL." type="\sString">
            <type by_reference="false">\sString</type>
          </tag>
        </docblock>
        <argument line="165">
          <name>$index</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="182" package="Sutra">
        <name>charCodeAt</name>
        <full_name>charCodeAt</full_name>
        <docblock line="175">
          <description><![CDATA[Get the character code at an index.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="175" name="param" description="Index to use." type="integer" variable="$index">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="175" name="return" description="If the index is not usable, NULL is returned. Otherwise, the&#10;  character number (int) is returned." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="182">
          <name>$index</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="195" package="Sutra">
        <name>quote</name>
        <full_name>quote</full_name>
        <docblock line="190">
          <description><![CDATA[Get the string double-quoted.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="190" name="return" description="The string, double-quoted." type="\sString">
            <type by_reference="false">\sString</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="205" package="Sutra">
        <name>split</name>
        <full_name>split</full_name>
        <docblock line="199">
          <description><![CDATA[Explode a string, optionally with a separator.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="199" name="param" description="Separator, optional." type="string" variable="$separator">
            <type by_reference="false">string</type>
          </tag>
          <tag line="199" name="return" description="String as array." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="205">
          <name>$separator</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="222" package="Sutra">
        <name>replaceRegex</name>
        <full_name>replaceRegex</full_name>
        <docblock line="212">
          <description><![CDATA[Replaces the regular expression.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="212" name="see" description="\global\preg_replace()" refers="\global\preg_replace()"/>
          <tag line="212" name="param" description="The regular expression." type="string" variable="$pattern">
            <type by_reference="false">string</type>
          </tag>
          <tag line="212" name="param" description="The replacement string." type="string" variable="$replacement">
            <type by_reference="false">string</type>
          </tag>
          <tag line="212" name="param" description="The limit." type="integer" variable="$limit">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="212" name="return" description="The string with replacements made." type="\sString">
            <type by_reference="false">\sString</type>
          </tag>
        </docblock>
        <argument line="222">
          <name>$pattern</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="222">
          <name>$replacement</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="222">
          <name>$limit</name>
          <default><![CDATA[-1]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="232" package="Sutra">
        <name>toTime</name>
        <full_name>toTime</full_name>
        <docblock line="226">
          <description><![CDATA[Converts the string to time.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="226" name="see" description="\global\fTime::__construct()" refers="\global\fTime::__construct()"/>
          <tag line="226" name="return" description="The string converted to time." type="\fTime">
            <type by_reference="false">\fTime</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="242" package="Sutra">
        <name>toTimeStamp</name>
        <full_name>toTimeStamp</full_name>
        <docblock line="236">
          <description><![CDATA[Converts the string to a timestamp.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="236" name="see" description="\global\sTimestamp::__construct()" refers="\global\sTimestamp::__construct()"/>
          <tag line="236" name="return" description="The string converted to a timestamp." type="\sTimestamp">
            <type by_reference="false">\sTimestamp</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="252" package="Sutra">
        <name>toDate</name>
        <full_name>toDate</full_name>
        <docblock line="246">
          <description><![CDATA[Converts the string to a date.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="246" name="see" description="\global\fDate::__construct()" refers="\global\fDate::__construct()"/>
          <tag line="246" name="return" description="The string converted to a date." type="\fDate">
            <type by_reference="false">\fDate</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="261" package="Sutra">
        <name>toInt</name>
        <full_name>toInt</full_name>
        <docblock line="256">
          <description><![CDATA[Converts the string to a integer.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="256" name="return" description="The integer from the converted string." type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="271" package="Sutra">
        <name>toNumber</name>
        <full_name>toNumber</full_name>
        <docblock line="265">
          <description><![CDATA[Converts the string to a fNumber object.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="265" name="see" description="\global\sNumber::__construct()" refers="\global\sNumber::__construct()"/>
          <tag line="265" name="return" description="The number from the converted string." type="\sNumber">
            <type by_reference="false">\sNumber</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="280" package="Sutra">
        <name>toArray</name>
        <full_name>toArray</full_name>
        <docblock line="275">
          <description><![CDATA[Converts the string to a array.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="275" name="return" description="The array from the converted string." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="289" package="Sutra">
        <name>toFloat</name>
        <full_name>toFloat</full_name>
        <docblock line="284">
          <description><![CDATA[Converts the string to a float.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="284" name="return" description="The float from the converted string." type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="299" package="Sutra">
        <name>toBase64</name>
        <full_name>toBase64</full_name>
        <docblock line="293">
          <description><![CDATA[Encodes the string to base64.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="293" name="see" description="\global\base64_encode()" refers="\global\base64_encode()"/>
          <tag line="293" name="return" description="The string encoded to base64." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="308" package="Sutra">
        <name>toBoolean</name>
        <full_name>toBoolean</full_name>
        <docblock line="303">
          <description><![CDATA[Converts our string to a boolean.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="303" name="return" description="The boolean from the converted string." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="322" package="Sutra">
        <name>toJSON</name>
        <full_name>toJSON</full_name>
        <docblock line="316">
          <description><![CDATA[Encodes the string to JSON data.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="316" name="see" description="\global\fJSON::encode()" refers="\global\fJSON::encode()"/>
          <tag line="316" name="return" description="The string encoded to JSON." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="332" package="Sutra">
        <name>toURIComponent</name>
        <full_name>toURIComponent</full_name>
        <docblock line="326">
          <description><![CDATA[Encodes the string to a URI component.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="326" name="see" description="\global\urlencode()" refers="\global\urlencode()"/>
          <tag line="326" name="return" description="The encoded URI." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="342" package="Sutra">
        <name>toRawURIComponent</name>
        <full_name>toRawURIComponent</full_name>
        <docblock line="336">
          <description><![CDATA[Encodes the string to a rawURIcomponent.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="336" name="see" description="\global\rawurlencode()" refers="\global\rawurlencode()"/>
          <tag line="336" name="return" description="The encoded raw URI." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="352" package="Sutra">
        <name>toLowerCase</name>
        <full_name>toLowerCase</full_name>
        <docblock line="346">
          <description><![CDATA[Convert the string to all lowercase.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="346" name="see" description="\global\fUTF8::lower()" refers="\global\fUTF8::lower()"/>
          <tag line="346" name="return" description="The string lowercased." type="\sString">
            <type by_reference="false">\sString</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="362" package="Sutra">
        <name>toUpperCase</name>
        <full_name>toUpperCase</full_name>
        <docblock line="356">
          <description><![CDATA[Convert the string to all uppercase.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="356" name="see" description="\global\fUTF8::upper()" refers="\global\fUTF8::upper()"/>
          <tag line="356" name="return" description="The string uppercased." type="\sString">
            <type by_reference="false">\sString</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="372" package="Sutra">
        <name>wordsToUpper</name>
        <full_name>wordsToUpper</full_name>
        <docblock line="366">
          <description><![CDATA[Convert the beginning of each word to uppercase.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="366" name="see" description="\global\fUTF8::ucwords()" refers="\global\fUTF8::ucwords()"/>
          <tag line="366" name="return" description="The beginning of each word uppcased." type="\sString">
            <type by_reference="false">\sString</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="382" package="Sutra">
        <name>firstCharToUpper</name>
        <full_name>firstCharToUpper</full_name>
        <docblock line="376">
          <description><![CDATA[Converts the first character to uppercase.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="376" name="see" description="\global\fUTF8::ucfirst()" refers="\global\fUTF8::ucfirst()"/>
          <tag line="376" name="return" description="The first character uppercased." type="\sString">
            <type by_reference="false">\sString</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="395" package="Sutra">
        <name>substr</name>
        <full_name>substr</full_name>
        <docblock line="386">
          <description><![CDATA[Subtracts part of the string.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="386" name="see" description="\global\fUTF8::sub()" refers="\global\fUTF8::sub()"/>
          <tag line="386" name="param" description="The starting point to extract from." type="integer" variable="$start">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="386" name="param" description="The length to subtract from the string." type="integer" variable="$length">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="386" name="return" description="The subtracted string." type="\sString">
            <type by_reference="false">\sString</type>
          </tag>
        </docblock>
        <argument line="395">
          <name>$start</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="395">
          <name>$length</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="407" package="Sutra">
        <name>trimLeft</name>
        <full_name>trimLeft</full_name>
        <docblock line="399">
          <description><![CDATA[Trims whitespaces or defined characters from the beginning of the string.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="399" name="see" description="\global\fUTF8::ltrim()" refers="\global\fUTF8::ltrim()"/>
          <tag line="399" name="param" description="The characters to trim." type="string" variable="$charlist">
            <type by_reference="false">string</type>
          </tag>
          <tag line="399" name="return" description="The string trimmed." type="\sString">
            <type by_reference="false">\sString</type>
          </tag>
        </docblock>
        <argument line="407">
          <name>$charlist</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="419" package="Sutra">
        <name>trim</name>
        <full_name>trim</full_name>
        <docblock line="411">
          <description><![CDATA[Trims whitespaces or defined characters from the full string.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="411" name="see" description="\global\fUTF8::trim()" refers="\global\fUTF8::trim()"/>
          <tag line="411" name="param" description="The characters to trim." type="string" variable="$charlist">
            <type by_reference="false">string</type>
          </tag>
          <tag line="411" name="return" description="The string trimmed." type="\sString">
            <type by_reference="false">\sString</type>
          </tag>
        </docblock>
        <argument line="419">
          <name>$charlist</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="431" package="Sutra">
        <name>trimRight</name>
        <full_name>trimRight</full_name>
        <docblock line="423">
          <description><![CDATA[Trims whitespaces or defined characters from the end of the string.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="423" name="see" description="\global\fUTF8::rtrim()" refers="\global\fUTF8::rtrim()"/>
          <tag line="423" name="param" description="The characters to trim." type="string" variable="$charlist">
            <type by_reference="false">string</type>
          </tag>
          <tag line="423" name="return" description="The string trimmed." type="\sString">
            <type by_reference="false">\sString</type>
          </tag>
        </docblock>
        <argument line="431">
          <name>$charlist</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="444" package="Sutra">
        <name>indexOf</name>
        <full_name>indexOf</full_name>
        <docblock line="435">
          <description><![CDATA[Finds the first position of the search in the string.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="435" name="see" description="\global\fUTF8::pos()" refers="\global\fUTF8::pos()"/>
          <tag line="435" name="param" description="The string to search for." type="string" variable="$needle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="435" name="param" description="The character position to start searching from." type="integer" variable="$offset">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="435" name="return" description="The character position, or -1." type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="444">
          <name>$needle</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="444">
          <name>$offset</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="463" package="Sutra">
        <name>lastIndexOf</name>
        <full_name>lastIndexOf</full_name>
        <docblock line="454">
          <description><![CDATA[Finds the last position of the search value in the string.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="454" name="see" description="\global\fUTF8::rpos()" refers="\global\fUTF8::rpos()"/>
          <tag line="454" name="param" description="The string to search for." type="string" variable="$needle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="454" name="param" description="The character position to start searching from." type="integer" variable="$offset">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="454" name="return" description="The character position." type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="463">
          <name>$needle</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="463">
          <name>$offset</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="479" package="Sutra">
        <name>reverse</name>
        <full_name>reverse</full_name>
        <docblock line="473">
          <description><![CDATA[Reverses the string.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="473" name="see" description="\global\fUTF8::rev()" refers="\global\fUTF8::rev()"/>
          <tag line="473" name="return" description="The string reversed." type="\sString">
            <type by_reference="false">\sString</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="493" package="Sutra">
        <name>wordWrap</name>
        <full_name>wordWrap</full_name>
        <docblock line="483">
          <description><![CDATA[Wraps the string to the specified width.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="483" name="see" description="\global\fUTF8::wordwrap()" refers="\global\fUTF8::wordwrap()"/>
          <tag line="483" name="param" description="The width to wrap too." type="integer" variable="$width">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="483" name="param" description="The break to insert." type="string" variable="$break">
            <type by_reference="false">string</type>
          </tag>
          <tag line="483" name="param" description="If TRUE we will cut the words to match the width." type="boolean" variable="$cut">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="483" name="return" description="The string with all lowercase characters to uppercase." type="\sString">
            <type by_reference="false">\sString</type>
          </tag>
        </docblock>
        <argument line="493">
          <name>$width</name>
          <default><![CDATA[75]]></default>
          <type/>
        </argument>
        <argument line="493">
          <name>$break</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
        <argument line="493">
          <name>$cut</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="507" package="Sutra">
        <name>pad</name>
        <full_name>pad</full_name>
        <docblock line="497">
          <description><![CDATA[Pads the string to the number of characters specified.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="497" name="see" description="\global\fUTF8::pad()" refers="\global\fUTF8::pad()"/>
          <tag line="497" name="param" description="The character length to pad." type="integer" variable="$pad_length">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="497" name="param" description="The string to pad with our string." type="string" variable="$pad_string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="497" name="param" description="Types: 'left','right','both'." type="string" variable="$pad_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="497" name="return" description="The padded string." type="\sString">
            <type by_reference="false">\sString</type>
          </tag>
        </docblock>
        <argument line="507">
          <name>$pad_length</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="507">
          <name>$pad_string</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
        <argument line="507">
          <name>$pad_type</name>
          <default><![CDATA['right']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="517" package="Sutra">
        <name>clean</name>
        <full_name>clean</full_name>
        <docblock line="511">
          <description><![CDATA[Removes any non-UTF-8 characters.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="511" name="see" description="\global\fUTF8::clean()" refers="\global\fUTF8::clean()"/>
          <tag line="511" name="return" description="The cleaned string." type="\sString">
            <type by_reference="false">\sString</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="528" package="Sutra">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="521">
          <description><![CDATA[Returns the string.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="521" name="internal" description=""/>
          <tag line="521" name="return" description="The string defined." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="537" package="Sutra">
        <name>getLength</name>
        <full_name>getLength</full_name>
        <docblock line="532">
          <description><![CDATA[Gets the length of the string.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="532" name="return" description="The string length." type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="550" package="Sutra">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="541">
          <description><![CDATA[This is only for getting the 'length' attribute, to be similar to
  JavaScript.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="541" name="internal" description=""/>
          <tag line="541" name="param" description="Key to get value of. Only 'length' is accepted." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="541" name="return" description="The length of the array or NULL if the key is invalid." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="550">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="564" package="Sutra">
        <name>getIterator</name>
        <full_name>getIterator</full_name>
        <docblock line="557">
          <description><![CDATA[So the object can be used with foreach.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="557" name="internal" description=""/>
          <tag line="557" name="return" description="Iterator object." type="\ArrayIterator">
            <type by_reference="false">\ArrayIterator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="572" package="Sutra">
        <name>count</name>
        <full_name>count</full_name>
        <docblock line="567">
          <description><![CDATA[Returns the length of the string]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="567" name="return" description="The length of the string" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="582" package="Sutra">
        <name>encode</name>
        <full_name>encode</full_name>
        <docblock line="576">
          <description><![CDATA[Executes the encoder functions/methods.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="576" name="param" description="The encoder that will encode the string." type="string" variable="$encoder">
            <type by_reference="false">string</type>
          </tag>
          <tag line="576" name="return" description="The encoded string." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="582">
          <name>$encoder</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file sutra/classes/sString.php</error>
      <error line="541" code="50014">Name of argument $name does not match with the DocBlock's name $key in __get()</error>
      <notice line="541" code="50013">Parameter $key could not be found in __get()</notice>
    </parse_markers>
  </file>
  <file path="sutra/classes/sORMRelatedImage.php" hash="868489c1d9c89580b9fc7ee08d85130e" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="14" package="Sutra">
      <extends/>
      <name>sORMRelatedImage</name>
      <full_name>\sORMRelatedImage</full_name>
      <docblock line="2">
        <description><![CDATA[Provides image to active record relationship functionality.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
        <tag line="2" name="version" description="1.3"/>
      </docblock>
      <property final="false" static="true" visibility="private" line="20" namespace="global" package="Sutra">
        <name>$configured_classes</name>
        <default><![CDATA[array()]]></default>
        <docblock line="15">
          <description><![CDATA[Configured tables.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="15" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="41" package="Sutra">
        <name>configure</name>
        <full_name>configure</full_name>
        <docblock line="22">
          <description><![CDATA[Configures a related image column on another table.]]></description>
          <long-description><![CDATA[<p>If the related table primary key is not passed, this assumes that $column
  name specified is the same name on the related table.</p>]]></long-description>
          <tag line="22" name="throws" description="If $related_table_pk is unspecified and the&#10;  related table primary key is not passed and the primary key names are&#10;  not the same." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="22" name="param" description="The name of the class, or instance." type="string|\fActiveRecord" variable="$class">
            <type by_reference="false">string</type>
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="22" name="param" description="The column for the image class." type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="22" name="param" description="Related table name with the values." type="string" variable="$related_table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="22" name="param" description="Primary key column name of the related table." type="string" variable="$related_table_pk">
            <type by_reference="false">string</type>
          </tag>
          <tag line="22" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="22" name="todo" description=""/>
        </docblock>
        <argument line="41">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="41">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="41">
          <name>$related_table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="41">
          <name>$related_table_pk</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file sutra/classes/sORMRelatedImage.php</error>
    </parse_markers>
  </file>
  <file path="sutra/classes/sHTML.php" hash="01ffbc78af9bc01e76f78189b75decad" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="15" package="Sutra">
      <extends>\fHTML</extends>
      <name>sHTML</name>
      <full_name>\sHTML</full_name>
      <docblock line="2">
        <description><![CDATA[Library to help with rendering HTML tags cleanly and validly.]]></description>
        <long-description><![CDATA[<p>Note that
  only some element attributes are checked for validity and fixed.</p>]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
        <tag line="2" name="version" description="1.2"/>
      </docblock>
      <constant namespace="global" line="16" package="Sutra">
        <name>attributesString</name>
        <full_name>attributesString</full_name>
        <value><![CDATA['sHTML::attributesString']]></value>
      </constant>
      <constant namespace="global" line="17" package="Sutra">
        <name>conditionalTag</name>
        <full_name>conditionalTag</full_name>
        <value><![CDATA['sHTML::conditionalTag']]></value>
      </constant>
      <constant namespace="global" line="18" package="Sutra">
        <name>linkIsURI</name>
        <full_name>linkIsURI</full_name>
        <value><![CDATA['sHTML::linkIsURI']]></value>
      </constant>
      <constant namespace="global" line="19" package="Sutra">
        <name>makeFormElement</name>
        <full_name>makeFormElement</full_name>
        <value><![CDATA['sHTML::makeFormElement']]></value>
      </constant>
      <constant namespace="global" line="20" package="Sutra">
        <name>makeList</name>
        <full_name>makeList</full_name>
        <value><![CDATA['sHTML::makeList']]></value>
      </constant>
      <constant namespace="global" line="21" package="Sutra">
        <name>makeTeaser</name>
        <full_name>makeTeaser</full_name>
        <value><![CDATA['sHTML::makeTeaser']]></value>
      </constant>
      <constant namespace="global" line="22" package="Sutra">
        <name>paragraphify</name>
        <full_name>paragraphify</full_name>
        <value><![CDATA['sHTML::paragraphify']]></value>
      </constant>
      <constant namespace="global" line="23" package="Sutra">
        <name>tag</name>
        <full_name>tag</full_name>
        <value><![CDATA['sHTML::tag']]></value>
      </constant>
      <property final="false" static="true" visibility="private" line="30" namespace="global" package="Sutra">
        <name>$form_element_ids</name>
        <default><![CDATA[array()]]></default>
        <docblock line="25">
          <description><![CDATA[Stores all form element IDs so that all generated via this class are unique.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="25" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="39" namespace="global" package="Sutra">
        <name>$input_type_values</name>
        <default><![CDATA[array('hidden', 'text', 'textfield', 'search', 'tel', 'url', 'email', 'password', 'datetime', 'date', 'month', 'week', 'time', 'datetime-local', 'number', 'range', 'color', 'checkbox', 'radio', 'file', 'submit', 'image', 'reset', 'button')]]></default>
        <docblock line="32">
          <description><![CDATA[Valid values for the element input type attribute.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="32" name="link" description="http://dev.w3.org/html5/spec/Overview.html#states-of-the-type-attribute" link="http://dev.w3.org/html5/spec/Overview.html#states-of-the-type-attribute"/>
          <tag line="32" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="72" namespace="global" package="Sutra">
        <name>$special_enumerated_attributes</name>
        <default><![CDATA[array('spellcheck' => array(TRUE => 'true', FALSE => 'false'), 'autocomplete' => array(TRUE => 'on', FALSE => 'off'))]]></default>
        <docblock line="66">
          <description><![CDATA[Special attributes like spellcheck and their valid values for states on
  and off (enumerated attributes that only have on/off states).]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="66" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="88" namespace="global" package="Sutra">
        <name>$boolean_attributes</name>
        <default><![CDATA[array('scoped', 'reveresed', 'ismap', 'seamless', 'typemustmatch', 'loop', 'autoplay', 'controls', 'muted', 'checked', 'readonly', 'required', 'multiple', 'disabled', 'selected', 'autofocus', 'open', 'hidden', 'truespeed')]]></default>
        <docblock line="83">
          <description><![CDATA[Boolean attributes that must be omitted if the state is to be off.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="83" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="116" package="Sutra">
        <name>formElementIDWithName</name>
        <full_name>formElementIDWithName</full_name>
        <docblock line="110">
          <description><![CDATA[Create a form element ID.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="110" name="param" description="Name attribute of the element." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="110" name="return" description="Unique identifier for use with the id attribute." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="116">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="147" package="Sutra">
        <name>makeTextarea</name>
        <full_name>makeTextarea</full_name>
        <docblock line="140">
          <description><![CDATA[Handles creating textarea tags.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="140" name="param" description="Name of the field." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="140" name="param" description="Label HTML." type="string" variable="$label">
            <type by_reference="false">string</type>
          </tag>
          <tag line="140" name="param" description="Attributes." type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="147">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="147">
          <name>$label</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
        <argument line="147">
          <name>$attributes</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="169" package="Sutra">
        <name>makeSelectElement</name>
        <full_name>makeSelectElement</full_name>
        <docblock line="162">
          <description><![CDATA[Handles creating select fields with options.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="162" name="param" description="Name of the field." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="162" name="param" description="Label HTML." type="string" variable="$label">
            <type by_reference="false">string</type>
          </tag>
          <tag line="162" name="param" description="Attributes." type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="169">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="169">
          <name>$label</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
        <argument line="169">
          <name>$attributes</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="232" package="Sutra">
        <name>makeFormElement</name>
        <full_name>makeFormElement</full_name>
        <docblock line="214">
          <description><![CDATA[Create a form element.]]></description>
          <long-description><![CDATA[<p>If specifying a select element, it may be desirable to have a default
  selected option. To do so, specify a 'value' key with a string value
  in the $attr argument. For optgroups, use a 2-dimensional array in
  the 'options' key in the $attr argument.</p>]]></long-description>
          <tag line="214" name="throws" description="If the type argument is invalid." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="214" name="param" description="One of the HTML 5 element types for use with the input tags, 'select', and 'textarea'." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="214" name="param" description="Form element name, unique to the form." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="214" name="param" description="Array of key =&gt; value attributes. Use 'label' to provide a string for use with a label element (which will have the for attribute set properly)." type="array" variable="$attr">
            <type by_reference="false">array</type>
          </tag>
          <tag line="214" name="return" description="HTML tags ready for use." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="232">
          <name>$type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="232">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="232">
          <name>$attr</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="309" package="Sutra">
        <name>validAttributeValue</name>
        <full_name>validAttributeValue</full_name>
        <docblock line="300">
          <description><![CDATA[Get a valid value for an enumerated (only ones that represent on or off)
  or boolean attribute.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="300" name="param" description="Attribute name." type="string" variable="$attribute_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="300" name="param" description="Boolean value for the attribute." type="boolean" variable="$value">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="300" name="return" description="If this function returns FALSE, the attribute must be&#10;  omitted." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="309">
          <name>$attribute_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="309">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="325" package="Sutra">
        <name>attributesString</name>
        <full_name>attributesString</full_name>
        <docblock line="318">
          <description><![CDATA[Convert an array of key => value attributes for an HTML tag to a
  string for use in HTML.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="318" name="param" description="Attributes array." type="array" variable="$attr">
            <type by_reference="false">array</type>
          </tag>
          <tag line="318" name="return" description="String ready for use within HTML tag." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="325">
          <name>$attr</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="380" package="Sutra">
        <name>tagRequiresEnd</name>
        <full_name>tagRequiresEnd</full_name>
        <docblock line="371">
          <description><![CDATA[Some tags require end tags while some others do not.]]></description>
          <long-description><![CDATA[<p>Example:</p>

<p>&lt;</p>

<p>p> does
  not in HTML, but in XHTML like all tags requires an end tag. However,
  some browsers are not going to do the same thing when encountering
  several</p>

<p>&lt;</p>

<p>p> tags with no endings, so it returns TRUE.</p>]]></long-description>
          <tag line="371" name="param" description="Tag name." type="string" variable="$tag">
            <type by_reference="false">string</type>
          </tag>
          <tag line="371" name="return" description="TRUE if the end tag is required, FALSE otherwise." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="380">
          <name>$tag</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="400" package="Sutra">
        <name>tag</name>
        <full_name>tag</full_name>
        <docblock line="392">
          <description><![CDATA[Create a tag HTML string.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="392" name="param" description="Tag name." type="string" variable="$tag">
            <type by_reference="false">string</type>
          </tag>
          <tag line="392" name="param" description="Attributes array." type="array" variable="$attr">
            <type by_reference="false">array</type>
          </tag>
          <tag line="392" name="param" description="Content to place within HTML. If the tag never uses an end tag, this parameter will be ignored. In particular, &lt;input&gt;, &lt;link&gt; and similar tags." type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="392" name="return" description="HTML tag, ready to be displayed." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="400">
          <name>$tag</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="400">
          <name>$attr</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="400">
          <name>$content</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="428" package="Sutra">
        <name>conditionalTag</name>
        <full_name>conditionalTag</full_name>
        <docblock line="419">
          <description><![CDATA[Create a tag HTML string wrapped by a MSIE conditional comment.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="419" name="param" description="The IE rule. Examples: 'lt IE 9', 'IE 8', 'gt IE 6'." type="string" variable="$rule">
            <type by_reference="false">string</type>
          </tag>
          <tag line="419" name="param" description="Tag name." type="string" variable="$tag">
            <type by_reference="false">string</type>
          </tag>
          <tag line="419" name="param" description="Attributes array." type="array" variable="$attr">
            <type by_reference="false">array</type>
          </tag>
          <tag line="419" name="param" description="Content to place within the HTML." type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="419" name="return" description="The HTML tag, ready to be displayed." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="428">
          <name>$rule</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="428">
          <name>$tag</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="428">
          <name>$attr</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
        <argument line="428">
          <name>$content</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="440" package="Sutra">
        <name>linkIsURI</name>
        <full_name>linkIsURI</full_name>
        <docblock line="433">
          <description><![CDATA[Check if a URL is a full URI or not.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="433" name="param" description="URL to check." type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="433" name="param" description="Other protocols to check." type="array" variable="$other_protocols">
            <type by_reference="false">array</type>
          </tag>
          <tag line="433" name="return" description="TRUE if the path is full URI beginning with http or https, FALSE otherwise." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="440">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="440">
          <name>$other_protocols</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="461" package="Sutra">
        <name>paragraphify</name>
        <full_name>paragraphify</full_name>
        <docblock line="455">
          <description><![CDATA[Create paragraphs from 2 or more new lines.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="455" name="param" description="Unfiltered string to paragraphify." type="string" variable="$html">
            <type by_reference="false">string</type>
          </tag>
          <tag line="455" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="461">
          <name>$html</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="497" package="Sutra">
        <name>makeList</name>
        <full_name>makeList</full_name>
        <docblock line="486">
          <description><![CDATA[Create a list.]]></description>
          <long-description><![CDATA[<p>'first', 'last', 'odd', 'even', 'item-INDEX' classes
  will be automatically added to each li element.</p>]]></long-description>
          <tag line="486" name="param" description="Array of strings." type="array" variable="$items">
            <type by_reference="false">array</type>
          </tag>
          <tag line="486" name="param" description="'ul' or 'ol', defaults to 'ul' even if an invalid value is passed." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="486" name="param" description="Array of attributes for the parent element." type="array" variable="$attr">
            <type by_reference="false">array</type>
          </tag>
          <tag line="486" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="497">
          <name>$items</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="497">
          <name>$type</name>
          <default><![CDATA['ul']]></default>
          <type/>
        </argument>
        <argument line="497">
          <name>$attr</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="556" package="Sutra">
        <name>makeTeaser</name>
        <full_name>makeTeaser</full_name>
        <docblock line="543">
          <description><![CDATA[Make a teaser from HTML without broken tags or word splits.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="543" name="param" description="String to truncate." type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="543" name="param" description="Length of returned string, including ellipsis." type="integer" variable="$length">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="543" name="param" description="Ending to be appended to the trimmed string." type="string" variable="$ending">
            <type by_reference="false">string</type>
          </tag>
          <tag line="543" name="param" description="If false, $text will not be cut mid-word" type="boolean" variable="$exact">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="543" name="param" description="If true, HTML tags would be handled correctly" type="boolean" variable="$consider_html">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="543" name="return" description="Trimmed string." type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="543" name="link" description="http://drupal.se/how-create-teasers-are-html-and-word-safe" link="http://drupal.se/how-create-teasers-are-html-and-word-safe"/>
        </docblock>
        <argument line="556">
          <name>$text</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="556">
          <name>$length</name>
          <default><![CDATA[100]]></default>
          <type/>
        </argument>
        <argument line="556">
          <name>$ending</name>
          <default><![CDATA[' ...']]></default>
          <type/>
        </argument>
        <argument line="556">
          <name>$exact</name>
          <default><![CDATA[true]]></default>
          <type/>
        </argument>
        <argument line="556">
          <name>$consider_html</name>
          <default><![CDATA[true]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="669" package="Sutra">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="664">
          <description><![CDATA[Private to force use as static class.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="664" name="return" description="" type="\sHTML">
            <type by_reference="false">\sHTML</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file sutra/classes/sHTML.php</error>
    </parse_markers>
  </file>
  <file path="sutra/classes/sJSONP.php" hash="92337a497597d9c6e08dced62730886b" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="14" package="Sutra">
      <extends>\fJSON</extends>
      <name>sJSONP</name>
      <full_name>\sJSONP</full_name>
      <docblock line="2">
        <description><![CDATA[Extension to Flourish fJSON class to provide methods for JSONP support.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
        <tag line="2" name="version" description="1.2"/>
      </docblock>
      <constant namespace="global" line="15" package="Sutra">
        <name>encode</name>
        <full_name>encode</full_name>
        <value><![CDATA['sJSONP::encode']]></value>
      </constant>
      <constant namespace="global" line="16" package="Sutra">
        <name>sendHeader</name>
        <full_name>sendHeader</full_name>
        <value><![CDATA['sJSONP::sendHeader']]></value>
      </constant>
      <property final="false" static="true" visibility="private" line="23" namespace="global" package="Sutra">
        <name>$reserved_words</name>
        <default><![CDATA[array('break', 'do', 'instanceof', 'typeof', 'case', 'else', 'new', 'var', 'catch', 'finally', 'return', 'void', 'continue', 'for', 'switch', 'while', 'debugger', 'function', 'this', 'with', 'default', 'if', 'throw', 'delete', 'in', 'try', 'class', 'enum', 'extends', 'super', 'const', 'export', 'import', 'implements', 'let', 'private', 'public', 'yield', 'interface', 'package', 'protected', 'static', 'null', 'true', 'false')]]></default>
        <docblock line="18">
          <description><![CDATA[JavaScript reserved words, as per the ECMA 3 standard.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="18" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="77" namespace="global" package="Sutra">
        <name>$identifier_syntax</name>
        <default><![CDATA['/^[$_\p{L}][$_\p{L}\p{Mn}\p{Mc}\p{Nd}\p{Pc}\x{200C}\x{200D}]*+$/u']]></default>
        <docblock line="71">
          <description><![CDATA[The JavaScript identifier syntax regular expression.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="71" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="71" name="credit" description="http://www.geekality.net/2010/06/27/php-how-to-easily-provide-json-and-jsonp/"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="92" package="Sutra">
        <name>encode</name>
        <full_name>encode</full_name>
        <docblock line="79">
          <description><![CDATA[Overrides encode method to wrap around the callback received.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="79" name="throws" description="If the callback is invalid (an example would&#10;  include any reserved keyword, including future use ones)." type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="79" name="param" description="Data to encode." type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="79" name="param" description="Optional. If not passed, will be retrieved from GET paramater 'callback'. If no such parameter is found, 'fn' will be used." type="string" variable="$callback">
            <type by_reference="false">string</type>
          </tag>
          <tag line="79" name="param" description="If FALSE is passed, then the callback will not be validated." type="boolean" variable="$check_callback">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="79" name="return" description="Encoded JSONP data." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="92">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="92">
          <name>$callback</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="92">
          <name>$check_callback</name>
          <default><![CDATA[TRUE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="111" package="Sutra">
        <name>isValidCallback</name>
        <full_name>isValidCallback</full_name>
        <docblock line="104">
          <description><![CDATA[Validate a callback name is not a reserved word in JavaScript and does not have
  invalid characters.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="104" name="param" description="The callback name." type="string" variable="$subject">
            <type by_reference="false">string</type>
          </tag>
          <tag line="104" name="return" description="TRUE if the callback can be used, FALSE otherwise." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="111">
          <name>$subject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="121" package="Sutra">
        <name>sendHeader</name>
        <full_name>sendHeader</full_name>
        <docblock line="116">
          <description><![CDATA[Overrides sendHeader to send a text/javascript response instead.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="116" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="130" package="Sutra">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="125">
          <description><![CDATA[Force use as a static class.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="125" name="return" description="" type="\sJSONP">
            <type by_reference="false">\sJSONP</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file sutra/classes/sJSONP.php</error>
    </parse_markers>
  </file>
  <file path="sutra/classes/sArray.php" hash="3b3d65c19577e6ae0fccdfd84563dbe5" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="14" package="Sutra">
      <extends/>
      <implements>\Countable</implements>
      <implements>\ArrayAccess</implements>
      <implements>\IteratorAggregate</implements>
      <name>sArray</name>
      <full_name>\sArray</full_name>
      <docblock line="2">
        <description><![CDATA[An object-oriented interface to numerically indexed arrays.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="https://github.com/tatsh/sutra" link="https://github.com/tatsh/sutra"/>
        <tag line="2" name="version" description="1.3"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="20" namespace="global" package="Sutra">
        <name>$data</name>
        <default><![CDATA[array()]]></default>
        <docblock line="15">
          <description><![CDATA[The data.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="15" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="29" package="Sutra">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="22">
          <description><![CDATA[Constructor.]]></description>
          <long-description><![CDATA[<p>Accepts multiple arguments or only a single array argument.</p>]]></long-description>
          <tag line="22" name="param" description="First item of the array." type="mixed" variable="$arg">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="22" name="param" description="Second item of the array." type="mixed" variable="$arg,...">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="22" name="return" description="" type="\sArray">
            <type by_reference="false">\sArray</type>
          </tag>
        </docblock>
        <argument line="29">
          <name>$arg</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="43" package="Sutra">
        <name>getData</name>
        <full_name>getData</full_name>
        <docblock line="38">
          <description><![CDATA[Gets the data as a regular array.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="38" name="return" description="Array of data." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="52" package="Sutra">
        <name>count</name>
        <full_name>count</full_name>
        <docblock line="47">
          <description><![CDATA[Returns the size of array.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="47" name="return" description="The size of the array." type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="63" package="Sutra">
        <name>getIterator</name>
        <full_name>getIterator</full_name>
        <docblock line="56">
          <description><![CDATA[So the object can be used with foreach.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="56" name="internal" description=""/>
          <tag line="56" name="return" description="Iterator object." type="\ArrayIterator">
            <type by_reference="false">\ArrayIterator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="77" package="Sutra">
        <name>offsetExists</name>
        <full_name>offsetExists</full_name>
        <docblock line="67">
          <description><![CDATA[Checks if the offset exists.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="67" name="internal" description=""/>
          <tag line="67" name="throws" description="If the offset is not an integer." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="67" name="param" description="Offset." type="integer" variable="$offset">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="67" name="return" description="If the offset exists." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="77">
          <name>$offset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="96" package="Sutra">
        <name>offsetGet</name>
        <full_name>offsetGet</full_name>
        <docblock line="86">
          <description><![CDATA[Gets the value at a specific offset.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="86" name="internal" description=""/>
          <tag line="86" name="throws" description="If the offset is not an integer." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="86" name="param" description="Offset." type="integer" variable="$offset">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="86" name="return" description="The value or NULL." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="96">
          <name>$offset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="114" package="Sutra">
        <name>offsetSet</name>
        <full_name>offsetSet</full_name>
        <docblock line="105">
          <description><![CDATA[Sets the value at an offset.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="105" name="internal" description=""/>
          <tag line="105" name="param" description="Offset to set to." type="integer" variable="$offset">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="105" name="param" description="Value to set." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="105" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="114">
          <name>$offset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="114">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="133" package="Sutra">
        <name>offsetUnset</name>
        <full_name>offsetUnset</full_name>
        <docblock line="123">
          <description><![CDATA[Unsets the value at an offset.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="123" name="internal" description=""/>
          <tag line="123" name="throws" description="If the offset is not an integer." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="123" name="param" description="Offset." type="integer" variable="$offset">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="123" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="133">
          <name>$offset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="151" package="Sutra">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="142">
          <description><![CDATA[This is only for getting the 'length' attribute, to be similar to
  JavaScript.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="142" name="internal" description=""/>
          <tag line="142" name="param" description="Key to get value of. Only 'length' is accepted." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="142" name="return" description="The length of the array or NULL if the key is invalid." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="151">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="164" package="Sutra">
        <name>pop</name>
        <full_name>pop</full_name>
        <docblock line="159">
          <description><![CDATA[Pops the last element of the array and returns its value.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="159" name="return" description="The value at the last index." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="174" package="Sutra">
        <name>push</name>
        <full_name>push</full_name>
        <docblock line="168">
          <description><![CDATA[Pushes the value into the last position of the array.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="168" name="param" description="Variable to push." type="mixed" variable="$var">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="168" name="return" description="The object to allow method chaining." type="\sArray">
            <type by_reference="false">\sArray</type>
          </tag>
        </docblock>
        <argument line="174">
          <name>$var</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="186" package="Sutra">
        <name>fill</name>
        <full_name>fill</full_name>
        <docblock line="179">
          <description><![CDATA[Fills the array $num times with $value.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="179" name="param" description="Number of times to fill." type="integer" variable="$num">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="179" name="param" description="Value to fill with." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="179" name="return" description="The object to allow method chaining." type="\sArray">
            <type by_reference="false">\sArray</type>
          </tag>
        </docblock>
        <argument line="186">
          <name>$num</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="186">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="198" package="Sutra">
        <name>shift</name>
        <full_name>shift</full_name>
        <docblock line="193">
          <description><![CDATA[Shifts the first value off the array and returns it.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="193" name="return" description="The value at the first index of the array." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="208" package="Sutra">
        <name>unshift</name>
        <full_name>unshift</full_name>
        <docblock line="202">
          <description><![CDATA[Puts a new element at the beginning of the array.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="202" name="param" description="Variable to unshift." type="mixed" variable="$var">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="202" name="return" description="The object to allow method chaining." type="\sArray">
            <type by_reference="false">\sArray</type>
          </tag>
        </docblock>
        <argument line="208">
          <name>$var</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="220" package="Sutra">
        <name>merge</name>
        <full_name>merge</full_name>
        <docblock line="213">
          <description><![CDATA[Merges this array with another array or sArray object.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="213" name="param" description="Array to shift with." type="array|\sArray" variable="$array1">
            <type by_reference="false">array</type>
            <type by_reference="false">\sArray</type>
          </tag>
          <tag line="213" name="param" description="Additional arrays." type="array|\sArray" variable="$array1,...">
            <type by_reference="false">array</type>
            <type by_reference="false">\sArray</type>
          </tag>
          <tag line="213" name="return" description="The object to allow method chaining." type="\sArray">
            <type by_reference="false">\sArray</type>
          </tag>
        </docblock>
        <argument line="220">
          <name>$array1</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="246" package="Sutra">
        <name>walk</name>
        <full_name>walk</full_name>
        <docblock line="235">
          <description><![CDATA[Applies a user-defined function to each element of this object.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="235" name="param" description="Callback function. The callback takes two parameters: the value of the key, and the key second. If the value must be changed, then it should be specified as a reference." type="string|array" variable="$func">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="235" name="param" description="If specified, this will be passed to the callback as the third parameter." type="mixed" variable="$user_data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="235" name="return" description="The object to allow method chaining." type="\sArray">
            <type by_reference="false">\sArray</type>
          </tag>
          <tag line="235" name="SuppressWarnings" description="(PHPMD.UnusedLocalVariable)"/>
        </docblock>
        <argument line="246">
          <name>$func</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="246">
          <name>$user_data</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="266" package="Sutra">
        <name>isArrayLike</name>
        <full_name>isArrayLike</full_name>
        <docblock line="256">
          <description><![CDATA[Checks if value is an array or is array-like (implementing the correct
  interfaces).]]></description>
          <long-description><![CDATA[<p>To be array-like, a class must implement both ArrayAccess and
  IteratorAggregate. Optionally, it can implement the Countable interface.</p>]]></long-description>
          <tag line="256" name="param" description="Value to check." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="256" name="return" description="If the value is an array or is array-like." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="266">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="295" package="Sutra">
        <name>walkRecursiveCallback</name>
        <full_name>walkRecursiveCallback</full_name>
        <docblock line="286">
          <description><![CDATA[Callback used with walkRecursive.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="286" name="param" description="Object instance." type="\sArray" variable="$instance">
            <type by_reference="false">\sArray</type>
          </tag>
          <tag line="286" name="param" description="Mixed variable, checked if is array-like." type="mixed" variable="$array">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="286" name="param" description="Function to call on each item." type="string" variable="$func">
            <type by_reference="false">string</type>
          </tag>
          <tag line="286" name="param" description="User data to add as third argument to callback." type="mixed" variable="$user_data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="286" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="295">
          <name>$instance</name>
          <default><![CDATA[]]></default>
          <type>\sArray</type>
        </argument>
        <argument line="295">
          <name>$array</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="295">
          <name>$func</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="295">
          <name>$user_data</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="321" package="Sutra">
        <name>walkRecursive</name>
        <full_name>walkRecursive</full_name>
        <docblock line="310">
          <description><![CDATA[Applies a user-defined function to each element of this object.]]></description>
          <long-description><![CDATA[<p>This
  method will recurse into deeper arrays. Any key sets will be ignored.</p>]]></long-description>
          <tag line="310" name="param" description="Callback function. The callback takes two parameters: the value of the key, and the key second. If the value must be changed, then it should be specified as a reference." type="string|array" variable="$func">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="310" name="param" description="If specified, this will be passed to the callback as the third parameter." type="mixed" variable="$user_data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="310" name="return" description="The object to allow method chaining." type="\sArray">
            <type by_reference="false">\sArray</type>
          </tag>
        </docblock>
        <argument line="321">
          <name>$func</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="321">
          <name>$user_data</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="337" package="Sutra">
        <name>sort</name>
        <full_name>sort</full_name>
        <docblock line="330">
          <description><![CDATA[Sorts the elements of the array.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="330" name="param" description="Flags for sorting." type="integer" variable="$flags">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="330" name="return" description="The object to allow method chaining." type="\sArray">
            <type by_reference="false">\sArray</type>
          </tag>
          <tag line="330" name="see" description="\global\sort()" refers="\global\sort()"/>
        </docblock>
        <argument line="337">
          <name>$flags</name>
          <default><![CDATA[SORT_STRING]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="349" package="Sutra">
        <name>reverseSort</name>
        <full_name>reverseSort</full_name>
        <docblock line="342">
          <description><![CDATA[Sorts the elements of the array reversed.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="342" name="param" description="Flags for sorting." type="integer" variable="$flags">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="342" name="return" description="The object to allow method chaining." type="\sArray">
            <type by_reference="false">\sArray</type>
          </tag>
          <tag line="342" name="see" description="\global\rsort()" refers="\global\rsort()"/>
        </docblock>
        <argument line="349">
          <name>$flags</name>
          <default><![CDATA[SORT_STRING]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="361" package="Sutra">
        <name>convertToStrings</name>
        <full_name>convertToStrings</full_name>
        <docblock line="355">
          <description><![CDATA[Recursively converts an array to an array of strings.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="355" name="param" description="Array or array-like object." type="array|\sArray" variable="$values">
            <type by_reference="false">array</type>
            <type by_reference="false">\sArray</type>
          </tag>
          <tag line="355" name="return" description="Array of strings." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="361">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="383" package="Sutra">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="374">
          <description><![CDATA[Implements __toString().]]></description>
          <long-description><![CDATA[<p>Like JavaScript, returns the elements separated
  by a comma. Internal arrays and array-like objects are also handled, but
  are not separated by any symbol (like JavaScript).</p>]]></long-description>
          <tag line="374" name="internal" description=""/>
          <tag line="374" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="393" package="Sutra">
        <name>printJSON</name>
        <full_name>printJSON</full_name>
        <docblock line="388">
          <description><![CDATA[Prints the JSON-encoded array.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="388" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="402" package="Sutra">
        <name>toJSON</name>
        <full_name>toJSON</full_name>
        <docblock line="397">
          <description><![CDATA[Returns the JSON-encoded array.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="397" name="return" description="JSON string." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="415" package="Sutra">
        <name>search</name>
        <full_name>search</full_name>
        <docblock line="406">
          <description><![CDATA[Searches the array for a given value and returns the corresponding key if
  successful.]]></description>
          <long-description><![CDATA[<p>Can return boolean FALSE.</p>]]></long-description>
          <tag line="406" name="param" description="Value to search for." type="mixed" variable="$needle">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="406" name="param" description="If the value should be identical." type="boolean" variable="$strict">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="406" name="return" description="If the key is found, a string will be returned.&#10;  Otherwise boolean FALSE will be returned." type="boolean|string">
            <type by_reference="false">boolean</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="415">
          <name>$needle</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="415">
          <name>$strict</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="425" package="Sutra">
        <name>rand</name>
        <full_name>rand</full_name>
        <docblock line="419">
          <description><![CDATA[Picks one or more random keys.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="419" name="param" description="Number of items to get." type="integer" variable="$num_req">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="419" name="return" description="Array of numeric keys." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="425">
          <name>$num_req</name>
          <default><![CDATA[1]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="443" package="Sutra">
        <name>diff</name>
        <full_name>diff</full_name>
        <docblock line="435">
          <description><![CDATA[Compares this object's data with associative arrays.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="435" name="param" description="Array or array-like object." type="array|\sArray" variable="$array1">
            <type by_reference="false">array</type>
            <type by_reference="false">\sArray</type>
          </tag>
          <tag line="435" name="param" description="" type="array|\sArray" variable="$array1,...">
            <type by_reference="false">array</type>
            <type by_reference="false">\sArray</type>
          </tag>
          <tag line="435" name="return" description="Array containing all the entries from $array1 that are&#10;  not present in any of the other arrays." type="\sArray">
            <type by_reference="false">\sArray</type>
          </tag>
        </docblock>
        <argument line="443">
          <name>$array1</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="462" package="Sutra">
        <name>reverse</name>
        <full_name>reverse</full_name>
        <docblock line="457">
          <description><![CDATA[Returns a copy of this array reversed.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="457" name="return" description="The array, reversed." type="\sArray">
            <type by_reference="false">\sArray</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="480" package="Sutra">
        <name>slice</name>
        <full_name>slice</full_name>
        <docblock line="466">
          <description><![CDATA[Extract a slice of the array.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="466" name="param" description="If offset is non-negative, the sequence will start at that offset in the array. If offset is negative, the sequence will start that far from the end of the array." type="integer" variable="$offset">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="466" name="param" description="If length is given and is positive, then the sequence will have up to that many elements in it. If the array is shorter than the length, then only the available array elements will be present. If length is given and is negative then the sequence will stop that many elements from the end of the array. If it is omitted, then the sequence will have everything from offset up until the end of the array." type="integer" variable="$length">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="466" name="return" description="Array slice." type="\sArray">
            <type by_reference="false">\sArray</type>
          </tag>
        </docblock>
        <argument line="480">
          <name>$offset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="480">
          <name>$length</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="493" package="Sutra">
        <name>filter</name>
        <full_name>filter</full_name>
        <docblock line="484">
          <description><![CDATA[Calls a callback on each item in the object.]]></description>
          <long-description><![CDATA[<p>If the callback returns TRUE,
  then the value will be returned in the resulting sArray instance of this
  method.</p>]]></long-description>
          <tag line="484" name="param" description="Callback to call on each key." type="string" variable="$cb">
            <type by_reference="false">string</type>
          </tag>
          <tag line="484" name="return" description="New filtered sArray." type="\sArray">
            <type by_reference="false">\sArray</type>
          </tag>
          <tag line="484" name="see" description="\global\array_filter()" refers="\global\array_filter()"/>
        </docblock>
        <argument line="493">
          <name>$cb</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="504" package="Sutra">
        <name>map</name>
        <full_name>map</full_name>
        <docblock line="497">
          <description><![CDATA[Applies the callback to the elements of this array.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="497" name="param" description="Callback to use." type="string" variable="$cb">
            <type by_reference="false">string</type>
          </tag>
          <tag line="497" name="return" description="" type="\sArray">
            <type by_reference="false">\sArray</type>
          </tag>
          <tag line="497" name="see" description="\global\array_map()" refers="\global\array_map()"/>
        </docblock>
        <argument line="504">
          <name>$cb</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="517" package="Sutra">
        <name>pad</name>
        <full_name>pad</full_name>
        <docblock line="508">
          <description><![CDATA[Pad array to the specified length with a value.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="508" name="param" description="New size of the array." type="integer" variable="$pad_size">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="508" name="param" description="Value to pad if the array is less than $pad_size." type="mixed" variable="$pad_value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="508" name="return" description="Returns a copy of the input padded to size specified by&#10;  $pad_size with value $pad_value." type="\sArray">
            <type by_reference="false">\sArray</type>
          </tag>
          <tag line="508" name="see" description="\global\array_pad()" refers="\global\array_pad()"/>
        </docblock>
        <argument line="517">
          <name>$pad_size</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="517">
          <name>$pad_value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="528" package="Sutra">
        <name>unique</name>
        <full_name>unique</full_name>
        <docblock line="521">
          <description><![CDATA[Removes duplicate values from the array.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="521" name="param" description="One of the SORT_* constants." type="integer" variable="$sort_flags">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="521" name="return" description="Copy of this array with duplicate values removed." type="\sArray">
            <type by_reference="false">\sArray</type>
          </tag>
          <tag line="521" name="see" description="\global\array_unique" refers="\global\array_unique"/>
        </docblock>
        <argument line="528">
          <name>$sort_flags</name>
          <default><![CDATA[SORT_STRING]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="537" package="Sutra">
        <name>values</name>
        <full_name>values</full_name>
        <docblock line="532">
          <description><![CDATA[Returns the values of this array.]]></description>
          <long-description><![CDATA[<p>Alias to getData().</p>]]></long-description>
          <tag line="532" name="return" description="Array of data." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="546" package="Sutra">
        <name>flip</name>
        <full_name>flip</full_name>
        <docblock line="541">
          <description><![CDATA[Returns an sObject instance with the indexes of this array being the
  values and the values becoming the keys.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="541" name="return" description="" type="\sObject">
            <type by_reference="false">\sObject</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file sutra/classes/sArray.php</error>
      <notice line="22" code="50013">Parameter $arg,... could not be found in __construct()</notice>
      <notice line="213" code="50013">Parameter $array1,... could not be found in merge()</notice>
      <notice line="435" code="50013">Parameter $array1,... could not be found in diff()</notice>
    </parse_markers>
  </file>
  <file path="sutra/classes/sAuthorization.php" hash="b04fc095da419351fc53793e59cd7a58" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="14" package="Sutra">
      <extends>\fAuthorization</extends>
      <name>sAuthorization</name>
      <full_name>\sAuthorization</full_name>
      <docblock line="2">
        <description><![CDATA[Allows defining and checking user authentication.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
        <tag line="2" name="version" description="1.2"/>
      </docblock>
      <constant namespace="global" line="15" package="Sutra">
        <name>requireNotLoggedIn</name>
        <full_name>requireNotLoggedIn</full_name>
        <value><![CDATA['sAuthorization::requireNotLoggedIn']]></value>
      </constant>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="23" package="Sutra">
        <name>requireNotLoggedIn</name>
        <full_name>requireNotLoggedIn</full_name>
        <docblock line="17">
          <description><![CDATA[Require that a user not be logged in.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="17" name="param" description="Where to redirect if the user is logged in." type="string" variable="$redirect">
            <type by_reference="false">string</type>
          </tag>
          <tag line="17" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="23">
          <name>$redirect</name>
          <default><![CDATA['/']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="35" package="Sutra">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="30">
          <description><![CDATA[Forces use as a static class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="30" name="return" description="" type="\sAuthorization">
            <type by_reference="false">\sAuthorization</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file sutra/classes/sAuthorization.php</error>
    </parse_markers>
  </file>
  <file path="sutra/classes/sRequest.php" hash="4f8a569b2a13f87ad60d031be8fe6202" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="14" package="Sutra">
      <extends>\fRequest</extends>
      <name>sRequest</name>
      <full_name>\sRequest</full_name>
      <docblock line="2">
        <description><![CDATA[Manages POST requests.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2011 Poluza."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@poluza.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
        <tag line="2" name="version" description="1.2"/>
      </docblock>
      <constant namespace="global" line="15" package="Sutra">
        <name>checkCSRFToken</name>
        <full_name>checkCSRFToken</full_name>
        <value><![CDATA['sRequest::checkCSRFToken']]></value>
      </constant>
      <constant namespace="global" line="16" package="Sutra">
        <name>savePostValues</name>
        <full_name>savePostValues</full_name>
        <value><![CDATA['sRequest::savePostValues']]></value>
      </constant>
      <constant namespace="global" line="17" package="Sutra">
        <name>setPostValues</name>
        <full_name>setPostValues</full_name>
        <value><![CDATA['sRequest::setPostValues']]></value>
      </constant>
      <constant namespace="global" line="18" package="Sutra">
        <name>retrievePostValues</name>
        <full_name>retrievePostValues</full_name>
        <value><![CDATA['sRequest::setPostValues']]></value>
      </constant>
      <constant namespace="global" line="19" package="Sutra">
        <name>deletePostValues</name>
        <full_name>deletePostValues</full_name>
        <value><![CDATA['sRequest::deletePostValues']]></value>
      </constant>
      <constant namespace="global" line="27" package="Sutra">
        <name>LAST_POST_SESSION_KEY_PREFIX</name>
        <full_name>LAST_POST_SESSION_KEY_PREFIX</full_name>
        <value><![CDATA['sPostRequest::last_post']]></value>
        <docblock line="21">
          <description><![CDATA[The key in session that holds the last POST values.]]></description>
          <long-description><![CDATA[<p>The last POST values
  are only stored when a validation error occurs.</p>]]></long-description>
          <tag line="21" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="37" package="Sutra">
        <name>checkCSRFToken</name>
        <full_name>checkCSRFToken</full_name>
        <docblock line="28">
          <description><![CDATA[Non-throwing check of a CSRF token.]]></description>
          <long-description><![CDATA[<p>Compatible with fValidation as a
  callback but the URL must be the same as the current page.</p>]]></long-description>
          <tag line="28" name="param" description="CSRF token string." type="string" variable="$csrf">
            <type by_reference="false">string</type>
          </tag>
          <tag line="28" name="param" description="URL to use." type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="28" name="return" description="If the CSRF token is valid for the URL." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="28" name="SuppressWarnings" description="(PHPMD.UnusedLocalVariable)"/>
        </docblock>
        <argument line="37">
          <name>$csrf</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="37">
          <name>$url</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="53" package="Sutra">
        <name>savePostValues</name>
        <full_name>savePostValues</full_name>
        <docblock line="46">
          <description><![CDATA[Saves the POST values to session.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="46" name="param" description="Unique ID of the values." type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="46" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="46" name="SuppressWarnings" description="(PHPMD.UnusedLocalVariable)"/>
        </docblock>
        <argument line="53">
          <name>$id</name>
          <default><![CDATA['default']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="67" package="Sutra">
        <name>setPostValues</name>
        <full_name>setPostValues</full_name>
        <docblock line="61">
          <description><![CDATA[Restores the last POST values for a specified ID to $_GET or $_POST.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="61" name="param" description="Unique ID of the values." type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="61" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="67">
          <name>$id</name>
          <default><![CDATA['default']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="80" package="Sutra">
        <name>retrievePostValues</name>
        <full_name>retrievePostValues</full_name>
        <docblock line="74">
          <description><![CDATA[Gets the saved POST values for a unique ID.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="74" name="param" description="Unique ID of the values." type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="74" name="return" description="Array of values. Can return an empty array." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="80">
          <name>$id</name>
          <default><![CDATA['default']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="94" package="Sutra">
        <name>deletePostValues</name>
        <full_name>deletePostValues</full_name>
        <docblock line="88">
          <description><![CDATA[Deletes all POST values stored for a particular ID.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="88" name="param" description="Unique ID of the values." type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="88" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="94">
          <name>$id</name>
          <default><![CDATA['default']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="103" package="Sutra">
        <name>getMethod</name>
        <full_name>getMethod</full_name>
        <docblock line="98">
          <description><![CDATA[Get the request method.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="98" name="return" description="GET, DELETE, PUT, HEAD, or POST. Always upper-case." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="112" package="Sutra">
        <name>getContentType</name>
        <full_name>getContentType</full_name>
        <docblock line="107">
          <description><![CDATA[Get the content type of the data sent.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="107" name="return" description="The mimetype. This is always in lower-case." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="123" package="Sutra">
        <name>isInternetExplorer</name>
        <full_name>isInternetExplorer</full_name>
        <docblock line="116">
          <description><![CDATA[Checks if the browser is Internet Explorer.]]></description>
          <long-description><![CDATA[<p>This is solely based on the
  user-agent and is to be used as a last resort.</p>]]></long-description>
          <tag line="116" name="param" description="Version number to check for." type="string|array" variable="$version">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="116" name="return" description="If the browser is IE." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="123">
          <name>$version</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="144" package="Sutra">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="139">
          <description><![CDATA[Forces use as a static class.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="139" name="return" description="" type="\sRequest">
            <type by_reference="false">\sRequest</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file sutra/classes/sRequest.php</error>
    </parse_markers>
  </file>
  <file path="sutra/classes/sLoader.php" hash="de48df6b2e298b9a55eef2de2ec5bc7f" package="Sutra">
    <include line="118" type="Require" package="Sutra">
      <name/>
    </include>
    <include line="164" type="Require" package="Sutra">
      <name/>
    </include>
    <function namespace="global" line="80" package="Sutra">
      <name>sHTTPRequest</name>
      <full_name>\sHTTPRequest</full_name>
      <argument line="80">
        <name>$url</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="80">
        <name>$method</name>
        <default><![CDATA['GET']]></default>
        <type/>
      </argument>
      <argument line="80">
        <name>$timeout</name>
        <default><![CDATA[NULL]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="84" package="Sutra">
      <name>sImage</name>
      <full_name>\sImage</full_name>
      <argument line="84">
        <name>$file_path</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="84">
        <name>$skip_checks</name>
        <default><![CDATA[FALSE]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="88" package="Sutra">
      <name>sNumber</name>
      <full_name>\sNumber</full_name>
      <argument line="88">
        <name>$value</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="88">
        <name>$scale</name>
        <default><![CDATA[NULL]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="92" package="Sutra">
      <name>sObject</name>
      <full_name>\sObject</full_name>
      <argument line="92">
        <name>$arg</name>
        <default><![CDATA[]]></default>
        <type>array</type>
      </argument>
    </function>
    <function namespace="global" line="97" package="Sutra">
      <name>sProcess</name>
      <full_name>\sProcess</full_name>
      <argument line="97">
        <name>$name</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="101" package="Sutra">
      <name>sTimestamp</name>
      <full_name>\sTimestamp</full_name>
      <argument line="101">
        <name>$datetime</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="101">
        <name>$timezone</name>
        <default><![CDATA[NULL]]></default>
        <type/>
      </argument>
    </function>
    <class final="false" abstract="false" namespace="global" line="14" package="Sutra">
      <extends>\fLoader</extends>
      <name>sLoader</name>
      <full_name>\sLoader</full_name>
      <docblock line="2">
        <description><![CDATA[Manages loading of classes.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
        <tag line="2" name="version" description="1.2"/>
      </docblock>
      <constant namespace="global" line="15" package="Sutra">
        <name>best</name>
        <full_name>best</full_name>
        <value><![CDATA['sLoader::best']]></value>
      </constant>
      <constant namespace="global" line="16" package="Sutra">
        <name>eagar</name>
        <full_name>eagar</full_name>
        <value><![CDATA['sLoader::eagar']]></value>
      </constant>
      <constant namespace="global" line="17" package="Sutra">
        <name>lazy</name>
        <full_name>lazy</full_name>
        <value><![CDATA['sLoader::lazy']]></value>
      </constant>
      <property final="false" static="true" visibility="private" line="24" namespace="global" package="Sutra">
        <name>$path</name>
        <default><![CDATA['']]></default>
        <docblock line="19">
          <description><![CDATA[Path where libraries are installed.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="19" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="31" namespace="global" package="Sutra">
        <name>$classes</name>
        <default><![CDATA[array('sArray', 'sAuthorization', 'sCache', 'sCore', 'sCRUDForm', 'sGrammar', 'sHTML', 'sHTTPRequest', 'sImage', 'sJSONP', 'sNumber', 'sObject', 'sORMJSON', 'sProcess', 'sProcessException', 'sRequest', 'sResponse', 'sString', 'sTemplate', 'sTimestamp')]]></default>
        <docblock line="26">
          <description><![CDATA[All the Sutra classes.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="60" package="Sutra">
        <name>best</name>
        <full_name>best</full_name>
        <docblock line="54">
          <description><![CDATA[Override best() method.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="54" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="54" name="see" description="\global\sLoader::eagar()" refers="\global\sLoader::eagar()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="75" package="Sutra">
        <name>createConstructorFunctions</name>
        <full_name>createConstructorFunctions</full_name>
        <docblock line="68">
          <description><![CDATA[Creates constructor functions.]]></description>
          <long-description><![CDATA[<p>This makes it possible to write:</p>

<pre><code>new sProcess('node myscript')->execute();</code></pre>]]></long-description>
          <tag line="68" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="111" package="Sutra">
        <name>eagar</name>
        <full_name>eagar</full_name>
        <docblock line="106">
          <description><![CDATA[Override eager() method to load Sutra classes after Flourish's.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="106" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="127" package="Sutra">
        <name>setPath</name>
        <full_name>setPath</full_name>
        <docblock line="122">
          <description><![CDATA[Determines where Sutra is installed.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="122" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="138" package="Sutra">
        <name>lazy</name>
        <full_name>lazy</full_name>
        <docblock line="133">
          <description><![CDATA[Registers a class auto-loader to load Sutra classes.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="133" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="155" package="Sutra">
        <name>autoload</name>
        <full_name>autoload</full_name>
        <docblock line="147">
          <description><![CDATA[Tries to load a Sutra class.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="147" name="internal" description=""/>
          <tag line="147" name="param" description="The class to load." type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="147" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="155">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="173" package="Sutra">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="168">
          <description><![CDATA[Forces use as a static class.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="168" name="return" description="" type="\sLoader">
            <type by_reference="false">\sLoader</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file sutra/classes/sLoader.php</error>
      <error line="80" code="50009">No DocBlock was found for function \sHTTPRequest()</error>
      <error line="84" code="50009">No DocBlock was found for function \sImage()</error>
      <error line="88" code="50009">No DocBlock was found for function \sNumber()</error>
      <error line="92" code="50009">No DocBlock was found for function \sObject()</error>
      <error line="97" code="50009">No DocBlock was found for function \sProcess()</error>
      <error line="101" code="50009">No DocBlock was found for function \sTimestamp()</error>
    </parse_markers>
  </file>
  <file path="sutra/classes/sCore.php" hash="2187ac4215d5b87853e34f77051f2300" package="Sutra">
    <class final="true" abstract="true" namespace="global" line="15" package="Sutra">
      <extends>\fCore</extends>
      <name>sCore</name>
      <full_name>\sCore</full_name>
      <docblock line="2">
        <description><![CDATA[This class is optional to use.]]></description>
        <long-description><![CDATA[<p>It is generally for use as the core class of
  the site.</p>]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
        <tag line="2" name="version" description="1.2"/>
      </docblock>
      <constant namespace="global" line="16" package="Sutra">
        <name>main</name>
        <full_name>main</full_name>
        <value><![CDATA['sCore::main']]></value>
      </constant>
      <constant namespace="global" line="17" package="Sutra">
        <name>getDatabase</name>
        <full_name>getDatabase</full_name>
        <value><![CDATA['sCore::getDatabase']]></value>
      </constant>
      <constant namespace="global" line="18" package="Sutra">
        <name>getCache</name>
        <full_name>getCache</full_name>
        <value><![CDATA['sCore::getCache']]></value>
      </constant>
      <property final="false" static="true" visibility="protected" line="25" namespace="global" package="Sutra">
        <name>$cache</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="20">
          <description><![CDATA[The cache.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="20" name="var" description="" type="\sCache|\fCache">
            <type by_reference="false">\sCache</type>
            <type by_reference="false">\fCache</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="32" namespace="global" package="Sutra">
        <name>$db</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="27">
          <description><![CDATA[The fDatabase instance.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="27" name="var" description="" type="\fDatabase">
            <type by_reference="false">\fDatabase</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="39" package="Sutra">
        <name>getCache</name>
        <full_name>getCache</full_name>
        <docblock line="34">
          <description><![CDATA[Get the site cache.]]></description>
          <long-description><![CDATA[<p>Can use sCache or fCache. They are both compatible.</p>]]></long-description>
          <tag line="34" name="return" description="The fCache/sCache instance." type="\sCache|\fCache">
            <type by_reference="false">\sCache</type>
            <type by_reference="false">\fCache</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="54" package="Sutra">
        <name>getDatabase</name>
        <full_name>getDatabase</full_name>
        <docblock line="43">
          <description><![CDATA[Get the site database instance.]]></description>
          <long-description><![CDATA[<p>This is useful for getting database
  information or using SQL queries with methods such as
  translatedExcecute.</p>

<p>This method can also be used to configure fORM if that is desired.</p>]]></long-description>
          <tag line="43" name="return" description="The fDatabase instance." type="\fDatabase">
            <type by_reference="false">\fDatabase</type>
          </tag>
          <tag line="43" name="see" description="\global\fDatabase::translatedExcecute()" refers="\global\fDatabase::translatedExcecute()"/>
          <tag line="43" name="see" description="\global\fORMDatabase::attach()" refers="\global\fORMDatabase::attach()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="65" package="Sutra">
        <name>configureSession</name>
        <full_name>configureSession</full_name>
        <docblock line="58">
          <description><![CDATA[Configures session settings.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="58" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="58" name="see" description="\global\fSession::setLength()" refers="\global\fSession::setLength()"/>
          <tag line="58" name="see" description="\global\fSession::setBackend()" refers="\global\fSession::setBackend()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="78" package="Sutra">
        <name>configureAuthorization</name>
        <full_name>configureAuthorization</full_name>
        <docblock line="71">
          <description><![CDATA[Configures authorisation.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="71" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="71" name="see" description="\global\fAuthorization::setAuthLevels()" refers="\global\fAuthorization::setAuthLevels()"/>
          <tag line="71" name="see" description="\global\fAuthorization::setLoginPage()" refers="\global\fAuthorization::setLoginPage()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="98" package="Sutra">
        <name>main</name>
        <full_name>main</full_name>
        <docblock line="83">
          <description><![CDATA[Example entry point.]]></description>
          <long-description><![CDATA[<p>This would be called from index.php or similar file.</p>

<p>Calls to set up the database, configure session, configure authorisation,
  and set up the exception handler.</p>

<p>After these calls, it's expected that the template (sTemplate) will be
  set up and that a router (such as Moor) will be used to continue the
  request.</p>]]></long-description>
          <tag line="83" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="83" name="see" description="\global\sCore::getDatabase()" refers="\global\sCore::getDatabase()"/>
          <tag line="83" name="see" description="\global\sCore::configureSession()" refers="\global\sCore::configureSession()"/>
          <tag line="83" name="see" description="\global\sCore::configureAuthorization()" refers="\global\sCore::configureAuthorization()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="111" package="Sutra">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="106">
          <description><![CDATA[Forces use as a static class.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="106" name="return" description="" type="\sCore">
            <type by_reference="false">\sCore</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file sutra/classes/sCore.php</error>
    </parse_markers>
  </file>
  <file path="sutra/classes/sORMJSON.php" hash="cd421d9b5d746a9dd5c4c494873a111c" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="14" package="Sutra">
      <extends>\fORMJSON</extends>
      <name>sORMJSON</name>
      <full_name>\sORMJSON</full_name>
      <docblock line="2">
        <description><![CDATA[Extension to fORMJSON.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
        <tag line="2" name="version" description="1.2"/>
      </docblock>
      <constant namespace="global" line="15" package="Sutra">
        <name>configureJSONSerializedColumn</name>
        <full_name>configureJSONSerializedColumn</full_name>
        <value><![CDATA['sORMJSON::configureJSONSerializedColumn']]></value>
      </constant>
      <property final="false" static="true" visibility="private" line="22" namespace="global" package="Sutra">
        <name>$json_columns</name>
        <default><![CDATA[array()]]></default>
        <docblock line="17">
          <description><![CDATA[Columns => class names registered.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="17" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="29" namespace="global" package="Sutra">
        <name>$callbacks_registered</name>
        <default><![CDATA[FALSE]]></default>
        <docblock line="24">
          <description><![CDATA[If the callbacks are registered.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="24" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="43" package="Sutra">
        <name>configureJSONSerializedColumn</name>
        <full_name>configureJSONSerializedColumn</full_name>
        <docblock line="31">
          <description><![CDATA[Configure a column string column (VARCHAR or TEXT) to store a JSON
  serialised object.]]></description>
          <long-description><![CDATA[<p>Conversion to an array and back is transparent. If
  there are validations to perform on these columns when they are in their
  original data type, those callbacks should be registered before calling
  this method.</p>]]></long-description>
          <tag line="31" name="param" description="Class name or instance of the class." type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="31" name="param" description="The column name." type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="31" name="param" description="Force the JSON to be converted to be an array." type="boolean" variable="$force_array">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="31" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="43">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="43">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="43">
          <name>$force_array</name>
          <default><![CDATA[TRUE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="85" package="Sutra">
        <name>JSONToValue</name>
        <full_name>JSONToValue</full_name>
        <docblock line="71">
          <description><![CDATA[Converts the JSON string to the value after getting retrieved from the database.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="71" name="internal" description=""/>
          <tag line="71" name="param" description="The fActiveRecord instance." type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="71" name="param" description="Current values array reference." type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="71" name="param" description="Old values array reference." type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="71" name="param" description="Related records array reference." type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="71" name="param" description="Cache array reference." type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="71" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="71" name="SuppressWarnings" description="(PHPMD.UnusedFormalParameter)"/>
        </docblock>
        <argument line="85">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="85">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="85">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="85">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="85">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="112" package="Sutra">
        <name>valueToJSON</name>
        <full_name>valueToJSON</full_name>
        <docblock line="98">
          <description><![CDATA[Converts the value to a JSON string before validation.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="98" name="internal" description=""/>
          <tag line="98" name="param" description="The fActiveRecord instance." type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="98" name="param" description="Current values array reference." type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="98" name="param" description="Old values array reference." type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="98" name="param" description="Related records array reference." type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="98" name="param" description="Cache array reference." type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="98" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="98" name="SuppressWarnings" description="(PHPMD.UnusedFormalParameter)"/>
        </docblock>
        <argument line="112">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="112">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="112">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="112">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="112">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="131" package="Sutra">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="126">
          <description><![CDATA[Forces use as a static class.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="126" name="return" description="" type="\sORMJSON">
            <type by_reference="false">\sORMJSON</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file sutra/classes/sORMJSON.php</error>
    </parse_markers>
  </file>
  <file path="sutra/classes/sProcessArguments.php" hash="014ec308cdd2b23ecd853bc6dbb0ccbf" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="16" package="Sutra">
      <extends/>
      <name>sProcessArguments</name>
      <full_name>\sProcessArguments</full_name>
      <docblock line="2">
        <description><![CDATA[Process argument handling code.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="internal" description=""/>
        <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
        <tag line="2" name="version" description="1.2"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="17" namespace="global" package="Sutra">
        <name>$program</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="private" line="19" namespace="global" package="Sutra">
        <name>$arguments</name>
        <default><![CDATA[array()]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="26" package="Sutra">
        <name>stripQuotes</name>
        <full_name>stripQuotes</full_name>
        <docblock line="21">
          <description><![CDATA[Strips double and singular surrounding quotes out of all arguments.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="21" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="41" package="Sutra">
        <name>parseNameAndArguments</name>
        <full_name>parseNameAndArguments</full_name>
        <docblock line="35">
          <description><![CDATA[Parses the name and arguments from the arguments given to __construct().]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="35" name="param" description="Arguments passed." type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
          <tag line="35" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="41">
          <name>$arguments</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="77" package="Sutra">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="77">
          <name>$args</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="85" package="Sutra">
        <name>unquote</name>
        <full_name>unquote</full_name>
        <argument line="85">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="85">
          <name>$delimiter</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="95" package="Sutra">
        <name>add</name>
        <full_name>add</full_name>
        <argument line="95">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="95">
          <name>$value</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="95">
          <name>$delimiter</name>
          <default><![CDATA[' ']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="103" package="Sutra">
        <name>makeCommandLine</name>
        <full_name>makeCommandLine</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="120" package="Sutra">
        <name>getArgument</name>
        <full_name>getArgument</full_name>
        <argument line="120">
          <name>$index</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file sutra/classes/sProcessArguments.php</error>
      <error line="17" code="50018">No DocBlock was found for property $program</error>
      <error line="19" code="50018">No DocBlock was found for property $arguments</error>
      <error line="77" code="50010">No DocBlock was found for method __construct()</error>
      <error line="85" code="50010">No DocBlock was found for method unquote()</error>
      <error line="95" code="50010">No DocBlock was found for method add()</error>
      <error line="103" code="50010">No DocBlock was found for method makeCommandLine()</error>
      <error line="120" code="50010">No DocBlock was found for method getArgument()</error>
    </parse_markers>
  </file>
  <file path="sutra/classes/sTimestamp.php" hash="469080ac6e49f9ed681c2d0583eaa94b" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="14" package="Sutra">
      <extends>\fTimestamp</extends>
      <name>sTimestamp</name>
      <full_name>\sTimestamp</full_name>
      <docblock line="2">
        <description><![CDATA[Utility functions for timestamp and time/date/time zone representations.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
        <tag line="2" name="version" description="1.2"/>
      </docblock>
      <constant namespace="global" line="15" package="Sutra">
        <name>formatTimezoneNumber</name>
        <full_name>formatTimezoneNumber</full_name>
        <value><![CDATA['sTimestamp::formatTimezoneNumber']]></value>
      </constant>
      <constant namespace="global" line="24" package="Sutra">
        <name>DATETIME_RFC3339_REGEX</name>
        <full_name>DATETIME_RFC3339_REGEX</full_name>
        <value><![CDATA['/^([1-2][0-9]{3})\-([0-1][0-9])\-([0-3][0-9])(?:\s+)?T([0-2][0-9])\:([0-5][0-9])\:([0-5][0-9](?:\.\d+)?)(?:Z|(?:[\-\+]([0-1][0-9])\:00))?$/']]></value>
        <docblock line="17">
          <description><![CDATA[Loose regular expression to match timestamp as defined by W3C for
  HTML 5 date/datetime fields.]]></description>
          <long-description><![CDATA[<p>The main difference is allowing for
  a space between the date and the literal 'T'.</p>]]></long-description>
          <tag line="17" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="38" package="Sutra">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="26">
          <description><![CDATA[Overrides __construct() and tries to validate the string as an RFC3339
  date-time string.]]></description>
          <long-description><![CDATA[<p>If that fails, the parent constructor is called.</p>]]></long-description>
          <tag line="26" name="param" description="The date/time to represent, NULL is interpreted as now." type="\fTimestamp|object|string|integer" variable="$datetime">
            <type by_reference="false">\fTimestamp</type>
            <type by_reference="false">object</type>
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="26" name="param" description="The timezone for the date/time. This causes the date/time to be interpretted as being in the specified timezone. If not specified, will default to timezone set by ::setDefaultTimezone()." type="string" variable="$timezone">
            <type by_reference="false">string</type>
          </tag>
          <tag line="26" name="return" description="Timestamp object." type="\sTimestamp">
            <type by_reference="false">\sTimestamp</type>
          </tag>
          <tag line="26" name="SuppressWarnings" description="(PHPMD.UnusedLocalVariable)"/>
        </docblock>
        <argument line="38">
          <name>$datetime</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="38">
          <name>$timezone</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="53" package="Sutra">
        <name>formatTimezoneNumber</name>
        <full_name>formatTimezoneNumber</full_name>
        <docblock line="47">
          <description><![CDATA[Get a formatted timezone string such as +08:00 from 8 or -12:00 from -12.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="47" name="param" description="The timezone, can be decimal." type="float" variable="$value">
            <type by_reference="false">float</type>
          </tag>
          <tag line="47" name="return" description="String, such as +08:00." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="53">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="90" package="Sutra">
        <name>convertFromRFC3339</name>
        <full_name>convertFromRFC3339</full_name>
        <docblock line="77">
          <description><![CDATA[Convert an RFC3339 (HTML 5 version) timestamp to UNIX.]]></description>
          <long-description><![CDATA[<p>Timezone is
  ignored.</p>

<p>HTML 5 mandates 2 extra constraints:
- the literal letters T and Z in the date/time syntax must always be uppercase
- the date-fullyear production is instead defined as four or more digits
    representing a number greater than 0</p>]]></long-description>
          <tag line="77" name="param" description="The RFC value, like: 1990-12-31T23:59:60Z or 1996-12-19T16:39:57-08:00." type="string" variable="$rfc">
            <type by_reference="false">string</type>
          </tag>
          <tag line="77" name="return" description="Timestamp object." type="\sTimestamp">
            <type by_reference="false">\sTimestamp</type>
          </tag>
        </docblock>
        <argument line="90">
          <name>$rfc</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file sutra/classes/sTimestamp.php</error>
    </parse_markers>
  </file>
  <file path="sutra/classes/sResponse.php" hash="9b85c3ebe966e5bbc5e9ad50b572db2c" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="14" package="Sutra">
      <extends/>
      <name>sResponse</name>
      <full_name>\sResponse</full_name>
      <docblock line="2">
        <description><![CDATA[Common non-file related HTTP response helper class.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 Poluza."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@poluza.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="https://github.com/tatsh/sutra" link="https://github.com/tatsh/sutra"/>
        <tag line="2" name="version" description="1.3"/>
      </docblock>
      <constant namespace="global" line="15" package="Sutra">
        <name>encode</name>
        <full_name>encode</full_name>
        <value><![CDATA['sResponse::encode']]></value>
      </constant>
      <constant namespace="global" line="16" package="Sutra">
        <name>printData</name>
        <full_name>printData</full_name>
        <value><![CDATA['sResponse::printData']]></value>
      </constant>
      <constant namespace="global" line="17" package="Sutra">
        <name>sendCreatedHeader</name>
        <full_name>sendCreatedHeader</full_name>
        <value><![CDATA['sResponse::sendCreatedHeader']]></value>
      </constant>
      <constant namespace="global" line="18" package="Sutra">
        <name>sendHeader</name>
        <full_name>sendHeader</full_name>
        <value><![CDATA['sResponse::sendHeader']]></value>
      </constant>
      <constant namespace="global" line="19" package="Sutra">
        <name>sendForbiddenHeader</name>
        <full_name>sendForbiddenHeader</full_name>
        <value><![CDATA['sResponse::sendForbiddenHeader']]></value>
      </constant>
      <constant namespace="global" line="20" package="Sutra">
        <name>sendNotAcceptableHeader</name>
        <full_name>sendNotAcceptableHeader</full_name>
        <value><![CDATA['sResponse::sendNotAcceptableHeader']]></value>
      </constant>
      <constant namespace="global" line="21" package="Sutra">
        <name>sendNotFoundHeader</name>
        <full_name>sendNotFoundHeader</full_name>
        <value><![CDATA['sResponse::sendNotFoundHeader']]></value>
      </constant>
      <constant namespace="global" line="22" package="Sutra">
        <name>sendNotModifiedHeader</name>
        <full_name>sendNotModifiedHeader</full_name>
        <value><![CDATA['sResponse::sendNotModifiedHeader']]></value>
      </constant>
      <constant namespace="global" line="23" package="Sutra">
        <name>sendPlainTextResponse</name>
        <full_name>sendPlainTextResponse</full_name>
        <value><![CDATA['sResponse::sendPlainTextResponse']]></value>
      </constant>
      <constant namespace="global" line="24" package="Sutra">
        <name>sendServerErrorHeader</name>
        <full_name>sendServerErrorHeader</full_name>
        <value><![CDATA['sResponse::sendServerErrorHeader']]></value>
      </constant>
      <constant namespace="global" line="25" package="Sutra">
        <name>setEncodeCallback</name>
        <full_name>setEncodeCallback</full_name>
        <value><![CDATA['sResponse::setEncodeCallback']]></value>
      </constant>
      <property final="false" static="true" visibility="private" line="32" namespace="global" package="Sutra">
        <name>$encode_callbacks</name>
        <default><![CDATA[array('application/json' => 'fJSON::encode', 'text/html' => 'fHTML::encode', 'application/x-www-form-urlencoded' => 'http_build_query')]]></default>
        <docblock line="27">
          <description><![CDATA[Encoding callbacks.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="27" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="51" package="Sutra">
        <name>sendNotModifiedHeader</name>
        <full_name>sendNotModifiedHeader</full_name>
        <docblock line="38">
          <description><![CDATA[Send a 304 not modified header, if the content hasn't changed according to
  the headers sent in by the client.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="38" name="param" description="Time the file was last modified (fTimestamp object or UNIX timestamp)." type="\fTimestamp|integer" variable="$last_modified">
            <type by_reference="false">\fTimestamp</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="38" name="param" description="Etag to use for this request." type="string" variable="$etag">
            <type by_reference="false">string</type>
          </tag>
          <tag line="38" name="param" description="Time in seconds to cache for. Default is 2 weeks." type="integer" variable="$cache_time">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="38" name="param" description="Send Vary: Accept-Encoding header. Default is TRUE." type="boolean" variable="$accept_encoding">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="38" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$last_modified</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="51">
          <name>$etag</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="51">
          <name>$cache_time</name>
          <default><![CDATA[1209600]]></default>
          <type/>
        </argument>
        <argument line="51">
          <name>$accept_encoding</name>
          <default><![CDATA[TRUE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="83" package="Sutra">
        <name>encodeKeyedArray</name>
        <full_name>encodeKeyedArray</full_name>
        <docblock line="77">
          <description><![CDATA[Recursively encodes a keyed array to string.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="77" name="param" description="Data to encode." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="77" name="return" description="The encoded data." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="83">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="107" package="Sutra">
        <name>encode</name>
        <full_name>encode</full_name>
        <docblock line="98">
          <description><![CDATA[Encodes data in a specified content type.]]></description>
          <long-description><![CDATA[<p>Default is
  application/x-www-form-urlencoded.</p>]]></long-description>
          <tag line="98" name="param" description="Data to encode. Note that if the callback can only handle strings and the data is of type array, 'Array' will be printed." type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="98" name="param" description="Content type to encode to." type="string" variable="$content_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="98" name="return" description="The encoded data." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="107">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="107">
          <name>$content_type</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="128" package="Sutra">
        <name>printData</name>
        <full_name>printData</full_name>
        <docblock line="120">
          <description><![CDATA[Prints the data and sends the appropriate Content-Type header.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="120" name="param" description="Data to print." type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="120" name="param" description="Content type of the data. This is only the mimetype. It should NOT have other parts such as 'charset=utf-8'." type="string" variable="$content_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="120" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="128">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="128">
          <name>$content_type</name>
          <default><![CDATA['application/x-www-form-urlencoded']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="140" package="Sutra">
        <name>setEncodeCallback</name>
        <full_name>setEncodeCallback</full_name>
        <docblock line="133">
          <description><![CDATA[Set the encoding callback for a particular content type.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="133" name="param" description="Content type such as 'application/xml'." type="string" variable="$content_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="133" name="param" description="Callback." type="string|array" variable="$cb">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="133" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="140">
          <name>$content_type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="140">
          <name>$cb</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="151" package="Sutra">
        <name>sendPlainTextResponse</name>
        <full_name>sendPlainTextResponse</full_name>
        <docblock line="144">
          <description><![CDATA[Send a plain text response.]]></description>
          <long-description><![CDATA[<p>Accepts variable arguments.</p>]]></long-description>
          <tag line="144" name="param" description="Text to send." type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="144" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="144" name="see" description="\global\fText::compose()" refers="\global\fText::compose()"/>
        </docblock>
        <argument line="151">
          <name>$text</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="162" package="Sutra">
        <name>sendForbiddenHeader</name>
        <full_name>sendForbiddenHeader</full_name>
        <docblock line="157">
          <description><![CDATA[Sends a 403 restricted content header.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="157" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="173" package="Sutra">
        <name>sendHeader</name>
        <full_name>sendHeader</full_name>
        <docblock line="166">
          <description><![CDATA[Sends a custom header.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="166" name="param" description="Header name." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="166" name="param" description="Value." type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="166" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="173">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="173">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="182" package="Sutra">
        <name>sendCreatedHeader</name>
        <full_name>sendCreatedHeader</full_name>
        <docblock line="177">
          <description><![CDATA[Sends a 201 created HTTP header.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="177" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="192" package="Sutra">
        <name>sendNotAcceptableHeader</name>
        <full_name>sendNotAcceptableHeader</full_name>
        <docblock line="186">
          <description><![CDATA[Sends a 406 not acceptable header.]]></description>
          <long-description><![CDATA[<p>This is for when the client sends an
  Accept header of types none of which can be satisfied by the server.</p>]]></long-description>
          <tag line="186" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="201" package="Sutra">
        <name>sendNotFoundHeader</name>
        <full_name>sendNotFoundHeader</full_name>
        <docblock line="196">
          <description><![CDATA[Sends a 404 not found header.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="196" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="210" package="Sutra">
        <name>sendServerErrorHeader</name>
        <full_name>sendServerErrorHeader</full_name>
        <docblock line="205">
          <description><![CDATA[Sends a 500 server error header.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="205" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="219" package="Sutra">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="214">
          <description><![CDATA[Forces use as a static class.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="214" name="return" description="" type="\sResponse">
            <type by_reference="false">\sResponse</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file sutra/classes/sResponse.php</error>
    </parse_markers>
  </file>
  <file path="sutra/classes/sTemplate.php" hash="466630f4e4d4e856b7bee857173d85e3" package="Sutra">
    <include line="506" type="Require" package="Sutra">
      <name/>
    </include>
    <include line="509" type="Require" package="Sutra">
      <name/>
    </include>
    <include line="961" type="Require" package="Sutra">
      <name/>
    </include>
    <include line="967" type="Require" package="Sutra">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="14" package="Sutra">
      <extends/>
      <name>sTemplate</name>
      <full_name>\sTemplate</full_name>
      <docblock line="2">
        <description><![CDATA[Manages templating.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
        <tag line="2" name="version" description="1.2"/>
      </docblock>
      <constant namespace="global" line="15" package="Sutra">
        <name>addBodyClass</name>
        <full_name>addBodyClass</full_name>
        <value><![CDATA['sTemplate::addBodyClass']]></value>
      </constant>
      <constant namespace="global" line="16" package="Sutra">
        <name>addCDN</name>
        <full_name>addCDN</full_name>
        <value><![CDATA['sTemplate::addCDN']]></value>
      </constant>
      <constant namespace="global" line="17" package="Sutra">
        <name>addCSSFile</name>
        <full_name>addCSSFile</full_name>
        <value><![CDATA['sTemplate::addCSSFile']]></value>
      </constant>
      <constant namespace="global" line="18" package="Sutra">
        <name>addJavaScriptFile</name>
        <full_name>addJavaScriptFile</full_name>
        <value><![CDATA['sTemplate::addJavaScriptFile']]></value>
      </constant>
      <constant namespace="global" line="19" package="Sutra">
        <name>addMinifiedJavaScriptFile</name>
        <full_name>addMinifiedJavaScriptFile</full_name>
        <value><![CDATA['sTemplate::addMinifiedJavaScriptFile']]></value>
      </constant>
      <constant namespace="global" line="20" package="Sutra">
        <name>buffer</name>
        <full_name>buffer</full_name>
        <value><![CDATA['sTemplate::buffer']]></value>
      </constant>
      <constant namespace="global" line="21" package="Sutra">
        <name>enableQueryStrings</name>
        <full_name>enableQueryStrings</full_name>
        <value><![CDATA['sTemplate::enableQueryStrings']]></value>
      </constant>
      <constant namespace="global" line="22" package="Sutra">
        <name>getACDN</name>
        <full_name>getACDN</full_name>
        <value><![CDATA['sTemplate::getACDN']]></value>
      </constant>
      <constant namespace="global" line="23" package="Sutra">
        <name>getBodyClasses</name>
        <full_name>getBodyClasses</full_name>
        <value><![CDATA['sTemplate::getBodyClasses']]></value>
      </constant>
      <constant namespace="global" line="24" package="Sutra">
        <name>getCDNs</name>
        <full_name>getCDNs</full_name>
        <value><![CDATA['sTemplate::getCDNs']]></value>
      </constant>
      <constant namespace="global" line="25" package="Sutra">
        <name>getCache</name>
        <full_name>getCache</full_name>
        <value><![CDATA['sTemplate::getCache']]></value>
      </constant>
      <constant namespace="global" line="26" package="Sutra">
        <name>getJavaScriptFiles</name>
        <full_name>getJavaScriptFiles</full_name>
        <value><![CDATA['sTemplate::getJavaScriptFiles']]></value>
      </constant>
      <constant namespace="global" line="27" package="Sutra">
        <name>getMode</name>
        <full_name>getMode</full_name>
        <value><![CDATA['sTemplate::getMode']]></value>
      </constant>
      <constant namespace="global" line="28" package="Sutra">
        <name>registerCallback</name>
        <full_name>registerCallback</full_name>
        <value><![CDATA['sTemplate::registerCallback']]></value>
      </constant>
      <constant namespace="global" line="29" package="Sutra">
        <name>removeCDN</name>
        <full_name>removeCDN</full_name>
        <value><![CDATA['sTemplate::removeCDN']]></value>
      </constant>
      <constant namespace="global" line="30" package="Sutra">
        <name>removeCDNs</name>
        <full_name>removeCDNs</full_name>
        <value><![CDATA['sTemplate::removeCDNs']]></value>
      </constant>
      <constant namespace="global" line="31" package="Sutra">
        <name>render</name>
        <full_name>render</full_name>
        <value><![CDATA['sTemplate::render']]></value>
      </constant>
      <constant namespace="global" line="32" package="Sutra">
        <name>setActiveTemplate</name>
        <full_name>setActiveTemplate</full_name>
        <value><![CDATA['sTemplate::setActiveTemplate']]></value>
      </constant>
      <constant namespace="global" line="33" package="Sutra">
        <name>setCDNs</name>
        <full_name>setCDNs</full_name>
        <value><![CDATA['sTemplate::setCDNs']]></value>
      </constant>
      <constant namespace="global" line="34" package="Sutra">
        <name>setCSSMediaOrder</name>
        <full_name>setCSSMediaOrder</full_name>
        <value><![CDATA['sTemplate::setCSSMediaOrder']]></value>
      </constant>
      <constant namespace="global" line="35" package="Sutra">
        <name>setCache</name>
        <full_name>setCache</full_name>
        <value><![CDATA['sTemplate::setCache']]></value>
      </constant>
      <constant namespace="global" line="36" package="Sutra">
        <name>setMinifiedCSSPath</name>
        <full_name>setMinifiedCSSPath</full_name>
        <value><![CDATA['sTemplate::setMinifiedCSSPath']]></value>
      </constant>
      <constant namespace="global" line="37" package="Sutra">
        <name>setMode</name>
        <full_name>setMode</full_name>
        <value><![CDATA['sTemplate::setMode']]></value>
      </constant>
      <constant namespace="global" line="38" package="Sutra">
        <name>setProductionModeTemplatesPath</name>
        <full_name>setProductionModeTemplatesPath</full_name>
        <value><![CDATA['sTemplate::setProductionModeTemplatesPath']]></value>
      </constant>
      <constant namespace="global" line="39" package="Sutra">
        <name>setSiteName</name>
        <full_name>setSiteName</full_name>
        <value><![CDATA['sTemplate::setSiteName']]></value>
      </constant>
      <constant namespace="global" line="40" package="Sutra">
        <name>setSiteSlogan</name>
        <full_name>setSiteSlogan</full_name>
        <value><![CDATA['sTemplate::setSiteSlogan']]></value>
      </constant>
      <constant namespace="global" line="41" package="Sutra">
        <name>setTemplatesPath</name>
        <full_name>setTemplatesPath</full_name>
        <value><![CDATA['sTemplate::setTemplatesPath']]></value>
      </constant>
      <constant namespace="global" line="42" package="Sutra">
        <name>templateExists</name>
        <full_name>templateExists</full_name>
        <value><![CDATA['sTemplate::templateExists']]></value>
      </constant>
      <property final="false" static="true" visibility="protected" line="49" namespace="global" package="Sutra">
        <name>$cache</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="44">
          <description><![CDATA[The sCache instance.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="44" name="var" description="" type="\sCache">
            <type by_reference="false">\sCache</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="57" namespace="global" package="Sutra">
        <name>$template_name</name>
        <default><![CDATA['default']]></default>
        <docblock line="51">
          <description><![CDATA[The template name.]]></description>
          <long-description><![CDATA[<p>Matches directory name in './template'. Defaults to
  'default'.</p>]]></long-description>
          <tag line="51" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="64" namespace="global" package="Sutra">
        <name>$template_fallback</name>
        <default><![CDATA['default']]></default>
        <docblock line="59">
          <description><![CDATA[The fallback template.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="59" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="71" namespace="global" package="Sutra">
        <name>$templates_path</name>
        <default><![CDATA['./template']]></default>
        <docblock line="66">
          <description><![CDATA[The templates path without any ending directory separator (like /).]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="66" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="78" namespace="global" package="Sutra">
        <name>$production_mode_template_path</name>
        <default><![CDATA['./template']]></default>
        <docblock line="73">
          <description><![CDATA[The templates path used when production mode is enabled.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="73" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="85" namespace="global" package="Sutra">
        <name>$javascript_files</name>
        <default><![CDATA[array('head' => array(), 'body' => array())]]></default>
        <docblock line="80">
          <description><![CDATA[The JavaScript files (which appear normally at the bottom of the page).]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="80" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="95" namespace="global" package="Sutra">
        <name>$compiled_javascript_files</name>
        <default><![CDATA[array('head' => array(), 'body' => array())]]></default>
        <docblock line="90">
          <description><![CDATA[The minified/compiled JavaScript files used in production mode.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="90" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="105" namespace="global" package="Sutra">
        <name>$in_production_mode</name>
        <default><![CDATA[FALSE]]></default>
        <docblock line="100">
          <description><![CDATA[Whether or not the site is in production mode or not.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="100" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="112" namespace="global" package="Sutra">
        <name>$body_classes</name>
        <default><![CDATA[array()]]></default>
        <docblock line="107">
          <description><![CDATA[Array of strings of class names to apply to the body element.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="107" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="119" namespace="global" package="Sutra">
        <name>$cdns</name>
        <default><![CDATA[array()]]></default>
        <docblock line="114">
          <description><![CDATA[Array of CDN URL prefixes.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="114" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="128" namespace="global" package="Sutra">
        <name>$query_strings_enabled</name>
        <default><![CDATA[TRUE]]></default>
        <docblock line="121">
          <description><![CDATA[If resources such as CSS and JavaScript while not in production mode
  should be printed with query strings added to prevent caching (in
  particular with IE).]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="121" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="135" namespace="global" package="Sutra">
        <name>$registered_callbacks</name>
        <default><![CDATA[array('*' => array())]]></default>
        <docblock line="130">
          <description><![CDATA[Registered callbacks.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="130" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="142" namespace="global" package="Sutra">
        <name>$css_files</name>
        <default><![CDATA[array('all' => array(), 'screen' => array(), 'print' => array())]]></default>
        <docblock line="137">
          <description><![CDATA[CSS file paths.]]></description>
          <long-description><![CDATA[<p>The keys are the media types.</p>]]></long-description>
          <tag line="137" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="153" namespace="global" package="Sutra">
        <name>$css_media_order</name>
        <default><![CDATA[array('all', 'screen', 'print')]]></default>
        <docblock line="148">
          <description><![CDATA[CSS media order.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="148" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="160" namespace="global" package="Sutra">
        <name>$language</name>
        <default><![CDATA['en']]></default>
        <docblock line="155">
          <description><![CDATA[The language of the page.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="155" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="167" namespace="global" package="Sutra">
        <name>$text_direction</name>
        <default><![CDATA['ltr']]></default>
        <docblock line="162">
          <description><![CDATA[The text direction of the page.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="162" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="174" namespace="global" package="Sutra">
        <name>$site_name</name>
        <default><![CDATA['No Site Name']]></default>
        <docblock line="169">
          <description><![CDATA[The site name.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="169" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="181" namespace="global" package="Sutra">
        <name>$site_slogan</name>
        <default><![CDATA['']]></default>
        <docblock line="176">
          <description><![CDATA[The site slogan.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="176" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="188" namespace="global" package="Sutra">
        <name>$minifed_css_path</name>
        <default><![CDATA['files']]></default>
        <docblock line="183">
          <description><![CDATA[Where minified CSS should be stored.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="183" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="196" package="Sutra">
        <name>setCache</name>
        <full_name>setCache</full_name>
        <docblock line="190">
          <description><![CDATA[Set the sCache instance sTemplate will use.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="190" name="param" description="The cache object." type="\sCache" variable="$cache">
            <type by_reference="false">\sCache</type>
          </tag>
          <tag line="190" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="196">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type>\sCache</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="208" package="Sutra">
        <name>getCache</name>
        <full_name>getCache</full_name>
        <docblock line="200">
          <description><![CDATA[Gets the sCache instance this is using.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="200" name="throws" description="If cache is NULL." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="200" name="return" description="The sCache instance." type="\sCache">
            <type by_reference="false">\sCache</type>
          </tag>
          <tag line="200" name="see" description="\global\sTemplate::setCache()" refers="\global\sTemplate::setCache()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="224" package="Sutra">
        <name>setMinifiedCSSPath</name>
        <full_name>setMinifiedCSSPath</full_name>
        <docblock line="215">
          <description><![CDATA[Set where minified CSS should be stored.]]></description>
          <long-description><![CDATA[<p>This directory will be in the site root.</p>]]></long-description>
          <tag line="215" name="throws" description="If the directory is not writable." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="215" name="param" description="Path in which to store minified CSS. Should not have a leading '/', or './' at the beginning." type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="215" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="224">
          <name>$path</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="240" package="Sutra">
        <name>setSiteSlogan</name>
        <full_name>setSiteSlogan</full_name>
        <docblock line="234">
          <description><![CDATA[Set the site slogan.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="234" name="param" description="Slogan string." type="string" variable="$slogan">
            <type by_reference="false">string</type>
          </tag>
          <tag line="234" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="240">
          <name>$slogan</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="250" package="Sutra">
        <name>setSiteName</name>
        <full_name>setSiteName</full_name>
        <docblock line="244">
          <description><![CDATA[Set the site name.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="244" name="param" description="Name for the site." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="244" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="250">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="269" package="Sutra">
        <name>setMode</name>
        <full_name>setMode</full_name>
        <docblock line="254">
          <description><![CDATA[Set the current mode.]]></description>
          <long-description><![CDATA[<p>In production mode, the site will use minified CSS
  and only minified JavaScript files which are added using
  sTemplate::addMinifiedJavaScriptFile().</p>

<p>In development mode, the site will use the CSS and JavaScript files, and
  will append a query string to each resource to prevent caching by
  default. This can be disabled by calling:
  sTemplate::enableQueryStrings() with FALSE as the first argument.</p>]]></long-description>
          <tag line="254" name="param" description="One of 'development' or 'production'." type="string" variable="$mode">
            <type by_reference="false">string</type>
          </tag>
          <tag line="254" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="254" name="see" description="\global\sTemplate::addMinifiedJavaScriptFile()" refers="\global\sTemplate::addMinifiedJavaScriptFile()"/>
          <tag line="254" name="see" description="\global\sTemplate::enableQueryStrings()" refers="\global\sTemplate::enableQueryStrings()"/>
        </docblock>
        <argument line="269">
          <name>$mode</name>
          <default><![CDATA['development']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="285" package="Sutra">
        <name>getMode</name>
        <full_name>getMode</full_name>
        <docblock line="280">
          <description><![CDATA[Get the current working mode.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="280" name="return" description="One of: 'development', 'production'." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="296" package="Sutra">
        <name>enableQueryStrings</name>
        <full_name>enableQueryStrings</full_name>
        <docblock line="289">
          <description><![CDATA[Enable or disable query strings on resource URLs such as CSS while in
  development mode.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="289" name="param" description="Value to set. TRUE or FALSE." type="boolean" variable="$bool">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="289" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="296">
          <name>$bool</name>
          <default><![CDATA[TRUE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="312" package="Sutra">
        <name>registerCallback</name>
        <full_name>registerCallback</full_name>
        <docblock line="300">
          <description><![CDATA[Register a callback to be called when the template name specified is about
  to be rendered.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="300" name="param" description="Callback. All callbacks must return an array of keys to string values. They must be registered before the template will be used with sTemplate::buffer()." type="callback" variable="$callback">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="300" name="param" description="Template name (without .tpl.php) to listen for." type="string" variable="$template_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="300" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="300" name="see" description="\global\sTemplate::buffer()" refers="\global\sTemplate::buffer()"/>
        </docblock>
        <argument line="312">
          <name>$callback</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="312">
          <name>$template_name</name>
          <default><![CDATA['*']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="322" package="Sutra">
        <name>callCallbacks</name>
        <full_name>callCallbacks</full_name>
        <docblock line="316">
          <description><![CDATA[Calls all the registered callback for * and this template.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="316" name="param" description="Template name." type="string" variable="$template_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="316" name="return" description="Array of key =&gt; value pairs for use in the template." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="322">
          <name>$template_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="348" package="Sutra">
        <name>setTemplatesPath</name>
        <full_name>setTemplatesPath</full_name>
        <docblock line="338">
          <description><![CDATA[Set the templates path.]]></description>
          <long-description><![CDATA[<p>The path is run through fDirectory. If it is not useable, then
  fDirectory::__construct() will throw an fValidationException.</p>]]></long-description>
          <tag line="338" name="param" description="Path without ending separator, such as / or \\." type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="338" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="338" name="see" description="\global\fDirectory::__construct()" refers="\global\fDirectory::__construct()"/>
        </docblock>
        <argument line="348">
          <name>$path</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="361" package="Sutra">
        <name>addJavaScriptFile</name>
        <full_name>addJavaScriptFile</full_name>
        <docblock line="353">
          <description><![CDATA[Add a JavaScript file.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="353" name="param" description="File name. Should be relative to site root or can be full URIs." type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="353" name="param" description="Where the script should go. One of: 'head', 'body'." type="string" variable="$where">
            <type by_reference="false">string</type>
          </tag>
          <tag line="353" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="361">
          <name>$filename</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="361">
          <name>$where</name>
          <default><![CDATA['body']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="381" package="Sutra">
        <name>addMinifiedJavaScriptFile</name>
        <full_name>addMinifiedJavaScriptFile</full_name>
        <docblock line="373">
          <description><![CDATA[Add a minified JavaScript file.]]></description>
          <long-description><![CDATA[<p>Should be relative to site path, or can be
  full URIs. These are only added during production mode.</p>]]></long-description>
          <tag line="373" name="param" description="File name. Example: '/files/themin.min.js'" type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="373" name="param" description="Where the script should go. One of: 'head', 'body'." type="string" variable="$where">
            <type by_reference="false">string</type>
          </tag>
          <tag line="373" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="381">
          <name>$filename</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="381">
          <name>$where</name>
          <default><![CDATA['body']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="401" package="Sutra">
        <name>getJavaScriptFiles</name>
        <full_name>getJavaScriptFiles</full_name>
        <docblock line="393">
          <description><![CDATA[Load/get all JavaScript files in an array.]]></description>
          <long-description><![CDATA[<p>If no argument is specified,
  then all JavaScript file paths will be in the array, with first level
  keys being 'head' and 'body'.</p>]]></long-description>
          <tag line="393" name="param" description="Which to get. One of: 'head', 'body'." type="string" variable="$where">
            <type by_reference="false">string</type>
          </tag>
          <tag line="393" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="401">
          <name>$where</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="423" package="Sutra">
        <name>getTemplatesPath</name>
        <full_name>getTemplatesPath</full_name>
        <docblock line="418">
          <description><![CDATA[Gets the correct templates path.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="418" name="return" description="The path." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="436" package="Sutra">
        <name>addCSSFile</name>
        <full_name>addCSSFile</full_name>
        <docblock line="427">
          <description><![CDATA[Add a CSS file path.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="427" name="param" description="Path to the CSS file. Should be in the site root." type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="427" name="param" description="Media type." type="string" variable="$media">
            <type by_reference="false">string</type>
          </tag>
          <tag line="427" name="param" description="If this CSS file sould be first." type="boolean" variable="$prepend">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="427" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="427" name="see" description="\global\sTemplate::setCSSMediaOrder()" refers="\global\sTemplate::setCSSMediaOrder()"/>
        </docblock>
        <argument line="436">
          <name>$path</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="436">
          <name>$media</name>
          <default><![CDATA['all']]></default>
          <type/>
        </argument>
        <argument line="436">
          <name>$prepend</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="457" package="Sutra">
        <name>setCSSMediaOrder</name>
        <full_name>setCSSMediaOrder</full_name>
        <docblock line="451">
          <description><![CDATA[Set the CSS media type order.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="451" name="param" description="Array of media query strings such as 'screen'." type="array" variable="$order">
            <type by_reference="false">array</type>
          </tag>
          <tag line="451" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="457">
          <name>$order</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="471" package="Sutra">
        <name>setActiveTemplate</name>
        <full_name>setActiveTemplate</full_name>
        <docblock line="461">
          <description><![CDATA[Set the active template.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="461" name="throws" description="If any directory is not found or not&#10;  readable." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="461" name="param" description="String of template name." type="string" variable="$template_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="461" name="param" description="The fallback template." type="string" variable="$fallback_template">
            <type by_reference="false">string</type>
          </tag>
          <tag line="461" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="471">
          <name>$template_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="471">
          <name>$fallback_template</name>
          <default><![CDATA['default']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="496" package="Sutra">
        <name>buffer</name>
        <full_name>buffer</full_name>
        <docblock line="485">
          <description><![CDATA[Buffer a file in for content.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="485" name="param" description="File name to include without extension." type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="485" name="param" description="Array of key =&gt; value pairs, which will be turned into local variables before the template file is included." type="array" variable="$variables">
            <type by_reference="false">array</type>
          </tag>
          <tag line="485" name="throws" description="If the file cannot be found." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="485" name="return" description="The captured content." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="496">
          <name>$filename</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="496">
          <name>$variables</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="526" package="Sutra">
        <name>setProductionModeTemplatesPath</name>
        <full_name>setProductionModeTemplatesPath</full_name>
        <docblock line="519">
          <description><![CDATA[Set the template path used when production mode is enabled.]]></description>
          <long-description><![CDATA[<p>If this is not
  set, the default path will be used.</p>]]></long-description>
          <tag line="519" name="param" description="Path to use." type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="519" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="526">
          <name>$path</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="538" package="Sutra">
        <name>getStylesheetsHTMLProductionMode</name>
        <full_name>getStylesheetsHTMLProductionMode</full_name>
        <docblock line="531">
          <description><![CDATA[Makes the stylesheets HTML when in production mode.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="531" name="throws" description="If a file is unable to read or found." type="\fUnexpectedException">
            <type by_reference="false">\fUnexpectedException</type>
          </tag>
          <tag line="531" name="return" description="The HTML link tags." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="664" package="Sutra">
        <name>getStylesheetsHTML</name>
        <full_name>getStylesheetsHTML</full_name>
        <docblock line="656">
          <description><![CDATA[Get the list of stylesheets in order.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="656" name="throws" description="If the CSS file cannot be read (production mode only)." type="\fUnexpectedException">
            <type by_reference="false">\fUnexpectedException</type>
          </tag>
          <tag line="656" name="return" description="String of link HTML tags." type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="656" name="see" description="\global\sTemplate::setCSSMediaOrder()" refers="\global\sTemplate::setCSSMediaOrder()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="721" package="Sutra">
        <name>getJavaScriptHTML</name>
        <full_name>getJavaScriptHTML</full_name>
        <docblock line="712">
          <description><![CDATA[Get string of HTML scripts for use in the head element.]]></description>
          <long-description><![CDATA[<p>JavaScript here can only be dependent on scripts that are also
  in the head element.</p>]]></long-description>
          <tag line="712" name="param" description="Which scripts to get. One of: 'head', 'body'." type="string" variable="$where">
            <type by_reference="false">string</type>
          </tag>
          <tag line="712" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="721">
          <name>$where</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="751" package="Sutra">
        <name>templateExists</name>
        <full_name>templateExists</full_name>
        <docblock line="745">
          <description><![CDATA[Check if a certain template file exists.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="745" name="param" description="Template name to check, without .tpl.php." type="string" variable="$template_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="745" name="return" description="TRUE if the template exists, otherwise FALSE." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="751">
          <name>$template_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="761" package="Sutra">
        <name>addCDN</name>
        <full_name>addCDN</full_name>
        <docblock line="755">
          <description><![CDATA[Add a CDN URL prefix WITHOUT including the final slash.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="755" name="param" description="The prefix URL to use." type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="755" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="761">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="771" package="Sutra">
        <name>removeCDN</name>
        <full_name>removeCDN</full_name>
        <docblock line="765">
          <description><![CDATA[Remove a specified CDN URL.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="765" name="param" description="The URL to remove." type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="765" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="771">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="786" package="Sutra">
        <name>setCDNs</name>
        <full_name>setCDNs</full_name>
        <docblock line="780">
          <description><![CDATA[Set the CDNs to use.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="780" name="param" description="Array of URL prefixes WITHOUT the ending /." type="array" variable="$urls">
            <type by_reference="false">array</type>
          </tag>
          <tag line="780" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="786">
          <name>$urls</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="795" package="Sutra">
        <name>getCDNs</name>
        <full_name>getCDNs</full_name>
        <docblock line="790">
          <description><![CDATA[Get the CDNs in currently in use.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="790" name="returns" description="array Array of string URLs."/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="804" package="Sutra">
        <name>removeCDNs</name>
        <full_name>removeCDNs</full_name>
        <docblock line="799">
          <description><![CDATA[Remove all CDNs.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="799" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="813" package="Sutra">
        <name>getACDN</name>
        <full_name>getACDN</full_name>
        <docblock line="808">
          <description><![CDATA[Get a CDN to use.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="808" name="return" description="Empty string, or CDN URL prefix." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="830" package="Sutra">
        <name>addBodyClass</name>
        <full_name>addBodyClass</full_name>
        <docblock line="823">
          <description><![CDATA[Add a body class.]]></description>
          <long-description><![CDATA[<p>This would normally be output in the class attribute of
  the <body> element.</p>]]></long-description>
          <tag line="823" name="param" description="Class name to add." type="string" variable="$class_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="823" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="830">
          <name>$class_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="839" package="Sutra">
        <name>getBodyClasses</name>
        <full_name>getBodyClasses</full_name>
        <docblock line="834">
          <description><![CDATA[Get the body classes.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="834" name="return" description="Array of strings." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="850" package="Sutra">
        <name>getPageTemplate</name>
        <full_name>getPageTemplate</full_name>
        <docblock line="843">
          <description><![CDATA[Get the correct page template for this URL.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="843" name="throws" description="If a candidate file cannot be found." type="\fUnexpectedException">
            <type by_reference="false">\fUnexpectedException</type>
          </tag>
          <tag line="843" name="return" description="Template file name (with .tpl.php) to use." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="885" package="Sutra">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="869">
          <description><![CDATA[Perform final rendering.]]></description>
          <long-description><![CDATA[<p>Call this at the end of the router's main action
  method.</p>]]></long-description>
          <tag line="869" name="throws" description="If the template cannot be found." type="\fUnexpectedException">
            <type by_reference="false">\fUnexpectedException</type>
          </tag>
          <tag line="869" name="throws" description="If the keys title or content are missing if&#10;  the first argument is passed is an array." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="869" name="param" description="Array of key =&gt; value pairs, which will be turned into local variables before the template file is included. Must have the keys `content` and `title`." type="array" variable="$variables">
            <type by_reference="false">array</type>
          </tag>
          <tag line="869" name="param" description="|$title Title of the page." type="string" variable="">
            <type by_reference="false">string</type>
          </tag>
          <tag line="869" name="param" description="|$content Content (usually HTML) of the page." type="string" variable="">
            <type by_reference="false">string</type>
          </tag>
          <tag line="869" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="885">
          <name>$variables</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="977" package="Sutra">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="972">
          <description><![CDATA[Forces use as a static class.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="972" name="return" description="" type="\sTemplate">
            <type by_reference="false">\sTemplate</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file sutra/classes/sTemplate.php</error>
      <notice line="869" code="50013">Parameter  could not be found in render()</notice>
      <notice line="869" code="50013">Parameter  could not be found in render()</notice>
    </parse_markers>
  </file>
  <file path="sutra/classes/sCache.php" hash="4dbe3449e713951d638a4a4cc12d18cb" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="16" package="Sutra">
      <extends>\fCache</extends>
      <name>sCache</name>
      <full_name>\sCache</full_name>
      <docblock line="2">
        <description><![CDATA[Extension to sCache.]]></description>
        <long-description><![CDATA[<p>This is almost the same but invisibly provides
  site-unique keys so that one site's cache entry does not conflict with
  another.</p>]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
        <tag line="2" name="version" description="1.2"/>
      </docblock>
      <property final="false" static="true" visibility="private" line="22" namespace="global" package="Sutra">
        <name>$cwd</name>
        <default><![CDATA['']]></default>
        <docblock line="17">
          <description><![CDATA[The current working directory.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="17" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="29" package="Sutra">
        <name>initialize</name>
        <full_name>initialize</full_name>
        <docblock line="24">
          <description><![CDATA[Initialises the class.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="24" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="41" package="Sutra">
        <name>getSiteUniqueKey</name>
        <full_name>getSiteUniqueKey</full_name>
        <docblock line="35">
          <description><![CDATA[Get a key unique to the site.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="35" name="param" description="Key to use." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="35" name="return" description="Key that can be used for cache storage." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="41">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="56" package="Sutra">
        <name>add</name>
        <full_name>add</full_name>
        <docblock line="46">
          <description><![CDATA[Tries to set a value to the cache, but stops if a value already exists.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="46" name="param" description="The key to store as, this should not exceed 250 characters." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="46" name="param" description="The value to store, this will be serialized." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="46" name="param" description="The number of seconds to keep the cache valid for, 0 for no limit." type="integer" variable="$ttl">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="46" name="return" description="If the key/value pair were added successfully." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="56">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="56">
          <name>$ttl</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="67" package="Sutra">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="61">
          <description><![CDATA[Deletes a value from the cache.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="61" name="param" description="The key to delete." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="61" name="return" description="If the delete succeeded." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="67">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="80" package="Sutra">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="72">
          <description><![CDATA[Returns a value from the cache.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="72" name="param" description="The key to return the value for." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="72" name="param" description="The value to return if the key did not exist." type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="72" name="return" description="The cached value or the default value if no cached value&#10;  was found." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="80">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="80">
          <name>$default</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="95" package="Sutra">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="85">
          <description><![CDATA[Sets a value to the cache, overriding any previous value.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="85" name="param" description="The key to store as, this should not exceed 250 characters." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="85" name="param" description="The value to store, this will be serialized." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="85" name="param" description="The number of seconds to keep the cache valid for, 0 for no limit." type="integer" variable="$ttl">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="85" name="return" description="If the value was successfully saved." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="95">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="95">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="95">
          <name>$ttl</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file sutra/classes/sCache.php</error>
    </parse_markers>
  </file>
  <file path="sutra/classes/sObject.php" hash="04839c9223fb3da53d68b64b5d396096" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="17" package="Sutra">
      <extends/>
      <implements>\ArrayAccess</implements>
      <implements>\IteratorAggregate</implements>
      <implements>\Countable</implements>
      <name>sObject</name>
      <full_name>\sObject</full_name>
      <docblock line="2">
        <description><![CDATA[Provides an object-oriented interface to associative arrays.]]></description>
        <long-description><![CDATA[<p>This class is
  not concerned with the order of the keys.</p>]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="https://github.com/tatsh/sutra" link="https://github.com/tatsh/sutra"/>
        <tag line="2" name="version" description="1.3"/>
        <tag line="2" name="todo" description="Create sOrderedObject class."/>
      </docblock>
      <property final="false" static="false" visibility="private" line="23" namespace="global" package="Sutra">
        <name>$data</name>
        <default><![CDATA[array()]]></default>
        <docblock line="18">
          <description><![CDATA[The actual 'array' of data this object manages.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="18" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="30" namespace="global" package="Sutra">
        <name>$last_missing_key</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="25">
          <description><![CDATA[The last missing key, checked by checkRequiredKeys().]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="25" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="42" package="Sutra">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="32">
          <description><![CDATA[Constructor.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="32" name="throws" description="If any keys are false-like. This&#10;  includes 0, FALSE, NULL, '', and others but not strings like '0'." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="32" name="param" description="Data to use. Keys should all be non-empty strings." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="32" name="return" description="" type="\sObject">
            <type by_reference="false">\sObject</type>
          </tag>
          <tag line="32" name="SuppressWarnings" description="(PHPMD.UnusedLocalVariable)"/>
        </docblock>
        <argument line="42">
          <name>$data</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="57" package="Sutra">
        <name>getData</name>
        <full_name>getData</full_name>
        <docblock line="52">
          <description><![CDATA[Gets the data as a regular array.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="52" name="return" description="Array of data." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="69" package="Sutra">
        <name>offsetExists</name>
        <full_name>offsetExists</full_name>
        <docblock line="61">
          <description><![CDATA[Whether an offset exists.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="61" name="internal" description=""/>
          <tag line="61" name="param" description="Offset value." type="mixed" variable="$offset">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="61" name="return" description="If the offset exists." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="69">
          <name>$offset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="81" package="Sutra">
        <name>offsetGet</name>
        <full_name>offsetGet</full_name>
        <docblock line="73">
          <description><![CDATA[Gets the item at an offset.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="73" name="internal" description=""/>
          <tag line="73" name="param" description="Offset value." type="mixed" variable="$offset">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="73" name="return" description="The value at the offset." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="81">
          <name>$offset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="96" package="Sutra">
        <name>offsetSet</name>
        <full_name>offsetSet</full_name>
        <docblock line="85">
          <description><![CDATA[Sets the item at an offset.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="85" name="internal" description=""/>
          <tag line="85" name="throws" description="If the offset is a false-like value." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="85" name="param" description="Offset to set." type="mixed" variable="$offset">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="85" name="param" description="Value to set." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="85" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="96">
          <name>$offset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="96">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="109" package="Sutra">
        <name>count</name>
        <full_name>count</full_name>
        <docblock line="104">
          <description><![CDATA[Returns the amount of items in the object.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="104" name="return" description="The amount of items." type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="121" package="Sutra">
        <name>offsetUnset</name>
        <full_name>offsetUnset</full_name>
        <docblock line="113">
          <description><![CDATA[Unsets the item at a specified offset.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="113" name="internal" description=""/>
          <tag line="113" name="param" description="Offset to unset." type="mixed" variable="$offset">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="113" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="121">
          <name>$offset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="132" package="Sutra">
        <name>getIterator</name>
        <full_name>getIterator</full_name>
        <docblock line="125">
          <description><![CDATA[Gets the ArrayIterator instance for use with foreach.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="125" name="internal" description=""/>
          <tag line="125" name="return" description="Iterator for use with foreach." type="\ArrayIterator">
            <type by_reference="false">\ArrayIterator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="142" package="Sutra">
        <name>keys</name>
        <full_name>keys</full_name>
        <docblock line="136">
          <description><![CDATA[Gets the keys to this object.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="136" name="param" description="If the keys should be sorted." type="boolean" variable="$sorted">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="136" name="return" description="Array of keys." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="142">
          <name>$sorted</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="160" package="Sutra">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="152">
          <description><![CDATA[Returns the class name, to be similar to how printing an array results in
  the text 'Array'.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="152" name="internal" description=""/>
          <tag line="152" name="return" description="The class name." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="172" package="Sutra">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="164">
          <description><![CDATA[Utilized for reading data for inaccessible properties.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="164" name="internal" description=""/>
          <tag line="164" name="param" description="Key to get the value of." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="164" name="return" description="The value or NULL." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="172">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="185" package="Sutra">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="176">
          <description><![CDATA[Utilized for setting data for inaccessible properties.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="176" name="internal" description=""/>
          <tag line="176" name="param" description="Key to set the value of." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="176" name="param" description="Value to set." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="176" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="185">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="185">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="195" package="Sutra">
        <name>printJSON</name>
        <full_name>printJSON</full_name>
        <docblock line="189">
          <description><![CDATA[Prints the data in JSON format.]]></description>
          <long-description><![CDATA[<p>Does not send a JSON header.</p>]]></long-description>
          <tag line="189" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="189" name="see" description="\global\fJSON::sendHeader" refers="\global\fJSON::sendHeader"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="205" package="Sutra">
        <name>toJSON</name>
        <full_name>toJSON</full_name>
        <docblock line="199">
          <description><![CDATA[Returns the data in JSON format.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="199" name="return" description="The data in JSON format." type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="199" name="see" description="\global\fJSON::sendHeader" refers="\global\fJSON::sendHeader"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="219" package="Sutra">
        <name>walk</name>
        <full_name>walk</full_name>
        <docblock line="209">
          <description><![CDATA[Applies a user-defined function to each element of this object.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="209" name="param" description="Callback function. The callback takes two parameters: the sObject parameter first (can be a reference) and the key second." type="string" variable="$func">
            <type by_reference="false">string</type>
          </tag>
          <tag line="209" name="param" description="If specified, this will be passed to the callback as the third parameter." type="mixed" variable="$user_data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="209" name="return" description="The object to allow method chaining." type="\sObject">
            <type by_reference="false">\sObject</type>
          </tag>
          <tag line="209" name="SuppressWarnings" description="(PHPMD.UnusedLocalVariable)"/>
        </docblock>
        <argument line="219">
          <name>$func</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="219">
          <name>$user_data</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="236" package="Sutra">
        <name>isArrayLike</name>
        <full_name>isArrayLike</full_name>
        <docblock line="226">
          <description><![CDATA[Checks if value is an array or is array-like (implementing the correct
  interfaces).]]></description>
          <long-description><![CDATA[<p>To be array-like, a class must implement both ArrayAccess and
  IteratorAggregate. Optionally, it can implement the Countable interface.</p>]]></long-description>
          <tag line="226" name="param" description="Value to check." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="226" name="return" description="If the value is an array or is array-like." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="236">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="265" package="Sutra">
        <name>walkRecursiveCallback</name>
        <full_name>walkRecursiveCallback</full_name>
        <docblock line="256">
          <description><![CDATA[Callback used with walkRecursive.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="256" name="param" description="Object instance." type="\sObject" variable="$instance">
            <type by_reference="false">\sObject</type>
          </tag>
          <tag line="256" name="param" description="Mixed variable, checked if is array-like." type="mixed" variable="$array_like">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="256" name="param" description="Function to call on each item." type="string" variable="$func">
            <type by_reference="false">string</type>
          </tag>
          <tag line="256" name="param" description="User data to add as third argument to callback." type="mixed" variable="$user_data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="256" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="265">
          <name>$instance</name>
          <default><![CDATA[]]></default>
          <type>\sObject</type>
        </argument>
        <argument line="265">
          <name>$array_like</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="265">
          <name>$func</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="265">
          <name>$user_data</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="290" package="Sutra">
        <name>walkRecursive</name>
        <full_name>walkRecursive</full_name>
        <docblock line="280">
          <description><![CDATA[Applies a user-defined function to each element of this object.]]></description>
          <long-description><![CDATA[<p>This
  method will recurse into deeper arrays.</p>]]></long-description>
          <tag line="280" name="param" description="Callback function. The callback takes two parameters: the sObject parameter first (can be a reference) and the key second." type="string" variable="$func">
            <type by_reference="false">string</type>
          </tag>
          <tag line="280" name="param" description="If specified, this will be passed to the callback as the third parameter." type="mixed" variable="$user_data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="280" name="return" description="The object to allow method chaining." type="\sObject">
            <type by_reference="false">\sObject</type>
          </tag>
        </docblock>
        <argument line="290">
          <name>$func</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="290">
          <name>$user_data</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="304" package="Sutra">
        <name>values</name>
        <full_name>values</full_name>
        <docblock line="299">
          <description><![CDATA[Gets the values of the object as normal, numerically-index array.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="299" name="return" description="Array of values." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="317" package="Sutra">
        <name>search</name>
        <full_name>search</full_name>
        <docblock line="308">
          <description><![CDATA[Searches the array for a given value and returns the corresponding key if
  successful.]]></description>
          <long-description><![CDATA[<p>Can return boolean FALSE.</p>]]></long-description>
          <tag line="308" name="param" description="Value to search for." type="mixed" variable="$needle">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="308" name="param" description="If the value should be identical." type="boolean" variable="$strict">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="308" name="return" description="If the key is found, a string will be returned.&#10;  Otherwise boolean FALSE will be returned." type="boolean|string">
            <type by_reference="false">boolean</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="317">
          <name>$needle</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="317">
          <name>$strict</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="327" package="Sutra">
        <name>rand</name>
        <full_name>rand</full_name>
        <docblock line="321">
          <description><![CDATA[Picks one or more random keys.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="321" name="param" description="Number of items to get." type="integer" variable="$num_req">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="321" name="return" description="Array of keys." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="327">
          <name>$num_req</name>
          <default><![CDATA[1]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="344" package="Sutra">
        <name>merge</name>
        <full_name>merge</full_name>
        <docblock line="337">
          <description><![CDATA[Merges the values of the arguments with the values of this object.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="337" name="param" description="Array or sObject instance." type="\sObject|array" variable="$array_like">
            <type by_reference="false">\sObject</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="337" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="337" name="return" description="The object to allow method chaining." type="\sObject">
            <type by_reference="false">\sObject</type>
          </tag>
        </docblock>
        <argument line="344">
          <name>$array_like</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="369" package="Sutra">
        <name>checkRequiredKeys</name>
        <full_name>checkRequiredKeys</full_name>
        <docblock line="359">
          <description><![CDATA[Checks that the object has the required keys specified.]]></description>
          <long-description><![CDATA[<p>The first missing
  key will be retrievable by using getLastMissingKey().</p>]]></long-description>
          <tag line="359" name="throws" description="If any key is missing." type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="359" name="param" description="Key to check." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="359" name="param" description="..." type="string" variable="">
            <type by_reference="false">string</type>
          </tag>
          <tag line="359" name="return" description="If all required keys are present." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="369">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="389" package="Sutra">
        <name>getLastMissingKey</name>
        <full_name>getLastMissingKey</full_name>
        <docblock line="384">
          <description><![CDATA[Gets the last missing key.]]></description>
          <long-description><![CDATA[<p>NULL is the default value.</p>]]></long-description>
          <tag line="384" name="return" description="String of the last missing key, or NULL." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="405" package="Sutra">
        <name>validateRequiredKeys</name>
        <full_name>validateRequiredKeys</full_name>
        <docblock line="393">
          <description><![CDATA[Validates that the object has the required keys specified.]]></description>
          <long-description><![CDATA[<p>If the first argument is an array, that will be considered the set of
  keys.</p>]]></long-description>
          <tag line="393" name="throws" description="If any key is missing." type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="393" name="param" description="Key to check, or array of keys." type="string|array" variable="$key">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="393" name="param" description="..." type="string" variable="">
            <type by_reference="false">string</type>
          </tag>
          <tag line="393" name="return" description="The object to allow method chaining." type="\sObject">
            <type by_reference="false">\sObject</type>
          </tag>
        </docblock>
        <argument line="405">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="432" package="Sutra">
        <name>filter</name>
        <full_name>filter</full_name>
        <docblock line="423">
          <description><![CDATA[Calls a callback on each item in the object.]]></description>
          <long-description><![CDATA[<p>If the callback returns TRUE,
  then the value will be returned in the resulting sObject instance of this
  method.</p>]]></long-description>
          <tag line="423" name="param" description="Callback to call on each key." type="string" variable="$cb">
            <type by_reference="false">string</type>
          </tag>
          <tag line="423" name="return" description="New filtered sObject." type="\sObject">
            <type by_reference="false">\sObject</type>
          </tag>
          <tag line="423" name="see" description="\global\array_filter()" refers="\global\array_filter()"/>
        </docblock>
        <argument line="432">
          <name>$cb</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="444" package="Sutra">
        <name>fill</name>
        <full_name>fill</full_name>
        <docblock line="436">
          <description><![CDATA[Fills the object with keys (replacing old ones if present) with the same
  value.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="436" name="param" description="Keys to add." type="array" variable="$keys">
            <type by_reference="false">array</type>
          </tag>
          <tag line="436" name="param" description="Value to set." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="436" name="return" description="The object to allow method chaining." type="\sObject">
            <type by_reference="false">\sObject</type>
          </tag>
        </docblock>
        <argument line="444">
          <name>$keys</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
        <argument line="444">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="457" package="Sutra">
        <name>diff</name>
        <full_name>diff</full_name>
        <docblock line="449">
          <description><![CDATA[Compares this object's data with associative arrays.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="449" name="param" description="Array or array-like object." type="mixed" variable="$array1">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="449" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="449" name="return" description="Object containing all the entries from $array1 that are&#10;  not present in any of the other arrays." type="\sObject">
            <type by_reference="false">\sObject</type>
          </tag>
        </docblock>
        <argument line="457">
          <name>$array1</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="469" package="Sutra">
        <name>convertKeyCase</name>
        <full_name>convertKeyCase</full_name>
        <docblock line="463">
          <description><![CDATA[Returns a new sObject instance with keys changed to the case specified.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="463" name="param" description="One of: CASE_LOWER, CASE_UPPER." type="integer" variable="$case">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="463" name="return" description="New sObject instance with keys changed." type="\sObject">
            <type by_reference="false">\sObject</type>
          </tag>
        </docblock>
        <argument line="469">
          <name>$case</name>
          <default><![CDATA[CASE_LOWER]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file sutra/classes/sObject.php</error>
      <notice line="337" code="50013">Parameter  could not be found in merge()</notice>
      <notice line="359" code="50013">Parameter  could not be found in checkRequiredKeys()</notice>
      <notice line="393" code="50013">Parameter  could not be found in validateRequiredKeys()</notice>
      <notice line="449" code="50013">Parameter  could not be found in diff()</notice>
    </parse_markers>
  </file>
  <file path="sutra/classes/sCRUDForm.php" hash="35770fbd7c676ba397a8530b2e7051ca" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="14" package="Sutra">
      <extends/>
      <name>sCRUDForm</name>
      <full_name>\sCRUDForm</full_name>
      <docblock line="2">
        <description><![CDATA[Creates an HTML form based on an fActiveRecord class.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="https://github.com/tatsh/sutra" link="https://github.com/tatsh/sutra"/>
        <tag line="2" name="version" description="1.3"/>
      </docblock>
      <constant namespace="global" line="15" package="Sutra">
        <name>hideFieldNames</name>
        <full_name>hideFieldNames</full_name>
        <value><![CDATA['sCRUDForm::hideFieldNames']]></value>
      </constant>
      <property final="false" static="true" visibility="private" line="23" namespace="global" package="Sutra">
        <name>$column_to_form_mappings</name>
        <default><![CDATA[array('smallint' => 'number', 'integer' => 'number', 'bigint' => 'number', 'float' => 'number', 'real' => 'number', 'decimal' => 'number', 'char' => 'textfield', 'varchar' => 'textfield', 'text' => 'textarea', 'blob' => 'file', 'timestamp' => 'datetime', 'date' => 'date', 'time' => 'time', 'boolean' => 'checkbox')]]></default>
        <docblock line="17">
          <description><![CDATA[Mappings.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="17" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="17" name="see" description="\global\http://flourishlib.com/docs/FlourishSql#DataTypes" refers="\global\http://flourishlib.com/docs/FlourishSql#DataTypes"/>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="46" namespace="global" package="Sutra">
        <name>$valid_field_types</name>
        <default><![CDATA[array('text' => FALSE, 'textfield' => FALSE, 'textarea' => TRUE, 'select' => TRUE, 'tel' => FALSE, 'url' => FALSE, 'email' => FALSE, 'password' => FALSE, 'datetime' => FALSE, 'date' => FALSE, 'month' => FALSE, 'week' => FALSE, 'time' => FALSE, 'datetime-local' => FALSE, 'number' => FALSE, 'range' => FALSE, 'color' => FALSE, 'checkbox' => FALSE, 'file' => FALSE, 'hidden' => FALSE)]]></default>
        <docblock line="40">
          <description><![CDATA[Valid field types.]]></description>
          <long-description><![CDATA[<p>Ones that have a value of TRUE are separate elements
  and are not part of the 'type' attribute of the input element.</p>]]></long-description>
          <tag line="40" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="74" namespace="global" package="Sutra">
        <name>$class_names</name>
        <default><![CDATA[array()]]></default>
        <docblock line="69">
          <description><![CDATA[Class names to add to the &lt;form&gt; tag.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="69" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="81" namespace="global" package="Sutra">
        <name>$always_ignore</name>
        <default><![CDATA[array()]]></default>
        <docblock line="76">
          <description><![CDATA[Column names to never print fields for.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="76" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="88" namespace="global" package="Sutra">
        <name>$request_method</name>
        <default><![CDATA['post']]></default>
        <docblock line="83">
          <description><![CDATA[Request method.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="83" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="95" namespace="global" package="Sutra">
        <name>$action_url</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="90">
          <description><![CDATA[Action URL.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="90" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="102" namespace="global" package="Sutra">
        <name>$form_attr</name>
        <default><![CDATA[array()]]></default>
        <docblock line="97">
          <description><![CDATA[Form element attributes.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="97" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="109" namespace="global" package="Sutra">
        <name>$fields</name>
        <default><![CDATA[array()]]></default>
        <docblock line="104">
          <description><![CDATA[The fields to build HTML from.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="104" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="116" namespace="global" package="Sutra">
        <name>$file_uploads</name>
        <default><![CDATA[FALSE]]></default>
        <docblock line="111">
          <description><![CDATA[If this form enables file uploads.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="111" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="124" namespace="global" package="Sutra">
        <name>$file_upload_max_size</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="118">
          <description><![CDATA[The maximum size for a file upload.]]></description>
          <long-description><![CDATA[<p>If not set, the hidden field will not
  be printed.</p>]]></long-description>
          <tag line="118" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="131" namespace="global" package="Sutra">
        <name>$class_name</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="126">
          <description><![CDATA[Class name passed in.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="126" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="138" namespace="global" package="Sutra">
        <name>$buttons</name>
        <default><![CDATA[array()]]></default>
        <docblock line="133">
          <description><![CDATA[Buttons that will display.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="133" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="145" namespace="global" package="Sutra">
        <name>$action</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="140">
          <description><![CDATA[Default action.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="140" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="152" namespace="global" package="Sutra">
        <name>$print_csrf</name>
        <default><![CDATA[FALSE]]></default>
        <docblock line="147">
          <description><![CDATA[If a CSRF field should be printed.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="147" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="159" namespace="global" package="Sutra">
        <name>$csrf_field_name</name>
        <default><![CDATA['csrf']]></default>
        <docblock line="154">
          <description><![CDATA[The CSRF field name.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="154" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="166" namespace="global" package="Sutra">
        <name>$csrf_field_url</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="161">
          <description><![CDATA[The CSRF field URL.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="161" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="173" namespace="global" package="Sutra">
        <name>$table_name</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="168">
          <description><![CDATA[The table name.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="168" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="180" namespace="global" package="Sutra">
        <name>$table_columns</name>
        <default><![CDATA[array()]]></default>
        <docblock line="175">
          <description><![CDATA[The columns array of the table.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="175" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="187" namespace="global" package="Sutra">
        <name>$active_record</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="182">
          <description><![CDATA[The fActiveRecord instance, if one was passed to the constructor.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="182" name="var" description="" type="\fActiveRecord">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="194" namespace="global" package="Sutra">
        <name>$table_relationships</name>
        <default><![CDATA[array()]]></default>
        <docblock line="189">
          <description><![CDATA[The relationships array of the table.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="189" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="201" namespace="global" package="Sutra">
        <name>$schema</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="196">
          <description><![CDATA[The schema instance.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="196" name="var" description="" type="\fSchema">
            <type by_reference="false">\fSchema</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="208" namespace="global" package="Sutra">
        <name>$custom_html</name>
        <default><![CDATA[array()]]></default>
        <docblock line="203">
          <description><![CDATA[Custom HTML fields.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="203" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="215" namespace="global" package="Sutra">
        <name>$template</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="210">
          <description><![CDATA[Template to use alternatively.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="210" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="225" package="Sutra">
        <name>validateFieldType</name>
        <full_name>validateFieldType</full_name>
        <docblock line="217">
          <description><![CDATA[Validate the field type.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="217" name="throws" description="If the field type is invalid." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="217" name="param" description="Field type." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="217" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="225">
          <name>$type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="242" package="Sutra">
        <name>hideFieldNames</name>
        <full_name>hideFieldNames</full_name>
        <docblock line="234">
          <description><![CDATA[Configures the class to always ignore certain column names.]]></description>
          <long-description><![CDATA[<p>This may be
  useful for fields that are managed by Flourish such as timestamp fields
  managed by fORMDate.</p>]]></long-description>
          <tag line="234" name="param" description="Field name or array or names to ignore." type="array|string" variable="$field_name">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="234" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="242">
          <name>$field_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="262" package="Sutra">
        <name>makeElement</name>
        <full_name>makeElement</full_name>
        <docblock line="252">
          <description><![CDATA[Makes an HTML form element wrapped in a div.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="252" name="param" description="Type of the field." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="252" name="param" description="Name of the field." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="252" name="param" description="Label text of the field." type="string" variable="$label">
            <type by_reference="false">string</type>
          </tag>
          <tag line="252" name="param" description="Array of fields." type="array" variable="$attr">
            <type by_reference="false">array</type>
          </tag>
          <tag line="252" name="param" description="If this should wrap the field." type="boolean" variable="$wrap">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="252" name="return" description="HTML of the field." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="262">
          <name>$type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="262">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="262">
          <name>$label</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="262">
          <name>$attr</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
        <argument line="262">
          <name>$wrap</name>
          <default><![CDATA[TRUE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="295" package="Sutra">
        <name>validateRequestMethod</name>
        <full_name>validateRequestMethod</full_name>
        <docblock line="287">
          <description><![CDATA[Validates the request method.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="287" name="throws" description="If the request method is invalid." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="287" name="param" description="Request method." type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="287" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="295">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="313" package="Sutra">
        <name>setPostValues</name>
        <full_name>setPostValues</full_name>
        <docblock line="305">
          <description><![CDATA[Sets POST values from the fActiveRecord instance.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="305" name="param" description="This method does nothing if this argument is not of type fActiveRecord." type="\fActiveRecord|string|null" variable="$active_record">
            <type by_reference="false">\fActiveRecord</type>
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="305" name="return" description="The object to allow method chaining." type="\sCRUDForm">
            <type by_reference="false">\sCRUDForm</type>
          </tag>
          <tag line="305" name="SuppressWarnings" description="(UnusedLocalVariable)"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="331" package="Sutra">
        <name>parseRelationships</name>
        <full_name>parseRelationships</full_name>
        <docblock line="326">
          <description><![CDATA[Parses the many-to-one relationships of the table.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="326" name="return" description="Array of data about the related columns." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="358" package="Sutra">
        <name>getFieldType</name>
        <full_name>getFieldType</full_name>
        <docblock line="342">
          <description><![CDATA[Gets the correct field type based on the column type and name.]]></description>
          <long-description><![CDATA[<p>If the column name has password within its name, the type password will
  be returned.</p>

<p>If the column name has email within its name, the type email will be
  returned.</p>

<p>If $valid_values has any values, type select will be returned.</p>]]></long-description>
          <tag line="342" name="param" description="Column name." type="string" variable="$column_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="342" name="param" description="Column type." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="342" name="param" description="Valid values array." type="array" variable="$valid_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="342" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="358">
          <name>$column_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="358">
          <name>$type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="358">
          <name>$valid_values</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="379" package="Sutra">
        <name>isRequiredField</name>
        <full_name>isRequiredField</full_name>
        <docblock line="371">
          <description><![CDATA[Checks if the field is required.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="371" name="param" description="Field type." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="371" name="param" description="Array of default values or NULL." type="array|null" variable="$default_values">
            <type by_reference="false">array</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="371" name="param" description="If the field can be set to NULL." type="boolean" variable="$can_be_null">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="371" name="return" description="If the field is required." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="379">
          <name>$type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="379">
          <name>$default_values</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="379">
          <name>$can_be_null</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="394" package="Sutra">
        <name>addSpecialAttributes</name>
        <full_name>addSpecialAttributes</full_name>
        <docblock line="386">
          <description><![CDATA[Adds special attributes to the attributes array depending on field type.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="386" name="param" description="Attributes array to modify." type="array" variable="$attr">
            <type by_reference="false">array</type>
          </tag>
          <tag line="386" name="param" description="Information array as from schema." type="array" variable="$info">
            <type by_reference="false">array</type>
          </tag>
          <tag line="386" name="param" description="Field type." type="string" variable="$field_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="386" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="394">
          <name>$attr</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
        <argument line="394">
          <name>$info</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
        <argument line="394">
          <name>$field_type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="439" package="Sutra">
        <name>makeAttributesArray</name>
        <full_name>makeAttributesArray</full_name>
        <docblock line="431">
          <description><![CDATA[Makes the attributes array for the field.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="431" name="param" description="Column name (will be used for 'name' attribute)." type="string" variable="$column_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="431" name="param" description="Information array as retrieved from schema." type="array" variable="$info">
            <type by_reference="false">array</type>
          </tag>
          <tag line="431" name="param" description="Field type." type="string" variable="$field_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="431" name="return" description="Attributes array." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="439">
          <name>$column_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="439">
          <name>$info</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
        <argument line="439">
          <name>$field_type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="459" package="Sutra">
        <name>parseSchema</name>
        <full_name>parseSchema</full_name>
        <docblock line="454">
          <description><![CDATA[Parses the fields of the schema.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="454" name="return" description="The object to allow method chaining." type="\sCRUDForm">
            <type by_reference="false">\sCRUDForm</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="532" package="Sutra">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="521">
          <description><![CDATA[Creates a form based on the schema of a table.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="521" name="param" description="fActiveRecord instance, or class name." type="\fActiveRecord|string" variable="$class">
            <type by_reference="false">\fActiveRecord</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="521" name="param" description="URL for the action attribute of the form element. If not specified, will default to the current URL." type="string" variable="$action">
            <type by_reference="false">string</type>
          </tag>
          <tag line="521" name="param" description="Method type for the form element. One of: 'post', 'get'." type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="521" name="param" description="Array of HTML attributes for the form elemement." type="array" variable="$attr">
            <type by_reference="false">array</type>
          </tag>
          <tag line="521" name="return" description="The form object." type="\sCRUDForm">
            <type by_reference="false">\sCRUDForm</type>
          </tag>
        </docblock>
        <argument line="532">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="532">
          <name>$action</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="532">
          <name>$method</name>
          <default><![CDATA['post']]></default>
          <type/>
        </argument>
        <argument line="532">
          <name>$attr</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="558" package="Sutra">
        <name>enableFileUpload</name>
        <full_name>enableFileUpload</full_name>
        <docblock line="551">
          <description><![CDATA[Changes the form content type to allow file uploads, regardless if there
  are file (blob) fields.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="551" name="param" description="TRUE or FALSE." type="boolean" variable="$bool">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="551" name="return" description="The object to allow method chaining." type="\sCRUDForm">
            <type by_reference="false">\sCRUDForm</type>
          </tag>
        </docblock>
        <argument line="558">
          <name>$bool</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="569" package="Sutra">
        <name>setMaxFileUploadSize</name>
        <full_name>setMaxFileUploadSize</full_name>
        <docblock line="563">
          <description><![CDATA[Set the maximum file upload size.]]></description>
          <long-description><![CDATA[<p>This affects all file upload fields.</p>]]></long-description>
          <tag line="563" name="param" description="Size to allow." type="integer" variable="$size">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="563" name="return" description="The object to allow method chaining." type="\sCRUDForm">
            <type by_reference="false">\sCRUDForm</type>
          </tag>
        </docblock>
        <argument line="569">
          <name>$size</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="582" package="Sutra">
        <name>validateFieldName</name>
        <full_name>validateFieldName</full_name>
        <docblock line="574">
          <description><![CDATA[Validates if a field name exists in this class.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="574" name="throws" description="If the field name is invalid." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="574" name="param" description="Name of the field." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="574" name="return" description="The object to allow method chaining." type="\sCRUDForm">
            <type by_reference="false">\sCRUDForm</type>
          </tag>
        </docblock>
        <argument line="582">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="601" package="Sutra">
        <name>fetchRelatedValues</name>
        <full_name>fetchRelatedValues</full_name>
        <docblock line="592">
          <description><![CDATA[Fetches the values to display for the related column.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="592" name="param" description="fDatabase instance." type="\fDatabase" variable="$db">
            <type by_reference="false">\fDatabase</type>
          </tag>
          <tag line="592" name="param" description="Column with the values to use." type="string" variable="$value_column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="592" name="param" description="Column with values to display to the user." type="string" variable="$title_column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="592" name="param" description="Table name to fetch values from." type="string" variable="$related_table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="592" name="return" description="Array of options with keys as the values." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="601">
          <name>$db</name>
          <default><![CDATA[]]></default>
          <type>\fDatabase</type>
        </argument>
        <argument line="601">
          <name>$value_column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="601">
          <name>$title_column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="601">
          <name>$related_table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="630" package="Sutra">
        <name>replaceHTML</name>
        <full_name>replaceHTML</full_name>
        <docblock line="619">
          <description><![CDATA[Sets custom HTML for a specific column.]]></description>
          <long-description><![CDATA[<p>Note that this replaces
  <em>all</em> HTML (including the container and label), not just the
  relevant field tag (such as &lt;input&gt;).</p>

<p>If hiding a field is desired, use</p>

<pre><code>sCRUDForm->hideFields()</code></pre>

<p>.</p>]]></long-description>
          <tag line="619" name="param" description="Column name." type="string" variable="$column_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="619" name="param" description="HTML to use." type="string" variable="$html">
            <type by_reference="false">string</type>
          </tag>
          <tag line="619" name="return" description="The object to allow method chaining." type="\sCRUDForm">
            <type by_reference="false">\sCRUDForm</type>
          </tag>
        </docblock>
        <argument line="630">
          <name>$column_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="630">
          <name>$html</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="641" package="Sutra">
        <name>addClassName</name>
        <full_name>addClassName</full_name>
        <docblock line="635">
          <description><![CDATA[Adds a class name to the &lt;form&gt; tag.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="635" name="param" description="The class name to add." type="string" variable="$class_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="635" name="return" description="The object to allow method chaining." type="\sCRUDForm">
            <type by_reference="false">\sCRUDForm</type>
          </tag>
        </docblock>
        <argument line="641">
          <name>$class_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="652" package="Sutra">
        <name>setClassNames</name>
        <full_name>setClassNames</full_name>
        <docblock line="646">
          <description><![CDATA[Sets all class names.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="646" name="param" description="Array of strings." type="array" variable="$class_names">
            <type by_reference="false">array</type>
          </tag>
          <tag line="646" name="return" description="The object to allow method chaining." type="\sCRUDForm">
            <type by_reference="false">\sCRUDForm</type>
          </tag>
        </docblock>
        <argument line="652">
          <name>$class_names</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="668" package="Sutra">
        <name>getClassNames</name>
        <full_name>getClassNames</full_name>
        <docblock line="663">
          <description><![CDATA[Gets the class names that will be used on the &lt;form&gt; tag.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="663" name="return" description="Array of class names." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="681" package="Sutra">
        <name>makeWithTemplate</name>
        <full_name>makeWithTemplate</full_name>
        <docblock line="672">
          <description><![CDATA[Generates the form HTML with the template specified.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="672" name="param" description="Database." type="\fDatabase" variable="$db">
            <type by_reference="false">\fDatabase</type>
          </tag>
          <tag line="672" name="param" description="Array of element types that have `value` attribute." type="array" variable="$no_value_types">
            <type by_reference="false">array</type>
          </tag>
          <tag line="672" name="param" description="Array of special input element types." type="array" variable="$special_value_types">
            <type by_reference="false">array</type>
          </tag>
          <tag line="672" name="return" description="The form HTML." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="681">
          <name>$db</name>
          <default><![CDATA[]]></default>
          <type>\fDatabase</type>
        </argument>
        <argument line="681">
          <name>$no_value_types</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
        <argument line="681">
          <name>$special_value_types</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="782" package="Sutra">
        <name>make</name>
        <full_name>make</full_name>
        <docblock line="777">
          <description><![CDATA[Generates the form HTML.]]></description>
          <long-description><![CDATA[<p>Should be called last.</p>]]></long-description>
          <tag line="777" name="return" description="The form HTML." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="892" package="Sutra">
        <name>hideFields</name>
        <full_name>hideFields</full_name>
        <docblock line="886">
          <description><![CDATA[Hides fields.]]></description>
          <long-description><![CDATA[<p>Allows for variable arguments.</p>]]></long-description>
          <tag line="886" name="param" description="Name of the field." type="string|array" variable="$name">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="886" name="return" description="The object to allow method chaining." type="\sCRUDForm">
            <type by_reference="false">\sCRUDForm</type>
          </tag>
        </docblock>
        <argument line="892">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="913" package="Sutra">
        <name>addAction</name>
        <full_name>addAction</full_name>
        <docblock line="905">
          <description><![CDATA[Adds a button.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="905" name="param" description="Action name. This is for use with fRequest during the request." type="string" variable="$action_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="905" name="param" description="Label of the button." type="string" variable="$label">
            <type by_reference="false">string</type>
          </tag>
          <tag line="905" name="return" description="The object to allow method chaining." type="\sCRUDForm">
            <type by_reference="false">\sCRUDForm</type>
          </tag>
        </docblock>
        <argument line="913">
          <name>$action_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="913">
          <name>$label</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="930" package="Sutra">
        <name>addField</name>
        <full_name>addField</full_name>
        <docblock line="921">
          <description><![CDATA[Adds a custom field.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="921" name="param" description="Name attribute of the field." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="921" name="param" description="Label text." type="string" variable="$label">
            <type by_reference="false">string</type>
          </tag>
          <tag line="921" name="param" description="Type of the field." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="921" name="param" description="Attributes array." type="array" variable="$attr">
            <type by_reference="false">array</type>
          </tag>
          <tag line="921" name="return" description="The object to allow method chaining." type="\sCRUDForm">
            <type by_reference="false">\sCRUDForm</type>
          </tag>
        </docblock>
        <argument line="930">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="930">
          <name>$label</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="930">
          <name>$type</name>
          <default><![CDATA['text']]></default>
          <type/>
        </argument>
        <argument line="930">
          <name>$attr</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="955" package="Sutra">
        <name>enableCSRFField</name>
        <full_name>enableCSRFField</full_name>
        <docblock line="947">
          <description><![CDATA[Enables adding a CSRF field.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="947" name="param" description="If the CSRF field should be added." type="boolean" variable="$bool">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="947" name="param" description="Name of the field." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="947" name="param" description="URL for the CSRF." type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="947" name="return" description="The object to allow method chaining." type="\sCRUDForm">
            <type by_reference="false">\sCRUDForm</type>
          </tag>
        </docblock>
        <argument line="955">
          <name>$bool</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="955">
          <name>$name</name>
          <default><![CDATA['csrf']]></default>
          <type/>
        </argument>
        <argument line="955">
          <name>$url</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="971" package="Sutra">
        <name>overrideFieldType</name>
        <full_name>overrideFieldType</full_name>
        <docblock line="962">
          <description><![CDATA[Override a field types attributes.]]></description>
          <long-description><![CDATA[<p>This is mainly so that an e-mail or
  date field column will render a different field from the default.</p>]]></long-description>
          <tag line="962" name="param" description="Name of the field." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="962" name="param" description="Type of the field." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="962" name="param" description="Array of other attributes." type="array" variable="$attr">
            <type by_reference="false">array</type>
          </tag>
          <tag line="962" name="return" description="The object to allow method chaining." type="\sCRUDForm">
            <type by_reference="false">\sCRUDForm</type>
          </tag>
        </docblock>
        <argument line="971">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="971">
          <name>$type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="971">
          <name>$attr</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1001" package="Sutra">
        <name>overrideLabel</name>
        <full_name>overrideLabel</full_name>
        <docblock line="994">
          <description><![CDATA[Override the label name for a column.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="994" name="param" description="Column name." type="string" variable="$column_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="994" name="param" description="Label to use." type="string" variable="$label">
            <type by_reference="false">string</type>
          </tag>
          <tag line="994" name="return" description="The object to allow method chaining." type="\sCRUDForm">
            <type by_reference="false">\sCRUDForm</type>
          </tag>
        </docblock>
        <argument line="1001">
          <name>$column_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1001">
          <name>$label</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1015" package="Sutra">
        <name>overrideRelatedColumn</name>
        <full_name>overrideRelatedColumn</full_name>
        <docblock line="1007">
          <description><![CDATA[Override the related column for a related table.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1007" name="param" description="Column name of this table." type="string" variable="$column_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1007" name="param" description="Column name that should be read from the related table." type="string" variable="$related_table_column_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1007" name="return" description="The object to allow method chaining." type="\sCRUDForm">
            <type by_reference="false">\sCRUDForm</type>
          </tag>
        </docblock>
        <argument line="1015">
          <name>$column_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1015">
          <name>$related_table_column_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1030" package="Sutra">
        <name>setFieldOrder</name>
        <full_name>setFieldOrder</full_name>
        <docblock line="1024">
          <description><![CDATA[Sets the field order.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1024" name="param" description="Array of field names." type="array|string" variable="$fields">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="1024" name="return" description="The object to allow method chaining." type="\sCRUDForm">
            <type by_reference="false">\sCRUDForm</type>
          </tag>
        </docblock>
        <argument line="1030">
          <name>$fields</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1053" package="Sutra">
        <name>setFieldAttributes</name>
        <full_name>setFieldAttributes</full_name>
        <docblock line="1046">
          <description><![CDATA[Set a specific field's attributes.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1046" name="param" description="Field name." type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1046" name="param" description="Array of attribute values." type="array" variable="$attr">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1046" name="return" description="The object to allow method chaining." type="\sCRUDForm">
            <type by_reference="false">\sCRUDForm</type>
          </tag>
        </docblock>
        <argument line="1053">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1053">
          <name>$attr</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1077" package="Sutra">
        <name>setTemplate</name>
        <full_name>setTemplate</full_name>
        <docblock line="1059">
          <description><![CDATA[Template to use alternatively for custom styling.]]></description>
          <long-description><![CDATA[<p>All input field HTML
  will be passed as variables to the template by their column name.</p>

<p>No containers or labels are generated when templating is used.</p>

<p>The form attributes will be passed as variable <code>$form_attr</code> to the
  template.</p>

<p>The buttons will be passed as an array <code>$buttons</code> with each piece being
  the button HTML.</p>]]></long-description>
          <tag line="1059" name="param" description="Template name." type="string" variable="$template_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1059" name="return" description="The object to allow method chaining." type="\sCRUDForm">
            <type by_reference="false">\sCRUDForm</type>
          </tag>
          <tag line="1059" name="note" description="Requires sTemplate."/>
        </docblock>
        <argument line="1077">
          <name>$template_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1087" package="Sutra">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="1082">
          <description><![CDATA[Returns the HTML for this form.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1082" name="return" description="The HTML for this form." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file sutra/classes/sCRUDForm.php</error>
      <notice line="305" code="50013">Parameter $active_record could not be found in setPostValues()</notice>
    </parse_markers>
  </file>
  <file path="sutra/classes/sNumber.php" hash="bf1ef86d0864f40ef60133b311cd66eb" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="14" package="Sutra">
      <extends>\fNumber</extends>
      <name>sNumber</name>
      <full_name>\sNumber</full_name>
      <docblock line="2">
        <description><![CDATA[Provides getting ordinal numbers as an extension to fNumber.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
        <tag line="2" name="version" description="1.2"/>
      </docblock>
      <constant namespace="global" line="15" package="Sutra">
        <name>ordinalSuffix</name>
        <full_name>ordinalSuffix</full_name>
        <value><![CDATA['sNumber::ordinalSuffix']]></value>
      </constant>
      <constant namespace="global" line="16" package="Sutra">
        <name>addCallback</name>
        <full_name>addCallback</full_name>
        <value><![CDATA['sNumber::addCallback']]></value>
      </constant>
      <constant namespace="global" line="17" package="Sutra">
        <name>removeLocale</name>
        <full_name>removeLocale</full_name>
        <value><![CDATA['sNumber::removeLocale']]></value>
      </constant>
      <constant namespace="global" line="18" package="Sutra">
        <name>setLocale</name>
        <full_name>setLocale</full_name>
        <value><![CDATA['sNumber::setLocale']]></value>
      </constant>
      <constant namespace="global" line="19" package="Sutra">
        <name>setFallbackLocale</name>
        <full_name>setFallbackLocale</full_name>
        <value><![CDATA['sNumber::setFallbackLocale']]></value>
      </constant>
      <constant namespace="global" line="20" package="Sutra">
        <name>ordinal</name>
        <full_name>ordinal</full_name>
        <value><![CDATA['sNumber::ordinal']]></value>
      </constant>
      <constant namespace="global" line="21" package="Sutra">
        <name>isEqualToIntCast</name>
        <full_name>isEqualToIntCast</full_name>
        <value><![CDATA['sNumber::isEqualToIntCast']]></value>
      </constant>
      <property final="false" static="true" visibility="private" line="29" namespace="global" package="Sutra">
        <name>$valid_locales</name>
        <default><![CDATA[array('af-ZA' => TRUE, 'am-ET' => TRUE, 'ar-AE' => TRUE, 'ar-BH' => TRUE, 'ar-DZ' => TRUE, 'ar-EG' => TRUE, 'ar-IQ' => TRUE, 'ar-JO' => TRUE, 'ar-KW' => TRUE, 'ar-LB' => TRUE, 'ar-LY' => TRUE, 'ar-MA' => TRUE, 'arn-CL' => TRUE, 'ar-OM' => TRUE, 'ar-QA' => TRUE, 'ar-SA' => TRUE, 'ar-SY' => TRUE, 'ar-TN' => TRUE, 'ar-YE' => TRUE, 'as-IN' => TRUE, 'az-Cyrl-AZ' => TRUE, 'az-Latn-AZ' => TRUE, 'ba-RU' => TRUE, 'be-BY' => TRUE, 'bg-BG' => TRUE, 'bn-BD' => TRUE, 'bn-IN' => TRUE, 'bo-CN' => TRUE, 'br-FR' => TRUE, 'bs-Cyrl-BA' => TRUE, 'bs-Latn-BA' => TRUE, 'ca-ES' => TRUE, 'co-FR' => TRUE, 'cs-CZ' => TRUE, 'cy-GB' => TRUE, 'da-DK' => TRUE, 'de-AT' => TRUE, 'de-CH' => TRUE, 'de-DE' => TRUE, 'de-LI' => TRUE, 'de-LU' => TRUE, 'dsb-DE' => TRUE, 'dv-MV' => TRUE, 'el-GR' => TRUE, 'en-029' => TRUE, 'en-AU' => TRUE, 'en-BZ' => TRUE, 'en-CA' => TRUE, 'en-GB' => TRUE, 'en-IE' => TRUE, 'en-IN' => TRUE, 'en-JM' => TRUE, 'en-MY' => TRUE, 'en-NZ' => TRUE, 'en-PH' => TRUE, 'en-SG' => TRUE, 'en-TT' => TRUE, 'en-US' => TRUE, 'en-ZA' => TRUE, 'en-ZW' => TRUE, 'es-AR' => TRUE, 'es-BO' => TRUE, 'es-CL' => TRUE, 'es-CO' => TRUE, 'es-CR' => TRUE, 'es-DO' => TRUE, 'es-EC' => TRUE, 'es-ES' => TRUE, 'es-GT' => TRUE, 'es-HN' => TRUE, 'es-MX' => TRUE, 'es-NI' => TRUE, 'es-PA' => TRUE, 'es-PE' => TRUE, 'es-PR' => TRUE, 'es-PY' => TRUE, 'es-SV' => TRUE, 'es-US' => TRUE, 'es-UY' => TRUE, 'es-VE' => TRUE, 'et-EE' => TRUE, 'eu-ES' => TRUE, 'fa-IR' => TRUE, 'fi-FI' => TRUE, 'fil-PH' => TRUE, 'fo-FO' => TRUE, 'fr-BE' => TRUE, 'fr-CA' => TRUE, 'fr-CH' => TRUE, 'fr-FR' => TRUE, 'fr-LU' => TRUE, 'fr-MC' => TRUE, 'fy-NL' => TRUE, 'ga-IE' => TRUE, 'gd-GB' => TRUE, 'gl-ES' => TRUE, 'gsw-FR' => TRUE, 'gu-IN' => TRUE, 'ha-Latn-NG' => TRUE, 'he-IL' => TRUE, 'hi-IN' => TRUE, 'hr-BA' => TRUE, 'hr-HR' => TRUE, 'hsb-DE' => TRUE, 'hu-HU' => TRUE, 'hy-AM' => TRUE, 'id-ID' => TRUE, 'ig-NG' => TRUE, 'ii-CN' => TRUE, 'is-IS' => TRUE, 'it-CH' => TRUE, 'it-IT' => TRUE, 'iu-Cans-CA' => TRUE, 'iu-Latn-CA' => TRUE, 'ja-JP' => TRUE, 'ka-GE' => TRUE, 'kk-KZ' => TRUE, 'kl-GL' => TRUE, 'km-KH' => TRUE, 'kn-IN' => TRUE, 'kok-IN' => TRUE, 'ko-KR' => TRUE, 'ky-KG' => TRUE, 'lb-LU' => TRUE, 'lo-LA' => TRUE, 'lt-LT' => TRUE, 'lv-LV' => TRUE, 'mi-NZ' => TRUE, 'mk-MK' => TRUE, 'ml-IN' => TRUE, 'mn-MN' => TRUE, 'mn-Mong-CN' => TRUE, 'moh-CA' => TRUE, 'mr-IN' => TRUE, 'ms-BN' => TRUE, 'ms-MY' => TRUE, 'mt-MT' => TRUE, 'nb-NO' => TRUE, 'ne-NP' => TRUE, 'nl-BE' => TRUE, 'nl-NL' => TRUE, 'nn-NO' => TRUE, 'nso-ZA' => TRUE, 'oc-FR' => TRUE, 'or-IN' => TRUE, 'pa-IN' => TRUE, 'pl-PL' => TRUE, 'prs-AF' => TRUE, 'ps-AF' => TRUE, 'pt-BR' => TRUE, 'pt-PT' => TRUE, 'qut-GT' => TRUE, 'quz-BO' => TRUE, 'quz-EC' => TRUE, 'quz-PE' => TRUE, 'rm-CH' => TRUE, 'ro-RO' => TRUE, 'ru-RU' => TRUE, 'rw-RW' => TRUE, 'sah-RU' => TRUE, 'sa-IN' => TRUE, 'se-FI' => TRUE, 'se-NO' => TRUE, 'se-SE' => TRUE, 'si-LK' => TRUE, 'sk-SK' => TRUE, 'sl-SI' => TRUE, 'sma-NO' => TRUE, 'sma-SE' => TRUE, 'smj-NO' => TRUE, 'smj-SE' => TRUE, 'smn-FI' => TRUE, 'sms-FI' => TRUE, 'sq-AL' => TRUE, 'sr-Cyrl-BA' => TRUE, 'sr-Cyrl-CS' => TRUE, 'sr-Cyrl-ME' => TRUE, 'sr-Cyrl-RS' => TRUE, 'sr-Latn-BA' => TRUE, 'sr-Latn-CS' => TRUE, 'sr-Latn-ME' => TRUE, 'sr-Latn-RS' => TRUE, 'sv-FI' => TRUE, 'sv-SE' => TRUE, 'sw-KE' => TRUE, 'syr-SY' => TRUE, 'ta-IN' => TRUE, 'te-IN' => TRUE, 'tg-Cyrl-TJ' => TRUE, 'th-TH' => TRUE, 'tk-TM' => TRUE, 'tn-ZA' => TRUE, 'tr-TR' => TRUE, 'tt-RU' => TRUE, 'tzm-Latn-DZ' => TRUE, 'ug-CN' => TRUE, 'uk-UA' => TRUE, 'ur-PK' => TRUE, 'uz-Cyrl-UZ' => TRUE, 'uz-Latn-UZ' => TRUE, 'vi-VN' => TRUE, 'wo-SN' => TRUE, 'xh-ZA' => TRUE, 'yo-NG' => TRUE, 'zh-CN' => TRUE, 'zh-HK' => TRUE, 'zh-MO' => TRUE, 'zh-SG' => TRUE, 'zh-TW' => TRUE, 'zu-ZA' => TRUE)]]></default>
        <docblock line="23">
          <description><![CDATA[Common list of locales.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="23" name="see" description="\global\http://www.iana.org/assignments/language-subtag-registry" refers="\global\http://www.iana.org/assignments/language-subtag-registry"/>
          <tag line="23" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="247" namespace="global" package="Sutra">
        <name>$locale</name>
        <default><![CDATA['en-US']]></default>
        <docblock line="242">
          <description><![CDATA[The locale for the class.]]></description>
          <long-description><![CDATA[<p>Defaults to US English.</p>]]></long-description>
          <tag line="242" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="255" namespace="global" package="Sutra">
        <name>$fallback_locale</name>
        <default><![CDATA['en-US']]></default>
        <docblock line="249">
          <description><![CDATA[The fallback to use if the locale has no callback for the locale in use.]]></description>
          <long-description><![CDATA[<p>Defaults to US English.</p>]]></long-description>
          <tag line="249" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="262" namespace="global" package="Sutra">
        <name>$callbacks</name>
        <default><![CDATA[array('en-AU' => array('ordinal' => 'sNumber::ordinalNumberPrefixedCallback', 'ordinalSuffix' => 'sNumber::ordinalSuffix'), 'en-CA' => array('ordinal' => 'sNumber::ordinalNumberPrefixedCallback', 'ordinalSuffix' => 'sNumber::ordinalSuffix'), 'en-GB' => array('ordinal' => 'sNumber::ordinalNumberPrefixedCallback', 'ordinalSuffix' => 'sNumber::ordinalSuffix'), 'en-IE' => array('ordinal' => 'sNumber::ordinalNumberPrefixedCallback', 'ordinalSuffix' => 'sNumber::ordinalSuffix'), 'en-IN' => array('ordinal' => 'sNumber::ordinalNumberPrefixedCallback', 'ordinalSuffix' => 'sNumber::ordinalSuffix'), 'en-MT' => array('ordinal' => 'sNumber::ordinalNumberPrefixedCallback', 'ordinalSuffix' => 'sNumber::ordinalSuffix'), 'en-NZ' => array('ordinal' => 'sNumber::ordinalNumberPrefixedCallback', 'ordinalSuffix' => 'sNumber::ordinalSuffix'), 'en-PH' => array('ordinal' => 'sNumber::ordinalNumberPrefixedCallback', 'ordinalSuffix' => 'sNumber::ordinalSuffix'), 'en-SG' => array('ordinal' => 'sNumber::ordinalNumberPrefixedCallback', 'ordinalSuffix' => 'sNumber::ordinalSuffix'), 'en-US' => array('ordinal' => 'sNumber::ordinalNumberPrefixedCallback', 'ordinalSuffix' => 'sNumber::ordinalSuffix'), 'en-ZA' => array('ordinal' => 'sNumber::ordinalNumberPrefixedCallback', 'ordinalSuffix' => 'sNumber::ordinalSuffix'))]]></default>
        <docblock line="257">
          <description><![CDATA[Callbacks for other languages.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="257" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="317" package="Sutra">
        <name>tossIfInvalidLocale</name>
        <full_name>tossIfInvalidLocale</full_name>
        <docblock line="309">
          <description><![CDATA[Checks if a locale is valid.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="309" name="throws" description="If the locale is invalid." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="309" name="param" description="Locale to check." type="string" variable="$locale">
            <type by_reference="false">string</type>
          </tag>
          <tag line="309" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="317">
          <name>$locale</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="336" package="Sutra">
        <name>addDefaultCallbacks</name>
        <full_name>addDefaultCallbacks</full_name>
        <docblock line="327">
          <description><![CDATA[Adds an array of callbacks with the default methods in this class for a
  specified locale.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="327" name="throws" description="If the locale is invalid." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="327" name="param" description="Locale name, such as fr-FR." type="string" variable="$locale">
            <type by_reference="false">string</type>
          </tag>
          <tag line="327" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="336">
          <name>$locale</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="365" package="Sutra">
        <name>addCallback</name>
        <full_name>addCallback</full_name>
        <docblock line="348">
          <description><![CDATA[Add a callback that will be used in place of the ones here.]]></description>
          <long-description><![CDATA[<p>For use with different languages and locales.</p>

<p>All callbacks must receive one value, an integer, and return a string.</p>]]></long-description>
          <tag line="348" name="throws" description="If the method name or locale is invalid." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="348" name="param" description="The locale name. Should be a standard locale name such as en-GB, fr-FR, etc." type="string" variable="$locale">
            <type by_reference="false">string</type>
          </tag>
          <tag line="348" name="param" description="Method name in this class to override. One of: ordinal, ordinalSuffix. The instance methods will also use this callback." type="string" variable="$method_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="348" name="param" description="Callback to use." type="string|array" variable="$callback">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="348" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="365">
          <name>$locale</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="365">
          <name>$method_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="365">
          <name>$callback</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="393" package="Sutra">
        <name>removeLocale</name>
        <full_name>removeLocale</full_name>
        <docblock line="387">
          <description><![CDATA[Remove a locale's set of callbacks.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="387" name="param" description="Locale name." type="string" variable="$locale_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="387" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="393">
          <name>$locale_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="416" package="Sutra">
        <name>setLocale</name>
        <full_name>setLocale</full_name>
        <docblock line="406">
          <description><![CDATA[Set the current locale in use for this class.]]></description>
          <long-description><![CDATA[<p>If no callbacks yet exist,
  the defaults in this class will be assigned.</p>]]></long-description>
          <tag line="406" name="throws" description="If the locale is invalid." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="406" name="param" description="The locale name. Should be a standard locale name such as en-GB, fr-FR, etc." type="string" variable="$locale">
            <type by_reference="false">string</type>
          </tag>
          <tag line="406" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="416">
          <name>$locale</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="435" package="Sutra">
        <name>setFallbackLocale</name>
        <full_name>setFallbackLocale</full_name>
        <docblock line="427">
          <description><![CDATA[Set the fallback locale if the current locale set does not have a
  callback for the method requested.]]></description>
          <long-description><![CDATA[<p>If no callbacks yet exist,
  the defaults in this class will be assigned.</p>]]></long-description>
          <tag line="427" name="param" description="Locale name." type="string" variable="$locale">
            <type by_reference="false">string</type>
          </tag>
          <tag line="427" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="435">
          <name>$locale</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="453" package="Sutra">
        <name>getValidCallback</name>
        <full_name>getValidCallback</full_name>
        <docblock line="446">
          <description><![CDATA[Get the correct callback based on the locale and fallback locale set in
  the class.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="446" name="param" description="Method name to check for." type="string" variable="$fn">
            <type by_reference="false">string</type>
          </tag>
          <tag line="446" name="return" description="Callback name." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="453">
          <name>$fn</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="467" package="Sutra">
        <name>ordinal</name>
        <full_name>ordinal</full_name>
        <docblock line="461">
          <description><![CDATA[Format a number to be ordinal.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="461" name="param" description="Number to use." type="int" variable="$value">
            <type by_reference="false">int</type>
          </tag>
          <tag line="461" name="return" description="Number with proper English suffix." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="467">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="480" package="Sutra">
        <name>ordinalNumberPrefixedCallback</name>
        <full_name>ordinalNumberPrefixedCallback</full_name>
        <docblock line="471">
          <description><![CDATA[Callback for English ordinal numbers (where numbers come before the
  ordinal keyword).]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="471" name="internal" description=""/>
          <tag line="471" name="param" description="" type="integer" variable="$value">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="471" name="return" description="The value, formatted." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="480">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="491" package="Sutra">
        <name>ordinalSuffix</name>
        <full_name>ordinalSuffix</full_name>
        <docblock line="485">
          <description><![CDATA[Get the correct oridinal suffix for a number.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="485" name="param" description="Number to use." type="integer" variable="$value">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="485" name="return" description="Correct suffix." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="491">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="522" package="Sutra">
        <name>isEqualToIntCast</name>
        <full_name>isEqualToIntCast</full_name>
        <docblock line="516">
          <description><![CDATA[Checks if a number is equal to its integer-casted counterpart.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="516" name="param" description="Value to check." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="516" name="return" description="If the int-casted value is the same." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="522">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="535" package="Sutra">
        <name>getOrdinalSuffix</name>
        <full_name>getOrdinalSuffix</full_name>
        <docblock line="530">
          <description><![CDATA[Get the correct suffix for the current number.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="530" name="return" description="Correct English suffix." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="546" package="Sutra">
        <name>formatWithOrdinalSuffix</name>
        <full_name>formatWithOrdinalSuffix</full_name>
        <docblock line="539">
          <description><![CDATA[Get the number formatted with the oridinal suffix.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="539" name="param" description="If TRUE and all digits after the decimal place are 0, the decimal place and all zeros are removed." type="boolean" variable="$remove_zero_fraction">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="539" name="return" description="Number with proper English suffix." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="546">
          <name>$remove_zero_fraction</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file sutra/classes/sNumber.php</error>
    </parse_markers>
  </file>
  <file path="sutra/classes/sProcessException.php" hash="1588b9435fd3d53cbf4968a549794921" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="14" package="Sutra">
      <extends>\fUnexpectedException</extends>
      <name>sProcessException</name>
      <full_name>\sProcessException</full_name>
      <docblock line="2">
        <description><![CDATA[Exceptions specific to the class sProcess.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
        <tag line="2" name="version" description="1.2"/>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file sutra/classes/sProcessException.php</error>
    </parse_markers>
  </file>
  <file path="sutra/classes/sImage.php" hash="5cd870feba85dc9663fad64bbf5f6d79" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="18" package="Sutra">
      <extends>\fImage</extends>
      <name>sImage</name>
      <full_name>\sImage</full_name>
      <docblock line="2">
        <description><![CDATA[Provides more methods to fImage, most notably rotation based on EXIF data
  which may be present in the file.]]></description>
        <long-description><![CDATA[<p>Requires Flourish's fImage::determineProcessor() method to be made at least
  protected (at the moment it is private).</p>]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
        <tag line="2" name="version" description="1.2"/>
      </docblock>
      <constant namespace="global" line="24" package="Sutra">
        <name>DIRECTION_UPSIDE_UP</name>
        <full_name>DIRECTION_UPSIDE_UP</full_name>
        <value><![CDATA[0]]></value>
        <docblock line="19">
          <description><![CDATA[Rotation direction upside-up.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="19" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="31" package="Sutra">
        <name>DIRECTION_UPSIDE_DOWN</name>
        <full_name>DIRECTION_UPSIDE_DOWN</full_name>
        <value><![CDATA[1]]></value>
        <docblock line="26">
          <description><![CDATA[Rotation direction upside-down.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="26" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="38" package="Sutra">
        <name>DIRECTION_UPSIDE_LEFT</name>
        <full_name>DIRECTION_UPSIDE_LEFT</full_name>
        <value><![CDATA[2]]></value>
        <docblock line="33">
          <description><![CDATA[Rotation direction upside-left.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="33" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="45" package="Sutra">
        <name>DIRECTION_UPSIDE_RIGHT</name>
        <full_name>DIRECTION_UPSIDE_RIGHT</full_name>
        <value><![CDATA[3]]></value>
        <docblock line="40">
          <description><![CDATA[Rotation direction upside-right.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="40" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="52" package="Sutra">
        <name>FLIP_HORIZONTAL</name>
        <full_name>FLIP_HORIZONTAL</full_name>
        <value><![CDATA[0]]></value>
        <docblock line="47">
          <description><![CDATA[Flip direction horizontal.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="47" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="59" package="Sutra">
        <name>FLIP_VERTICAL</name>
        <full_name>FLIP_VERTICAL</full_name>
        <value><![CDATA[1]]></value>
        <docblock line="54">
          <description><![CDATA[Flip direction vertical.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="54" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="66" package="Sutra">
        <name>FLIP_BOTH</name>
        <full_name>FLIP_BOTH</full_name>
        <value><![CDATA[2]]></value>
        <docblock line="61">
          <description><![CDATA[Flip direction both ways.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="61" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="73" package="Sutra">
        <name>FLIP_NONE</name>
        <full_name>FLIP_NONE</full_name>
        <value><![CDATA[3]]></value>
        <docblock line="68">
          <description><![CDATA[No flip.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="68" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </constant>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="106" package="Sutra">
        <name>flip</name>
        <full_name>flip</full_name>
        <docblock line="75">
          <description><![CDATA[Flip the image in a specified direction.]]></description>
          <long-description><![CDATA[<p>If PECL Imagick class is
  not found, GD will be used.</p>

<p>Unlike fImage, these changes are immediate.</p>]]></long-description>
          <tag line="75" name="throws" description="If Imagick fails to return data, or if&#10;  an ImagickException is thrown." type="\fUnexpectedException">
            <type by_reference="false">\fUnexpectedException</type>
          </tag>
          <tag line="75" name="throws" description="If no image processor is found; if the image&#10;  type is invalid for GD.&#10;Additional notes:&#10;- To use ImageMagick (which is much faster), you must install the PECL&#10;  Imagick extension.&#10;- PJPEG is not supported if GD is used.&#10;- This overwrites the data in the file before returning (this is NOT&#10; part of the operation queue).&#10;If the second argument is of internal type boolean, it will be treated as&#10;  the $overwrite argument. The JPEG quality will be 90." type="\fEnvironmentException">
            <type by_reference="false">\fEnvironmentException</type>
          </tag>
          <tag line="75" name="param" description="One of the FLIP_* constants." type="integer" variable="$type">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="75" name="param" description="Because this saves changes to the file directly, if the image is JPEG, specify a quality from 0 (worst quality) to 100 (best quality). Default is 90." type="integer" variable="$jpeg_quality">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="75" name="param" description="If the file should be overwritten." type="boolean" variable="$overwrite">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="75" name="param" description="Override the processor. Must be one of: 'imagemagick', 'gd'. This is generally for testing purposes only." type="string" variable="$processor_override">
            <type by_reference="false">string</type>
          </tag>
          <tag line="75" name="return" description="The image object, to allow method chaining. If $overwrite&#10;  is FALSE, then a new sImage object is returned." type="\sImage">
            <type by_reference="false">\sImage</type>
          </tag>
        </docblock>
        <argument line="106">
          <name>$type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="106">
          <name>$jpeg_quality</name>
          <default><![CDATA[90]]></default>
          <type/>
        </argument>
        <argument line="106">
          <name>$overwrite</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
        <argument line="106">
          <name>$processor_override</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="276" package="Sutra">
        <name>rotateAccordingToEXIFData</name>
        <full_name>rotateAccordingToEXIFData</full_name>
        <docblock line="261">
          <description><![CDATA[Rotate an image a certain way based on EXIF information embedded.]]></description>
          <long-description><![CDATA[<p>Only
  JPEG and TIFF images are supported.</p>

<p>Unlike fImage, these changes are immediate.</p>]]></long-description>
          <tag line="261" name="throws" description="If the EXIF extension is not installed." type="\fEnvironmentException">
            <type by_reference="false">\fEnvironmentException</type>
          </tag>
          <tag line="261" name="param" description="Optional. One of the DIRECTION_* constant values. Default is up-side up." type="integer" variable="$direction">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="261" name="param" description="If the file should be overwritten." type="boolean" variable="$overwrite">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="261" name="param" description="JPEG quality on a scale from 0 to 100." type="integer" variable="$jpeg_quality">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="261" name="return" description="Object to allow method chaining. If $overwrite is FALSE,&#10;  then a new sImage object is returned." type="\sImage">
            <type by_reference="false">\sImage</type>
          </tag>
        </docblock>
        <argument line="276">
          <name>$direction</name>
          <default><![CDATA[self::DIRECTION_UPSIDE_UP]]></default>
          <type/>
        </argument>
        <argument line="276">
          <name>$overwrite</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
        <argument line="276">
          <name>$jpeg_quality</name>
          <default><![CDATA[90]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file sutra/classes/sImage.php</error>
    </parse_markers>
  </file>
  <file path="sutra/classes/sGrammar.php" hash="79e456d815d1ca57bdb712c9ae04ea62" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="14" package="Sutra">
      <extends>\fGrammar</extends>
      <name>sGrammar</name>
      <full_name>\sGrammar</full_name>
      <docblock line="2">
        <description><![CDATA[Extends fGrammar.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
        <tag line="2" name="version" description="1.2"/>
      </docblock>
      <constant namespace="global" line="15" package="Sutra">
        <name>addDashizeRule</name>
        <full_name>addDashizeRule</full_name>
        <value><![CDATA['sGrammar::addDashizeRule']]></value>
      </constant>
      <constant namespace="global" line="16" package="Sutra">
        <name>removeDashizeRule</name>
        <full_name>removeDashizeRule</full_name>
        <value><![CDATA['sGrammar::removeDashizeRule']]></value>
      </constant>
      <constant namespace="global" line="17" package="Sutra">
        <name>dashize</name>
        <full_name>dashize</full_name>
        <value><![CDATA['sGrammar::dashize']]></value>
      </constant>
      <property final="false" static="true" visibility="private" line="24" namespace="global" package="Sutra">
        <name>$dashize_cache</name>
        <default><![CDATA[array()]]></default>
        <docblock line="19">
          <description><![CDATA[Cache of strings that have been run through sGrammar::dashize().]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="19" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="31" namespace="global" package="Sutra">
        <name>$dashize_rules</name>
        <default><![CDATA[array()]]></default>
        <docblock line="26">
          <description><![CDATA[Exceptions for sGrammar::dashize().]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="42" package="Sutra">
        <name>addDashizeRule</name>
        <full_name>addDashizeRule</full_name>
        <docblock line="33">
          <description><![CDATA[Add an exception string for sGrammar::dashize().]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="33" name="param" description="Original string." type="string" variable="$original">
            <type by_reference="false">string</type>
          </tag>
          <tag line="33" name="param" description="The string to return in case this string is passed to sGrammar::dashize()." type="string" variable="$returnString">
            <type by_reference="false">string</type>
          </tag>
          <tag line="33" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="33" name="see" description="\global\sGrammar::removeDashizeRule()" refers="\global\sGrammar::removeDashizeRule()"/>
        </docblock>
        <argument line="42">
          <name>$original</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="42">
          <name>$returnString</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="57" package="Sutra">
        <name>removeDashizeRule</name>
        <full_name>removeDashizeRule</full_name>
        <docblock line="50">
          <description><![CDATA[Removes a rule used by sGrammar::dashize().]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="50" name="param" description="Original string that would be processed." type="string" variable="$original">
            <type by_reference="false">string</type>
          </tag>
          <tag line="50" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="50" name="see" description="\global\sGrammar::addDashizeRule()" refers="\global\sGrammar::addDashizeRule()"/>
        </docblock>
        <argument line="57">
          <name>$original</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="74" package="Sutra">
        <name>dashize</name>
        <full_name>dashize</full_name>
        <docblock line="67">
          <description><![CDATA[Converts an underscore_notation or camelCase notation to dash-notation.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="67" name="param" description="String to convert." type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="67" name="return" description="Converted string." type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="67" name="see" description="\global\sGrammar::addDashizeRule()" refers="\global\sGrammar::addDashizeRule()"/>
        </docblock>
        <argument line="74">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="111" package="Sutra">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="106">
          <description><![CDATA[Forces use as a static class.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="106" name="return" description="" type="\sGrammar">
            <type by_reference="false">\sGrammar</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file sutra/classes/sGrammar.php</error>
    </parse_markers>
  </file>
  <file path="sutra/classes/sHTTPRequest.php" hash="af7296ac7b75eac0514882b61cd18140" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="14" package="Sutra">
      <extends/>
      <name>sHTTPRequest</name>
      <full_name>\sHTTPRequest</full_name>
      <docblock line="2">
        <description><![CDATA[Interface to making HTTP requests.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2012 bne1."/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php"/>
        <tag line="2" name="package" description="Sutra"/>
        <tag line="2" name="link" description="http://www.sutralib.com/" link="http://www.sutralib.com/"/>
        <tag line="2" name="version" description="1.2"/>
      </docblock>
      <constant namespace="global" line="15" package="Sutra">
        <name>getJSON</name>
        <full_name>getJSON</full_name>
        <value><![CDATA['sHTTPRequest::getJSON']]></value>
      </constant>
      <property final="false" static="false" visibility="private" line="22" namespace="global" package="Sutra">
        <name>$url</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="17">
          <description><![CDATA[The URI to request from.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="17" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="29" namespace="global" package="Sutra">
        <name>$data</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="24">
          <description><![CDATA[The data received.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="24" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="36" namespace="global" package="Sutra">
        <name>$timeout</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="31">
          <description><![CDATA[HTTP timeout.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="31" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="43" namespace="global" package="Sutra">
        <name>$headers</name>
        <default><![CDATA[array('User-Agent' => 'Mozilla/5.0 Sutra-sHTTPRequest/1.2')]]></default>
        <docblock line="38">
          <description><![CDATA[The HTTP headers to use.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="38" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="50" namespace="global" package="Sutra">
        <name>$method</name>
        <default><![CDATA['GET']]></default>
        <docblock line="45">
          <description><![CDATA[The HTTP method.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="45" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="57" namespace="global" package="Sutra">
        <name>$protocol</name>
        <default><![CDATA['http']]></default>
        <docblock line="52">
          <description><![CDATA[The protocol.]]></description>
          <long-description><![CDATA[<p>Either https or http.</p>]]></long-description>
          <tag line="52" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="64" namespace="global" package="Sutra">
        <name>$content</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="59">
          <description><![CDATA[The content to POST or PUT.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="59" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="71" namespace="global" package="Sutra">
        <name>$proxy</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="66">
          <description><![CDATA[The proxy to use.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="66" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="78" namespace="global" package="Sutra">
        <name>$post_data_content_type</name>
        <default><![CDATA['application/x-www-form-urlencoded']]></default>
        <docblock line="73">
          <description><![CDATA[POST data content type.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="73" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="85" namespace="global" package="Sutra">
        <name>$authentication</name>
        <default><![CDATA[array()]]></default>
        <docblock line="80">
          <description><![CDATA[Authentication details.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="80" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="98" package="Sutra">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="87">
          <description><![CDATA[Constructor.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="87" name="throws" description="If the URL is not valid." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="87" name="param" description="Full URL to the resource." type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="87" name="param" description="HTTP method. One of: 'GET', 'POST', 'PUT', 'DELETE'." type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="87" name="param" description="Timeout. Will default to default_socket_timeout in php.ini if not specified." type="integer" variable="$timeout">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="87" name="return" description="The object." type="\sHTTPRequest">
            <type by_reference="false">\sHTTPRequest</type>
          </tag>
        </docblock>
        <argument line="98">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="98">
          <name>$method</name>
          <default><![CDATA['GET']]></default>
          <type/>
        </argument>
        <argument line="98">
          <name>$timeout</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="125" package="Sutra">
        <name>setHeaders</name>
        <full_name>setHeaders</full_name>
        <docblock line="116">
          <description><![CDATA[Set HTTP headers in simple array key => value format.]]></description>
          <long-description><![CDATA[<p>Example: array('User-Agent' => 'my custom user agent',
  'X-GData-Authorization-Key' => 'key');</p>]]></long-description>
          <tag line="116" name="param" description="Header to set." type="array" variable="$headers">
            <type by_reference="false">array</type>
          </tag>
          <tag line="116" name="return" description="The object to allow method chaining." type="\sHTTPRequest">
            <type by_reference="false">\sHTTPRequest</type>
          </tag>
        </docblock>
        <argument line="125">
          <name>$headers</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="141" package="Sutra">
        <name>setAcceptHeader</name>
        <full_name>setAcceptHeader</full_name>
        <docblock line="131">
          <description><![CDATA[Set the Accept header.]]></description>
          <long-description><![CDATA[<p>Some servers read this header and based upon its
  value, decide which content (and format) to return.</p>

<p>Example:
  text/html,application/xhtml+xml</p>]]></long-description>
          <tag line="131" name="param" description="Comma-delimited list of content types." type="string" variable="$content_types">
            <type by_reference="false">string</type>
          </tag>
          <tag line="131" name="return" description="The object to allow method chaining." type="\sHTTPRequest">
            <type by_reference="false">\sHTTPRequest</type>
          </tag>
        </docblock>
        <argument line="141">
          <name>$content_types</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="153" package="Sutra">
        <name>setCredentials</name>
        <full_name>setCredentials</full_name>
        <docblock line="146">
          <description><![CDATA[Set authentication details.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="146" name="param" description="User name." type="string" variable="$user_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="146" name="param" description="Password." type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="146" name="return" description="The object to allow method chaining." type="\sHTTPRequest">
            <type by_reference="false">\sHTTPRequest</type>
          </tag>
        </docblock>
        <argument line="153">
          <name>$user_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="153">
          <name>$password</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="165" package="Sutra">
        <name>setHeader</name>
        <full_name>setHeader</full_name>
        <docblock line="157">
          <description><![CDATA[Set a specific header.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="157" name="param" description="Name of the header. Content-Length is not supported (it is added dynamically)." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="157" name="param" description="Value of the header." type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="157" name="return" description="The object to allow method chaining." type="\sHTTPRequest">
            <type by_reference="false">\sHTTPRequest</type>
          </tag>
        </docblock>
        <argument line="165">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="165">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="180" package="Sutra">
        <name>setUserAgent</name>
        <full_name>setUserAgent</full_name>
        <docblock line="174">
          <description><![CDATA[Set the user agent header.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="174" name="param" description="User agent string." type="string" variable="$agent">
            <type by_reference="false">string</type>
          </tag>
          <tag line="174" name="return" description="The object to allow method chaining." type="\sHTTPRequest">
            <type by_reference="false">\sHTTPRequest</type>
          </tag>
        </docblock>
        <argument line="180">
          <name>$agent</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="193" package="Sutra">
        <name>setMethod</name>
        <full_name>setMethod</full_name>
        <docblock line="185">
          <description><![CDATA[Set the method.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="185" name="throws" description="If the method is not a valid HTTP method." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="185" name="param" description="HTTP method. One of: 'GET', 'POST', 'PUT', 'DELETE'." type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="185" name="return" description="The object to allow method chaining." type="\sHTTPRequest">
            <type by_reference="false">\sHTTPRequest</type>
          </tag>
        </docblock>
        <argument line="193">
          <name>$method</name>
          <default><![CDATA['GET']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="213" package="Sutra">
        <name>getHeaders</name>
        <full_name>getHeaders</full_name>
        <docblock line="206">
          <description><![CDATA[Get the HTTP headers.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="206" name="param" description="If TRUE, return the headers as a string according to standards (\r\n at the end of each header value)." type="boolean" variable="$as_string">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="206" name="return" description="Headers either as string or array." type="array|string">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="213">
          <name>$as_string</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="240" package="Sutra">
        <name>setPostDataContentType</name>
        <full_name>setPostDataContentType</full_name>
        <docblock line="234">
          <description><![CDATA[Sets the POST data content type.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="234" name="param" description="A mimetype." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="234" name="return" description="The object to allow method chaining." type="\sHTTPRequest">
            <type by_reference="false">\sHTTPRequest</type>
          </tag>
        </docblock>
        <argument line="240">
          <name>$type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="251" package="Sutra">
        <name>getData</name>
        <full_name>getData</full_name>
        <docblock line="245">
          <description><![CDATA[Gets the data from the source URI.]]></description>
          <long-description><![CDATA[<p>Will call connect() if necessary.</p>]]></long-description>
          <tag line="245" name="return" description="The data retrieved." type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="245" name="see" description="\global\sHTTPRequest::connect()" refers="\global\sHTTPRequest::connect()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="263" package="Sutra">
        <name>setContent</name>
        <full_name>setContent</full_name>
        <docblock line="256">
          <description><![CDATA[Set the content.]]></description>
          <long-description><![CDATA[<p>This is mainly for use with POST and PUT requests.</p>]]></long-description>
          <tag line="256" name="param" description="Content to POST or PUT." type="string|array" variable="$content">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="256" name="return" description="The object to allow method chaining." type="\sHTTPRequest">
            <type by_reference="false">\sHTTPRequest</type>
          </tag>
          <tag line="256" name="see" description="\global\http_build_query()" refers="\global\http_build_query()"/>
        </docblock>
        <argument line="263">
          <name>$content</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="277" package="Sutra">
        <name>getContent</name>
        <full_name>getContent</full_name>
        <docblock line="271">
          <description><![CDATA[Get the content set.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="271" name="return" description="The content set. Will return empty string if no content has&#10;  been set." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="287" package="Sutra">
        <name>setProxy</name>
        <full_name>setProxy</full_name>
        <docblock line="281">
          <description><![CDATA[Set a proxy to use.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="281" name="param" description="Proxy URI." type="string" variable="$proxy">
            <type by_reference="false">string</type>
          </tag>
          <tag line="281" name="return" description="The object to allow method chaining." type="\sHTTPRequest">
            <type by_reference="false">\sHTTPRequest</type>
          </tag>
        </docblock>
        <argument line="287">
          <name>$proxy</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="298" package="Sutra">
        <name>getProxy</name>
        <full_name>getProxy</full_name>
        <docblock line="292">
          <description><![CDATA[Gets the proxy in use.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="292" name="return" description="The proxy in use. Will return empty string if no proxy&#10;  has been set." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="307" package="Sutra">
        <name>removeProxy</name>
        <full_name>removeProxy</full_name>
        <docblock line="302">
          <description><![CDATA[Removes the proxy in use with this object.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="302" name="return" description="The object to allow method chaining." type="\sHTTPRequest">
            <type by_reference="false">\sHTTPRequest</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="320" package="Sutra">
        <name>connect</name>
        <full_name>connect</full_name>
        <docblock line="312">
          <description><![CDATA[Connect to the URI and get the data.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="312" name="throws" description="If the connection fails." type="\fUnexpectedException">
            <type by_reference="false">\fUnexpectedException</type>
          </tag>
          <tag line="312" name="param" description="Force re-fetching of the data." type="boolean" variable="$reconnect">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="312" name="return" description="The object to allow method chaining." type="\sHTTPRequest">
            <type by_reference="false">\sHTTPRequest</type>
          </tag>
        </docblock>
        <argument line="320">
          <name>$reconnect</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="361" package="Sutra">
        <name>send</name>
        <full_name>send</full_name>
        <docblock line="354">
          <description><![CDATA[Alias for connect().]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="354" name="param" description="Force re-fetching of the data." type="boolean" variable="$reconnect">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="354" name="return" description="The object to allow method chaining." type="\sHTTPRequest">
            <type by_reference="false">\sHTTPRequest</type>
          </tag>
          <tag line="354" name="see" description="\global\sHTTPRequest::connect()" refers="\global\sHTTPRequest::connect()"/>
        </docblock>
        <argument line="361">
          <name>$reconnect</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="380" package="Sutra">
        <name>getJSON</name>
        <full_name>getJSON</full_name>
        <docblock line="365">
          <description><![CDATA[Gets data from a JSON source and parses it through fJSON::decode() or
  json_decode() (if available).]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="365" name="throws" description="If the JSON decoding functions are not&#10;  available." type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="365" name="param" description="Full HTTP URL." type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="365" name="param" description="If the data should be returned as associative array." type="boolean" variable="$assoc">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="365" name="param" description="Timeout in seconds." type="integer" variable="$timeout">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="365" name="return" description="JSON decoded value. Can return NULL." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="365" name="see" description="\global\fJSON::decode()" refers="\global\fJSON::decode()"/>
          <tag line="365" name="see" description="\global\json_decode()" refers="\global\json_decode()"/>
        </docblock>
        <argument line="380">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="380">
          <name>$assoc</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
        <argument line="380">
          <name>$timeout</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file sutra/classes/sHTTPRequest.php</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fORMFile.php" hash="45191660200419f885ace933d02b60f2" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="44" package="Flourish">
      <extends/>
      <name>fORMFile</name>
      <full_name>\fORMFile</full_name>
      <docblock line="2">
        <description><![CDATA[Provides file manipulation functionality for fActiveRecord classes]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2008-2011 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fORMFile" link="http://flourishlib.com/fORMFile"/>
        <tag line="2" name="version" description="1.0.0b30"/>
        <tag line="2" name="changes" description="1.0.0b30  Updated code for the new fUpload API [wb, 2011-08-24]"/>
        <tag line="2" name="changes" description="1.0.0b29  Fixed a bug when uploading a new file to a column with an existing file that was not found on the filesystem [wb, 2011-05-10]"/>
        <tag line="2" name="changes" description="1.0.0b28  Backwards Compatibility Break - ::configureImageUploadColumn() no longer accepts the optional `$image_type` as the fourth parameter, instead ::addFImageMethodCall() must be called with `saveChanges` as the `$method` and the image type as the first parameter [wb, 2010-11-30]"/>
        <tag line="2" name="changes" description="1.0.0b27  Fixed column inheritance to properly handle non-images and inheriting into image upload columns [wb, 2010-09-18]"/>
        <tag line="2" name="changes" description="1.0.0b26  Enhanced ::configureColumnInheritance() to ensure both columns specified have been set up as file upload columns [wb, 2010-08-18]"/>
        <tag line="2" name="changes" description="1.0.0b25  Updated code to work with the new fORM API [wb, 2010-08-06]"/>
        <tag line="2" name="changes" description="1.0.0b24  Changed validation messages array to use column name keys [wb, 2010-05-26]"/>
        <tag line="2" name="changes" description="1.0.0b23  Fixed a bug with ::upload() that could cause a method called on a non-object error in relation to the upload directory not being defined [wb, 2010-05-10]"/>
        <tag line="2" name="changes" description="1.0.0b22  Updated the TEMP_DIRECTORY constant to not include the trailing slash, code now uses DIRECTORY_SEPARATOR to fix issues on Windows [wb, 2010-04-28]"/>
        <tag line="2" name="changes" description="1.0.0b21  Fixed ::set() to perform column inheritance, just like ::upload() does [wb, 2010-03-15]"/>
        <tag line="2" name="changes" description="1.0.0b20  Fixed the `set` and `process` methods to return the record instance, changed `upload` methods to return the fFile object, updated ::reflect() with new return values [wb, 2010-03-15]"/>
        <tag line="2" name="changes" description="1.0.0b19  Fixed a few missed instances of old fFile method names [wb, 2009-12-16]"/>
        <tag line="2" name="changes" description="1.0.0b18  Updated code for the new fFile API [wb, 2009-12-16]"/>
        <tag line="2" name="changes" description="1.0.0b17  Updated code for the new fORMDatabase and fORMSchema APIs [wb, 2009-10-28]"/>
        <tag line="2" name="changes" description="1.0.0b16  fImage method calls for file upload columns will no longer cause notices due to a missing image type [wb, 2009-09-09]"/>
        <tag line="2" name="changes" description="1.0.0b15  ::addFImageMethodCall() no longer requires column be an image upload column, inheritance to an image column now only happens for fImage objects [wb, 2009-07-29]"/>
        <tag line="2" name="changes" description="1.0.0b14  Updated to use new fORM::registerInspectCallback() method [wb, 2009-07-13]"/>
        <tag line="2" name="changes" description="1.0.0b13  Updated code for new fORM API [wb, 2009-06-15]"/>
        <tag line="2" name="changes" description="1.0.0b12  Changed replacement values in preg_replace() calls to be properly escaped [wb, 2009-06-11]"/>
        <tag line="2" name="changes" description="1.0.0b11  Updated code to use new fValidationException::formatField() method [wb, 2009-06-04]"/>
        <tag line="2" name="changes" description="1.0.0b10  Fixed a bug where an inherited file upload column would not be properly re-set with an `existing-` input [wb, 2009-05-26]"/>
        <tag line="2" name="changes" description="1.0.0b9   ::upload() and ::set() now set the `$values` entry to `NULL` for filenames that are empty [wb, 2009-03-02]"/>
        <tag line="2" name="changes" description="1.0.0b8   Changed ::set() to accept objects and reject directories [wb, 2009-01-21]"/>
        <tag line="2" name="changes" description="1.0.0b7   Changed the class to use the new fFilesystem::createObject() method [wb, 2009-01-21]"/>
        <tag line="2" name="changes" description="1.0.0b6   Old files are now checked against the current file to prevent removal of an in-use file [wb, 2008-12-23]"/>
        <tag line="2" name="changes" description="1.0.0b5   Fixed ::replicate() to ensure the temp directory exists and ::set() to use the temp directory [wb, 2008-12-23]"/>
        <tag line="2" name="changes" description="1.0.0b4   ::objectify() no longer throws an exception when a file can't be found [wb, 2008-12-18]"/>
        <tag line="2" name="changes" description="1.0.0b3   Added ::replicate() so that replicated files get pu in the temp directory [wb, 2008-12-12]"/>
        <tag line="2" name="changes" description="1.0.0b2   Fixed a bug with objectifying file columns [wb, 2008-11-24]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2008-05-28]"/>
      </docblock>
      <constant namespace="global" line="47" package="Flourish">
        <name>addFImageMethodCall</name>
        <full_name>addFImageMethodCall</full_name>
        <value><![CDATA['fORMFile::addFImageMethodCall']]></value>
      </constant>
      <constant namespace="global" line="48" package="Flourish">
        <name>addFUploadMethodCall</name>
        <full_name>addFUploadMethodCall</full_name>
        <value><![CDATA['fORMFile::addFUploadMethodCall']]></value>
      </constant>
      <constant namespace="global" line="49" package="Flourish">
        <name>begin</name>
        <full_name>begin</full_name>
        <value><![CDATA['fORMFile::begin']]></value>
      </constant>
      <constant namespace="global" line="50" package="Flourish">
        <name>commit</name>
        <full_name>commit</full_name>
        <value><![CDATA['fORMFile::commit']]></value>
      </constant>
      <constant namespace="global" line="51" package="Flourish">
        <name>configureColumnInheritance</name>
        <full_name>configureColumnInheritance</full_name>
        <value><![CDATA['fORMFile::configureColumnInheritance']]></value>
      </constant>
      <constant namespace="global" line="52" package="Flourish">
        <name>configureFileUploadColumn</name>
        <full_name>configureFileUploadColumn</full_name>
        <value><![CDATA['fORMFile::configureFileUploadColumn']]></value>
      </constant>
      <constant namespace="global" line="53" package="Flourish">
        <name>configureImageUploadColumn</name>
        <full_name>configureImageUploadColumn</full_name>
        <value><![CDATA['fORMFile::configureImageUploadColumn']]></value>
      </constant>
      <constant namespace="global" line="54" package="Flourish">
        <name>delete</name>
        <full_name>delete</full_name>
        <value><![CDATA['fORMFile::delete']]></value>
      </constant>
      <constant namespace="global" line="55" package="Flourish">
        <name>deleteOld</name>
        <full_name>deleteOld</full_name>
        <value><![CDATA['fORMFile::deleteOld']]></value>
      </constant>
      <constant namespace="global" line="56" package="Flourish">
        <name>encode</name>
        <full_name>encode</full_name>
        <value><![CDATA['fORMFile::encode']]></value>
      </constant>
      <constant namespace="global" line="57" package="Flourish">
        <name>inspect</name>
        <full_name>inspect</full_name>
        <value><![CDATA['fORMFile::inspect']]></value>
      </constant>
      <constant namespace="global" line="58" package="Flourish">
        <name>moveFromTemp</name>
        <full_name>moveFromTemp</full_name>
        <value><![CDATA['fORMFile::moveFromTemp']]></value>
      </constant>
      <constant namespace="global" line="59" package="Flourish">
        <name>objectify</name>
        <full_name>objectify</full_name>
        <value><![CDATA['fORMFile::objectify']]></value>
      </constant>
      <constant namespace="global" line="60" package="Flourish">
        <name>populate</name>
        <full_name>populate</full_name>
        <value><![CDATA['fORMFile::populate']]></value>
      </constant>
      <constant namespace="global" line="61" package="Flourish">
        <name>prepare</name>
        <full_name>prepare</full_name>
        <value><![CDATA['fORMFile::prepare']]></value>
      </constant>
      <constant namespace="global" line="62" package="Flourish">
        <name>process</name>
        <full_name>process</full_name>
        <value><![CDATA['fORMFile::process']]></value>
      </constant>
      <constant namespace="global" line="63" package="Flourish">
        <name>processImage</name>
        <full_name>processImage</full_name>
        <value><![CDATA['fORMFile::processImage']]></value>
      </constant>
      <constant namespace="global" line="64" package="Flourish">
        <name>reflect</name>
        <full_name>reflect</full_name>
        <value><![CDATA['fORMFile::reflect']]></value>
      </constant>
      <constant namespace="global" line="65" package="Flourish">
        <name>replicate</name>
        <full_name>replicate</full_name>
        <value><![CDATA['fORMFile::replicate']]></value>
      </constant>
      <constant namespace="global" line="66" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <value><![CDATA['fORMFile::reset']]></value>
      </constant>
      <constant namespace="global" line="67" package="Flourish">
        <name>rollback</name>
        <full_name>rollback</full_name>
        <value><![CDATA['fORMFile::rollback']]></value>
      </constant>
      <constant namespace="global" line="68" package="Flourish">
        <name>set</name>
        <full_name>set</full_name>
        <value><![CDATA['fORMFile::set']]></value>
      </constant>
      <constant namespace="global" line="69" package="Flourish">
        <name>upload</name>
        <full_name>upload</full_name>
        <value><![CDATA['fORMFile::upload']]></value>
      </constant>
      <constant namespace="global" line="70" package="Flourish">
        <name>validate</name>
        <full_name>validate</full_name>
        <value><![CDATA['fORMFile::validate']]></value>
      </constant>
      <constant namespace="global" line="80" package="Flourish">
        <name>TEMP_DIRECTORY</name>
        <full_name>TEMP_DIRECTORY</full_name>
        <value><![CDATA['__flourish_temp']]></value>
        <docblock line="73">
          <description><![CDATA[The temporary directory to use for various tasks]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="73" name="internal" description=""/>
          <tag line="73" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="true" visibility="private" line="88" namespace="global" package="Sutra">
        <name>$column_inheritence</name>
        <default><![CDATA[array()]]></default>
        <docblock line="83">
          <description><![CDATA[Defines how columns can inherit uploaded files]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="83" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="95" namespace="global" package="Sutra">
        <name>$fupload_method_calls</name>
        <default><![CDATA[array()]]></default>
        <docblock line="90">
          <description><![CDATA[Methods to be called on fUpload before the file is uploaded]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="90" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="102" namespace="global" package="Sutra">
        <name>$file_upload_columns</name>
        <default><![CDATA[array()]]></default>
        <docblock line="97">
          <description><![CDATA[Columns that can be filled by file uploads]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="97" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="109" namespace="global" package="Sutra">
        <name>$fimage_method_calls</name>
        <default><![CDATA[array()]]></default>
        <docblock line="104">
          <description><![CDATA[Methods to be called on the fImage instance]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="104" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="116" namespace="global" package="Sutra">
        <name>$image_upload_columns</name>
        <default><![CDATA[array()]]></default>
        <docblock line="111">
          <description><![CDATA[Columns that can be filled by image uploads]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="111" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="123" namespace="global" package="Sutra">
        <name>$transaction_level</name>
        <default><![CDATA[0]]></default>
        <docblock line="118">
          <description><![CDATA[Keeps track of the nesting level of the filesystem transaction so we know when to start, commit, rollback, etc]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="118" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="139" package="Flourish">
        <name>addFImageMethodCall</name>
        <full_name>addFImageMethodCall</full_name>
        <docblock line="126">
          <description><![CDATA[Adds an fImage method call to the image manipulation for a column if an image file is uploaded]]></description>
          <long-description><![CDATA[<p>Any call to fImage::saveChanges() will be called last. If no explicit
method call to fImage::saveChanges() is made, it will be called
implicitly with default parameters.</p>]]></long-description>
          <tag line="126" name="param" description="The class name or instance of the class" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="126" name="param" description="The column to call the method for" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="126" name="param" description="The fImage method to call" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="126" name="param" description="The parameters to pass to the method" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="126" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="139">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="139">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="139">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="139">
          <name>$parameters</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="173" package="Flourish">
        <name>addFUploadMethodCall</name>
        <full_name>addFUploadMethodCall</full_name>
        <docblock line="164">
          <description><![CDATA[Adds an fUpload method call to the fUpload initialization for a column]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="164" name="param" description="The class name or instance of the class" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="164" name="param" description="The column to call the method for" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="164" name="param" description="The fUpload method to call" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="164" name="param" description="The parameters to pass to the method" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="164" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="173">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="173">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="173">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="173">
          <name>$parameters</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="213" package="Flourish">
        <name>begin</name>
        <full_name>begin</full_name>
        <docblock line="206">
          <description><![CDATA[Begins a transaction, or increases the level]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="206" name="internal" description=""/>
          <tag line="206" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="235" package="Flourish">
        <name>commit</name>
        <full_name>commit</full_name>
        <docblock line="228">
          <description><![CDATA[Commits a transaction, or decreases the level]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="228" name="internal" description=""/>
          <tag line="228" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="258" package="Flourish">
        <name>compose</name>
        <full_name>compose</full_name>
        <docblock line="250">
          <description><![CDATA[Composes text using fText if loaded]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="250" name="param" description="The message to compose" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="250" name="param" description="A string or number to insert into the message" type="mixed" variable="$component">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="250" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="250" name="return" description="The composed and possible translated message" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="258">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="289" package="Flourish">
        <name>configureFileUploadColumn</name>
        <full_name>configureFileUploadColumn</full_name>
        <docblock line="273">
          <description><![CDATA[Sets a column to be a file upload column]]></description>
          <long-description><![CDATA[<p>Configuring a column to be a file upload column means that whenever
fActiveRecord::populate() is called for an fActiveRecord object, any
appropriately named file uploads (via <code>$_FILES</code>) will be moved into
the directory for this column.</p>

<p>Setting the column to a file path will cause the specified file to
be copied into the directory for this column.</p>]]></long-description>
          <tag line="273" name="param" description="The class name or instance of the class" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="273" name="param" description="The column to set as a file upload column" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="273" name="param" description="The directory to upload/move to" type="\fDirectory|string" variable="$directory">
            <type by_reference="false">\fDirectory</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="273" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="289">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="289">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="289">
          <name>$directory</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="384" package="Flourish">
        <name>configureColumnInheritance</name>
        <full_name>configureColumnInheritance</full_name>
        <docblock line="376">
          <description><![CDATA[Takes one file or image upload columns and sets it to inherit any uploaded/set files from another column]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="376" name="param" description="The class name or instance of the class" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="376" name="param" description="The column that will inherit the uploaded file" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="376" name="param" description="The column to inherit the uploaded file from" type="string" variable="$inherit_from_column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="376" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="384">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="384">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="384">
          <name>$inherit_from_column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="427" package="Flourish">
        <name>configureImageUploadColumn</name>
        <full_name>configureImageUploadColumn</full_name>
        <docblock line="414">
          <description><![CDATA[Sets a column to be an image upload column]]></description>
          <long-description><![CDATA[<p>This method works exactly the same as ::configureFileUploadColumn()
except that only image files are accepted.</p>

<p>To alter an image, including the file type, use ::addFImageMethodCall().</p>]]></long-description>
          <tag line="414" name="param" description="The class name or instance of the class" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="414" name="param" description="The column to set as a file upload column" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="414" name="param" description="The directory to upload to" type="\fDirectory|string" variable="$directory">
            <type by_reference="false">\fDirectory</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="414" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="427">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="427">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="427">
          <name>$directory</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="476" package="Flourish">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="464">
          <description><![CDATA[Deletes the files for this record]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="464" name="internal" description=""/>
          <tag line="464" name="param" description="The fActiveRecord instance" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="464" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="464" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="464" name="param" description="&amp;$related_records Any records related to this record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="464" name="param" description="&amp;$cache The cache array for the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="464" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="476">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="476">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="476">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="476">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="476">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="509" package="Flourish">
        <name>deleteOld</name>
        <full_name>deleteOld</full_name>
        <docblock line="497">
          <description><![CDATA[Deletes old files for this record that have been replaced by new ones]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="497" name="internal" description=""/>
          <tag line="497" name="param" description="The fActiveRecord instance" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="497" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="497" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="497" name="param" description="&amp;$related_records Any records related to this record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="497" name="param" description="&amp;$cache The cache array for the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="497" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="509">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="509">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="509">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="509">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="509">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="539" package="Flourish">
        <name>encode</name>
        <full_name>encode</full_name>
        <docblock line="525">
          <description><![CDATA[Encodes a file for output into an HTML `input` tag]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="525" name="internal" description=""/>
          <tag line="525" name="param" description="The fActiveRecord instance" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="525" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="525" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="525" name="param" description="&amp;$related_records Any records related to this record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="525" name="param" description="&amp;$cache The cache array for the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="525" name="param" description="The method that was called" type="string" variable="$method_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="525" name="param" description="The parameters passed to the method" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="525" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="539">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="539">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="539">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="539">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="539">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="539">
          <name>$method_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="539">
          <name>$parameters</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="563" package="Flourish">
        <name>inspect</name>
        <full_name>inspect</full_name>
        <docblock line="553">
          <description><![CDATA[Adds metadata about features added by this class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="553" name="internal" description=""/>
          <tag line="553" name="param" description="The class being inspected" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="553" name="param" description="The column being inspected" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="553" name="param" description="&amp;$metadata The array of metadata about a column" type="array" variable="$metadata">
            <type by_reference="false">array</type>
          </tag>
          <tag line="553" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="563">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="563">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="563">
          <name>$metadata</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="588" package="Flourish">
        <name>moveFromTemp</name>
        <full_name>moveFromTemp</full_name>
        <docblock line="576">
          <description><![CDATA[Moves uploaded files from the temporary directory to the permanent directory]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="576" name="internal" description=""/>
          <tag line="576" name="param" description="The fActiveRecord instance" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="576" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="576" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="576" name="param" description="&amp;$related_records Any records related to this record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="576" name="param" description="&amp;$cache The cache array for the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="576" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="588">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="588">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="588">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="588">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="588">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="615" package="Flourish">
        <name>objectify</name>
        <full_name>objectify</full_name>
        <docblock line="605">
          <description><![CDATA[Turns a filename into an fFile or fImage object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="605" name="internal" description=""/>
          <tag line="605" name="param" description="The class this value is for" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="605" name="param" description="The column the value is in" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="605" name="param" description="The value" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="605" name="return" description="The fFile, fImage or raw value" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="615">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="615">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="615">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="646" package="Flourish">
        <name>populate</name>
        <full_name>populate</full_name>
        <docblock line="634">
          <description><![CDATA[Performs the upload action for file uploads during fActiveRecord::populate()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="634" name="internal" description=""/>
          <tag line="634" name="param" description="The fActiveRecord instance" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="634" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="634" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="634" name="param" description="&amp;$related_records Any records related to this record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="634" name="param" description="&amp;$cache The cache array for the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="634" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="646">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="646">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="646">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="646">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="646">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="673" package="Flourish">
        <name>prepare</name>
        <full_name>prepare</full_name>
        <docblock line="659">
          <description><![CDATA[Prepares a file for output into HTML by returning filename or the web server path to the file]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="659" name="internal" description=""/>
          <tag line="659" name="param" description="The fActiveRecord instance" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="659" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="659" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="659" name="param" description="&amp;$related_records Any records related to this record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="659" name="param" description="&amp;$cache The cache array for the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="659" name="param" description="The method that was called" type="string" variable="$method_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="659" name="param" description="The parameters passed to the method" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="659" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="673">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="673">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="673">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="673">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="673">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="673">
          <name>$method_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="673">
          <name>$parameters</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="704" package="Flourish">
        <name>prepareTempDir</name>
        <full_name>prepareTempDir</full_name>
        <docblock line="698">
          <description><![CDATA[Takes a directory and creates a temporary directory inside of it - if the temporary folder exists, all files older than 6 hours will be deleted]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="698" name="param" description="The folder to create a temporary directory inside of" type="string" variable="$folder">
            <type by_reference="false">string</type>
          </tag>
          <tag line="698" name="return" description="The temporary directory for the folder specified" type="\fDirectory">
            <type by_reference="false">\fDirectory</type>
          </tag>
        </docblock>
        <argument line="704">
          <name>$folder</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="738" package="Flourish">
        <name>process</name>
        <full_name>process</full_name>
        <docblock line="724">
          <description><![CDATA[Handles re-processing an existing image file]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="724" name="internal" description=""/>
          <tag line="724" name="param" description="The fActiveRecord instance" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="724" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="724" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="724" name="param" description="&amp;$related_records Any records related to this record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="724" name="param" description="&amp;$cache The cache array for the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="724" name="param" description="The method that was called" type="string" variable="$method_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="724" name="param" description="The parameters passed to the method" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="724" name="return" description="The record object, to allow for method chaining" type="\fActiveRecord">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
        </docblock>
        <argument line="738">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="738">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="738">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="738">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="738">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="738">
          <name>$method_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="738">
          <name>$parameters</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="761" package="Flourish">
        <name>processImage</name>
        <full_name>processImage</full_name>
        <docblock line="751">
          <description><![CDATA[Performs image manipulation on an uploaded/set image]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="751" name="internal" description=""/>
          <tag line="751" name="param" description="The name of the class we are manipulating the image for" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="751" name="param" description="The column the image is assigned to" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="751" name="param" description="The image object to manipulate" type="\fFile" variable="$image">
            <type by_reference="false">\fFile</type>
          </tag>
          <tag line="751" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="761">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="761">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="761">
          <name>$image</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="804" package="Flourish">
        <name>reflect</name>
        <full_name>reflect</full_name>
        <docblock line="794">
          <description><![CDATA[Adjusts the fActiveRecord::reflect() signatures of columns that have been configured in this class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="794" name="internal" description=""/>
          <tag line="794" name="param" description="The class to reflect" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="794" name="param" description="&amp;$signatures The associative array of `{method name} =&gt; {signature}`" type="array" variable="$signatures">
            <type by_reference="false">array</type>
          </tag>
          <tag line="794" name="param" description="If doc comments should be included with the signature" type="boolean" variable="$include_doc_comments">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="794" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="804">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="804">
          <name>$signatures</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="804">
          <name>$include_doc_comments</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="928" package="Flourish">
        <name>replicate</name>
        <full_name>replicate</full_name>
        <docblock line="918">
          <description><![CDATA[Creates a copy of an uploaded file in the temp directory for the newly cloned record]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="918" name="internal" description=""/>
          <tag line="918" name="param" description="The class this value is for" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="918" name="param" description="The column the value is in" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="918" name="param" description="The value" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="918" name="return" description="The cloned fFile object" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="928">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="928">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="928">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="962" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="955">
          <description><![CDATA[Resets the configuration of the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="955" name="internal" description=""/>
          <tag line="955" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="980" package="Flourish">
        <name>rollback</name>
        <full_name>rollback</full_name>
        <docblock line="973">
          <description><![CDATA[Rolls back a transaction, or decreases the level]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="973" name="internal" description=""/>
          <tag line="973" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1011" package="Flourish">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="995">
          <description><![CDATA[Copies a file from the filesystem to the file upload directory and sets it as the file for the specified column]]></description>
          <long-description><![CDATA[<p>This method will perform the fImage calls defined for the column.</p>]]></long-description>
          <tag line="995" name="internal" description=""/>
          <tag line="995" name="param" description="The fActiveRecord instance" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="995" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="995" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="995" name="param" description="&amp;$related_records Any records related to this record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="995" name="param" description="&amp;$cache The cache array for the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="995" name="param" description="The method that was called" type="string" variable="$method_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="995" name="param" description="The parameters passed to the method" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="995" name="return" description="The record object, to allow for method chaining" type="\fActiveRecord">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
        </docblock>
        <argument line="1011">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1011">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1011">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1011">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1011">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1011">
          <name>$method_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1011">
          <name>$parameters</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="1096" package="Flourish">
        <name>setUpFUpload</name>
        <full_name>setUpFUpload</full_name>
        <docblock line="1089">
          <description><![CDATA[Sets up an fUpload object for a specific column]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1089" name="param" description="The class to set up for" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1089" name="param" description="The column to set up for" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1089" name="return" description="The configured fUpload object" type="\fUpload">
            <type by_reference="false">\fUpload</type>
          </tag>
        </docblock>
        <argument line="1096">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1096">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1131" package="Flourish">
        <name>upload</name>
        <full_name>upload</full_name>
        <docblock line="1117">
          <description><![CDATA[Uploads a file]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1117" name="internal" description=""/>
          <tag line="1117" name="param" description="The fActiveRecord instance" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="1117" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1117" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1117" name="param" description="&amp;$related_records Any records related to this record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1117" name="param" description="&amp;$cache The cache array for the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1117" name="param" description="The method that was called" type="string" variable="$method_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1117" name="param" description="The parameters passed to the method" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1117" name="return" description="The uploaded file" type="\fFile">
            <type by_reference="false">\fFile</type>
          </tag>
        </docblock>
        <argument line="1131">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1131">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1131">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1131">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1131">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1131">
          <name>$method_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1131">
          <name>$parameters</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1240" package="Flourish">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="1227">
          <description><![CDATA[Validates uploaded files to ensure they match all of the criteria defined]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1227" name="internal" description=""/>
          <tag line="1227" name="param" description="The fActiveRecord instance" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="1227" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1227" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1227" name="param" description="&amp;$related_records Any records related to this record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1227" name="param" description="&amp;$cache The cache array for the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1227" name="param" description="&amp;$validation_messages The existing validation messages" type="array" variable="$validation_messages">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1227" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1240">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1240">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1240">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1240">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1240">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1240">
          <name>$validation_messages</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1273" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="1268">
          <description><![CDATA[Forces use as a static class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1268" name="return" description="" type="\fORMFile">
            <type by_reference="false">\fORMFile</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fORMFile.php</error>
      <notice line="250" code="50013">Parameter $component could not be found in compose()</notice>
      <notice line="250" code="50013">Parameter  could not be found in compose()</notice>
    </parse_markers>
  </file>
  <file path="php/flourish/fSchema.php" hash="c1a92bec7e4ab06e4c8e2ae4f356e0f0" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="65" package="Flourish">
      <extends/>
      <name>fSchema</name>
      <full_name>\fSchema</full_name>
      <docblock line="2">
        <description><![CDATA[Gets schema information for the selected database]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2012 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fSchema" link="http://flourishlib.com/fSchema"/>
        <tag line="2" name="version" description="1.0.0b51"/>
        <tag line="2" name="changes" description="1.0.0b51  Fixed handling of getting tables in table creation order when a table references itself, fixed default value detection for the last column in a MySQL table [wb, 2012-01-12]"/>
        <tag line="2" name="changes" description="1.0.0b50  Fixed detection of explicitly named SQLite foreign key constraints [wb, 2011-08-23]"/>
        <tag line="2" name="changes" description="1.0.0b49  Added support for spatial/geometric data types in MySQL and PostgreSQL [wb, 2011-05-26]"/>
        <tag line="2" name="changes" description="1.0.0b48  Fixed a bug with ::getTables() not working on MySQL 4.x, fixed ::getKeys() to always return a reset array [wb, 2011-05-24]"/>
        <tag line="2" name="changes" description="1.0.0b47  Backwards Compatibility Break - ::getTables(), ::getColumnInfo(), ::getDatabases(), ::getKeys() and ::getRelationships() now return database, schema, table and column names in lowercase, added the `$creation_order` parameter to ::getTables(), fixed bugs with getting column and key information from MSSQL, Oracle and SQLite [wb, 2011-05-09]"/>
        <tag line="2" name="changes" description="1.0.0b46  Enhanced SQLite schema detection to cover situations where `UNIQUE` constraints are defined separately from the table and when comments are used in `CREATE TABLE` statements [wb, 2011-02-06]"/>
        <tag line="2" name="changes" description="1.0.0b45  Fixed Oracle auto incrementing detection to work with `INSERT OR UPDATE` triggers, fixed detection of dynamic default date/time/timestamp values for DB2 and Oracle [wb, 2010-12-04]"/>
        <tag line="2" name="changes" description="1.0.0b44  Fixed the list of valid elements for ::getColumnInfo() [wb, 2010-11-28]"/>
        <tag line="2" name="changes" description="1.0.0b43  Added the `comment` element to the information returned by ::getColumnInfo() [wb, 2010-11-28]"/>
        <tag line="2" name="changes" description="1.0.0b42  Fixed a bug with MySQL detecting default `ON DELETE` clauses [wb, 2010-10-19]"/>
        <tag line="2" name="changes" description="1.0.0b41  Fixed handling MySQL table names that require quoting [wb, 2010-08-24]"/>
        <tag line="2" name="changes" description="1.0.0b40  Fixed bugs in the documentation and error message of ::getColumnInfo() about what are valid elements [wb, 2010-07-21]"/>
        <tag line="2" name="changes" description="1.0.0b39  Fixed a regression where key detection SQL was not compatible with PostgreSQL 8.1 [wb, 2010-04-13]"/>
        <tag line="2" name="changes" description="1.0.0b38  Added Oracle support to ::getDatabases() [wb, 2010-04-13]"/>
        <tag line="2" name="changes" description="1.0.0b37  Fixed ::getDatabases() for MSSQL [wb, 2010-04-09]"/>
        <tag line="2" name="changes" description="1.0.0b36  Fixed PostgreSQL to properly report explicit `NULL` default values via ::getColumnInfo() [wb, 2010-03-30]"/>
        <tag line="2" name="changes" description="1.0.0b35  Added `max_length` values for various text and blob data types across all databases [wb, 2010-03-29]"/>
        <tag line="2" name="changes" description="1.0.0b34  Added `min_value` and `max_value` attributes to ::getColumnInfo() to specify the valid range for numeric columns [wb, 2010-03-16]"/>
        <tag line="2" name="changes" description="1.0.0b33  Changed it so that PostgreSQL unique indexes containing functions are ignored since they can't be properly detected at this point [wb, 2010-03-14]"/>
        <tag line="2" name="changes" description="1.0.0b32  Fixed ::getTables() to not include views for MySQL [wb, 2010-03-14]"/>
        <tag line="2" name="changes" description="1.0.0b31  Fixed the creation of the default caching key for ::enableCaching() [wb, 2010-03-02]"/>
        <tag line="2" name="changes" description="1.0.0b30  Fixed the class to work with lower privilege Oracle accounts and added detection of Oracle number columns [wb, 2010-01-25]"/>
        <tag line="2" name="changes" description="1.0.0b29  Added on_delete and on_update elements to one-to-one relationship info retrieved by ::getRelationships() [wb, 2009-12-16]"/>
        <tag line="2" name="changes" description="1.0.0b28  Fixed a bug with detecting some multi-column unique constraints in SQL Server databases [wb, 2009-11-13]"/>
        <tag line="2" name="changes" description="1.0.0b27  Added a parameter to ::enableCaching() to provide a key token that will allow cached values to be shared between multiple databases with the same schema [wb, 2009-10-28]"/>
        <tag line="2" name="changes" description="1.0.0b26  Added the placeholder element to the output of ::getColumnInfo(), added support for PostgreSQL, MSSQL and Oracle &quot;schemas&quot;, added support for parsing quoted SQLite identifiers [wb, 2009-10-22]"/>
        <tag line="2" name="changes" description="1.0.0b25  One-to-one relationships utilizing the primary key as a foreign key are now properly detected [wb, 2009-09-22]"/>
        <tag line="2" name="changes" description="1.0.0b24  Fixed MSSQL support to work with ODBC database connections [wb, 2009-09-18]"/>
        <tag line="2" name="changes" description="1.0.0b23  Fixed a bug where one-to-one relationships were being listed as many-to-one [wb, 2009-07-21]"/>
        <tag line="2" name="changes" description="1.0.0b22  PostgreSQL UNIQUE constraints that are created as indexes and not table constraints are now properly detected [wb, 2009-07-08]"/>
        <tag line="2" name="changes" description="1.0.0b21  Added support for the UUID data type in PostgreSQL [wb, 2009-06-18]"/>
        <tag line="2" name="changes" description="1.0.0b20  Add caching of merged info, improved performance of ::getColumnInfo() [wb, 2009-06-15]"/>
        <tag line="2" name="changes" description="1.0.0b19  Fixed a couple of bugs with ::setKeysOverride() [wb, 2009-06-04]"/>
        <tag line="2" name="changes" description="1.0.0b18  Added missing support for MySQL mediumint columns [wb, 2009-05-18]"/>
        <tag line="2" name="changes" description="1.0.0b17  Fixed a bug with ::clearCache() not properly reseting the tables and databases list [wb, 2009-05-13]"/>
        <tag line="2" name="changes" description="1.0.0b16  Backwards Compatibility Break - ::setCacheFile() changed to ::enableCaching() and now requires an fCache object, ::flushInfo() renamed to ::clearCache(), added Oracle support [wb, 2009-05-04]"/>
        <tag line="2" name="changes" description="1.0.0b15  Added support for the three different types of identifier quoting in SQLite [wb, 2009-03-28]"/>
        <tag line="2" name="changes" description="1.0.0b14  Added support for MySQL column definitions containing the COLLATE keyword [wb, 2009-03-28]"/>
        <tag line="2" name="changes" description="1.0.0b13  Fixed a bug with detecting PostgreSQL columns having both a CHECK constraint and a UNIQUE constraint [wb, 2009-02-27]"/>
        <tag line="2" name="changes" description="1.0.0b12  Fixed detection of multi-column primary keys in MySQL [wb, 2009-02-27]"/>
        <tag line="2" name="changes" description="1.0.0b11  Fixed an issue parsing MySQL tables with comments [wb, 2009-02-25]"/>
        <tag line="2" name="changes" description="1.0.0b10  Added the ::getDatabases() method [wb, 2009-02-24]"/>
        <tag line="2" name="changes" description="1.0.0b9   Now detects unsigned and zerofill MySQL data types that do not have a parenthetical part [wb, 2009-02-16]"/>
        <tag line="2" name="changes" description="1.0.0b8   Mapped the MySQL data type `'set'` to `'varchar'`, however valid values are not implemented yet [wb, 2009-02-01]"/>
        <tag line="2" name="changes" description="1.0.0b7   Fixed a bug with detecting MySQL timestamp columns [wb, 2009-01-28]"/>
        <tag line="2" name="changes" description="1.0.0b6   Fixed a bug with detecting MySQL columns that accept `NULL` [wb, 2009-01-19]"/>
        <tag line="2" name="changes" description="1.0.0b5   ::setColumnInfo(): fixed a bug with not grabbing the real database schema first, made general improvements [wb, 2009-01-19]"/>
        <tag line="2" name="changes" description="1.0.0b4   Added support for MySQL binary data types, numeric data type options unsigned and zerofill, and per-column character set definitions [wb, 2009-01-17]"/>
        <tag line="2" name="changes" description="1.0.0b3   Fixed detection of the data type of MySQL timestamp columns, added support for dynamic default date/time values [wb, 2009-01-11]"/>
        <tag line="2" name="changes" description="1.0.0b2   Fixed a bug with detecting multi-column unique keys in MySQL [wb, 2009-01-03]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2007-09-25]"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="72" namespace="global" package="Sutra">
        <name>$cache</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="67">
          <description><![CDATA[The place to cache to]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="67" name="var" description="" type="\fCache">
            <type by_reference="false">\fCache</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="79" namespace="global" package="Sutra">
        <name>$cache_prefix</name>
        <default><![CDATA[]]></default>
        <docblock line="74">
          <description><![CDATA[The cache prefix to use for cache entries]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="74" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="86" namespace="global" package="Sutra">
        <name>$column_info</name>
        <default><![CDATA[array()]]></default>
        <docblock line="81">
          <description><![CDATA[The cached column info]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="81" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="93" namespace="global" package="Sutra">
        <name>$column_info_override</name>
        <default><![CDATA[array()]]></default>
        <docblock line="88">
          <description><![CDATA[The column info to override]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="88" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="100" namespace="global" package="Sutra">
        <name>$database</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="95">
          <description><![CDATA[A reference to an instance of the fDatabase class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="95" name="var" description="" type="\fDatabase">
            <type by_reference="false">\fDatabase</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="107" namespace="global" package="Sutra">
        <name>$databases</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="102">
          <description><![CDATA[The databases on the current database server]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="102" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="114" namespace="global" package="Sutra">
        <name>$keys</name>
        <default><![CDATA[array()]]></default>
        <docblock line="109">
          <description><![CDATA[The cached key info]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="109" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="121" namespace="global" package="Sutra">
        <name>$keys_override</name>
        <default><![CDATA[array()]]></default>
        <docblock line="116">
          <description><![CDATA[The key info to override]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="116" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="128" namespace="global" package="Sutra">
        <name>$merged_column_info</name>
        <default><![CDATA[array()]]></default>
        <docblock line="123">
          <description><![CDATA[The merged column info]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="123" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="135" namespace="global" package="Sutra">
        <name>$merged_keys</name>
        <default><![CDATA[array()]]></default>
        <docblock line="130">
          <description><![CDATA[The merged key info]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="130" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="142" namespace="global" package="Sutra">
        <name>$relationships</name>
        <default><![CDATA[array()]]></default>
        <docblock line="137">
          <description><![CDATA[The relationships in the database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="137" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="149" namespace="global" package="Sutra">
        <name>$tables</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="144">
          <description><![CDATA[The tables in the database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="144" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="158" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="152">
          <description><![CDATA[Sets the database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="152" name="param" description="The fDatabase instance" type="\fDatabase" variable="$database">
            <type by_reference="false">\fDatabase</type>
          </tag>
          <tag line="152" name="return" description="" type="\fSchema">
            <type by_reference="false">\fSchema</type>
          </tag>
        </docblock>
        <argument line="158">
          <name>$database</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="172" package="Flourish">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="164">
          <description><![CDATA[All requests that hit this method should be requests for callbacks]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="164" name="internal" description=""/>
          <tag line="164" name="param" description="The method to create a callback for" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="164" name="return" description="The callback for the method requested" type="callback">
            <type by_reference="false">callback</type>
          </tag>
        </docblock>
        <argument line="172">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="185" package="Flourish">
        <name>checkForSingleColumnUniqueKey</name>
        <full_name>checkForSingleColumnUniqueKey</full_name>
        <docblock line="178">
          <description><![CDATA[Checks to see if a column is part of a single-column `UNIQUE` key]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="178" name="param" description="The table the column is located in" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="178" name="param" description="The column to check" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="178" name="return" description="If the column is part of a single-column unique key" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="185">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="185">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="206" package="Flourish">
        <name>clearCache</name>
        <full_name>clearCache</full_name>
        <docblock line="199">
          <description><![CDATA[Clears all of the schema info out of the object and, if set, the fCache object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="199" name="internal" description=""/>
          <tag line="199" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="234" package="Flourish">
        <name>determineTableCreationOrder</name>
        <full_name>determineTableCreationOrder</full_name>
        <docblock line="228">
          <description><![CDATA[Returns an ordered array of table names, in a valid table creation order]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="228" name="param" description="The only return this table and tables that rely on it" type="string" variable="$filter_table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="228" name="return" description="An array of table names" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="234">
          <name>$filter_table</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="299" package="Flourish">
        <name>enableCaching</name>
        <full_name>enableCaching</full_name>
        <docblock line="292">
          <description><![CDATA[Sets the schema to be cached to the fCache object specified]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="292" name="param" description="The cache to cache to" type="\fCache" variable="$cache">
            <type by_reference="false">\fCache</type>
          </tag>
          <tag line="292" name="param" description="Internal use only! (this will be used in the cache key to uniquely identify the cache for this fSchema object)" type="string" variable="$key_token">
            <type by_reference="false">string</type>
          </tag>
          <tag line="292" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="299">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="299">
          <name>$key_token</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="328" package="Flourish">
        <name>fetchColumnInfo</name>
        <full_name>fetchColumnInfo</full_name>
        <docblock line="322">
          <description><![CDATA[Gets the column info from the database for later access]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="322" name="param" description="The table to fetch the column info for" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="322" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="328">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="377" package="Flourish">
        <name>fetchDB2ColumnInfo</name>
        <full_name>fetchDB2ColumnInfo</full_name>
        <docblock line="371">
          <description><![CDATA[Gets the column info from a DB2 database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="371" name="param" description="The table to fetch the column info for" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="371" name="return" description="The column info for the table specified - see ::getColumnInfo() for details" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="377">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="535" package="Flourish">
        <name>fetchDB2Keys</name>
        <full_name>fetchDB2Keys</full_name>
        <docblock line="530">
          <description><![CDATA[Fetches the key info for a DB2 database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="530" name="return" description="The keys arrays for every table in the database - see ::getKeys() for details" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="693" package="Flourish">
        <name>fetchKeys</name>
        <full_name>fetchKeys</full_name>
        <docblock line="688">
          <description><![CDATA[Gets the `PRIMARY KEY`, `FOREIGN KEY` and `UNIQUE` key constraints from the database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="688" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="738" package="Flourish">
        <name>fetchMSSQLColumnInfo</name>
        <full_name>fetchMSSQLColumnInfo</full_name>
        <docblock line="732">
          <description><![CDATA[Gets the column info from a MSSQL database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="732" name="param" description="The table to fetch the column info for" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="732" name="return" description="The column info for the table specified - see ::getColumnInfo() for details" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="738">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="923" package="Flourish">
        <name>fetchMSSQLKeys</name>
        <full_name>fetchMSSQLKeys</full_name>
        <docblock line="918">
          <description><![CDATA[Fetches the key info for an MSSQL database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="918" name="return" description="The key info arrays for every table in the database - see ::getKeys() for details" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1045" package="Flourish">
        <name>fetchMySQLColumnInfo</name>
        <full_name>fetchMySQLColumnInfo</full_name>
        <docblock line="1039">
          <description><![CDATA[Gets the column info from a MySQL database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1039" name="param" description="The table to fetch the column info for" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1039" name="return" description="The column info for the table specified - see ::getColumnInfo() for details" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1045">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1220" package="Flourish">
        <name>fetchMySQLKeys</name>
        <full_name>fetchMySQLKeys</full_name>
        <docblock line="1215">
          <description><![CDATA[Fetches the keys for a MySQL database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1215" name="return" description="The keys arrays for every table in the database - see ::getKeys() for details" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1277" package="Flourish">
        <name>fetchOracleColumnInfo</name>
        <full_name>fetchOracleColumnInfo</full_name>
        <docblock line="1271">
          <description><![CDATA[Gets the column info from an Oracle database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1271" name="param" description="The table to fetch the column info for" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1271" name="return" description="The column info for the table specified - see ::getColumnInfo() for details" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1277">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1500" package="Flourish">
        <name>fetchOracleKeys</name>
        <full_name>fetchOracleKeys</full_name>
        <docblock line="1495">
          <description><![CDATA[Fetches the key info for an Oracle database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1495" name="return" description="The keys arrays for every table in the database - see ::getKeys() for details" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1624" package="Flourish">
        <name>fetchPostgreSQLColumnInfo</name>
        <full_name>fetchPostgreSQLColumnInfo</full_name>
        <docblock line="1618">
          <description><![CDATA[Gets the column info from a PostgreSQL database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1618" name="param" description="The table to fetch the column info for" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1618" name="return" description="The column info for the table specified - see ::getColumnInfo() for details" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1624">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1795" package="Flourish">
        <name>fetchPostgreSQLKeys</name>
        <full_name>fetchPostgreSQLKeys</full_name>
        <docblock line="1790">
          <description><![CDATA[Fetches the key info for a PostgreSQL database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1790" name="return" description="The keys arrays for every table in the database - see ::getKeys() for details" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1964" package="Flourish">
        <name>fetchSQLiteColumnInfo</name>
        <full_name>fetchSQLiteColumnInfo</full_name>
        <docblock line="1958">
          <description><![CDATA[Gets the column info from a SQLite database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1958" name="param" description="The table to fetch the column info for" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1958" name="return" description="The column info for the table specified - see ::getColumnInfo() for details" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1964">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="2080" package="Flourish">
        <name>fetchSQLiteKeys</name>
        <full_name>fetchSQLiteKeys</full_name>
        <docblock line="2075">
          <description><![CDATA[Fetches the key info for an SQLite database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2075" name="return" description="The keys arrays for every table in the database - see ::getKeys() for details" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="2203" package="Flourish">
        <name>findManyToManyRelationships</name>
        <full_name>findManyToManyRelationships</full_name>
        <docblock line="2197">
          <description><![CDATA[Finds many-to-many relationship for the table specified]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2197" name="param" description="The table to find the relationships on" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2197" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="2203">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="2243" package="Flourish">
        <name>findOneToManyRelationships</name>
        <full_name>findOneToManyRelationships</full_name>
        <docblock line="2237">
          <description><![CDATA[Finds one-to-many relationship for the table specified]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2237" name="param" description="The table to find the relationships on" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2237" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="2243">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="2265" package="Flourish">
        <name>findStarToOneRelationships</name>
        <full_name>findStarToOneRelationships</full_name>
        <docblock line="2259">
          <description><![CDATA[Finds one-to-one and many-to-one relationship for the table specified]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2259" name="param" description="The table to find the relationships on" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2259" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="2265">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="2288" package="Flourish">
        <name>findRelationships</name>
        <full_name>findRelationships</full_name>
        <docblock line="2283">
          <description><![CDATA[Finds the one-to-one, many-to-one, one-to-many and many-to-many relationships in the database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2283" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2418" package="Flourish">
        <name>getColumnInfo</name>
        <full_name>getColumnInfo</full_name>
        <docblock line="2317">
          <description><![CDATA[Returns column information for the table specified]]></description>
          <long-description><![CDATA[<p>If only a table is specified, column info is in the following format:</p>

<p>{{{
array(
    (string) {column name} => array(
        'type'           => (string)  {data type},
        'placeholder'    => (string)  {fDatabase::escape() placeholder for this data type},
        'not_null'       => (boolean) {if value can't be null},
        'default'        => (mixed)   {the default value},
        'valid_values'   => (array)   {the valid values for a varchar field},
        'max_length'     => (integer) {the maximum length in a varchar field},
        'min_value'      => (numeric) {the minimum value for an integer/float field},
        'max_value'      => (numeric) {the maximum value for an integer/float field},
        'decimal_places' => (integer) {the number of decimal places for a decimal/numeric/money/smallmoney field},
        'auto_increment' => (boolean) {if the integer primary key column is a serial/autoincrement/auto_increment/indentity column},
        'comment'        => (string)  {the SQL comment/description for the column}
    ), ...
)
}}}</p>

<p>If a table and column are specified, column info is in the following format:</p>

<p>{{{
array(
    'type'           => (string)  {data type},
    'placeholder'    => (string)  {fDatabase::escape() placeholder for this data type},
    'not_null'       => (boolean) {if value can't be null},
    'default'        => (mixed)   {the default value-may contain special strings CURRENT_TIMESTAMP, CURRENT_TIME or CURRENT_DATE},
    'valid_values'   => (array)   {the valid values for a varchar field},
    'max_length'     => (integer) {the maximum length in a char/varchar field},
    'min_value'      => (fNumber) {the minimum value for an integer/float field},
    'max_value'      => (fNumber) {the maximum value for an integer/float field},
    'decimal_places' => (integer) {the number of decimal places for a decimal/numeric/money/smallmoney field},
    'auto_increment' => (boolean) {if the integer primary key column is a serial/autoincrement/auto_increment/indentity column},
    'comment'        => (string)  {the SQL comment/description for the column}
)
}}}</p>

<p>If a table, column and element are specified, returned value is the single element specified.</p>

<p>The <code>'type'</code> element is homogenized to a value from the following list:</p>

<ul>
<li><code>'varchar'</code></li>
<li><code>'char'</code></li>
<li><code>'text'</code></li>
<li><code>'integer'</code></li>
<li><code>'float'</code></li>
<li><code>'timestamp'</code></li>
<li><code>'date'</code></li>
<li><code>'time'</code></li>
<li><code>'boolean'</code></li>
<li><code>'blob'</code></li>
</ul>

<p>Please note that MySQL reports boolean data types as <code>tinyint(1)</code>, so
all <code>tinyint(1)</code> columns will be listed as <code>boolean</code>. This can be fixed
by calling:</p>

<p>{{{</p>

<h1>!php</h1>

<p>$schema->setColumnInfoOverride(
    array(
        'type'        => 'integer',
        'placeholder' => '%i',
        'default'     => {default integer},
        'min_value'   => new fNumber(-128),
        'max_value'   => new fNumber(127)
    ),
    '{table name}',
    '{column name}'
);
}}}</p>

<p>The <code>'comment'</code> element pulls from the database's column comment facility
with the exception of MSSQL and SQLite.</p>

<p>For MSSQL, the comment is pulled from the <code>MS_Description</code> extended
property, which can be added via the <code>Description</code> field in SQL Server
Management Studio, or via the <code>sp_addextendedproperty</code> stored procedure.</p>

<p>For SQLite, the comment is extracted from any SQL comment that is placed
at the end of the line on which the column is defined:</p>

<p>{{{</p>

<h1>!sql</h1>

<p>CREATE TABLE users (
    user_id INTEGER PRIMARY KEY AUTOINCREMENT,
    name VARCHAR(200) NOT NULL -- This is the full name
);
}}}</p>

<p>For the SQLite <code>users</code> table defined above, the <code>name</code> column will have
the comment <code>This is the full name</code>.</p>]]></long-description>
          <tag line="2317" name="param" description="The table to get the column info for" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2317" name="param" description="The column to get the info for" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2317" name="param" description="The element to return: `'type'`, `'placeholder'`, `'not_null'`, `'default'`, `'valid_values'`, `'max_length'`, `'min_value'`, `'max_value'`, `'decimal_places'`, `'auto_increment'`, `'comment'`" type="string" variable="$element">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2317" name="return" description="The column info for the table/column/element specified - see method description for format" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="2418">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2418">
          <name>$column</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="2418">
          <name>$element</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2478" package="Flourish">
        <name>getDatabases</name>
        <full_name>getDatabases</full_name>
        <docblock line="2473">
          <description><![CDATA[Returns the databases on the current server]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2473" name="return" description="The databases on the current server" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2562" package="Flourish">
        <name>getKeys</name>
        <full_name>getKeys</full_name>
        <docblock line="2531">
          <description><![CDATA[Returns a list of primary key, foreign key and unique key constraints for the table specified]]></description>
          <long-description><![CDATA[<p>The structure of the returned array is:</p>

<p>{{{
array(
     'primary' => array(
         {column name}, ...
     ),
     'unique'  => array(
         array(
             {column name}, ...
         ), ...
     ),
     'foreign' => array(
         array(
             'column'         => {column name},
             'foreign_table'  => {foreign table name},
             'foreign_column' => {foreign column name},
             'on_delete'      => {the ON DELETE action: 'no_action', 'restrict', 'cascade', 'set_null', or 'set_default'},
             'on_update'      => {the ON UPDATE action: 'no_action', 'restrict', 'cascade', 'set_null', or 'set_default'}
         ), ...
     )
)
}}}</p>]]></long-description>
          <tag line="2531" name="param" description="The table to return the keys for" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2531" name="param" description="The type of key to return: `'primary'`, `'foreign'`, `'unique'`" type="string" variable="$key_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2531" name="return" description="An array of all keys, or just the type specified - see method description for format" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="2562">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2562">
          <name>$key_type</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2660" package="Flourish">
        <name>getRelationships</name>
        <full_name>getRelationships</full_name>
        <docblock line="2605">
          <description><![CDATA[Returns a list of one-to-one, many-to-one, one-to-many and many-to-many relationships for the table specified]]></description>
          <long-description><![CDATA[<p>The structure of the returned array is:</p>

<p>{{{
array(
    'one-to-one' => array(
        array(
            'table'          => (string) {the name of the table this relationship is for},
            'column'         => (string) {the column in the specified table},
            'related_table'  => (string) {the related table},
            'related_column' => (string) {the related column},
            'on_delete'      => (string) {the ON DELETE action: 'no_action', 'restrict', 'cascade', 'set_null', or 'set_default'},
            'on_update'      => (string) {the ON UPDATE action: 'no_action', 'restrict', 'cascade', 'set_null', or 'set_default'}
        ), ...
    ),
    'many-to-one' => array(
        array(
            'table'          => (string) {the name of the table this relationship is for},
            'column'         => (string) {the column in the specified table},
            'related_table'  => (string) {the related table},
            'related_column' => (string) {the related column}
        ), ...
    ),
    'one-to-many' => array(
        array(
            'table'          => (string) {the name of the table this relationship is for},
            'column'         => (string) {the column in the specified table},
            'related_table'  => (string) {the related table},
            'related_column' => (string) {the related column},
            'on_delete'      => (string) {the ON DELETE action: 'no_action', 'restrict', 'cascade', 'set_null', or 'set_default'},
            'on_update'      => (string) {the ON UPDATE action: 'no_action', 'restrict', 'cascade', 'set_null', or 'set_default'}
        ), ...
    ),
    'many-to-many' => array(
        array(
            'table'               => (string) {the name of the table this relationship is for},
            'column'              => (string) {the column in the specified table},
            'related_table'       => (string) {the related table},
            'related_column'      => (string) {the related column},
            'join_table'          => (string) {the table that joins the specified table to the related table},
            'join_column'         => (string) {the column in the join table that references 'column'},
            'join_related_column' => (string) {the column in the join table that references 'related_column'},
            'on_delete'           => (string) {the ON DELETE action: 'no_action', 'restrict', 'cascade', 'set_null', or 'set_default'},
            'on_update'           => (string) {the ON UPDATE action: 'no_action', 'restrict', 'cascade', 'set_null', or 'set_default'}
        ), ...
    )
)
}}}</p>]]></long-description>
          <tag line="2605" name="param" description="The table to return the relationships for" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2605" name="param" description="The type of relationship to return: `'one-to-one'`, `'many-to-one'`, `'one-to-many'`, `'many-to-many'`" type="string" variable="$relationship_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2605" name="return" description="An array of all relationships, or just the type specified - see method description for format" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="2660">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2660">
          <name>$relationship_type</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2706" package="Flourish">
        <name>getTables</name>
        <full_name>getTables</full_name>
        <docblock line="2700">
          <description><![CDATA[Returns the tables in the current database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2700" name="param" description="`TRUE` to return in a valid table creation order, or a table name to return that table and any tables that depend on it, in table creation order" type="boolean|string" variable="$creation_order">
            <type by_reference="false">boolean</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="2700" name="return" description="The tables in the current database, all converted to lowercase" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="2706">
          <name>$creation_order</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="2865" package="Flourish">
        <name>isJoiningTable</name>
        <full_name>isJoiningTable</full_name>
        <docblock line="2859">
          <description><![CDATA[Determines if a table is a joining table]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2859" name="param" description="The table to check" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2859" name="return" description="If the table is a joining table" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="2865">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="2894" package="Flourish">
        <name>makeCachePrefix</name>
        <full_name>makeCachePrefix</full_name>
        <docblock line="2889">
          <description><![CDATA[Creates a unique cache prefix to help prevent cache conflicts]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2889" name="return" description="The cache prefix to use" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="2920" package="Flourish">
        <name>mergeColumnInfo</name>
        <full_name>mergeColumnInfo</full_name>
        <docblock line="2915">
          <description><![CDATA[Merges the column info with the column info override]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2915" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="3005" package="Flourish">
        <name>mergeKeys</name>
        <full_name>mergeKeys</full_name>
        <docblock line="3000">
          <description><![CDATA[Merges the keys with the keys override]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="3000" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="3077" package="Flourish">
        <name>setColumnInfoOverride</name>
        <full_name>setColumnInfoOverride</full_name>
        <docblock line="3025">
          <description><![CDATA[Allows overriding of column info]]></description>
          <long-description><![CDATA[<p>Performs an array merge with the column info detected from the database.</p>

<p>To erase a whole table, set the <code>$column_info</code> to <code>NULL</code>. To erase a
column, set the <code>$column_info</code> for that column to <code>NULL</code>.</p>

<p>If the <code>$column_info</code> parameter is not <code>NULL</code>, it should be an
associative array containing one or more of the following keys. Please
see ::getColumnInfo() for a description of each.
 - <code>'type'</code>
 - <code>'placeholder'</code>
 - <code>'not_null'</code>
 - <code>'default'</code>
 - <code>'valid_values'</code>
 - <code>'max_length'</code>
 - <code>'min_value'</code>
 - <code>'max_value'</code>
 - <code>'decimal_places'</code>
 - <code>'auto_increment'</code>
 - <code>'comment'</code></p>

<p>The following keys may be set to <code>NULL</code>:
 - <code>'not_null'</code>
 - <code>'default'</code>
 - <code>'valid_values'</code>
 - <code>'max_length'</code>
 - <code>'min_value'</code>
 - <code>'max_value'</code>
 - <code>'decimal_places'</code>
 - <code>'comment'</code></p>

<p>The key <code>'auto_increment'</code> should be a boolean.</p>

<p>The <code>'type'</code> key should be one of:
 - <code>'blob'</code>
 - <code>'boolean'</code>
 - <code>'char'</code>
 - <code>'date'</code>
 - <code>'float'</code>
 - <code>'integer'</code>
 - <code>'text'</code>
 - <code>'time'</code>
 - <code>'timestamp'</code>
 - <code>'varchar'</code></p>]]></long-description>
          <tag line="3025" name="param" description="The modified column info - see method description for format" type="array" variable="$column_info">
            <type by_reference="false">array</type>
          </tag>
          <tag line="3025" name="param" description="The table to override" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="3025" name="param" description="The column to override" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="3025" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="3077">
          <name>$column_info</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="3077">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="3077">
          <name>$column</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="3107" package="Flourish">
        <name>setKeysOverride</name>
        <full_name>setKeysOverride</full_name>
        <docblock line="3099">
          <description><![CDATA[Allows overriding of key info.]]></description>
          <long-description><![CDATA[<p>Replaces existing info, so be sure to provide full key info for type selected or all types.</p>]]></long-description>
          <tag line="3099" name="param" description="The modified keys - see ::getKeys() for format" type="array" variable="$keys">
            <type by_reference="false">array</type>
          </tag>
          <tag line="3099" name="param" description="The table to override" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="3099" name="param" description="The key type to override: `'primary'`, `'foreign'`, `'unique'`" type="string" variable="$key_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="3099" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="3107">
          <name>$keys</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="3107">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="3107">
          <name>$key_type</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fSchema.php</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fXML.php" hash="6935fe7792b241d65a323275453f482d" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="26" package="Flourish">
      <extends/>
      <implements>\ArrayAccess</implements>
      <name>fXML</name>
      <full_name>\fXML</full_name>
      <docblock line="2">
        <description><![CDATA[Provides functionality for XML files]]></description>
        <long-description><![CDATA[<p>This class is implemented to use the UTF-8 character encoding. Please see
http://flourishlib.com/docs/UTF-8 for more information.</p>]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2011 Will Bond, others"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="author" description="Craig Ruksznis [cr-imarc] &lt;craigruk@imarc.net&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fXML" link="http://flourishlib.com/fXML"/>
        <tag line="2" name="version" description="1.0.0b8"/>
        <tag line="2" name="changes" description="1.0.0b8  Fixed a method signature [wb, 2011-08-24]"/>
        <tag line="2" name="changes" description="1.0.0b7  Added a workaround for iconv having issues in MAMP 1.9.4+ [wb, 2011-07-26]"/>
        <tag line="2" name="changes" description="1.0.0b6  Updated class to use fCore::startErrorCapture() instead of `error_reporting()` [wb, 2010-08-09]"/>
        <tag line="2" name="changes" description="1.0.0b5  Added the `$fix_entities_encoding` parameter to ::__construct() [cr-imarc+wb, 2010-08-08]"/>
        <tag line="2" name="changes" description="1.0.0b4  Updated the class to automatically add a `__` prefix for the default namespace and to use that for attribute and child element access [wb, 2010-04-06]"/>
        <tag line="2" name="changes" description="1.0.0b3  Added the `$http_timeout` parameter to ::__construct() [wb, 2009-09-16]"/>
        <tag line="2" name="changes" description="1.0.0b2  Added instance functionality for reading of XML files [wb, 2009-09-01]"/>
        <tag line="2" name="changes" description="1.0.0b   The initial implementation [wb, 2008-01-13]"/>
      </docblock>
      <constant namespace="global" line="29" package="Flourish">
        <name>encode</name>
        <full_name>encode</full_name>
        <value><![CDATA['fXML::encode']]></value>
      </constant>
      <constant namespace="global" line="30" package="Flourish">
        <name>sendHeader</name>
        <full_name>sendHeader</full_name>
        <value><![CDATA['fXML::sendHeader']]></value>
      </constant>
      <property final="false" static="false" visibility="protected" line="77" namespace="global" package="Sutra">
        <name>$__custom_prefixes</name>
        <default><![CDATA[]]></default>
        <docblock line="72">
          <description><![CDATA[Custom prefix => namespace URI mappings]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="72" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="84" namespace="global" package="Sutra">
        <name>$__dom</name>
        <default><![CDATA[]]></default>
        <docblock line="79">
          <description><![CDATA[The dom element for this XML]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="79" name="var" description="" type="\DOMElement">
            <type by_reference="false">\DOMElement</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="91" namespace="global" package="Sutra">
        <name>$__xpath</name>
        <default><![CDATA[]]></default>
        <docblock line="86">
          <description><![CDATA[An XPath object for performing xpath lookups]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="86" name="var" description="" type="\DOMXPath">
            <type by_reference="false">\DOMXPath</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="98" namespace="global" package="Sutra">
        <name>$__xml</name>
        <default><![CDATA[]]></default>
        <docblock line="93">
          <description><![CDATA[The XML string for serialization]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="93" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="39" package="Flourish">
        <name>encode</name>
        <full_name>encode</full_name>
        <docblock line="33">
          <description><![CDATA[Encodes content for display in a UTF-8 encoded XML document]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="33" name="param" description="The content to encode" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="33" name="return" description="The encoded content" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="39">
          <name>$content</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="55" package="Flourish">
        <name>iconv</name>
        <full_name>iconv</full_name>
        <docblock line="45">
          <description><![CDATA[This works around a bug in MAMP 1.9.4+ and PHP 5.3 where iconv()
does not seem to properly assign the return value to a variable, but
does work when returning the value.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="45" name="param" description="The incoming character encoding" type="string" variable="$in_charset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="45" name="param" description="The outgoing character encoding" type="string" variable="$out_charset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="45" name="param" description="The string to convert" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="45" name="return" description="The converted string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="55">
          <name>$in_charset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="55">
          <name>$out_charset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="55">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="66" package="Flourish">
        <name>sendHeader</name>
        <full_name>sendHeader</full_name>
        <docblock line="61">
          <description><![CDATA[Sets the proper `Content-Type` HTTP header for a UTF-8 XML file]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="61" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="117" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="101">
          <description><![CDATA[Create the XML object from a string, fFile or URL]]></description>
          <long-description><![CDATA[<p>The <code>$default_namespace</code> will be used for any sort of methods calls,
member access or array access when the element or attribute name does
not include a <code>:</code>.</p>]]></long-description>
          <tag line="101" name="throws" description="When the source XML is invalid or does not exist" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="101" name="param" description="The source of the XML, either an fFile object, a string of XML, a file path or a URL" type="\fFile|string" variable="$source">
            <type by_reference="false">\fFile</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="101" name="param" description="The timeout to use in seconds when requesting an XML file from a URL" type="\numeric" variable="$http_timeout">
            <type by_reference="false">\numeric</type>
          </tag>
          <tag line="101" name="param" description="This will fix two common XML authoring errors and should only be used when experiencing decoding issues - HTML entities that haven't been encoded as XML, and XML content published in ISO-8859-1 or Windows-1252 encoding without an explicit encoding attribute" type="boolean" variable="$fix_entities_encoding">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="101" name="param" description="|$source" type="\fFile|string" variable="">
            <type by_reference="false">\fFile</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="101" name="param" description="|$fix_entities_encoding" type="boolean" variable="">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="101" name="return" description="" type="\fXML">
            <type by_reference="false">\fXML</type>
          </tag>
        </docblock>
        <argument line="117">
          <name>$source</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="117">
          <name>$http_timeout</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="117">
          <name>$fix_entities_encoding</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="226" package="Flourish">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="213">
          <description><![CDATA[Allows access to the text content of a child tag]]></description>
          <long-description><![CDATA[<p>The child element name (<code>$name</code>) may start with a namespace prefix and a
<code>:</code> to indicate what namespace it is part of. A blank namespace prefix
(i.e. an element name starting with <code>:</code>) is treated as the XML default
namespace.</p>]]></long-description>
          <tag line="213" name="internal" description=""/>
          <tag line="213" name="param" description="The child element to retrieve" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="213" name="return" description="The child element requested" type="\fXML|NULL">
            <type by_reference="false">\fXML</type>
            <type by_reference="false">NULL</type>
          </tag>
        </docblock>
        <argument line="226">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="276" package="Flourish">
        <name>__isset</name>
        <full_name>__isset</full_name>
        <docblock line="265">
          <description><![CDATA[The child element name (`$name`) may start with a namespace prefix and a
`:` to indicate what namespace it is part of.]]></description>
          <long-description><![CDATA[<p>A blank namespace prefix
(i.e. an element name starting with <code>:</code>) is treated as the XML default
namespace.</p>]]></long-description>
          <tag line="265" name="internal" description=""/>
          <tag line="265" name="param" description="The child element to check - see method description for details about namespaces" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="265" name="return" description="If the child element is set" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="276">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="294" package="Flourish">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="285">
          <description><![CDATA[Prevents users from trying to set elements]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="285" name="internal" description=""/>
          <tag line="285" name="param" description="The element to set" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="285" name="param" description="The value to set" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="285" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="294">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="294">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="307" package="Flourish">
        <name>__sleep</name>
        <full_name>__sleep</full_name>
        <docblock line="300">
          <description><![CDATA[The XML needs to be made into a string before being serialized]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="300" name="internal" description=""/>
          <tag line="300" name="return" description="The members to serialize" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="319" package="Flourish">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="314">
          <description><![CDATA[Gets the string inside the root XML element]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="314" name="return" description="The text inside the root element" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="333" package="Flourish">
        <name>__unset</name>
        <full_name>__unset</full_name>
        <docblock line="325">
          <description><![CDATA[Prevents users from trying to unset elements]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="325" name="internal" description=""/>
          <tag line="325" name="param" description="The element to unset" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="325" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="333">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="346" package="Flourish">
        <name>__wakeup</name>
        <full_name>__wakeup</full_name>
        <docblock line="339">
          <description><![CDATA[The XML needs to be made into a DOMElement when woken up]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="339" name="internal" description=""/>
          <tag line="339" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="363" package="Flourish">
        <name>addCustomPrefix</name>
        <full_name>addCustomPrefix</full_name>
        <docblock line="353">
          <description><![CDATA[Adds a custom namespace prefix to full namespace mapping]]></description>
          <long-description><![CDATA[<p>This namespace prefix will be valid for any operation on this object,
including calls to ::xpath().</p>]]></long-description>
          <tag line="353" name="param" description="The custom namespace prefix" type="string" variable="$ns_prefix">
            <type by_reference="false">string</type>
          </tag>
          <tag line="353" name="param" description="The full namespace it maps to" type="string" variable="$namespace">
            <type by_reference="false">string</type>
          </tag>
          <tag line="353" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="363">
          <name>$ns_prefix</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="363">
          <name>$namespace</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="381" package="Flourish">
        <name>fixEntitiesEncoding</name>
        <full_name>fixEntitiesEncoding</full_name>
        <docblock line="375">
          <description><![CDATA[Fixes HTML entities that aren't XML encoded and fixes ISO-8859-1/Windows-1252 encoded content that does not have an encoding attribute]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="375" name="param" description="The XML to fix" type="string" variable="$xml">
            <type by_reference="false">string</type>
          </tag>
          <tag line="375" name="return" description="The fixed XML" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="381">
          <name>$xml</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="440" package="Flourish">
        <name>getName</name>
        <full_name>getName</full_name>
        <docblock line="435">
          <description><![CDATA[Returns the name of the current element]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="435" name="return" description="The name of the current element" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="451" package="Flourish">
        <name>getNamespace</name>
        <full_name>getNamespace</full_name>
        <docblock line="446">
          <description><![CDATA[Returns the namespace of the current element]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="446" name="return" description="The namespace of the current element" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="462" package="Flourish">
        <name>getPrefix</name>
        <full_name>getPrefix</full_name>
        <docblock line="457">
          <description><![CDATA[Returns the namespace prefix of the current element]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="457" name="return" description="The namespace prefix of the current element" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="473" package="Flourish">
        <name>getText</name>
        <full_name>getText</full_name>
        <docblock line="468">
          <description><![CDATA[Returns the string text of the current element]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="468" name="return" description="The string text of the current element" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="492" package="Flourish">
        <name>offsetExists</name>
        <full_name>offsetExists</full_name>
        <docblock line="479">
          <description><![CDATA[Provides functionality for isset() and empty() (required by arrayaccess interface)]]></description>
          <long-description><![CDATA[<p>Offsets refers to an attribute name. Attribute may start with a namespace
prefix and a <code>:</code> to indicate what namespace the attribute is part of. A
blank namespace prefix (i.e. an offset starting with <code>:</code>) is treated as
the XML default namespace.</p>]]></long-description>
          <tag line="479" name="internal" description=""/>
          <tag line="479" name="param" description="The offset to check" type="string" variable="$offset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="479" name="return" description="If the offset exists" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="492">
          <name>$offset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="511" package="Flourish">
        <name>offsetGet</name>
        <full_name>offsetGet</full_name>
        <docblock line="498">
          <description><![CDATA[Provides functionality for get [index] syntax (required by ArrayAccess interface)]]></description>
          <long-description><![CDATA[<p>Offsets refers to an attribute name. Attribute may start with a namespace
prefix and a <code>:</code> to indicate what namespace the attribute is part of. A
blank namespace prefix (i.e. an offset starting with <code>:</code>) is treated as
the XML default namespace.</p>]]></long-description>
          <tag line="498" name="internal" description=""/>
          <tag line="498" name="param" description="The attribute to retrieve the value for" type="string" variable="$offset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="498" name="return" description="The value of the offset" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="511">
          <name>$offset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="529" package="Flourish">
        <name>offsetSet</name>
        <full_name>offsetSet</full_name>
        <docblock line="521">
          <description><![CDATA[Required by ArrayAccess interface]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="521" name="internal" description=""/>
          <tag line="521" name="param" description="The offset to set" type="integer|string" variable="$offset">
            <type by_reference="false">integer</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="521" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="529">
          <name>$offset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="529">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="543" package="Flourish">
        <name>offsetUnset</name>
        <full_name>offsetUnset</full_name>
        <docblock line="535">
          <description><![CDATA[Required by ArrayAccess interface]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="535" name="internal" description=""/>
          <tag line="535" name="param" description="The offset to unset" type="integer|string" variable="$offset">
            <type by_reference="false">integer</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="535" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="543">
          <name>$offset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="555" package="Flourish">
        <name>query</name>
        <full_name>query</full_name>
        <docblock line="549">
          <description><![CDATA[Performs an XPath query on the current element, returning the raw results]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="549" name="param" description="The XPath path to query" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="549" name="return" description="The matching elements" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="555">
          <name>$path</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="601" package="Flourish">
        <name>toXML</name>
        <full_name>toXML</full_name>
        <docblock line="596">
          <description><![CDATA[Returns a well-formed XML string from the current element]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="596" name="return" description="The XML" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="614" package="Flourish">
        <name>xpath</name>
        <full_name>xpath</full_name>
        <docblock line="607">
          <description><![CDATA[Executes an XPath query on the current element, returning an array of matching elements]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="607" name="param" description="The XPath path to query" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="607" name="param" description="If only the first match should be returned" type="boolean" variable="$first_only">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="607" name="return" description="An array of matching elements, or a string or fXML object if `$first_only` is `TRUE`" type="array|string|\fXML">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
            <type by_reference="false">\fXML</type>
          </tag>
        </docblock>
        <argument line="614">
          <name>$path</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="614">
          <name>$first_only</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fXML.php</error>
      <notice line="101" code="50013">Parameter  could not be found in __construct()</notice>
      <notice line="101" code="50013">Parameter  could not be found in __construct()</notice>
      <error line="521" code="50015">Argument $value is missing from the Docblock of offsetSet()</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fException.php" hash="101ec652eadac57fe97be7cabcaf62b2" package="Sutra">
    <class final="true" abstract="true" namespace="global" line="22" package="Flourish">
      <extends>\Exception</extends>
      <name>fException</name>
      <full_name>\fException</full_name>
      <docblock line="2">
        <description><![CDATA[An exception that allows for easy l10n, printing, tracing and hooking]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2009 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fException" link="http://flourishlib.com/fException"/>
        <tag line="2" name="version" description="1.0.0b8"/>
        <tag line="2" name="changes" description="1.0.0b8  Added a missing line of backtrace to ::formatTrace() [wb, 2009-06-28]"/>
        <tag line="2" name="changes" description="1.0.0b7  Updated ::__construct() to no longer require a message, like the Exception class, and allow for non-integer codes [wb, 2009-06-26]"/>
        <tag line="2" name="changes" description="1.0.0b6  Fixed ::splitMessage() so that the original message is returned if no list items are found, added ::reorderMessage() [wb, 2009-06-02]"/>
        <tag line="2" name="changes" description="1.0.0b5  Added ::splitMessage() to replace fCRUD::removeListItems() and fCRUD::reorderListItems() [wb, 2009-05-08]"/>
        <tag line="2" name="changes" description="1.0.0b4  Added a check to ::__construct() to ensure that the `$code` parameter is numeric [wb, 2009-05-04]"/>
        <tag line="2" name="changes" description="1.0.0b3  Fixed a bug with ::printMessage() messing up some HTML messages [wb, 2009-03-27]"/>
        <tag line="2" name="changes" description="1.0.0b2  ::compose() more robustly handles `$components` passed as an array, ::__construct() now detects stray `%` characters [wb, 2009-02-05]"/>
        <tag line="2" name="changes" description="1.0.0b   The initial implementation [wb, 2007-06-14]"/>
      </docblock>
      <property final="false" static="true" visibility="private" line="29" namespace="global" package="Sutra">
        <name>$callbacks</name>
        <default><![CDATA[array()]]></default>
        <docblock line="24">
          <description><![CDATA[Callbacks for when exceptions are created]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="24" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="40" package="Flourish">
        <name>compose</name>
        <full_name>compose</full_name>
        <docblock line="32">
          <description><![CDATA[Composes text using fText if loaded]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="32" name="param" description="The message to compose" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="32" name="param" description="A string or number to insert into the message" type="mixed" variable="$component">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="32" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="32" name="return" description="The composed and possible translated message" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="40">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="77" package="Flourish">
        <name>dump</name>
        <full_name>dump</full_name>
        <docblock line="62">
          <description><![CDATA[Creates a string representation of any variable using predefined strings for booleans, `NULL` and empty strings]]></description>
          <long-description><![CDATA[<p>The string output format of this method is very similar to the output of
[http://php.net/print_r print_r()] except that the following values
are represented as special strings:</p>

<ul>
<li><code>TRUE</code>: <code>'{true}'</code></li>
<li><code>FALSE</code>: <code>'{false}'</code></li>
<li><code>NULL</code>: <code>'{null}'</code></li>
<li><code>''</code>: <code>'{empty_string}'</code></li>
</ul>]]></long-description>
          <tag line="62" name="param" description="The value to dump" type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="62" name="return" description="The string representation of the value" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="77">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="147" package="Flourish">
        <name>registerCallback</name>
        <full_name>registerCallback</full_name>
        <docblock line="136">
          <description><![CDATA[Adds a callback for when certain types of exceptions are created]]></description>
          <long-description><![CDATA[<p>The callback will be called when any exception of this class, or any
child class, specified is tossed. A single parameter will be passed
to the callback, which will be the exception object.</p>]]></long-description>
          <tag line="136" name="param" description="The callback" type="callback" variable="$callback">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="136" name="param" description="The type of exception to call the callback for" type="string" variable="$exception_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="136" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="147">
          <name>$callback</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="147">
          <name>$exception_type</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="172" package="Flourish">
        <name>sortMatchingArray</name>
        <full_name>sortMatchingArray</full_name>
        <docblock line="165">
          <description><![CDATA[Compares the message matching strings by longest first so that the longest matches are made first]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="165" name="param" description="The first string to compare" type="string" variable="$a">
            <type by_reference="false">string</type>
          </tag>
          <tag line="165" name="param" description="The second string to compare" type="string" variable="$b">
            <type by_reference="false">string</type>
          </tag>
          <tag line="165" name="return" description="`-1` if `$a` is longer than `$b`, `0` if they are equal length, `1` if `$a` is shorter than `$b`" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="172">
          <name>$a</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="172">
          <name>$b</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="198" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="178">
          <description><![CDATA[Sets the message for the exception, allowing for string interpolation and internationalization]]></description>
          <long-description><![CDATA[<p>The <code>$message</code> can contain any number of formatting placeholders for
string and number interpolation via [http://php.net/sprintf <code>sprintf()</code>].
Any <code>%</code> signs that do not appear to be part of a valid formatting
placeholder will be automatically escaped with a second <code>%</code>.</p>

<p>The following aspects of valid <code>sprintf()</code> formatting codes are not
accepted since they are redundant and restrict the non-formatting use of
the <code>%</code> sign in exception messages:
 - <code>% 2d</code>: Using a literal space as a padding character - a space will be used if no padding character is specified
 - <code>%'.d</code>: Providing a padding character but no width - no padding will be applied without a width</p>]]></long-description>
          <tag line="178" name="param" description="The message for the exception. This accepts a subset of [http://php.net/sprintf `sprintf()`] strings - see method description for more details." type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="178" name="param" description="A string or number to insert into the message" type="mixed" variable="$component">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="178" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="178" name="param" description="The exception code to set" type="mixed" variable="$code">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="178" name="return" description="" type="\fException">
            <type by_reference="false">\fException</type>
          </tag>
        </docblock>
        <argument line="198">
          <name>$message</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="268" package="Flourish">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="260">
          <description><![CDATA[All requests that hit this method should be requests for callbacks]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="260" name="internal" description=""/>
          <tag line="260" name="param" description="The method to create a callback for" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="260" name="return" description="The callback for the method requested" type="callback">
            <type by_reference="false">callback</type>
          </tag>
        </docblock>
        <argument line="268">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="279" package="Flourish">
        <name>formatTrace</name>
        <full_name>formatTrace</full_name>
        <docblock line="274">
          <description><![CDATA[Gets the backtrace to currently called exception]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="274" name="return" description="A nicely formatted backtrace to this exception" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="300" package="Flourish">
        <name>getCSSClass</name>
        <full_name>getCSSClass</full_name>
        <docblock line="295">
          <description><![CDATA[Returns the CSS class name for printing information about the exception]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="295" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="319" package="Flourish">
        <name>prepare</name>
        <full_name>prepare</full_name>
        <docblock line="314">
          <description><![CDATA[Prepares content for output into HTML]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="314" name="return" description="The prepared content" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="319">
          <name>$content</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="357" package="Flourish">
        <name>printMessage</name>
        <full_name>printMessage</full_name>
        <docblock line="352">
          <description><![CDATA[Prints the message inside of a div with the class being 'exception %THIS_EXCEPTION_CLASS_NAME%']]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="352" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="370" package="Flourish">
        <name>printTrace</name>
        <full_name>printTrace</full_name>
        <docblock line="365">
          <description><![CDATA[Prints the backtrace to currently called exception inside of a pre tag with the class being 'exception %THIS_EXCEPTION_CLASS_NAME% trace']]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="365" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="385" package="Flourish">
        <name>reorderMessage</name>
        <full_name>reorderMessage</full_name>
        <docblock line="378">
          <description><![CDATA[Reorders list items in the message based on simple string matching]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="378" name="param" description="This should be a string to match to one of the list items - whatever the order this is in the parameter list will be the order of the list item in the adjusted message" type="string" variable="$match">
            <type by_reference="false">string</type>
          </tag>
          <tag line="378" name="param" description="..." type="string" variable="">
            <type by_reference="false">string</type>
          </tag>
          <tag line="378" name="return" description="The exception object, to allow for method chaining" type="\fException">
            <type by_reference="false">\fException</type>
          </tag>
        </docblock>
        <argument line="385">
          <name>$match</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="434" package="Flourish">
        <name>setMessage</name>
        <full_name>setMessage</full_name>
        <docblock line="428">
          <description><![CDATA[Allows the message to be overwriten]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="428" name="param" description="The new message for the exception" type="string" variable="$new_message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="428" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="434">
          <name>$new_message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="516" package="Flourish">
        <name>splitMessage</name>
        <full_name>splitMessage</full_name>
        <docblock line="440">
          <description><![CDATA[Splits an exception with an HTML list into multiple strings each containing part of the original message]]></description>
          <long-description><![CDATA[<p>This method should be called with two or more parameters of arrays of
string to match. If any of the provided strings are matching in a list
item in the exception message, a new copy of the message will be created
containing just the matching list items.</p>

<p>Here is an exception message to be split:</p>

<p>{{{</p>

<h1>!html</h1>

<p>The following problems were found:</p>

<ul>
    <li>First Name: Please enter a value</li>
    <li>Last Name: Please enter a value</li>
    <li>Email: Please enter a value</li>
    <li>Address: Please enter a value</li>
    <li>City: Please enter a value</li>
    <li>State: Please enter a value</li>
    <li>Zip Code: Please enter a value</li>
</ul>

<p>}}}</p>

<p>The following PHP would split the exception into two messages:</p>

<p>{{{</p>

<h1>!php</h1>

<p>list ($name_exception, $address_exception) = $exception->splitMessage(
    array('First Name', 'Last Name', 'Email'),
    array('Address', 'City', 'State', 'Zip Code')
);
}}}</p>

<p>The resulting messages would be:</p>

<p>{{{</p>

<h1>!html</h1>

<p>The following problems were found:</p>

<ul>
    <li>First Name: Please enter a value</li>
    <li>Last Name: Please enter a value</li>
    <li>Email: Please enter a value</li>
</ul>

<p>}}}</p>

<p>and</p>

<p>{{{</p>

<h1>!html</h1>

<p>The following problems were found:</p>

<ul>
    <li>Address: Please enter a value</li>
    <li>City: Please enter a value</li>
    <li>State: Please enter a value</li>
    <li>Zip Code: Please enter a value</li>
</ul>

<p>}}}</p>

<p>If no list items match the strings in a parameter, the result will be
an empty string, allowing for simple display:</p>

<p>{{{</p>

<h1>!php</h1>

<p>fHTML::show($name_exception, 'error');
}}}</p>

<p>An empty string is returned when none of the list items matched the
strings in the parameter. If no list items are found, the first value in
the returned array will be the existing message and all other array
values will be an empty string.</p>]]></long-description>
          <tag line="440" name="param" description="An array of strings to filter the list items by, list items will be ordered in the same order as this array" type="array" variable="$list_item_matches">
            <type by_reference="false">array</type>
          </tag>
          <tag line="440" name="param" description="..." type="array" variable="">
            <type by_reference="false">array</type>
          </tag>
          <tag line="440" name="return" description="This will contain an array of strings corresponding to the parameters passed - see method description for details" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="516">
          <name>$list_item_matches</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fException.php</error>
      <notice line="32" code="50013">Parameter $component could not be found in compose()</notice>
      <notice line="32" code="50013">Parameter  could not be found in compose()</notice>
      <notice line="178" code="50013">Parameter $component could not be found in __construct()</notice>
      <notice line="178" code="50013">Parameter  could not be found in __construct()</notice>
      <notice line="178" code="50013">Parameter $code could not be found in __construct()</notice>
      <error line="314" code="50015">Argument $content is missing from the Docblock of prepare()</error>
      <notice line="378" code="50013">Parameter  could not be found in reorderMessage()</notice>
      <notice line="440" code="50013">Parameter  could not be found in splitMessage()</notice>
    </parse_markers>
  </file>
  <file path="php/flourish/fHTML.php" hash="f0093d7130935a8b462df3eb6a7376dd" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="25" package="Flourish">
      <extends/>
      <name>fHTML</name>
      <full_name>\fHTML</full_name>
      <docblock line="2">
        <description><![CDATA[Provides HTML-related methods]]></description>
        <long-description><![CDATA[<p>This class is implemented to use the UTF-8 character encoding. Please see
http://flourishlib.com/docs/UTF-8 for more information.</p>]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2010 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fHTML" link="http://flourishlib.com/fHTML"/>
        <tag line="2" name="version" description="1.0.0b8"/>
        <tag line="2" name="changes" description="1.0.0b8  Changed ::encode() and ::prepare() to handle arrays of strings [wb, 2010-05-19]"/>
        <tag line="2" name="changes" description="1.0.0b7  Fixed a bug where some conditional comments were causing the regex in ::prepare() to break [wb, 2009-11-04]"/>
        <tag line="2" name="changes" description="1.0.0b6  Updated ::showChecked() to require strict equality if one parameter is `NULL` [wb, 2009-06-02]"/>
        <tag line="2" name="changes" description="1.0.0b5  Fixed ::prepare() so it does not encode multi-line HTML comments [wb, 2009-05-09]"/>
        <tag line="2" name="changes" description="1.0.0b4  Added methods ::printOption() and ::showChecked() that were in fCRUD [wb, 2009-05-08]"/>
        <tag line="2" name="changes" description="1.0.0b3  Fixed a bug where ::makeLinks() would double-link some URLs [wb, 2009-01-08]"/>
        <tag line="2" name="changes" description="1.0.0b2  Fixed a bug where ::makeLinks() would create links out of URLs in HTML tags [wb, 2008-12-05]"/>
        <tag line="2" name="changes" description="1.0.0b   The initial implementation [wb, 2007-09-25]"/>
      </docblock>
      <constant namespace="global" line="28" package="Flourish">
        <name>containsBlockLevelHTML</name>
        <full_name>containsBlockLevelHTML</full_name>
        <value><![CDATA['fHTML::containsBlockLevelHTML']]></value>
      </constant>
      <constant namespace="global" line="29" package="Flourish">
        <name>convertNewlines</name>
        <full_name>convertNewlines</full_name>
        <value><![CDATA['fHTML::convertNewlines']]></value>
      </constant>
      <constant namespace="global" line="30" package="Flourish">
        <name>decode</name>
        <full_name>decode</full_name>
        <value><![CDATA['fHTML::decode']]></value>
      </constant>
      <constant namespace="global" line="31" package="Flourish">
        <name>encode</name>
        <full_name>encode</full_name>
        <value><![CDATA['fHTML::encode']]></value>
      </constant>
      <constant namespace="global" line="32" package="Flourish">
        <name>makeLinks</name>
        <full_name>makeLinks</full_name>
        <value><![CDATA['fHTML::makeLinks']]></value>
      </constant>
      <constant namespace="global" line="33" package="Flourish">
        <name>prepare</name>
        <full_name>prepare</full_name>
        <value><![CDATA['fHTML::prepare']]></value>
      </constant>
      <constant namespace="global" line="34" package="Flourish">
        <name>printOption</name>
        <full_name>printOption</full_name>
        <value><![CDATA['fHTML::printOption']]></value>
      </constant>
      <constant namespace="global" line="35" package="Flourish">
        <name>sendHeader</name>
        <full_name>sendHeader</full_name>
        <value><![CDATA['fHTML::sendHeader']]></value>
      </constant>
      <constant namespace="global" line="36" package="Flourish">
        <name>show</name>
        <full_name>show</full_name>
        <value><![CDATA['fHTML::show']]></value>
      </constant>
      <constant namespace="global" line="37" package="Flourish">
        <name>showChecked</name>
        <full_name>showChecked</full_name>
        <value><![CDATA['fHTML::showChecked']]></value>
      </constant>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="46" package="Flourish">
        <name>containsBlockLevelHTML</name>
        <full_name>containsBlockLevelHTML</full_name>
        <docblock line="40">
          <description><![CDATA[Checks a string of HTML for block level elements]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="40" name="param" description="The HTML content to check" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="40" name="return" description="If the content contains a block level tag" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="46">
          <name>$content</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="59" package="Flourish">
        <name>convertNewlines</name>
        <full_name>convertNewlines</full_name>
        <docblock line="53">
          <description><![CDATA[Converts newlines into `br` tags as long as there aren't any block-level HTML tags present]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="53" name="param" description="The content to display" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="53" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="59">
          <name>$content</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="72" package="Flourish">
        <name>decode</name>
        <full_name>decode</full_name>
        <docblock line="66">
          <description><![CDATA[Converts all HTML entities to normal characters, using UTF-8]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="66" name="param" description="The content to decode" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="66" name="return" description="The decoded content" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="72">
          <name>$content</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="84" package="Flourish">
        <name>encode</name>
        <full_name>encode</full_name>
        <docblock line="78">
          <description><![CDATA[Converts all special characters to entites, using UTF-8.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="78" name="param" description="The content to encode" type="string|array" variable="$content">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="78" name="return" description="The encoded content" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="84">
          <name>$content</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="100" package="Flourish">
        <name>makeLinks</name>
        <full_name>makeLinks</full_name>
        <docblock line="93">
          <description><![CDATA[Takes a block of text and converts all URLs into HTML links]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="93" name="param" description="The content to parse for links" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="93" name="param" description="If non-zero, all link text will be truncated to this many characters" type="integer" variable="$link_text_length">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="93" name="return" description="The content with all URLs converted to HTML link" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="100">
          <name>$content</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="100">
          <name>$link_text_length</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="170" package="Flourish">
        <name>prepare</name>
        <full_name>prepare</full_name>
        <docblock line="164">
          <description><![CDATA[Prepares content for display in UTF-8 encoded HTML - allows HTML tags]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="164" name="param" description="The content to prepare" type="string|array" variable="$content">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="164" name="return" description="The encoded html" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="170">
          <name>$content</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="205" package="Flourish">
        <name>printOption</name>
        <full_name>printOption</full_name>
        <docblock line="197">
          <description><![CDATA[Prints an `option` tag with the provided value, using the selected value to determine if the option should be marked as selected]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="197" name="param" description="The text to display in the option tag" type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="197" name="param" description="The value for the option" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="197" name="param" description="If the value is the same as this, the option will be marked as selected" type="string" variable="$selected_value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="197" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="205">
          <name>$text</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="205">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="205">
          <name>$selected_value</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="225" package="Flourish">
        <name>sendHeader</name>
        <full_name>sendHeader</full_name>
        <docblock line="220">
          <description><![CDATA[Sets the proper Content-Type header for a UTF-8 HTML (or pseudo-XHTML) page]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="220" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="238" package="Flourish">
        <name>show</name>
        <full_name>show</full_name>
        <docblock line="231">
          <description><![CDATA[Prints a `p` (or `div` if the content has block-level HTML) tag with the contents and the class specified - will not print if no content]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="231" name="param" description="The content to display" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="231" name="param" description="The CSS class to apply" type="string" variable="$css_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="231" name="return" description="If the content was shown" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="238">
          <name>$content</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="238">
          <name>$css_class</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="267" package="Flourish">
        <name>showChecked</name>
        <full_name>showChecked</full_name>
        <docblock line="255">
          <description><![CDATA[Prints a `checked="checked"` HTML input attribute if `$value` equals `$checked_value`, or if `$value` is in `$checked_value`]]></description>
          <long-description><![CDATA[<p>Please note that if either <code>$value</code> or <code>$checked_value</code> is <code>NULL</code>, a
strict comparison will be performed, whereas normally a non-strict
comparison is made. Thus <code>0</code> and <code>FALSE</code> will cause the checked
attribute to be printed, but <code>0</code> and <code>NULL</code> will not.</p>]]></long-description>
          <tag line="255" name="param" description="The value for the current HTML input tag" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="255" name="param" description="The value (or array of values) that has been checked" type="string|array" variable="$checked_value">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="255" name="return" description="If the checked attribute was printed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="267">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="267">
          <name>$checked_value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="293" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="288">
          <description><![CDATA[Forces use as a static class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="288" name="return" description="" type="\fHTML">
            <type by_reference="false">\fHTML</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fHTML.php</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fGrammar.php" hash="bc620e15997f0bf756c0c641c89ce089" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="29" package="Flourish">
      <extends/>
      <name>fGrammar</name>
      <full_name>\fGrammar</full_name>
      <docblock line="2">
        <description><![CDATA[Provides english word inflection, notation conversion, grammar helpers and internationlization support]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2011 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fGrammar" link="http://flourishlib.com/fGrammar"/>
        <tag line="2" name="version" description="1.0.0b15"/>
        <tag line="2" name="changes" description="1.0.0b15  Added length checking to ensure blank strings are not being passed to various methods [wb, 2011-06-20]"/>
        <tag line="2" name="changes" description="1.0.0b14  Fixed a bug in singularization that would affect words containing the substring `mice` or `lice` [wb, 2011-02-24]"/>
        <tag line="2" name="changes" description="1.0.0b13  Fixed the pluralization of video [wb, 2010-08-10]"/>
        <tag line="2" name="changes" description="1.0.0b12  Updated ::singularize() and ::pluralize() to be able to handle underscore_CamelCase [wb, 2010-08-06]"/>
        <tag line="2" name="changes" description="1.0.0b11  Fixed custom camelCase to underscore_notation rules [wb, 2010-06-23]"/>
        <tag line="2" name="changes" description="1.0.0b10  Removed `e` flag from preg_replace() calls [wb, 2010-06-08]"/>
        <tag line="2" name="changes" description="1.0.0b9   Fixed a bug with ::camelize() and human-friendly strings [wb, 2010-06-08]"/>
        <tag line="2" name="changes" description="1.0.0b8   Added the ::stem() method [wb, 2010-05-27]"/>
        <tag line="2" name="changes" description="1.0.0b7   Added the `$return_error` parameter to ::pluralize() and ::singularize() [wb, 2010-03-30]"/>
        <tag line="2" name="changes" description="1.0.0b6   Added missing ::compose() method [wb, 2010-03-03]"/>
        <tag line="2" name="changes" description="1.0.0b5   Fixed ::reset() to properly reset the singularization and pluralization rules [wb, 2009-10-28]"/>
        <tag line="2" name="changes" description="1.0.0b4   Added caching for various methods - provided significant performance boost to ORM [wb, 2009-06-15]"/>
        <tag line="2" name="changes" description="1.0.0b3   Changed replacement values in preg_replace() calls to be properly escaped [wb, 2009-06-11]"/>
        <tag line="2" name="changes" description="1.0.0b2   Fixed a bug where some words would lose capitalization with ::pluralize() and ::singularize() [wb, 2009-01-25]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2007-09-25]"/>
      </docblock>
      <constant namespace="global" line="32" package="Flourish">
        <name>addCamelUnderscoreRule</name>
        <full_name>addCamelUnderscoreRule</full_name>
        <value><![CDATA['fGrammar::addCamelUnderscoreRule']]></value>
      </constant>
      <constant namespace="global" line="33" package="Flourish">
        <name>addHumanizeRule</name>
        <full_name>addHumanizeRule</full_name>
        <value><![CDATA['fGrammar::addHumanizeRule']]></value>
      </constant>
      <constant namespace="global" line="34" package="Flourish">
        <name>addSingularPluralRule</name>
        <full_name>addSingularPluralRule</full_name>
        <value><![CDATA['fGrammar::addSingularPluralRule']]></value>
      </constant>
      <constant namespace="global" line="35" package="Flourish">
        <name>camelize</name>
        <full_name>camelize</full_name>
        <value><![CDATA['fGrammar::camelize']]></value>
      </constant>
      <constant namespace="global" line="36" package="Flourish">
        <name>humanize</name>
        <full_name>humanize</full_name>
        <value><![CDATA['fGrammar::humanize']]></value>
      </constant>
      <constant namespace="global" line="37" package="Flourish">
        <name>inflectOnQuantity</name>
        <full_name>inflectOnQuantity</full_name>
        <value><![CDATA['fGrammar::inflectOnQuantity']]></value>
      </constant>
      <constant namespace="global" line="38" package="Flourish">
        <name>joinArray</name>
        <full_name>joinArray</full_name>
        <value><![CDATA['fGrammar::joinArray']]></value>
      </constant>
      <constant namespace="global" line="39" package="Flourish">
        <name>pluralize</name>
        <full_name>pluralize</full_name>
        <value><![CDATA['fGrammar::pluralize']]></value>
      </constant>
      <constant namespace="global" line="40" package="Flourish">
        <name>registerJoinArrayCallback</name>
        <full_name>registerJoinArrayCallback</full_name>
        <value><![CDATA['fGrammar::registerJoinArrayCallback']]></value>
      </constant>
      <constant namespace="global" line="41" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <value><![CDATA['fGrammar::reset']]></value>
      </constant>
      <constant namespace="global" line="42" package="Flourish">
        <name>singularize</name>
        <full_name>singularize</full_name>
        <value><![CDATA['fGrammar::singularize']]></value>
      </constant>
      <constant namespace="global" line="43" package="Flourish">
        <name>stem</name>
        <full_name>stem</full_name>
        <value><![CDATA['fGrammar::stem']]></value>
      </constant>
      <constant namespace="global" line="44" package="Flourish">
        <name>underscorize</name>
        <full_name>underscorize</full_name>
        <value><![CDATA['fGrammar::underscorize']]></value>
      </constant>
      <property final="false" static="true" visibility="private" line="52" namespace="global" package="Sutra">
        <name>$cache</name>
        <default><![CDATA[array('camelize' => array(0 => array(), 1 => array()), 'humanize' => array(), 'pluralize' => array(), 'singularize' => array(), 'underscorize' => array())]]></default>
        <docblock line="47">
          <description><![CDATA[Cache for plural <-> singular and underscore <-> camelcase]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="47" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="65" namespace="global" package="Sutra">
        <name>$camelize_rules</name>
        <default><![CDATA[array()]]></default>
        <docblock line="60">
          <description><![CDATA[Custom rules for camelizing a string]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="60" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="72" namespace="global" package="Sutra">
        <name>$humanize_rules</name>
        <default><![CDATA[array()]]></default>
        <docblock line="67">
          <description><![CDATA[Custom rules for humanizing a string]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="67" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="79" namespace="global" package="Sutra">
        <name>$join_array_callback</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="74">
          <description><![CDATA[The callback to replace ::joinArray()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="74" name="var" description="" type="callback">
            <type by_reference="false">callback</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="86" namespace="global" package="Sutra">
        <name>$plural_to_singular_rules</name>
        <default><![CDATA[array('([ml])ice$' => '\1ouse', '(media|info(rmation)?|news)$' => '\1', '(q)uizzes$' => '\1uiz', '(c)hildren$' => '\1hild', '(p)eople$' => '\1erson', '(m)en$' => '\1an', '((?!sh).)oes$' => '\1o', '((?<!o)[ieu]s|[ieuo]x)es$' => '\1', '([cs]h)es$' => '\1', '(ss)es$' => '\1', '([aeo]l)ves$' => '\1f', '([^d]ea)ves$' => '\1f', '(ar)ves$' => '\1f', '([nlw]i)ves$' => '\1fe', '([aeiou]y)s$' => '\1', '([^aeiou])ies$' => '\1y', '(la)ses$' => '\1s', '(.)s$' => '\1')]]></default>
        <docblock line="81">
          <description><![CDATA[Rules for plural to singular inflection of nouns]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="81" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="112" namespace="global" package="Sutra">
        <name>$singular_to_plural_rules</name>
        <default><![CDATA[array('([ml])ouse$' => '\1ice', '(media|info(rmation)?|news)$' => '\1', '(phot|log|vide)o$' => '\1os', '^(q)uiz$' => '\1uizzes', '(c)hild$' => '\1hildren', '(p)erson$' => '\1eople', '(m)an$' => '\1en', '([ieu]s|[ieuo]x)$' => '\1es', '([cs]h)$' => '\1es', '(ss)$' => '\1es', '([aeo]l)f$' => '\1ves', '([^d]ea)f$' => '\1ves', '(ar)f$' => '\1ves', '([nlw]i)fe$' => '\1ves', '([aeiou]y)$' => '\1s', '([^aeiou])y$' => '\1ies', '([^o])o$' => '\1oes', 's$' => 'ses', '(.)$' => '\1s')]]></default>
        <docblock line="107">
          <description><![CDATA[Rules for singular to plural inflection of nouns]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="107" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="139" namespace="global" package="Sutra">
        <name>$underscorize_rules</name>
        <default><![CDATA[array()]]></default>
        <docblock line="134">
          <description><![CDATA[Custom rules for underscorizing a string]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="134" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="149" package="Flourish">
        <name>addHumanizeRule</name>
        <full_name>addHumanizeRule</full_name>
        <docblock line="142">
          <description><![CDATA[Adds a custom mapping of a non-humanized string to a humanized string for ::humanize()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="142" name="param" description="The non-humanized string" type="string" variable="$non_humanized_string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="142" name="param" description="The humanized string" type="string" variable="$humanized_string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="142" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="149">
          <name>$non_humanized_string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="149">
          <name>$humanized_string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="164" package="Flourish">
        <name>addCamelUnderscoreRule</name>
        <full_name>addCamelUnderscoreRule</full_name>
        <docblock line="157">
          <description><![CDATA[Adds a custom `camelCase` to `underscore_notation` and `underscore_notation` to `camelCase` rule]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="157" name="param" description="The lower `camelCase` version of the string" type="string" variable="$camel_case">
            <type by_reference="false">string</type>
          </tag>
          <tag line="157" name="param" description="The `underscore_notation` version of the string" type="string" variable="$underscore_notation">
            <type by_reference="false">string</type>
          </tag>
          <tag line="157" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="164">
          <name>$camel_case</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="164">
          <name>$underscore_notation</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="182" package="Flourish">
        <name>addSingularPluralRule</name>
        <full_name>addSingularPluralRule</full_name>
        <docblock line="175">
          <description><![CDATA[Adds a custom singular to plural and plural to singular rule for ::pluralize() and ::singularize()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="175" name="param" description="The singular version of the noun" type="string" variable="$singular">
            <type by_reference="false">string</type>
          </tag>
          <tag line="175" name="param" description="The plural version of the noun" type="string" variable="$plural">
            <type by_reference="false">string</type>
          </tag>
          <tag line="175" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="182">
          <name>$singular</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="182">
          <name>$plural</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="211" package="Flourish">
        <name>camelize</name>
        <full_name>camelize</full_name>
        <docblock line="204">
          <description><![CDATA[Converts an `underscore_notation`, human-friendly or `camelCase` string to `camelCase`]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="204" name="param" description="The string to convert" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="204" name="param" description="If the camel case should be `UpperCamelCase`" type="boolean" variable="$upper">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="204" name="return" description="The converted string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="211">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="211">
          <name>$upper</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="267" package="Flourish">
        <name>camelizeCallback</name>
        <full_name>camelizeCallback</full_name>
        <docblock line="261">
          <description><![CDATA[A callback used by ::camelize() to handle converting underscore to camelCase]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="261" name="param" description="The regular expression match" type="array" variable="$match">
            <type by_reference="false">array</type>
          </tag>
          <tag line="261" name="return" description="The value to replace the string with" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="267">
          <name>$match</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="281" package="Flourish">
        <name>compose</name>
        <full_name>compose</full_name>
        <docblock line="273">
          <description><![CDATA[Composes text using fText if loaded]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="273" name="param" description="The message to compose" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="273" name="param" description="A string or number to insert into the message" type="mixed" variable="$component">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="273" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="273" name="return" description="The composed and possible translated message" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="281">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="302" package="Flourish">
        <name>humanize</name>
        <full_name>humanize</full_name>
        <docblock line="296">
          <description><![CDATA[Makes an `underscore_notation`, `camelCase`, or human-friendly string into a human-friendly string]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="296" name="param" description="The string to humanize" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="296" name="return" description="The converted string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="302">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="350" package="Flourish">
        <name>inflectOnQuantity</name>
        <full_name>inflectOnQuantity</full_name>
        <docblock line="341">
          <description><![CDATA[Returns the singular or plural form of the word or based on the quantity specified]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="341" name="param" description="The quantity (integer) or an array of objects to count" type="mixed" variable="$quantity">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="341" name="param" description="The string to be returned for when `$quantity = 1`" type="string" variable="$singular_form">
            <type by_reference="false">string</type>
          </tag>
          <tag line="341" name="param" description="The string to be returned for when `$quantity != 1`, use `%d` to place the quantity in the string" type="string" variable="$plural_form">
            <type by_reference="false">string</type>
          </tag>
          <tag line="341" name="param" description="If the numbers 0 to 9 should be written out as words" type="boolean" variable="$use_words_for_single_digits">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="341" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="350">
          <name>$quantity</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="350">
          <name>$singular_form</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="350">
          <name>$plural_form</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="350">
          <name>$use_words_for_single_digits</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="403" package="Flourish">
        <name>joinArray</name>
        <full_name>joinArray</full_name>
        <docblock line="396">
          <description><![CDATA[Returns the passed terms joined together using rule 2 from Strunk & White's 'The Elements of Style']]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="396" name="param" description="An array of strings to be joined together" type="array" variable="$strings">
            <type by_reference="false">array</type>
          </tag>
          <tag line="396" name="param" description="The type of join to perform, `'and'` or `'or'`" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="396" name="return" description="The terms joined together" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="403">
          <name>$strings</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="403">
          <name>$type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="449" package="Flourish">
        <name>pluralize</name>
        <full_name>pluralize</full_name>
        <docblock line="442">
          <description><![CDATA[Returns the plural version of a singular noun]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="442" name="param" description="The singular noun to pluralize" type="string" variable="$singular_noun">
            <type by_reference="false">string</type>
          </tag>
          <tag line="442" name="param" description="If this is `TRUE` and the noun can't be pluralized, `FALSE` will be returned instead" type="boolean" variable="$return_error">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="442" name="return" description="The pluralized noun" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="449">
          <name>$singular_noun</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="449">
          <name>$return_error</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="496" package="Flourish">
        <name>registerJoinArrayCallback</name>
        <full_name>registerJoinArrayCallback</full_name>
        <docblock line="487">
          <description><![CDATA[Allows replacing the ::joinArray() function with a user defined function]]></description>
          <long-description><![CDATA[<p>This would be most useful for changing ::joinArray() to work with
languages other than English.</p>]]></long-description>
          <tag line="487" name="param" description="The function to replace ::joinArray() with - should accept the same parameters and return the same type" type="callback" variable="$callback">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="487" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="496">
          <name>$callback</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="512" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="505">
          <description><![CDATA[Resets the configuration of the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="505" name="internal" description=""/>
          <tag line="505" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="575" package="Flourish">
        <name>singularize</name>
        <full_name>singularize</full_name>
        <docblock line="568">
          <description><![CDATA[Returns the singular version of a plural noun]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="568" name="param" description="The plural noun to singularize" type="string" variable="$plural_noun">
            <type by_reference="false">string</type>
          </tag>
          <tag line="568" name="param" description="If this is `TRUE` and the noun can't be pluralized, `FALSE` will be returned instead" type="boolean" variable="$return_error">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="568" name="return" description="The singularized noun" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="575">
          <name>$plural_noun</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="575">
          <name>$return_error</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="619" package="Flourish">
        <name>splitLastWord</name>
        <full_name>splitLastWord</full_name>
        <docblock line="613">
          <description><![CDATA[Splits the last word off of a `camelCase` or `underscore_notation` string]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="613" name="param" description="The string to split the word from" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="613" name="return" description="The first element is the beginning part of the string, the second element is the last word" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="619">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="650" package="Flourish">
        <name>stem</name>
        <full_name>stem</full_name>
        <docblock line="641">
          <description><![CDATA[Uses the Porter Stemming algorithm to create the stem of a word, which is useful for searching]]></description>
          <long-description><![CDATA[<p>See http://tartarus.org/~martin/PorterStemmer/ for details about the
algorithm.</p>]]></long-description>
          <tag line="641" name="param" description="The word to get the stem of" type="string" variable="$word">
            <type by_reference="false">string</type>
          </tag>
          <tag line="641" name="return" description="The stem of the word" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="650">
          <name>$word</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="765" package="Flourish">
        <name>underscorize</name>
        <full_name>underscorize</full_name>
        <docblock line="759">
          <description><![CDATA[Converts a `camelCase`, human-friendly or `underscore_notation` string to `underscore_notation`]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="759" name="param" description="The string to convert" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="759" name="return" description="The converted string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="765">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="813" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="808">
          <description><![CDATA[Forces use as a static class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="808" name="return" description="" type="\fGrammar">
            <type by_reference="false">\fGrammar</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fGrammar.php</error>
      <notice line="273" code="50013">Parameter $component could not be found in compose()</notice>
      <notice line="273" code="50013">Parameter  could not be found in compose()</notice>
    </parse_markers>
  </file>
  <file path="php/flourish/fCookie.php" hash="a928d839dde896f2af811ba45c36fb86" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="18" package="Flourish">
      <extends/>
      <name>fCookie</name>
      <full_name>\fCookie</full_name>
      <docblock line="2">
        <description><![CDATA[Provides a consistent cookie API, HTTPOnly compatibility with older PHP versions and default parameters]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2008-2009 Will Bond, others"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="author" description="Nick Trew [nt]"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fCookie" link="http://flourishlib.com/fCookie"/>
        <tag line="2" name="version" description="1.0.0b3"/>
        <tag line="2" name="changes" description="1.0.0b3  Added the ::delete() method [nt+wb, 2009-09-30]"/>
        <tag line="2" name="changes" description="1.0.0b2  Updated for new fCore API [wb, 2009-02-16]"/>
        <tag line="2" name="changes" description="1.0.0b   The initial implementation [wb, 2008-09-01]"/>
      </docblock>
      <constant namespace="global" line="21" package="Flourish">
        <name>delete</name>
        <full_name>delete</full_name>
        <value><![CDATA['fCookie::delete']]></value>
      </constant>
      <constant namespace="global" line="22" package="Flourish">
        <name>get</name>
        <full_name>get</full_name>
        <value><![CDATA['fCookie::get']]></value>
      </constant>
      <constant namespace="global" line="23" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <value><![CDATA['fCookie::reset']]></value>
      </constant>
      <constant namespace="global" line="24" package="Flourish">
        <name>set</name>
        <full_name>set</full_name>
        <value><![CDATA['fCookie::set']]></value>
      </constant>
      <constant namespace="global" line="25" package="Flourish">
        <name>setDefaultDomain</name>
        <full_name>setDefaultDomain</full_name>
        <value><![CDATA['fCookie::setDefaultDomain']]></value>
      </constant>
      <constant namespace="global" line="26" package="Flourish">
        <name>setDefaultExpires</name>
        <full_name>setDefaultExpires</full_name>
        <value><![CDATA['fCookie::setDefaultExpires']]></value>
      </constant>
      <constant namespace="global" line="27" package="Flourish">
        <name>setDefaultHTTPOnly</name>
        <full_name>setDefaultHTTPOnly</full_name>
        <value><![CDATA['fCookie::setDefaultHTTPOnly']]></value>
      </constant>
      <constant namespace="global" line="28" package="Flourish">
        <name>setDefaultPath</name>
        <full_name>setDefaultPath</full_name>
        <value><![CDATA['fCookie::setDefaultPath']]></value>
      </constant>
      <constant namespace="global" line="29" package="Flourish">
        <name>setDefaultSecure</name>
        <full_name>setDefaultSecure</full_name>
        <value><![CDATA['fCookie::setDefaultSecure']]></value>
      </constant>
      <property final="false" static="true" visibility="private" line="37" namespace="global" package="Sutra">
        <name>$default_domain</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="32">
          <description><![CDATA[The default domain to set for cookies]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="32" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="44" namespace="global" package="Sutra">
        <name>$default_expires</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="39">
          <description><![CDATA[The default expiration date to set for cookies]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="39" name="var" description="" type="string|integer">
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="51" namespace="global" package="Sutra">
        <name>$default_httponly</name>
        <default><![CDATA[FALSE]]></default>
        <docblock line="46">
          <description><![CDATA[If cookies should default to being http-only]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="46" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="58" namespace="global" package="Sutra">
        <name>$default_path</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="53">
          <description><![CDATA[The default path to set for cookies]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="53" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="65" namespace="global" package="Sutra">
        <name>$default_secure</name>
        <default><![CDATA[FALSE]]></default>
        <docblock line="60">
          <description><![CDATA[If cookies should default to being secure-only]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="60" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="77" package="Flourish">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="68">
          <description><![CDATA[Deletes a cookie - uses default parameters set by the other set methods of this class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="68" name="param" description="The cookie name to delete" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="68" name="param" description="The path of the cookie to delete" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="68" name="param" description="The domain of the cookie to delete" type="string" variable="$domain">
            <type by_reference="false">string</type>
          </tag>
          <tag line="68" name="param" description="If the cookie is a secure-only cookie" type="boolean" variable="$secure">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="68" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="77">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="77">
          <name>$path</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="77">
          <name>$domain</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="77">
          <name>$secure</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="90" package="Flourish">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="83">
          <description><![CDATA[Gets a cookie value from `$_COOKIE`, while allowing a default value to be provided]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="83" name="param" description="The name of the cookie to retrieve" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="83" name="param" description="If there is no cookie with the name provided, return this value instead" type="mixed" variable="$default_value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="83" name="return" description="The value" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="90">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="90">
          <name>$default_value</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="110" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="103">
          <description><![CDATA[Resets the configuration of the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="103" name="internal" description=""/>
          <tag line="103" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="140" package="Flourish">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="120">
          <description><![CDATA[Sets a cookie to be sent back to the browser - uses default parameters set by the other set methods of this class]]></description>
          <long-description><![CDATA[<p>The following methods allow for setting default parameters for this method:</p>

<ul>
<li>::setDefaultExpires():  Sets the default for the <code>$expires</code> parameter</li>
<li>::setDefaultPath():     Sets the default for the <code>$path</code> parameter</li>
<li>::setDefaultDomain():   Sets the default for the <code>$domain</code> parameter</li>
<li>::setDefaultSecure():   Sets the default for the <code>$secure</code> parameter</li>
<li>::setDefaultHTTPOnly(): Sets the default for the <code>$httponly</code> parameter</li>
</ul>]]></long-description>
          <tag line="120" name="param" description="The name of the cookie to set" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="120" name="param" description="The value of the cookie to set" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="120" name="param" description="A relative string to be interpreted by [http://php.net/strtotime strtotime()] or an integer unix timestamp" type="string|integer" variable="$expires">
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="120" name="param" description="The path this cookie applies to" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="120" name="param" description="The domain this cookie applies to" type="string" variable="$domain">
            <type by_reference="false">string</type>
          </tag>
          <tag line="120" name="param" description="If the cookie should only be transmitted over a secure connection" type="boolean" variable="$secure">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="120" name="param" description="If the cookie should only be readable by HTTP connection, not javascript" type="boolean" variable="$httponly">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="120" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="140">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="140">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="140">
          <name>$expires</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="140">
          <name>$path</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="140">
          <name>$domain</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="140">
          <name>$secure</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="140">
          <name>$httponly</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="204" package="Flourish">
        <name>setDefaultDomain</name>
        <full_name>setDefaultDomain</full_name>
        <docblock line="195">
          <description><![CDATA[Sets the default domain to use for cookies]]></description>
          <long-description><![CDATA[<p>This value will be used when the <code>$domain</code> parameter of the ::set()
method is not specified or is set to <code>NULL</code>.</p>]]></long-description>
          <tag line="195" name="param" description="The default domain to use for cookies" type="string" variable="$domain">
            <type by_reference="false">string</type>
          </tag>
          <tag line="195" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="204">
          <name>$domain</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="219" package="Flourish">
        <name>setDefaultExpires</name>
        <full_name>setDefaultExpires</full_name>
        <docblock line="210">
          <description><![CDATA[Sets the default expiration date to use for cookies]]></description>
          <long-description><![CDATA[<p>This value will be used when the <code>$expires</code> parameter of the ::set()
method is not specified or is set to <code>NULL</code>.</p>]]></long-description>
          <tag line="210" name="param" description="The default expiration date to use for cookies" type="string|integer" variable="$expires">
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="210" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="219">
          <name>$expires</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="234" package="Flourish">
        <name>setDefaultHTTPOnly</name>
        <full_name>setDefaultHTTPOnly</full_name>
        <docblock line="225">
          <description><![CDATA[Sets the default httponly flag to use for cookies]]></description>
          <long-description><![CDATA[<p>This value will be used when the <code>$httponly</code> parameter of the ::set()
method is not specified or is set to <code>NULL</code>.</p>]]></long-description>
          <tag line="225" name="param" description="The default httponly flag to use for cookies" type="boolean" variable="$httponly">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="225" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="234">
          <name>$httponly</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="249" package="Flourish">
        <name>setDefaultPath</name>
        <full_name>setDefaultPath</full_name>
        <docblock line="240">
          <description><![CDATA[Sets the default path to use for cookies]]></description>
          <long-description><![CDATA[<p>This value will be used when the <code>$path</code> parameter of the ::set()
method is not specified or is set to <code>NULL</code>.</p>]]></long-description>
          <tag line="240" name="param" description="The default path to use for cookies" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="240" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="249">
          <name>$path</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="264" package="Flourish">
        <name>setDefaultSecure</name>
        <full_name>setDefaultSecure</full_name>
        <docblock line="255">
          <description><![CDATA[Sets the default secure flag to use for cookies]]></description>
          <long-description><![CDATA[<p>This value will be used when the <code>$secure</code> parameter of the ::set()
method is not specified or is set to <code>NULL</code>.</p>]]></long-description>
          <tag line="255" name="param" description="The default secure flag to use for cookies" type="boolean" variable="$secure">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="255" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="264">
          <name>$secure</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="275" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="270">
          <description><![CDATA[Forces use as a static class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="270" name="return" description="" type="\fCookie">
            <type by_reference="false">\fCookie</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fCookie.php</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fORMOrdering.php" hash="2d0bc95d3c8c27d3c3666035620df19f" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="34" package="Flourish">
      <extends/>
      <name>fORMOrdering</name>
      <full_name>\fORMOrdering</full_name>
      <docblock line="2">
        <description><![CDATA[Allows a column in an fActiveRecord class to be a relative sort order column]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2008-2010 Will Bond, others"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="author" description="Dan Collins, iMarc LLC [dc-imarc] &lt;dan@imarc.net&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fORMOrdering" link="http://flourishlib.com/fORMOrdering"/>
        <tag line="2" name="version" description="1.0.0b19"/>
        <tag line="2" name="changes" description="1.0.0b19  Updated code to work with the new fORM API [wb, 2010-08-06]"/>
        <tag line="2" name="changes" description="1.0.0b18  Changed ::configureOrderingColumn() to ensure the column specified can store negative values [wb, 2010-07-21]"/>
        <tag line="2" name="changes" description="1.0.0b17  Changed validation messages array to use column name keys [wb, 2010-05-26]"/>
        <tag line="2" name="changes" description="1.0.0b16  Updated the class to allow for multiple ordering columns per class [dc-imarc, 2010-05-10]"/>
        <tag line="2" name="changes" description="1.0.0b15  Fixed a bug with ordering columns that are part of a multi-column unique constraint [wb, 2009-11-13]"/>
        <tag line="2" name="changes" description="1.0.0b14  Fixed a bug affecting where conditions with columns that are not null but have a default value [wb, 2009-11-03]"/>
        <tag line="2" name="changes" description="1.0.0b13  Updated code for the new fORMDatabase and fORMSchema APIs [wb, 2009-10-28]"/>
        <tag line="2" name="changes" description="1.0.0b12  Changed SQL statements to use value placeholders, identifier escaping and schema support [wb, 2009-10-22]"/>
        <tag line="2" name="changes" description="1.0.0b11  Fixed another bug with deleting records in the middle of a set, added support for reordering multiple records at once [dc-imarc, 2009-07-17]"/>
        <tag line="2" name="changes" description="1.0.0b10  Fixed a bug with deleting multiple in-memory records in the same set [dc-imarc, 2009-07-15]"/>
        <tag line="2" name="changes" description="1.0.0b9   Fixed a bug with using fORM::registerInspectCallback() [wb, 2009-07-15]"/>
        <tag line="2" name="changes" description="1.0.0b8   Updated to use new fORM::registerInspectCallback() method [wb, 2009-07-13]"/>
        <tag line="2" name="changes" description="1.0.0b7   Fixed ::validate() so it properly ignores ordering columns in multi-column unique constraints [wb, 2009-06-17]"/>
        <tag line="2" name="changes" description="1.0.0b6   Updated code for new fORM API [wb, 2009-06-15]"/>
        <tag line="2" name="changes" description="1.0.0b5   Updated class to automatically correct ordering values that are too high [wb, 2009-06-14]"/>
        <tag line="2" name="changes" description="1.0.0b4   Updated code to use new fValidationException::formatField() method [wb, 2009-06-04]"/>
        <tag line="2" name="changes" description="1.0.0b3   Fixed a bug with setting a new record to anywhere but the end of a set [wb, 2009-03-18]"/>
        <tag line="2" name="changes" description="1.0.0b2   Fixed a bug with ::inspect(), 'max_ordering_value' was being returned as 'max_ordering_index' [wb, 2009-03-02]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2008-06-25]"/>
      </docblock>
      <constant namespace="global" line="37" package="Flourish">
        <name>configureOrderingColumn</name>
        <full_name>configureOrderingColumn</full_name>
        <value><![CDATA['fORMOrdering::configureOrderingColumn']]></value>
      </constant>
      <constant namespace="global" line="38" package="Flourish">
        <name>delete</name>
        <full_name>delete</full_name>
        <value><![CDATA['fORMOrdering::delete']]></value>
      </constant>
      <constant namespace="global" line="39" package="Flourish">
        <name>inspect</name>
        <full_name>inspect</full_name>
        <value><![CDATA['fORMOrdering::inspect']]></value>
      </constant>
      <constant namespace="global" line="40" package="Flourish">
        <name>reflect</name>
        <full_name>reflect</full_name>
        <value><![CDATA['fORMOrdering::reflect']]></value>
      </constant>
      <constant namespace="global" line="41" package="Flourish">
        <name>reorder</name>
        <full_name>reorder</full_name>
        <value><![CDATA['fORMOrdering::reorder']]></value>
      </constant>
      <constant namespace="global" line="42" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <value><![CDATA['fORMOrdering::reset']]></value>
      </constant>
      <constant namespace="global" line="43" package="Flourish">
        <name>validate</name>
        <full_name>validate</full_name>
        <value><![CDATA['fORMOrdering::validate']]></value>
      </constant>
      <property final="false" static="true" visibility="private" line="51" namespace="global" package="Sutra">
        <name>$ordering_columns</name>
        <default><![CDATA[array()]]></default>
        <docblock line="46">
          <description><![CDATA[The columns configured as ordering columns]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="46" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="62" package="Flourish">
        <name>compose</name>
        <full_name>compose</full_name>
        <docblock line="54">
          <description><![CDATA[Composes text using fText if loaded]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="54" name="param" description="The message to compose" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="54" name="param" description="A string or number to insert into the message" type="mixed" variable="$component">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="54" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="54" name="return" description="The composed and possible translated message" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="62">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="87" package="Flourish">
        <name>configureOrderingColumn</name>
        <full_name>configureOrderingColumn</full_name>
        <docblock line="77">
          <description><![CDATA[Sets a column to be an ordering column]]></description>
          <long-description><![CDATA[<p>There can only be one ordering column per class/table and it must be
part of a single or multi-column <code>UNIQUE</code> constraint.</p>]]></long-description>
          <tag line="77" name="param" description="The class name or instance of the class" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="77" name="param" description="The column to set as an ordering column" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="77" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="87">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="87">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="156" package="Flourish">
        <name>addOldOtherFieldsWhereParams</name>
        <full_name>addOldOtherFieldsWhereParams</full_name>
        <docblock line="145">
          <description><![CDATA[Add params for a `WHERE` clause for the //old// multi-column set a record was part of]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="145" name="param" description="The schema of the database the query will be executed on" type="\fSchema" variable="$schema">
            <type by_reference="false">\fSchema</type>
          </tag>
          <tag line="145" name="param" description="The params for the fDatabase::query() call" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="145" name="param" description="The table the `WHERE` clause is for" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="145" name="param" description="The other columns in the multi-column unique constraint" type="array" variable="$other_columns">
            <type by_reference="false">array</type>
          </tag>
          <tag line="145" name="param" description="&amp;$values The record's current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="145" name="param" description="&amp;$old_values The record's old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="145" name="return" description="The updated params for fDatabase::query()" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="156">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="156">
          <name>$params</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="156">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="156">
          <name>$other_columns</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="156">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="156">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="191" package="Flourish">
        <name>addOtherFieldsWhereParams</name>
        <full_name>addOtherFieldsWhereParams</full_name>
        <docblock line="181">
          <description><![CDATA[Adds params for a `WHERE` clause to ensure a database call is only selecting from rows that are part of the same set when an ordering field is in multi-column `UNIQUE` constraint.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="181" name="param" description="The schema of the database the query will be executed on" type="\fSchema" variable="$schema">
            <type by_reference="false">\fSchema</type>
          </tag>
          <tag line="181" name="param" description="The parameters for the fDatabase::query() call" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="181" name="param" description="The table the `WHERE` clause is for" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="181" name="param" description="The other columns in the multi-column unique constraint" type="array" variable="$other_columns">
            <type by_reference="false">array</type>
          </tag>
          <tag line="181" name="param" description="&amp;$values The values to match with" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="181" name="return" description="The updated params for fDatabase::query()" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="191">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="191">
          <name>$params</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="191">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="191">
          <name>$other_columns</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="191">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="228" package="Flourish">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="216">
          <description><![CDATA[Re-orders other records in the set when the record specified is deleted]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="216" name="internal" description=""/>
          <tag line="216" name="param" description="The fActiveRecord instance" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="216" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="216" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="216" name="param" description="&amp;$related_records Any records related to this record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="216" name="param" description="&amp;$cache The cache array for the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="216" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="228">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="228">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="228">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="228">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="228">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="334" package="Flourish">
        <name>inspect</name>
        <full_name>inspect</full_name>
        <docblock line="320">
          <description><![CDATA[Returns the metadata about a column including features added by this class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="320" name="internal" description=""/>
          <tag line="320" name="param" description="The fActiveRecord instance" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="320" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="320" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="320" name="param" description="&amp;$related_records Any records related to this record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="320" name="param" description="&amp;$cache The cache array for the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="320" name="param" description="The method that was called" type="string" variable="$method_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="320" name="param" description="The parameters passed to the method" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="320" name="return" description="The metadata array or element specified" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="334">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="334">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="334">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="334">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="334">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="334">
          <name>$method_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="334">
          <name>$parameters</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="385" package="Flourish">
        <name>isInNewSet</name>
        <full_name>isInNewSet</full_name>
        <docblock line="376">
          <description><![CDATA[Checks to see if the values specified are part of a record that is new to its order set]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="376" name="param" description="The column being ordered by" type="string" variable="$ordering_column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="376" name="param" description="The other columns in the multi-column unique constraint" type="array" variable="$other_columns">
            <type by_reference="false">array</type>
          </tag>
          <tag line="376" name="param" description="&amp;$values The values of the record" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="376" name="param" description="&amp;$old_values The old values of the record" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="376" name="return" description="If the record is part of a new ordering set" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="385">
          <name>$ordering_column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="385">
          <name>$other_columns</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="385">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="385">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="426" package="Flourish">
        <name>reflect</name>
        <full_name>reflect</full_name>
        <docblock line="416">
          <description><![CDATA[Adjusts the fActiveRecord::reflect() signatures of columns that have been configured in this class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="416" name="internal" description=""/>
          <tag line="416" name="param" description="The class to reflect" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="416" name="param" description="&amp;$signatures The associative array of `{method name} =&gt; {signature}`" type="array" variable="$signatures">
            <type by_reference="false">array</type>
          </tag>
          <tag line="416" name="param" description="If doc comments should be included with the signature" type="boolean" variable="$include_doc_comments">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="416" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="426">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="426">
          <name>$signatures</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="426">
          <name>$include_doc_comments</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="464" package="Flourish">
        <name>reorder</name>
        <full_name>reorder</full_name>
        <docblock line="452">
          <description><![CDATA[Re-orders the object based on it's current state and new position]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="452" name="internal" description=""/>
          <tag line="452" name="param" description="The fActiveRecord instance" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="452" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="452" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="452" name="param" description="&amp;$related_records Any records related to this record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="452" name="param" description="&amp;$cache The cache array for the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="452" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="464">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="464">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="464">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="464">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="464">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="696" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="689">
          <description><![CDATA[Resets the configuration of the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="689" name="internal" description=""/>
          <tag line="689" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="715" package="Flourish">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="702">
          <description><![CDATA[Makes sure the ordering value is sane, removes error messages about missing values]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="702" name="internal" description=""/>
          <tag line="702" name="param" description="The fActiveRecord instance" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="702" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="702" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="702" name="param" description="&amp;$related_records Any records related to this record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="702" name="param" description="&amp;$cache The cache array for the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="702" name="param" description="&amp;$validation_messages An array of ordered validation messages" type="array" variable="$validation_messages">
            <type by_reference="false">array</type>
          </tag>
          <tag line="702" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="715">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="715">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="715">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="715">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="715">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="715">
          <name>$validation_messages</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="774" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="769">
          <description><![CDATA[Forces use as a static class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="769" name="return" description="" type="\fORMOrdering">
            <type by_reference="false">\fORMOrdering</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fORMOrdering.php</error>
      <notice line="54" code="50013">Parameter $component could not be found in compose()</notice>
      <notice line="54" code="50013">Parameter  could not be found in compose()</notice>
    </parse_markers>
  </file>
  <file path="php/flourish/fLoader.php" hash="9f01be940726c3224d8b39cca419ee4e" package="Sutra">
    <include line="128" type="Include" package="Sutra">
      <name/>
    </include>
    <include line="214" type="Include" package="Sutra">
      <name/>
    </include>
    <function namespace="global" line="157" package="Sutra">
      <name>fDate</name>
      <full_name>\fDate</full_name>
      <argument line="157">
        <name>$date</name>
        <default><![CDATA[NULL]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="162" package="Sutra">
      <name>fDirectory</name>
      <full_name>\fDirectory</full_name>
      <argument line="162">
        <name>$directory</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="167" package="Sutra">
      <name>fEmail</name>
      <full_name>\fEmail</full_name>
    </function>
    <function namespace="global" line="172" package="Sutra">
      <name>fFile</name>
      <full_name>\fFile</full_name>
      <argument line="172">
        <name>$file</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="177" package="Sutra">
      <name>fImage</name>
      <full_name>\fImage</full_name>
      <argument line="177">
        <name>$file_path</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="182" package="Sutra">
      <name>fMoney</name>
      <full_name>\fMoney</full_name>
      <argument line="182">
        <name>$amount</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="182">
        <name>$currency</name>
        <default><![CDATA[NULL]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="187" package="Sutra">
      <name>fNumber</name>
      <full_name>\fNumber</full_name>
      <argument line="187">
        <name>$value</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="187">
        <name>$scale</name>
        <default><![CDATA[NULL]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="192" package="Sutra">
      <name>fTime</name>
      <full_name>\fTime</full_name>
      <argument line="192">
        <name>$time</name>
        <default><![CDATA[NULL]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="197" package="Sutra">
      <name>fTimestamp</name>
      <full_name>\fTimestamp</full_name>
      <argument line="197">
        <name>$datetime</name>
        <default><![CDATA[NULL]]></default>
        <type/>
      </argument>
      <argument line="197">
        <name>$timezone</name>
        <default><![CDATA[NULL]]></default>
        <type/>
      </argument>
    </function>
    <class final="false" abstract="false" namespace="global" line="18" package="Flourish">
      <extends/>
      <name>fLoader</name>
      <full_name>\fLoader</full_name>
      <docblock line="2">
        <description><![CDATA[A class that loads Flourish]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2011 Will Bond, others"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="author" description="netcarver [n] &lt;fContrib@netcarving.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fLoader" link="http://flourishlib.com/fLoader"/>
        <tag line="2" name="version" description="1.0.0b3"/>
        <tag line="2" name="changes" description="1.0.0b3  Added fEmail() constructor function [n, 2011-09-12]"/>
        <tag line="2" name="changes" description="1.0.0b2  Added fPagination [wb, 2011-09-06]"/>
        <tag line="2" name="changes" description="1.0.0b   The initial implementation [wb, 2011-08-26]"/>
      </docblock>
      <constant namespace="global" line="21" package="Flourish">
        <name>autoload</name>
        <full_name>autoload</full_name>
        <value><![CDATA['fLoader::autoload']]></value>
      </constant>
      <constant namespace="global" line="22" package="Flourish">
        <name>best</name>
        <full_name>best</full_name>
        <value><![CDATA['fLoader::best']]></value>
      </constant>
      <constant namespace="global" line="23" package="Flourish">
        <name>eager</name>
        <full_name>eager</full_name>
        <value><![CDATA['fLoader::eager']]></value>
      </constant>
      <constant namespace="global" line="24" package="Flourish">
        <name>hasOpcodeCache</name>
        <full_name>hasOpcodeCache</full_name>
        <value><![CDATA['fLoader::hasOpcodeCache']]></value>
      </constant>
      <constant namespace="global" line="25" package="Flourish">
        <name>lazy</name>
        <full_name>lazy</full_name>
        <value><![CDATA['fLoader::lazy']]></value>
      </constant>
      <property final="false" static="true" visibility="private" line="33" namespace="global" package="Sutra">
        <name>$classes</name>
        <default><![CDATA[array('fException', 'fExpectedException', 'fEmptySetException', 'fNoRemainingException', 'fNoRowsException', 'fNotFoundException', 'fValidationException', 'fUnexpectedException', 'fConnectivityException', 'fEnvironmentException', 'fProgrammerException', 'fSQLException', 'fActiveRecord', 'fAuthorization', 'fAuthorizationException', 'fBuffer', 'fCRUD', 'fCache', 'fCookie', 'fCore', 'fCryptography', 'fDatabase', 'fDate', 'fDirectory', 'fEmail', 'fFile', 'fFilesystem', 'fGrammar', 'fHTML', 'fImage', 'fJSON', 'fMailbox', 'fMessaging', 'fMoney', 'fNumber', 'fORM', 'fORMColumn', 'fORMDatabase', 'fORMDate', 'fORMFile', 'fORMJSON', 'fORMMoney', 'fORMOrdering', 'fORMRelated', 'fORMSchema', 'fORMValidation', 'fPagination', 'fRecordSet', 'fRequest', 'fResult', 'fSMTP', 'fSQLSchemaTranslation', 'fSQLTranslation', 'fSchema', 'fSession', 'fStatement', 'fTemplating', 'fText', 'fTime', 'fTimestamp', 'fURL', 'fUTF8', 'fUnbufferedResult', 'fUpload', 'fValidation', 'fXML')]]></default>
        <docblock line="28">
          <description><![CDATA[The Flourish classes in dependency order]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="28" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="107" namespace="global" package="Sutra">
        <name>$path</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="102">
          <description><![CDATA[The path Flourish is installed into]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="102" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="118" package="Flourish">
        <name>autoload</name>
        <full_name>autoload</full_name>
        <docblock line="110">
          <description><![CDATA[Tries to load a Flourish class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="110" name="internal" description=""/>
          <tag line="110" name="param" description="The class to load" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="110" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="118">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="137" package="Flourish">
        <name>best</name>
        <full_name>best</full_name>
        <docblock line="132">
          <description><![CDATA[Performs eager loading if an op-code cache is present, otherwise lazy]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="132" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="151" package="Flourish">
        <name>createConstructorFunctions</name>
        <full_name>createConstructorFunctions</full_name>
        <docblock line="146">
          <description><![CDATA[Creates functions that act as chainable constructors]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="146" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="209" package="Flourish">
        <name>eager</name>
        <full_name>eager</full_name>
        <docblock line="204">
          <description><![CDATA[Loads all Flourish classes when called]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="204" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="234" package="Flourish">
        <name>hasOpcodeCache</name>
        <full_name>hasOpcodeCache</full_name>
        <docblock line="219">
          <description><![CDATA[Check if a PHP opcode cache is installed]]></description>
          <long-description><![CDATA[<p>The following opcode caches are currently detected:</p>

<ul>
<li>[http://pecl.php.net/package/APC APC]</li>
<li>[http://eaccelerator.net eAccelerator]</li>
<li>[http://www.nusphere.com/products/phpexpress.htm Nusphere PhpExpress]</li>
<li>[http://turck-mmcache.sourceforge.net/index_old.html Turck MMCache]</li>
<li>[http://xcache.lighttpd.net XCache]</li>
<li>[http://www.zend.com/en/products/server/ Zend Server (Optimizer+)]</li>
<li>[http://www.zend.com/en/products/platform/ Zend Platform (Code Acceleration)]</li>
</ul>]]></long-description>
          <tag line="219" name="return" description="If a PHP opcode cache is loaded" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="253" package="Flourish">
        <name>lazy</name>
        <full_name>lazy</full_name>
        <docblock line="248">
          <description><![CDATA[Registers an autoloader for Flourish via [http://php.net/spl_autoload_register `spl_autoload_register()`]]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="248" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="278" package="Flourish">
        <name>setPath</name>
        <full_name>setPath</full_name>
        <docblock line="273">
          <description><![CDATA[Determines where Flourish is installed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="273" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="289" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="284">
          <description><![CDATA[Forces use as a static class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="284" name="return" description="" type="\fLoader">
            <type by_reference="false">\fLoader</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fLoader.php</error>
      <error line="157" code="50009">No DocBlock was found for function \fDate()</error>
      <error line="162" code="50009">No DocBlock was found for function \fDirectory()</error>
      <error line="167" code="50009">No DocBlock was found for function \fEmail()</error>
      <error line="172" code="50009">No DocBlock was found for function \fFile()</error>
      <error line="177" code="50009">No DocBlock was found for function \fImage()</error>
      <error line="182" code="50009">No DocBlock was found for function \fMoney()</error>
      <error line="187" code="50009">No DocBlock was found for function \fNumber()</error>
      <error line="192" code="50009">No DocBlock was found for function \fTime()</error>
      <error line="197" code="50009">No DocBlock was found for function \fTimestamp()</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fAuthorization.php" hash="b49ad672d96d86b2c0d8fa2c04659878" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="20" package="Flourish">
      <extends/>
      <name>fAuthorization</name>
      <full_name>\fAuthorization</full_name>
      <docblock line="2">
        <description><![CDATA[Allows defining and checking user authentication via ACLs, authorization levels or a simple logged in/not logged in scheme]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2011 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fAuthorization" link="http://flourishlib.com/fAuthorization"/>
        <tag line="2" name="version" description="1.0.0b6"/>
        <tag line="2" name="changes" description="1.0.0b6  Fixed ::checkIP() to not trigger a notice when `$_SERVER['REMOTE_ADDR']` is not set [wb, 2011-05-10]"/>
        <tag line="2" name="changes" description="1.0.0b5  Added ::getLoginPage() [wb, 2010-03-09]"/>
        <tag line="2" name="changes" description="1.0.0b4  Updated class to use new fSession API [wb, 2009-10-23]"/>
        <tag line="2" name="changes" description="1.0.0b3  Updated class to use new fSession API [wb, 2009-05-08]"/>
        <tag line="2" name="changes" description="1.0.0b2  Fixed a bug with using named IP ranges in ::checkIP() [wb, 2009-01-10]"/>
        <tag line="2" name="changes" description="1.0.0b   The initial implementation [wb, 2007-06-14]"/>
      </docblock>
      <constant namespace="global" line="23" package="Flourish">
        <name>addNamedIPRange</name>
        <full_name>addNamedIPRange</full_name>
        <value><![CDATA['fAuthorization::addNamedIPRange']]></value>
      </constant>
      <constant namespace="global" line="24" package="Flourish">
        <name>checkACL</name>
        <full_name>checkACL</full_name>
        <value><![CDATA['fAuthorization::checkACL']]></value>
      </constant>
      <constant namespace="global" line="25" package="Flourish">
        <name>checkAuthLevel</name>
        <full_name>checkAuthLevel</full_name>
        <value><![CDATA['fAuthorization::checkAuthLevel']]></value>
      </constant>
      <constant namespace="global" line="26" package="Flourish">
        <name>checkIP</name>
        <full_name>checkIP</full_name>
        <value><![CDATA['fAuthorization::checkIP']]></value>
      </constant>
      <constant namespace="global" line="27" package="Flourish">
        <name>checkLoggedIn</name>
        <full_name>checkLoggedIn</full_name>
        <value><![CDATA['fAuthorization::checkLoggedIn']]></value>
      </constant>
      <constant namespace="global" line="28" package="Flourish">
        <name>destroyUserInfo</name>
        <full_name>destroyUserInfo</full_name>
        <value><![CDATA['fAuthorization::destroyUserInfo']]></value>
      </constant>
      <constant namespace="global" line="29" package="Flourish">
        <name>getLoginPage</name>
        <full_name>getLoginPage</full_name>
        <value><![CDATA['fAuthorization::getLoginPage']]></value>
      </constant>
      <constant namespace="global" line="30" package="Flourish">
        <name>getRequestedURL</name>
        <full_name>getRequestedURL</full_name>
        <value><![CDATA['fAuthorization::getRequestedURL']]></value>
      </constant>
      <constant namespace="global" line="31" package="Flourish">
        <name>getUserACLs</name>
        <full_name>getUserACLs</full_name>
        <value><![CDATA['fAuthorization::getUserACLs']]></value>
      </constant>
      <constant namespace="global" line="32" package="Flourish">
        <name>getUserAuthLevel</name>
        <full_name>getUserAuthLevel</full_name>
        <value><![CDATA['fAuthorization::getUserAuthLevel']]></value>
      </constant>
      <constant namespace="global" line="33" package="Flourish">
        <name>getUserToken</name>
        <full_name>getUserToken</full_name>
        <value><![CDATA['fAuthorization::getUserToken']]></value>
      </constant>
      <constant namespace="global" line="34" package="Flourish">
        <name>requireACL</name>
        <full_name>requireACL</full_name>
        <value><![CDATA['fAuthorization::requireACL']]></value>
      </constant>
      <constant namespace="global" line="35" package="Flourish">
        <name>requireAuthLevel</name>
        <full_name>requireAuthLevel</full_name>
        <value><![CDATA['fAuthorization::requireAuthLevel']]></value>
      </constant>
      <constant namespace="global" line="36" package="Flourish">
        <name>requireLoggedIn</name>
        <full_name>requireLoggedIn</full_name>
        <value><![CDATA['fAuthorization::requireLoggedIn']]></value>
      </constant>
      <constant namespace="global" line="37" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <value><![CDATA['fAuthorization::reset']]></value>
      </constant>
      <constant namespace="global" line="38" package="Flourish">
        <name>setAuthLevels</name>
        <full_name>setAuthLevels</full_name>
        <value><![CDATA['fAuthorization::setAuthLevels']]></value>
      </constant>
      <constant namespace="global" line="39" package="Flourish">
        <name>setLoginPage</name>
        <full_name>setLoginPage</full_name>
        <value><![CDATA['fAuthorization::setLoginPage']]></value>
      </constant>
      <constant namespace="global" line="40" package="Flourish">
        <name>setRequestedURL</name>
        <full_name>setRequestedURL</full_name>
        <value><![CDATA['fAuthorization::setRequestedURL']]></value>
      </constant>
      <constant namespace="global" line="41" package="Flourish">
        <name>setUserACLs</name>
        <full_name>setUserACLs</full_name>
        <value><![CDATA['fAuthorization::setUserACLs']]></value>
      </constant>
      <constant namespace="global" line="42" package="Flourish">
        <name>setUserAuthLevel</name>
        <full_name>setUserAuthLevel</full_name>
        <value><![CDATA['fAuthorization::setUserAuthLevel']]></value>
      </constant>
      <constant namespace="global" line="43" package="Flourish">
        <name>setUserToken</name>
        <full_name>setUserToken</full_name>
        <value><![CDATA['fAuthorization::setUserToken']]></value>
      </constant>
      <property final="false" static="true" visibility="private" line="51" namespace="global" package="Sutra">
        <name>$levels</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="46">
          <description><![CDATA[The valid auth levels]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="46" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="58" namespace="global" package="Sutra">
        <name>$login_page</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="53">
          <description><![CDATA[The login page]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="53" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="65" namespace="global" package="Sutra">
        <name>$named_ip_ranges</name>
        <default><![CDATA[array()]]></default>
        <docblock line="60">
          <description><![CDATA[Named IP ranges]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="60" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="78" package="Flourish">
        <name>addNamedIPRange</name>
        <full_name>addNamedIPRange</full_name>
        <docblock line="68">
          <description><![CDATA[Adds a named IP address or range, or array of addresses and/or ranges]]></description>
          <long-description><![CDATA[<p>This method allows ::checkIP() to be called with a name instead of the
actual IPs.</p>]]></long-description>
          <tag line="68" name="param" description="The name to give the IP addresses/ranges" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="68" name="param" description="This can be string (or array of strings) of the IPs or IP ranges to restrict to - please see ::checkIP() for format details" type="mixed" variable="$ip_ranges">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="68" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="78">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="78">
          <name>$ip_ranges</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="91" package="Flourish">
        <name>checkACL</name>
        <full_name>checkACL</full_name>
        <docblock line="84">
          <description><![CDATA[Checks to see if the logged in user meets the requirements of the ACL specified]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="84" name="param" description="The resource we are checking permissions for" type="string" variable="$resource">
            <type by_reference="false">string</type>
          </tag>
          <tag line="84" name="param" description="The permission to require from the user" type="string" variable="$permission">
            <type by_reference="false">string</type>
          </tag>
          <tag line="84" name="return" description="If the user has the required permissions" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$resource</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="91">
          <name>$permission</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="125" package="Flourish">
        <name>checkAuthLevel</name>
        <full_name>checkAuthLevel</full_name>
        <docblock line="119">
          <description><![CDATA[Checks to see if the logged in user has the specified auth level]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="119" name="param" description="The level to check against the logged in user's level" type="string" variable="$level">
            <type by_reference="false">string</type>
          </tag>
          <tag line="119" name="return" description="If the user has the required auth level" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="125">
          <name>$level</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="163" package="Flourish">
        <name>checkIP</name>
        <full_name>checkIP</full_name>
        <docblock line="144">
          <description><![CDATA[Checks to see if the user is from the IPs or IP ranges specified]]></description>
          <long-description><![CDATA[<p>The <code>$ip_ranges</code> parameter can be either a single string, or an array of
strings, each of which should be in one of the following formats:</p>

<ul>
<li>A single IP address:

<ul>
<li>192.168.1.1</li>
<li>208.77.188.166</li>
</ul></li>
<li>A CIDR range

<ul>
<li>192.168.1.0/24</li>
<li>208.77.188.160/28</li>
</ul></li>
<li>An IP/subnet mask combination

<ul>
<li>192.168.1.0/255.255.255.0</li>
<li>208.77.188.160/255.255.255.240</li>
</ul></li>
</ul>]]></long-description>
          <tag line="144" name="param" description="A string (or array of strings) of the IPs or IP ranges to restrict to - see method description for details" type="mixed" variable="$ip_ranges">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="144" name="return" description="If the user is coming from (one of) the IPs or ranges specified" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="163">
          <name>$ip_ranges</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="220" package="Flourish">
        <name>checkLoggedIn</name>
        <full_name>checkLoggedIn</full_name>
        <docblock line="215">
          <description><![CDATA[Checks to see if the user has an auth level or ACLs defined]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="215" name="return" description="If the user is logged in" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="236" package="Flourish">
        <name>destroyUserInfo</name>
        <full_name>destroyUserInfo</full_name>
        <docblock line="231">
          <description><![CDATA[Destroys the user's auth level and/or ACLs]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="231" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="250" package="Flourish">
        <name>getLoginPage</name>
        <full_name>getLoginPage</full_name>
        <docblock line="245">
          <description><![CDATA[Returns the login page set via ::setLoginPage()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="245" name="return" description="The login page users are redirected to if they don't have the required authorization" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="262" package="Flourish">
        <name>getRequestedURL</name>
        <full_name>getRequestedURL</full_name>
        <docblock line="255">
          <description><![CDATA[Returns the URL requested before the user was redirected to the login page]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="255" name="param" description="If the requested url should be cleared from the session after it is retrieved" type="boolean" variable="$clear">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="255" name="param" description="The default URL to return if the user was not redirected" type="string" variable="$default_url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="255" name="return" description="The URL that was requested before they were redirected to the login page" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="262">
          <name>$clear</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="262">
          <name>$default_url</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="277" package="Flourish">
        <name>getUserACLs</name>
        <full_name>getUserACLs</full_name>
        <docblock line="272">
          <description><![CDATA[Gets the ACLs for the logged in user]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="272" name="return" description="The logged in user's ACLs" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="288" package="Flourish">
        <name>getUserAuthLevel</name>
        <full_name>getUserAuthLevel</full_name>
        <docblock line="283">
          <description><![CDATA[Gets the authorization level for the logged in user]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="283" name="return" description="The logged in user's auth level" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="299" package="Flourish">
        <name>getUserToken</name>
        <full_name>getUserToken</full_name>
        <docblock line="294">
          <description><![CDATA[Gets the value that was set as the user token, `NULL` if no token has been set]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="294" name="return" description="The user token that had been set, `NULL` if none" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="310" package="Flourish">
        <name>redirect</name>
        <full_name>redirect</full_name>
        <docblock line="305">
          <description><![CDATA[Redirects the user to the login page]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="305" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="324" package="Flourish">
        <name>requireACL</name>
        <full_name>requireACL</full_name>
        <docblock line="317">
          <description><![CDATA[Redirect the user to the login page if they do not have the permissions required]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="317" name="param" description="The resource we are checking permissions for" type="string" variable="$resource">
            <type by_reference="false">string</type>
          </tag>
          <tag line="317" name="param" description="The permission to require from the user" type="string" variable="$permission">
            <type by_reference="false">string</type>
          </tag>
          <tag line="317" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="324">
          <name>$resource</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="324">
          <name>$permission</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="342" package="Flourish">
        <name>requireAuthLevel</name>
        <full_name>requireAuthLevel</full_name>
        <docblock line="336">
          <description><![CDATA[Redirect the user to the login page if they do not have the auth level required]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="336" name="param" description="The level to check against the logged in user's level" type="string" variable="$level">
            <type by_reference="false">string</type>
          </tag>
          <tag line="336" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="342">
          <name>$level</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="359" package="Flourish">
        <name>requireLoggedIn</name>
        <full_name>requireLoggedIn</full_name>
        <docblock line="354">
          <description><![CDATA[Redirect the user to the login page if they do not have an auth level or ACLs]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="354" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="378" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="371">
          <description><![CDATA[Resets the configuration of the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="371" name="internal" description=""/>
          <tag line="371" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="392" package="Flourish">
        <name>setAuthLevels</name>
        <full_name>setAuthLevels</full_name>
        <docblock line="386">
          <description><![CDATA[Sets the authorization levels to use for level checking]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="386" name="param" description="An associative array of `(string) {level} =&gt; (integer) {value}`, for each level" type="array" variable="$levels">
            <type by_reference="false">array</type>
          </tag>
          <tag line="386" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="392">
          <name>$levels</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="404" package="Flourish">
        <name>setLoginPage</name>
        <full_name>setLoginPage</full_name>
        <docblock line="398">
          <description><![CDATA[Sets the login page to redirect users to]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="398" name="param" description="The URL of the login page" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="398" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="404">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="416" package="Flourish">
        <name>setRequestedURL</name>
        <full_name>setRequestedURL</full_name>
        <docblock line="410">
          <description><![CDATA[Sets the restricted URL requested by the user]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="410" name="param" description="The URL to save as the requested URL" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="410" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="416">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="441" package="Flourish">
        <name>setUserACLs</name>
        <full_name>setUserACLs</full_name>
        <docblock line="422">
          <description><![CDATA[Sets the ACLs for the logged in user.]]></description>
          <long-description><![CDATA[<p>Array should be formatted like:</p>

<p>{{{
array (
    (string) {resource name} => array(
        (mixed) {permission}, ...
    ), ...
)
}}}</p>

<p>The resource name or the permission may be the single character <code>'*'</code>
which acts as a wildcard.</p>]]></long-description>
          <tag line="422" name="param" description="The logged in user's ACLs - see method description for format" type="array" variable="$acls">
            <type by_reference="false">array</type>
          </tag>
          <tag line="422" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="441">
          <name>$acls</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="454" package="Flourish">
        <name>setUserAuthLevel</name>
        <full_name>setUserAuthLevel</full_name>
        <docblock line="448">
          <description><![CDATA[Sets the authorization level for the logged in user]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="448" name="param" description="The logged in user's auth level" type="string" variable="$level">
            <type by_reference="false">string</type>
          </tag>
          <tag line="448" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="454">
          <name>$level</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="468" package="Flourish">
        <name>setUserToken</name>
        <full_name>setUserToken</full_name>
        <docblock line="462">
          <description><![CDATA[Sets some piece of information to use to identify the current user]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="462" name="param" description="The user's token. This could be a user id, an email address, a user object, etc." type="mixed" variable="$token">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="462" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="468">
          <name>$token</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="481" package="Flourish">
        <name>validateAuthLevel</name>
        <full_name>validateAuthLevel</full_name>
        <docblock line="475">
          <description><![CDATA[Makes sure auth levels have been set, and that the specified auth level is valid]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="475" name="param" description="The level to validate" type="string" variable="$level">
            <type by_reference="false">string</type>
          </tag>
          <tag line="475" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="481">
          <name>$level</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="504" package="Flourish">
        <name>validateLoginPage</name>
        <full_name>validateLoginPage</full_name>
        <docblock line="499">
          <description><![CDATA[Makes sure a login page has been defined]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="499" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="520" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="515">
          <description><![CDATA[Forces use as a static class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="515" name="return" description="" type="\fAuthorization">
            <type by_reference="false">\fAuthorization</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fAuthorization.php</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fORMDate.php" hash="b6881d9c11818effe26e15e820b65ce3" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="23" package="Flourish">
      <extends/>
      <name>fORMDate</name>
      <full_name>\fORMDate</full_name>
      <docblock line="2">
        <description><![CDATA[Provides additional date/time functionality for fActiveRecord classes]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2008-2010 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fORMDate" link="http://flourishlib.com/fORMDate"/>
        <tag line="2" name="version" description="1.0.0b9"/>
        <tag line="2" name="changes" description="1.0.0b9  Updated code to work with the new fORM API [wb, 2010-08-06]"/>
        <tag line="2" name="changes" description="1.0.0b8  Changed validation messages array to use column name keys [wb, 2010-05-26]"/>
        <tag line="2" name="changes" description="1.0.0b7  Fixed the `set` methods to return the record object in order to be consistent with all other `set` methods [wb, 2010-03-15]"/>
        <tag line="2" name="changes" description="1.0.0b6  Fixed an issue with calling a non-existent method on fTimestamp instances [wb, 2009-11-03]"/>
        <tag line="2" name="changes" description="1.0.0b5  Updated code for the new fORMDatabase and fORMSchema APIs [wb, 2009-10-28]"/>
        <tag line="2" name="changes" description="1.0.0b4  Fixed setting up the inspect callback in ::configureTimezoneColumn() [wb, 2009-10-11]"/>
        <tag line="2" name="changes" description="1.0.0b3  Updated to use new fORM::registerInspectCallback() method [wb, 2009-07-13]"/>
        <tag line="2" name="changes" description="1.0.0b2  Updated code to use new fValidationException::formatField() method [wb, 2009-06-04]"/>
        <tag line="2" name="changes" description="1.0.0b   The initial implementation [wb, 2008-09-05]"/>
      </docblock>
      <constant namespace="global" line="26" package="Flourish">
        <name>configureDateCreatedColumn</name>
        <full_name>configureDateCreatedColumn</full_name>
        <value><![CDATA['fORMDate::configureDateCreatedColumn']]></value>
      </constant>
      <constant namespace="global" line="27" package="Flourish">
        <name>configureDateUpdatedColumn</name>
        <full_name>configureDateUpdatedColumn</full_name>
        <value><![CDATA['fORMDate::configureDateUpdatedColumn']]></value>
      </constant>
      <constant namespace="global" line="28" package="Flourish">
        <name>configureTimezoneColumn</name>
        <full_name>configureTimezoneColumn</full_name>
        <value><![CDATA['fORMDate::configureTimezoneColumn']]></value>
      </constant>
      <constant namespace="global" line="29" package="Flourish">
        <name>inspect</name>
        <full_name>inspect</full_name>
        <value><![CDATA['fORMDate::inspect']]></value>
      </constant>
      <constant namespace="global" line="30" package="Flourish">
        <name>makeTimestampObjects</name>
        <full_name>makeTimestampObjects</full_name>
        <value><![CDATA['fORMDate::makeTimestampObjects']]></value>
      </constant>
      <constant namespace="global" line="31" package="Flourish">
        <name>objectifyTimestampWithoutTimezone</name>
        <full_name>objectifyTimestampWithoutTimezone</full_name>
        <value><![CDATA['fORMDate::objectifyTimestampWithoutTimezone']]></value>
      </constant>
      <constant namespace="global" line="32" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <value><![CDATA['fORMDate::reset']]></value>
      </constant>
      <constant namespace="global" line="33" package="Flourish">
        <name>setDateCreated</name>
        <full_name>setDateCreated</full_name>
        <value><![CDATA['fORMDate::setDateCreated']]></value>
      </constant>
      <constant namespace="global" line="34" package="Flourish">
        <name>setDateUpdated</name>
        <full_name>setDateUpdated</full_name>
        <value><![CDATA['fORMDate::setDateUpdated']]></value>
      </constant>
      <constant namespace="global" line="35" package="Flourish">
        <name>setTimestampColumn</name>
        <full_name>setTimestampColumn</full_name>
        <value><![CDATA['fORMDate::setTimestampColumn']]></value>
      </constant>
      <constant namespace="global" line="36" package="Flourish">
        <name>setTimezoneColumn</name>
        <full_name>setTimezoneColumn</full_name>
        <value><![CDATA['fORMDate::setTimezoneColumn']]></value>
      </constant>
      <constant namespace="global" line="37" package="Flourish">
        <name>validateTimezoneColumns</name>
        <full_name>validateTimezoneColumns</full_name>
        <value><![CDATA['fORMDate::validateTimezoneColumns']]></value>
      </constant>
      <property final="false" static="true" visibility="private" line="45" namespace="global" package="Sutra">
        <name>$date_created_columns</name>
        <default><![CDATA[array()]]></default>
        <docblock line="40">
          <description><![CDATA[Columns that should be filled with the date created for new objects]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="40" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="52" namespace="global" package="Sutra">
        <name>$date_updated_columns</name>
        <default><![CDATA[array()]]></default>
        <docblock line="47">
          <description><![CDATA[Columns that should be filled with the date updated]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="47" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="59" namespace="global" package="Sutra">
        <name>$timezone_columns</name>
        <default><![CDATA[array()]]></default>
        <docblock line="54">
          <description><![CDATA[Columns that store timezone information for timestamp columns]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="54" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="66" namespace="global" package="Sutra">
        <name>$timestamp_columns</name>
        <default><![CDATA[array()]]></default>
        <docblock line="61">
          <description><![CDATA[Timestamp columns that have a corresponding timezone column]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="61" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="77" package="Flourish">
        <name>compose</name>
        <full_name>compose</full_name>
        <docblock line="69">
          <description><![CDATA[Composes text using fText if loaded]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="69" name="param" description="The message to compose" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="69" name="param" description="A string or number to insert into the message" type="mixed" variable="$component">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="69" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="69" name="return" description="The composed and possible translated message" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="77">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="102" package="Flourish">
        <name>configureDateCreatedColumn</name>
        <full_name>configureDateCreatedColumn</full_name>
        <docblock line="92">
          <description><![CDATA[Sets a column to be a date created column]]></description>
          <long-description><![CDATA[<p>When a new record is stored in the database, date created columns will
be filled with the timestamp of the store operation.</p>]]></long-description>
          <tag line="92" name="param" description="The class name or instance of the class" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="92" name="param" description="The column to set as a date created column" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="92" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="102">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="102">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="141" package="Flourish">
        <name>configureDateUpdatedColumn</name>
        <full_name>configureDateUpdatedColumn</full_name>
        <docblock line="131">
          <description><![CDATA[Sets a column to be a date updated column]]></description>
          <long-description><![CDATA[<p>Whenever a record is stored in the database, a date updated column will
be set to the timestamp of the operation.</p>]]></long-description>
          <tag line="131" name="param" description="The class name or instance of the class" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="131" name="param" description="The column to set as a date updated column" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="131" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="141">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="141">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="183" package="Flourish">
        <name>configureTimezoneColumn</name>
        <full_name>configureTimezoneColumn</full_name>
        <docblock line="170">
          <description><![CDATA[Sets a timestamp column to store the timezone in another column]]></description>
          <long-description><![CDATA[<p>Since not all databases support timezone information in timestamp
columns, this method allows storing the timezone in another columns.
When the timestamp and timezone are retrieved from the database, they
will be automatically combined together into an fTimestamp object.</p>]]></long-description>
          <tag line="170" name="param" description="The class name or instance of the class to set the column format" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="170" name="param" description="The timestamp column to store the timezone for" type="string" variable="$timestamp_column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="170" name="param" description="The column to store the timezone in" type="string" variable="$timezone_column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="170" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="183">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="183">
          <name>$timestamp_column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="183">
          <name>$timezone_column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="258" package="Flourish">
        <name>inspect</name>
        <full_name>inspect</full_name>
        <docblock line="248">
          <description><![CDATA[Adds metadata about features added by this class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="248" name="internal" description=""/>
          <tag line="248" name="param" description="The class being inspected" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="248" name="param" description="The column being inspected" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="248" name="param" description="&amp;$metadata The array of metadata about a column" type="array" variable="$metadata">
            <type by_reference="false">array</type>
          </tag>
          <tag line="248" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="258">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="258">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="258">
          <name>$metadata</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="286" package="Flourish">
        <name>makeTimestampObjects</name>
        <full_name>makeTimestampObjects</full_name>
        <docblock line="274">
          <description><![CDATA[Creates fTimestamp objects for every timestamp/timezone combination in the object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="274" name="internal" description=""/>
          <tag line="274" name="param" description="The fActiveRecord instance" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="274" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="274" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="274" name="param" description="&amp;$related_records Any records related to this record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="274" name="param" description="&amp;$cache The cache array for the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="274" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="286">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="286">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="286">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="286">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="286">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="311" package="Flourish">
        <name>objectifyTimestampWithTimezone</name>
        <full_name>objectifyTimestampWithTimezone</full_name>
        <docblock line="300">
          <description><![CDATA[Turns a timestamp value into an fTimestamp object with a timezone specified by another column]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="300" name="internal" description=""/>
          <tag line="300" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="300" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="300" name="param" description="The column holding the timestamp" type="string" variable="$timestamp_column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="300" name="param" description="The column holding the timezone" type="string" variable="$timezone_column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="300" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="311">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="311">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="311">
          <name>$timestamp_column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="311">
          <name>$timezone_column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="355" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="348">
          <description><![CDATA[Resets the configuration of the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="348" name="internal" description=""/>
          <tag line="348" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="376" package="Flourish">
        <name>setDateCreated</name>
        <full_name>setDateCreated</full_name>
        <docblock line="364">
          <description><![CDATA[Sets the appropriate column values to the date the object was created (for new records)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="364" name="internal" description=""/>
          <tag line="364" name="param" description="The fActiveRecord instance" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="364" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="364" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="364" name="param" description="&amp;$related_records Any records related to this record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="364" name="param" description="&amp;$cache The cache array for the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="364" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="376">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="376">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="376">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="376">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="376">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="416" package="Flourish">
        <name>setDateUpdated</name>
        <full_name>setDateUpdated</full_name>
        <docblock line="404">
          <description><![CDATA[Sets the appropriate column values to the date the object was updated]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="404" name="internal" description=""/>
          <tag line="404" name="param" description="The fActiveRecord instance" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="404" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="404" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="404" name="param" description="&amp;$related_records Any records related to this record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="404" name="param" description="&amp;$cache The cache array for the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="404" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="416">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="416">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="416">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="416">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="416">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="454" package="Flourish">
        <name>setTimestampColumn</name>
        <full_name>setTimestampColumn</full_name>
        <docblock line="440">
          <description><![CDATA[Sets the timestamp column and then tries to objectify it with an related timezone column]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="440" name="internal" description=""/>
          <tag line="440" name="param" description="The fActiveRecord instance" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="440" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="440" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="440" name="param" description="&amp;$related_records Any records related to this record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="440" name="param" description="&amp;$cache The cache array for the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="440" name="param" description="The method that was called" type="string" variable="$method_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="440" name="param" description="The parameters passed to the method" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="440" name="return" description="The record object, to allow for method chaining" type="\fActiveRecord">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
        </docblock>
        <argument line="454">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="454">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="454">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="454">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="454">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="454">
          <name>$method_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="454">
          <name>$parameters</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="499" package="Flourish">
        <name>setTimezoneColumn</name>
        <full_name>setTimezoneColumn</full_name>
        <docblock line="485">
          <description><![CDATA[Sets the timezone column and then tries to objectify the related timestamp column]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="485" name="internal" description=""/>
          <tag line="485" name="param" description="The fActiveRecord instance" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="485" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="485" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="485" name="param" description="&amp;$related_records Any records related to this record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="485" name="param" description="&amp;$cache The cache array for the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="485" name="param" description="The method that was called" type="string" variable="$method_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="485" name="param" description="The parameters passed to the method" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="485" name="return" description="The record object, to allow for method chaining" type="\fActiveRecord">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
        </docblock>
        <argument line="499">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="499">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="499">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="499">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="499">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="499">
          <name>$method_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="499">
          <name>$parameters</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="540" package="Flourish">
        <name>validateTimezoneColumns</name>
        <full_name>validateTimezoneColumns</full_name>
        <docblock line="527">
          <description><![CDATA[Validates all timestamp/timezone columns]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="527" name="internal" description=""/>
          <tag line="527" name="param" description="The fActiveRecord instance" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="527" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="527" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="527" name="param" description="&amp;$related_records Any records related to this record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="527" name="param" description="&amp;$cache The cache array for the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="527" name="param" description="&amp;$validation_messages An array of ordered validation messages" type="array" variable="$validation_messages">
            <type by_reference="false">array</type>
          </tag>
          <tag line="527" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="540">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="540">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="540">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="540">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="540">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="540">
          <name>$validation_messages</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="573" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="568">
          <description><![CDATA[Forces use as a static class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="568" name="return" description="" type="\fORMDate">
            <type by_reference="false">\fORMDate</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fORMDate.php</error>
      <notice line="69" code="50013">Parameter $component could not be found in compose()</notice>
      <notice line="69" code="50013">Parameter  could not be found in compose()</notice>
    </parse_markers>
  </file>
  <file path="php/flourish/fORMColumn.php" hash="cfc9c1784c70c9d9cc52d107376c6d2a" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="29" package="Flourish">
      <extends/>
      <name>fORMColumn</name>
      <full_name>\fORMColumn</full_name>
      <docblock line="2">
        <description><![CDATA[Provides special column functionality for fActiveRecord classes]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2008-2011 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fORMColumn" link="http://flourishlib.com/fORMColumn"/>
        <tag line="2" name="version" description="1.0.0b15"/>
        <tag line="2" name="changes" description="1.0.0b15  Fixed a bug with empty string email values passing through required validation [wb, 2011-07-29]"/>
        <tag line="2" name="changes" description="1.0.0b14  Updated code to work with the new fORM API [wb, 2010-08-06]"/>
        <tag line="2" name="changes" description="1.0.0b13  Fixed ::reflect() to include some missing parameters [wb, 2010-06-08]"/>
        <tag line="2" name="changes" description="1.0.0b12  Changed validation messages array to use column name keys [wb, 2010-05-26]"/>
        <tag line="2" name="changes" description="1.0.0b11  Fixed a bug with ::prepareLinkColumn() returning `http://` for empty link columns and not adding `http://` to links that contained a /, but did not start with it [wb, 2010-03-16]"/>
        <tag line="2" name="changes" description="1.0.0b10  Fixed ::reflect() to specify the value returned from `set` and `generate` methods, changed ::generate() methods to return the newly generated string [wb, 2010-03-15]"/>
        <tag line="2" name="changes" description="1.0.0b9   Changed email columns to be automatically trimmed if they are a value email address surrounded by whitespace [wb, 2010-03-14]"/>
        <tag line="2" name="changes" description="1.0.0b8   Made the validation on link columns a bit more strict [wb, 2010-03-09]"/>
        <tag line="2" name="changes" description="1.0.0b7   Updated code for the new fORMDatabase and fORMSchema APIs [wb, 2009-10-28]"/>
        <tag line="2" name="changes" description="1.0.0b6   Changed SQL statements to use value placeholders, identifier escaping and schema support [wb, 2009-10-22]"/>
        <tag line="2" name="changes" description="1.0.0b5   Updated to use new fORM::registerInspectCallback() method [wb, 2009-07-13]"/>
        <tag line="2" name="changes" description="1.0.0b4   Updated code for new fORM API [wb, 2009-06-15]"/>
        <tag line="2" name="changes" description="1.0.0b3   Updated code to use new fValidationException::formatField() method [wb, 2009-06-04]"/>
        <tag line="2" name="changes" description="1.0.0b2   Fixed a bug with objectifying number columns [wb, 2008-11-24]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2008-05-27]"/>
      </docblock>
      <constant namespace="global" line="32" package="Flourish">
        <name>configureEmailColumn</name>
        <full_name>configureEmailColumn</full_name>
        <value><![CDATA['fORMColumn::configureEmailColumn']]></value>
      </constant>
      <constant namespace="global" line="33" package="Flourish">
        <name>configureLinkColumn</name>
        <full_name>configureLinkColumn</full_name>
        <value><![CDATA['fORMColumn::configureLinkColumn']]></value>
      </constant>
      <constant namespace="global" line="34" package="Flourish">
        <name>configureNumberColumn</name>
        <full_name>configureNumberColumn</full_name>
        <value><![CDATA['fORMColumn::configureNumberColumn']]></value>
      </constant>
      <constant namespace="global" line="35" package="Flourish">
        <name>configureRandomColumn</name>
        <full_name>configureRandomColumn</full_name>
        <value><![CDATA['fORMColumn::configureRandomColumn']]></value>
      </constant>
      <constant namespace="global" line="36" package="Flourish">
        <name>encodeNumberColumn</name>
        <full_name>encodeNumberColumn</full_name>
        <value><![CDATA['fORMColumn::encodeNumberColumn']]></value>
      </constant>
      <constant namespace="global" line="37" package="Flourish">
        <name>inspect</name>
        <full_name>inspect</full_name>
        <value><![CDATA['fORMColumn::inspect']]></value>
      </constant>
      <constant namespace="global" line="38" package="Flourish">
        <name>generate</name>
        <full_name>generate</full_name>
        <value><![CDATA['fORMColumn::generate']]></value>
      </constant>
      <constant namespace="global" line="39" package="Flourish">
        <name>objectifyNumber</name>
        <full_name>objectifyNumber</full_name>
        <value><![CDATA['fORMColumn::objectifyNumber']]></value>
      </constant>
      <constant namespace="global" line="40" package="Flourish">
        <name>prepareLinkColumn</name>
        <full_name>prepareLinkColumn</full_name>
        <value><![CDATA['fORMColumn::prepareLinkColumn']]></value>
      </constant>
      <constant namespace="global" line="41" package="Flourish">
        <name>prepareNumberColumn</name>
        <full_name>prepareNumberColumn</full_name>
        <value><![CDATA['fORMColumn::prepareNumberColumn']]></value>
      </constant>
      <constant namespace="global" line="42" package="Flourish">
        <name>reflect</name>
        <full_name>reflect</full_name>
        <value><![CDATA['fORMColumn::reflect']]></value>
      </constant>
      <constant namespace="global" line="43" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <value><![CDATA['fORMColumn::reset']]></value>
      </constant>
      <constant namespace="global" line="44" package="Flourish">
        <name>setEmailColumn</name>
        <full_name>setEmailColumn</full_name>
        <value><![CDATA['fORMColumn::setEmailColumn']]></value>
      </constant>
      <constant namespace="global" line="45" package="Flourish">
        <name>setRandomStrings</name>
        <full_name>setRandomStrings</full_name>
        <value><![CDATA['fORMColumn::setRandomStrings']]></value>
      </constant>
      <constant namespace="global" line="46" package="Flourish">
        <name>validateEmailColumns</name>
        <full_name>validateEmailColumns</full_name>
        <value><![CDATA['fORMColumn::validateEmailColumns']]></value>
      </constant>
      <constant namespace="global" line="47" package="Flourish">
        <name>validateLinkColumns</name>
        <full_name>validateLinkColumns</full_name>
        <value><![CDATA['fORMColumn::validateLinkColumns']]></value>
      </constant>
      <property final="false" static="true" visibility="private" line="55" namespace="global" package="Sutra">
        <name>$email_columns</name>
        <default><![CDATA[array()]]></default>
        <docblock line="50">
          <description><![CDATA[Columns that should be formatted as email addresses]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="50" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="62" namespace="global" package="Sutra">
        <name>$link_columns</name>
        <default><![CDATA[array()]]></default>
        <docblock line="57">
          <description><![CDATA[Columns that should be formatted as links]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="57" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="69" namespace="global" package="Sutra">
        <name>$number_columns</name>
        <default><![CDATA[array()]]></default>
        <docblock line="64">
          <description><![CDATA[Columns that should be returned as fNumber objects]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="64" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="76" namespace="global" package="Sutra">
        <name>$random_columns</name>
        <default><![CDATA[array()]]></default>
        <docblock line="71">
          <description><![CDATA[Columns that should be formatted as a random string]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="71" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="87" package="Flourish">
        <name>compose</name>
        <full_name>compose</full_name>
        <docblock line="79">
          <description><![CDATA[Composes text using fText if loaded]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="79" name="param" description="The message to compose" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="79" name="param" description="A string or number to insert into the message" type="mixed" variable="$component">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="79" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="79" name="return" description="The composed and possible translated message" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="87">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="109" package="Flourish">
        <name>configureEmailColumn</name>
        <full_name>configureEmailColumn</full_name>
        <docblock line="102">
          <description><![CDATA[Sets a column to be formatted as an email address]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="102" name="param" description="The class name or instance of the class to set the column format" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="102" name="param" description="The column to format as an email address" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="102" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="109">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="109">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="153" package="Flourish">
        <name>configureLinkColumn</name>
        <full_name>configureLinkColumn</full_name>
        <docblock line="146">
          <description><![CDATA[Sets a column to be formatted as a link]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="146" name="param" description="The class name or instance of the class to set the column format" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="146" name="param" description="The column to format as a link" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="146" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="153">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="153">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="198" package="Flourish">
        <name>configureNumberColumn</name>
        <full_name>configureNumberColumn</full_name>
        <docblock line="191">
          <description><![CDATA[Sets a column to be returned as an fNumber object from calls to `get{ColumnName}()`]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="191" name="param" description="The class name or instance of the class to set the column format" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="191" name="param" description="The column to return as an fNumber object" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="191" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="198">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="198">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="250" package="Flourish">
        <name>configureRandomColumn</name>
        <full_name>configureRandomColumn</full_name>
        <docblock line="241">
          <description><![CDATA[Sets a column to be a random string column - a random string will be generated when the record is saved]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="241" name="param" description="The class name or instance of the class" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="241" name="param" description="The column to set as a random column" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="241" name="param" description="The type of random string, must be one of: `'alphanumeric'`, `'alpha'`, `'numeric'`, `'hexadecimal'`" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="241" name="param" description="The length of the random string" type="integer" variable="$length">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="241" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="250">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="250">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="250">
          <name>$type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="250">
          <name>$length</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="317" package="Flourish">
        <name>encodeNumberColumn</name>
        <full_name>encodeNumberColumn</full_name>
        <docblock line="303">
          <description><![CDATA[Encodes a number column by calling fNumber::__toString()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="303" name="internal" description=""/>
          <tag line="303" name="param" description="The fActiveRecord instance" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="303" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="303" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="303" name="param" description="&amp;$related_records Any records related to this record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="303" name="param" description="&amp;$cache The cache array for the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="303" name="param" description="The method that was called" type="string" variable="$method_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="303" name="param" description="The parameters passed to the method" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="303" name="return" description="The encoded number" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="317">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="317">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="317">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="317">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="317">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="317">
          <name>$method_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="317">
          <name>$parameters</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="355" package="Flourish">
        <name>generate</name>
        <full_name>generate</full_name>
        <docblock line="341">
          <description><![CDATA[Generates a new random value for the column]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="341" name="internal" description=""/>
          <tag line="341" name="param" description="The fActiveRecord instance" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="341" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="341" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="341" name="param" description="&amp;$related_records Any records related to this record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="341" name="param" description="&amp;$cache The cache array for the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="341" name="param" description="The method that was called" type="string" variable="$method_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="341" name="param" description="The parameters passed to the method" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="341" name="return" description="The newly generated random value" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="355">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="355">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="355">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="355">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="355">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="355">
          <name>$method_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="355">
          <name>$parameters</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="402" package="Flourish">
        <name>inspect</name>
        <full_name>inspect</full_name>
        <docblock line="392">
          <description><![CDATA[Adds metadata about features added by this class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="392" name="internal" description=""/>
          <tag line="392" name="param" description="The class being inspected" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="392" name="param" description="The column being inspected" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="392" name="param" description="&amp;$metadata The array of metadata about a column" type="array" variable="$metadata">
            <type by_reference="false">array</type>
          </tag>
          <tag line="392" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="402">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="402">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="402">
          <name>$metadata</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="432" package="Flourish">
        <name>objectifyNumber</name>
        <full_name>objectifyNumber</full_name>
        <docblock line="422">
          <description><![CDATA[Turns a numeric value into an fNumber object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="422" name="internal" description=""/>
          <tag line="422" name="param" description="The class this value is for" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="422" name="param" description="The column the value is in" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="422" name="param" description="The value" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="422" name="return" description="The fNumber object or raw value" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="432">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="432">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="432">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="462" package="Flourish">
        <name>prepareLinkColumn</name>
        <full_name>prepareLinkColumn</full_name>
        <docblock line="448">
          <description><![CDATA[Prepares a link column so that the link will work properly in an `a` tag]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="448" name="internal" description=""/>
          <tag line="448" name="param" description="The fActiveRecord instance" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="448" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="448" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="448" name="param" description="&amp;$related_records Any records related to this record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="448" name="param" description="&amp;$cache The cache array for the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="448" name="param" description="The method that was called" type="string" variable="$method_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="448" name="param" description="The parameters passed to the method" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="448" name="return" description="The formatted link" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="462">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="462">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="462">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="462">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="462">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="462">
          <name>$method_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="462">
          <name>$parameters</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="498" package="Flourish">
        <name>prepareNumberColumn</name>
        <full_name>prepareNumberColumn</full_name>
        <docblock line="484">
          <description><![CDATA[Prepares a number column by calling fNumber::format()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="484" name="internal" description=""/>
          <tag line="484" name="param" description="The fActiveRecord instance" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="484" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="484" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="484" name="param" description="&amp;$related_records Any records related to this record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="484" name="param" description="&amp;$cache The cache array for the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="484" name="param" description="The method that was called" type="string" variable="$method_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="484" name="param" description="The parameters passed to the method" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="484" name="return" description="The formatted link" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="498">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="498">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="498">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="498">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="498">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="498">
          <name>$method_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="498">
          <name>$parameters</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="536" package="Flourish">
        <name>reflect</name>
        <full_name>reflect</full_name>
        <docblock line="526">
          <description><![CDATA[Adjusts the fActiveRecord::reflect() signatures of columns that have been configured in this class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="526" name="internal" description=""/>
          <tag line="526" name="param" description="The class to reflect" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="526" name="param" description="&amp;$signatures The associative array of `{method name} =&gt; {signature}`" type="array" variable="$signatures">
            <type by_reference="false">array</type>
          </tag>
          <tag line="526" name="param" description="If doc comments should be included with the signature" type="boolean" variable="$include_doc_comments">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="526" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="536">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="536">
          <name>$signatures</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="536">
          <name>$include_doc_comments</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="673" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="666">
          <description><![CDATA[Resets the configuration of the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="666" name="internal" description=""/>
          <tag line="666" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="696" package="Flourish">
        <name>setEmailColumn</name>
        <full_name>setEmailColumn</full_name>
        <docblock line="682">
          <description><![CDATA[Sets the value for an email column, trimming the value if it is a valid email]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="682" name="internal" description=""/>
          <tag line="682" name="param" description="The fActiveRecord instance" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="682" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="682" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="682" name="param" description="&amp;$related_records Any records related to this record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="682" name="param" description="&amp;$cache The cache array for the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="682" name="param" description="The method that was called" type="string" variable="$method_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="682" name="param" description="The parameters passed to the method" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="682" name="return" description="The record object, to allow for method chaining" type="\fActiveRecord">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
        </docblock>
        <argument line="696">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="696">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="696">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="696">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="696">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="696">
          <name>$method_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="696">
          <name>$parameters</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="737" package="Flourish">
        <name>setRandomStrings</name>
        <full_name>setRandomStrings</full_name>
        <docblock line="725">
          <description><![CDATA[Sets the appropriate column values to a random string if the object is new]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="725" name="internal" description=""/>
          <tag line="725" name="param" description="The fActiveRecord instance" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="725" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="725" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="725" name="param" description="&amp;$related_records Any records related to this record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="725" name="param" description="&amp;$cache The cache array for the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="725" name="return" description="The formatted link" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="737">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="737">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="737">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="737">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="737">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="776" package="Flourish">
        <name>validateEmailColumns</name>
        <full_name>validateEmailColumns</full_name>
        <docblock line="763">
          <description><![CDATA[Validates all email columns]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="763" name="internal" description=""/>
          <tag line="763" name="param" description="The fActiveRecord instance" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="763" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="763" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="763" name="param" description="&amp;$related_records Any records related to this record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="763" name="param" description="&amp;$cache The cache array for the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="763" name="param" description="&amp;$validation_messages An array of ordered validation messages" type="array" variable="$validation_messages">
            <type by_reference="false">array</type>
          </tag>
          <tag line="763" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="776">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="776">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="776">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="776">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="776">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="776">
          <name>$validation_messages</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="811" package="Flourish">
        <name>validateLinkColumns</name>
        <full_name>validateLinkColumns</full_name>
        <docblock line="798">
          <description><![CDATA[Validates all link columns]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="798" name="internal" description=""/>
          <tag line="798" name="param" description="The fActiveRecord instance" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="798" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="798" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="798" name="param" description="&amp;$related_records Any records related to this record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="798" name="param" description="&amp;$cache The cache array for the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="798" name="param" description="&amp;$validation_messages An array of ordered validation messages" type="array" variable="$validation_messages">
            <type by_reference="false">array</type>
          </tag>
          <tag line="798" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="811">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="811">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="811">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="811">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="811">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="811">
          <name>$validation_messages</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="842" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="837">
          <description><![CDATA[Forces use as a static class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="837" name="return" description="" type="\fORMColumn">
            <type by_reference="false">\fORMColumn</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fORMColumn.php</error>
      <notice line="79" code="50013">Parameter $component could not be found in compose()</notice>
      <notice line="79" code="50013">Parameter  could not be found in compose()</notice>
    </parse_markers>
  </file>
  <file path="php/flourish/fSQLSchemaTranslation.php" hash="a8aad10581b20a1048ad1fa146027bbb" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="17" package="Flourish">
      <extends/>
      <name>fSQLSchemaTranslation</name>
      <full_name>\fSQLSchemaTranslation</full_name>
      <docblock line="2">
        <description><![CDATA[Adds cross-database `CREATE TABLE`, `ALTER TABLE` and `COMMENT ON COLUMN` statements to fSQLTranslation]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2011-2012 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fSQLSchemaTranslation" link="http://flourishlib.com/fSQLSchemaTranslation"/>
        <tag line="2" name="version" description="1.0.0b3"/>
        <tag line="2" name="changes" description="1.0.0b3   Fixed associating a sequence with a column in PostgreSQL when setting auto-increment, fixed detection of some Oracle CHECK(IN) constraints, fixed default values for SQLite `ON DELETE` and `ON UPDATE` clauses [wb, 2012-01-12]"/>
        <tag line="2" name="changes" description="1.0.0b2   Fixed detection of explicitly named SQLite foreign key constraints [wb, 2011-08-23]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2011-05-09]"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="140" namespace="global" package="Sutra">
        <name>$database</name>
        <default><![CDATA[]]></default>
        <docblock line="135">
          <description><![CDATA[The fDatabase instance]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="135" name="var" description="" type="\fDatabase">
            <type by_reference="false">\fDatabase</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="147" namespace="global" package="Sutra">
        <name>$schema_info</name>
        <default><![CDATA[]]></default>
        <docblock line="142">
          <description><![CDATA[Database-specific schema information needed for translation]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="142" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="25" package="Flourish">
        <name>unescapeIdentifier</name>
        <full_name>unescapeIdentifier</full_name>
        <docblock line="19">
          <description><![CDATA[Converts a SQL identifier to lower case and removes double quotes]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="19" name="param" description="The SQL identifier" type="string" variable="$identifier">
            <type by_reference="false">string</type>
          </tag>
          <tag line="19" name="return" description="The unescaped identifier" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="25">
          <name>$identifier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="39" package="Flourish">
        <name>compose</name>
        <full_name>compose</full_name>
        <docblock line="31">
          <description><![CDATA[Composes text using fText if loaded]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="31" name="param" description="The message to compose" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="31" name="param" description="A string or number to insert into the message" type="mixed" variable="$component">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="31" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="31" name="return" description="The composed and possible translated message" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="39">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="77" package="Flourish">
        <name>parseSQLiteColumnDefinitions</name>
        <full_name>parseSQLiteColumnDefinitions</full_name>
        <docblock line="54">
          <description><![CDATA[Accepts a CREATE TABLE statement and parses out the column definitions]]></description>
          <long-description><![CDATA[<p>The return value is an associative array with the keys being column
names and the values being arrays containing the following keys:
 - definition:       (string) the complete column definition
 - pieces:           (array) an associative array that can be joined back together to make the definition
   - beginning
   - column_name
   - data_type
   - not_null
   - null
   - default
   - unique
   - primary_key
   - check_constraint
   - foreign_key
   - deferrable
   - comment/end</p>]]></long-description>
          <tag line="54" name="param" description="The SQL `CREATE TABLE` statement" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="54" name="return" description="An associative array of information for each column - see method description for details" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="77">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="124" package="Flourish">
        <name>removeFromSQLiteCreateTable</name>
        <full_name>removeFromSQLiteCreateTable</full_name>
        <docblock line="117">
          <description><![CDATA[Removes a search string from a `CREATE TABLE` statement]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="117" name="param" description="The SQL `CREATE TABLE` statement" type="string" variable="$create_table_sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="117" name="param" description="The string to remove" type="string" variable="$search">
            <type by_reference="false">string</type>
          </tag>
          <tag line="117" name="return" description="The modified `CREATE TABLE` statement" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="124">
          <name>$create_table_sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="124">
          <name>$search</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="156" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="150">
          <description><![CDATA[Sets up the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="150" name="param" description="The database being translated for" type="\fDatabase" variable="$database">
            <type by_reference="false">\fDatabase</type>
          </tag>
          <tag line="150" name="return" description="" type="\fSQLSchemaTranslation">
            <type by_reference="false">\fSQLSchemaTranslation</type>
          </tag>
        </docblock>
        <argument line="156">
          <name>$database</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="171" package="Flourish">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="163">
          <description><![CDATA[All requests that hit this method should be requests for callbacks]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="163" name="internal" description=""/>
          <tag line="163" name="param" description="The method to create a callback for" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="163" name="return" description="The callback for the method requested" type="callback">
            <type by_reference="false">callback</type>
          </tag>
        </docblock>
        <argument line="171">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="185" package="Flourish">
        <name>addSQLiteIndex</name>
        <full_name>addSQLiteIndex</full_name>
        <docblock line="177">
          <description><![CDATA[Adds a SQLite index to the internal schema tracker]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="177" name="param" description="The index name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="177" name="param" description="The table the index applies to" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="177" name="param" description="The SQL definition of the index" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="177" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="185">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="185">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="185">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="205" package="Flourish">
        <name>addSQLiteTable</name>
        <full_name>addSQLiteTable</full_name>
        <docblock line="198">
          <description><![CDATA[Stores the SQL used to create a table]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="198" name="param" description="The table to set the `CREATE TABLE` statement for" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="198" name="param" description="The SQL used to create the table" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="198" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="205">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="205">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="223" package="Flourish">
        <name>addSQLiteTrigger</name>
        <full_name>addSQLiteTrigger</full_name>
        <docblock line="215">
          <description><![CDATA[Adds a SQLite trigger to the internal schema tracker]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="215" name="param" description="The trigger name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="215" name="param" description="The table the trigger applies to" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="215" name="param" description="The SQL definition of the trigger" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="215" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="223">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="223">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="223">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="247" package="Flourish">
        <name>createSQLiteForeignKeyTriggerOnDelete</name>
        <full_name>createSQLiteForeignKeyTriggerOnDelete</full_name>
        <docblock line="236">
          <description><![CDATA[Creates a trigger for SQLite that handles an on delete clause]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="236" name="param" description="&amp;$extra_statements An array of extra SQL statements to be added to the SQL" type="array" variable="$extra_statements">
            <type by_reference="false">array</type>
          </tag>
          <tag line="236" name="param" description="The table that contains the foreign key" type="string" variable="$referencing_table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="236" name="param" description="The column the foreign key constraint is on" type="string" variable="$referencing_column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="236" name="param" description="The table the foreign key references" type="string" variable="$referenced_table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="236" name="param" description="The column the foreign key references" type="string" variable="$referenced_column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="236" name="param" description="What is to be done on a delete" type="string" variable="$delete_clause">
            <type by_reference="false">string</type>
          </tag>
          <tag line="236" name="return" description="The trigger" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="247">
          <name>$extra_statements</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="247">
          <name>$referencing_table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="247">
          <name>$referencing_column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="247">
          <name>$referenced_table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="247">
          <name>$referenced_column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="247">
          <name>$delete_clause</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="296" package="Flourish">
        <name>createSQLiteForeignKeyTriggerOnUpdate</name>
        <full_name>createSQLiteForeignKeyTriggerOnUpdate</full_name>
        <docblock line="285">
          <description><![CDATA[Creates a trigger for SQLite that handles an on update clause]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="285" name="param" description="&amp;$extra_statements An array of extra SQL statements to be added to the SQL" type="array" variable="$extra_statements">
            <type by_reference="false">array</type>
          </tag>
          <tag line="285" name="param" description="The table that contains the foreign key" type="string" variable="$referencing_table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="285" name="param" description="The column the foreign key constraint is on" type="string" variable="$referencing_column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="285" name="param" description="The table the foreign key references" type="string" variable="$referenced_table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="285" name="param" description="The column the foreign key references" type="string" variable="$referenced_column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="285" name="param" description="What is to be done on an update" type="string" variable="$update_clause">
            <type by_reference="false">string</type>
          </tag>
          <tag line="285" name="return" description="The trigger" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="296">
          <name>$extra_statements</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="296">
          <name>$referencing_table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="296">
          <name>$referencing_column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="296">
          <name>$referenced_table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="296">
          <name>$referenced_column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="296">
          <name>$update_clause</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="345" package="Flourish">
        <name>createSQLiteForeignKeyTriggerValidInsertUpdate</name>
        <full_name>createSQLiteForeignKeyTriggerValidInsertUpdate</full_name>
        <docblock line="334">
          <description><![CDATA[Creates a trigger for SQLite that prevents inserting or updating to values the violate a `FOREIGN KEY` constraint]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="334" name="param" description="&amp;$extra_statements An array of extra SQL statements to be added to the SQL" type="array" variable="$extra_statements">
            <type by_reference="false">array</type>
          </tag>
          <tag line="334" name="param" description="The table that contains the foreign key" type="string" variable="$referencing_table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="334" name="param" description="The column the foriegn key constraint is on" type="string" variable="$referencing_column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="334" name="param" description="The table the foreign key references" type="string" variable="$referenced_table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="334" name="param" description="The column the foreign key references" type="string" variable="$referenced_column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="334" name="param" description="If the referencing columns is set to not null" type="boolean" variable="$referencing_not_null">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="334" name="return" description="The trigger" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="345">
          <name>$extra_statements</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="345">
          <name>$referencing_table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="345">
          <name>$referencing_column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="345">
          <name>$referenced_table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="345">
          <name>$referenced_column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="345">
          <name>$referencing_not_null</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="387" package="Flourish">
        <name>generateConstraintName</name>
        <full_name>generateConstraintName</full_name>
        <docblock line="381">
          <description><![CDATA[Generates a 30 character constraint name for use with `ALTER TABLE` statements]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="381" name="param" description="The `ALTER TABLE` statement" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="381" name="param" description="A 2-character string representing the type of constraint" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="387">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="387">
          <name>$type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="403" package="Flourish">
        <name>getDB2CheckConstraint</name>
        <full_name>getDB2CheckConstraint</full_name>
        <docblock line="395">
          <description><![CDATA[Returns the check constraint for a table and column]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="395" name="param" description="The schema the table is in" type="string" variable="$schema">
            <type by_reference="false">string</type>
          </tag>
          <tag line="395" name="param" description="The table the column is in" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="395" name="param" description="The column to get the check constraint for" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="395" name="return" description="An associative array with the keys: `name` and `definition` or `NULL`" type="array|NULL">
            <type by_reference="false">array</type>
            <type by_reference="false">NULL</type>
          </tag>
        </docblock>
        <argument line="403">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="403">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="403">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="450" package="Flourish">
        <name>getDB2ForeignKeyConstraints</name>
        <full_name>getDB2ForeignKeyConstraints</full_name>
        <docblock line="442">
          <description><![CDATA[Returns the foreign key constraints that involve a specific table or table and column]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="442" name="param" description="The schema the table is in" type="string" variable="$schema">
            <type by_reference="false">string</type>
          </tag>
          <tag line="442" name="param" description="The table the column is in" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="442" name="param" description="The column to get the foreign keys for and the foreign keys that point to" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="442" name="return" description="An associative array of the key being the constraint name and the value being an associative array containing the keys: `schema`, `table`, `column`, `foreign_schema`, `foreign_table`, `foreign_column`, `on_delete` and `on_cascade`" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="450">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="450">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="450">
          <name>$column</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="525" package="Flourish">
        <name>getDB2PrimaryKeyConstraint</name>
        <full_name>getDB2PrimaryKeyConstraint</full_name>
        <docblock line="518">
          <description><![CDATA[Returns the primary key for a table]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="518" name="param" description="The schema the table is in" type="string" variable="$schema">
            <type by_reference="false">string</type>
          </tag>
          <tag line="518" name="param" description="The table to get the primary key for" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="518" name="return" description="The columns in the primary key" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="525">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="525">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="563" package="Flourish">
        <name>getDB2UniqueConstraints</name>
        <full_name>getDB2UniqueConstraints</full_name>
        <docblock line="555">
          <description><![CDATA[Returns the unique keys for a table and column]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="555" name="param" description="The schema the table is in" type="string" variable="$schema">
            <type by_reference="false">string</type>
          </tag>
          <tag line="555" name="param" description="The table to get the unique keys for" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="555" name="param" description="The column to filter the unique keys by" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="555" name="return" description="An associative array of the key being the constraint name and the value being the columns in the unique key" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="563">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="563">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="563">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="620" package="Flourish">
        <name>getMSSQLCheckConstraint</name>
        <full_name>getMSSQLCheckConstraint</full_name>
        <docblock line="612">
          <description><![CDATA[Returns the check constraint for a column, if it exists]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="612" name="param" description="The schema the column is inside of" type="string" variable="$schema">
            <type by_reference="false">string</type>
          </tag>
          <tag line="612" name="param" description="The table the column is part of" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="612" name="param" description="The column name" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="612" name="return" description="An associative array with the keys `name` and `definition`, or `NULL`" type="array|NULL">
            <type by_reference="false">array</type>
            <type by_reference="false">NULL</type>
          </tag>
        </docblock>
        <argument line="620">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="620">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="620">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="665" package="Flourish">
        <name>getMSSQLForeignKeyConstraints</name>
        <full_name>getMSSQLForeignKeyConstraints</full_name>
        <docblock line="657">
          <description><![CDATA[Returns the foreign key constraints that a column is part of]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="657" name="param" description="The schema the column is inside of" type="string" variable="$schema">
            <type by_reference="false">string</type>
          </tag>
          <tag line="657" name="param" description="The table the column is part of" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="657" name="param" description="The column name(s)" type="string|array" variable="$column">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="657" name="return" description="An array of constraint names that reference the column(s)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="665">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="665">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="665">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="723" package="Flourish">
        <name>getMSSQLDefaultConstraint</name>
        <full_name>getMSSQLDefaultConstraint</full_name>
        <docblock line="715">
          <description><![CDATA[Returns the default constraint for a column, if it exists]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="715" name="param" description="The schema the column is inside of" type="string" variable="$schema">
            <type by_reference="false">string</type>
          </tag>
          <tag line="715" name="param" description="The table the column is part of" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="715" name="param" description="The column name" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="715" name="return" description="An associative array with the keys `name` and `definition`, or `NULL`" type="array|NULL">
            <type by_reference="false">array</type>
            <type by_reference="false">NULL</type>
          </tag>
        </docblock>
        <argument line="723">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="723">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="723">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="763" package="Flourish">
        <name>getMSSQLPrimaryKeyConstraint</name>
        <full_name>getMSSQLPrimaryKeyConstraint</full_name>
        <docblock line="756">
          <description><![CDATA[Returns the primary key constraints for a table]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="756" name="param" description="The schema the table is inside of" type="string" variable="$schema">
            <type by_reference="false">string</type>
          </tag>
          <tag line="756" name="param" description="The table to get the constraint for" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="756" name="return" description="An associative array with the keys `name`, `columns` and `autoincrement` or `NULL`" type="array|NULL">
            <type by_reference="false">array</type>
            <type by_reference="false">NULL</type>
          </tag>
        </docblock>
        <argument line="763">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="763">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="820" package="Flourish">
        <name>getMSSQLUniqueConstraints</name>
        <full_name>getMSSQLUniqueConstraints</full_name>
        <docblock line="812">
          <description><![CDATA[Returns the unique constraints that a column is part of]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="812" name="param" description="The schema the column is inside of" type="string" variable="$schema">
            <type by_reference="false">string</type>
          </tag>
          <tag line="812" name="param" description="The table the column is part of" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="812" name="param" description="The column name" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="812" name="return" description="An associative array of constraint_name =&gt; columns" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="820">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="820">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="820">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="878" package="Flourish">
        <name>getMySQLForeignKeys</name>
        <full_name>getMySQLForeignKeys</full_name>
        <docblock line="871">
          <description><![CDATA[Returns info about all foreign keys that involve the table and one of the columns specified]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="871" name="param" description="The table" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="871" name="param" description="The column, or an array of valid column names" type="string|array" variable="$columns">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="871" name="column" description="array  An array of associative arrays containing the keys `constraint_name`, `table`, `column`, `foreign_table` and `foreign_column`"/>
        </docblock>
        <argument line="878">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="878">
          <name>$columns</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="935" package="Flourish">
        <name>getMySQLTables</name>
        <full_name>getMySQLTables</full_name>
        <docblock line="930">
          <description><![CDATA[Returns a list of all tables in the database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="930" name="return" description="An array of table names" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="966" package="Flourish">
        <name>getSQLiteColumns</name>
        <full_name>getSQLiteColumns</full_name>
        <docblock line="960">
          <description><![CDATA[Returns an an array of the column name for a table]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="960" name="param" description="The table to retrieve the column names for" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="960" name="return" description="The column names for the table" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="966">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="980" package="Flourish">
        <name>getSQLiteCreateTable</name>
        <full_name>getSQLiteCreateTable</full_name>
        <docblock line="974">
          <description><![CDATA[Returns the SQL used to create a table]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="974" name="param" description="The table to retrieve the `CREATE TABLE` statement for" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="974" name="return" description="The `CREATE TABLE` SQL statement" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="980">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1001" package="Flourish">
        <name>getSQLiteForeignKeys</name>
        <full_name>getSQLiteForeignKeys</full_name>
        <docblock line="994">
          <description><![CDATA[Returns a list of all foreign keys that reference the table, and optionally, column specified]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="994" name="param" description="All foreign keys returned will point to this table" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="994" name="param" description="Only foreign keys pointing to this column will be returned" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="994" name="return" description="An array of arrays containing they keys: `table`, `column`, `foreign_table`, `foreign_column`, `on_delete` and `on_update`" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1001">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1001">
          <name>$column</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1053" package="Flourish">
        <name>getSQLiteIndexes</name>
        <full_name>getSQLiteIndexes</full_name>
        <docblock line="1048">
          <description><![CDATA[Returns the indexes in the current SQLite database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1048" name="return" description="An associative array with the key being the index name and the value an associative arrays, each containing the keys: `table`, `sql`" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1053">
          <name>$table</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1091" package="Flourish">
        <name>getSQLiteTables</name>
        <full_name>getSQLiteTables</full_name>
        <docblock line="1086">
          <description><![CDATA[Returns the tables in the current SQLite database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1086" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1116" package="Flourish">
        <name>getSQLiteTriggers</name>
        <full_name>getSQLiteTriggers</full_name>
        <docblock line="1111">
          <description><![CDATA[Returns the triggers in the current SQLite database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1111" name="return" description="An associative array with the key being the trigger name and the value an associative arrays, each containing the keys: `table`, `sql`" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1116">
          <name>$exclude_table</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1155" package="Flourish">
        <name>removeSQLiteIndexes</name>
        <full_name>removeSQLiteIndexes</full_name>
        <docblock line="1149">
          <description><![CDATA[Removes the SQLite indexes from the internal schema tracker]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1149" name="param" description="The table to remove the indexes for" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1149" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1155">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1181" package="Flourish">
        <name>removeSQLiteTable</name>
        <full_name>removeSQLiteTable</full_name>
        <docblock line="1175">
          <description><![CDATA[Removes a table from the list of SQLite table]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1175" name="param" description="The table to remove" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1175" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1181">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1197" package="Flourish">
        <name>removeSQLiteTrigger</name>
        <full_name>removeSQLiteTrigger</full_name>
        <docblock line="1191">
          <description><![CDATA[Removes a SQLite trigger from the internal schema tracker]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1191" name="param" description="The trigger name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1191" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1197">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1213" package="Flourish">
        <name>removeSQLiteTriggers</name>
        <full_name>removeSQLiteTriggers</full_name>
        <docblock line="1207">
          <description><![CDATA[Removes the SQLite triggers for a table from the internal schema tracker]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1207" name="param" description="The table to remove the triggers for" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1207" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1213">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1240" package="Flourish">
        <name>throwException</name>
        <full_name>throwException</full_name>
        <docblock line="1233">
          <description><![CDATA[Throws an fSQLException with the information provided]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1233" name="param" description="The error that occured" type="string" variable="$error">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1233" name="param" description="The SQL statement that caused the error" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1233" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1240">
          <name>$error</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1240">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1269" package="Flourish">
        <name>translate</name>
        <full_name>translate</full_name>
        <docblock line="1260">
          <description><![CDATA[Translates a Flourish SQL DDL statement into the dialect for the current database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1260" name="internal" description=""/>
          <tag line="1260" name="param" description="The SQL statement to translate" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1260" name="param" description="&amp;$rollback_statements SQL statements to rollback the returned SQL statements if something goes wrong - only applicable for MySQL `ALTER TABLE` statements" type="array" variable="$rollback_statements">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1260" name="return" description="An array containing the translated `$sql` statement and an array of extra statements" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1269">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1269">
          <name>$rollback_statements</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1319" package="Flourish">
        <name>translateAlterTableStatements</name>
        <full_name>translateAlterTableStatements</full_name>
        <docblock line="1311">
          <description><![CDATA[Translates the structure of `CREATE TABLE` statements to the database specific syntax]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1311" name="param" description="The SQL to translate" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1311" name="param" description="&amp;$extra_statements Any extra SQL statements that need to be added" type="array" variable="$extra_statements">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1311" name="param" description="&amp;$rollback_statements SQL statements to rollback `$sql` and `$extra_statements` if something goes wrong" type="array" variable="$rollback_statements">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1311" name="return" description="The translated SQL" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1319">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1319">
          <name>$extra_statements</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1319">
          <name>$rollback_statements</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1507" package="Flourish">
        <name>translateCreateTableStatements</name>
        <full_name>translateCreateTableStatements</full_name>
        <docblock line="1500">
          <description><![CDATA[Translates the structure of `CREATE TABLE` statements to the database specific syntax]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1500" name="param" description="The SQL to translate" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1500" name="param" description="&amp;$extra_statements Any extra SQL statements that need to be added" type="array" variable="$extra_statements">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1500" name="return" description="The translated SQL" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1507">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1507">
          <name>$extra_statements</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1697" package="Flourish">
        <name>translateDataTypes</name>
        <full_name>translateDataTypes</full_name>
        <docblock line="1691">
          <description><![CDATA[Translates basic data types]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1691" name="param" description="The SQL to translate" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1691" name="return" description="The translated SQL" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1697">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1764" package="Flourish">
        <name>translateDB2AlterTableStatements</name>
        <full_name>translateDB2AlterTableStatements</full_name>
        <docblock line="1755">
          <description><![CDATA[Translates Flourish SQL `ALTER TABLE` statements to the appropriate
statements for DB2]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1755" name="param" description="The SQL statements that will be executed against the database" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1755" name="param" description="&amp;$extra_statements Any extra SQL statements required for DB2" type="array" variable="$extra_statements">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1755" name="param" description="Data parsed from the `ALTER TABLE` statement" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1755" name="return" description="The modified SQL statement" type="\strin">
            <type by_reference="false">\strin</type>
          </tag>
        </docblock>
        <argument line="1764">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1764">
          <name>$extra_statements</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1764">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="2287" package="Flourish">
        <name>translateMSSQLAlterTableStatements</name>
        <full_name>translateMSSQLAlterTableStatements</full_name>
        <docblock line="2278">
          <description><![CDATA[Translates Flourish SQL `ALTER TABLE` statements to the appropriate
statements for MSSQL]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2278" name="param" description="The SQL statements that will be executed against the database" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2278" name="param" description="&amp;$extra_statements Any extra SQL statements required for MSSQL" type="array" variable="$extra_statements">
            <type by_reference="false">array</type>
          </tag>
          <tag line="2278" name="param" description="Data parsed from the `ALTER TABLE` statement" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="2278" name="return" description="The modified SQL statement" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="2287">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2287">
          <name>$extra_statements</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2287">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="3010" package="Flourish">
        <name>translateMySQLAlterTableStatements</name>
        <full_name>translateMySQLAlterTableStatements</full_name>
        <docblock line="3000">
          <description><![CDATA[Translates Flourish SQL `ALTER TABLE` statements to the appropriate
statements for MySQL]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="3000" name="param" description="The SQL statements that will be executed against the database" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="3000" name="param" description="&amp;$extra_statements Any extra SQL statements required for MySQL" type="array" variable="$extra_statements">
            <type by_reference="false">array</type>
          </tag>
          <tag line="3000" name="param" description="&amp;$rollback_statements SQL statements to rollback `$sql` and `$extra_statements` if something goes wrong" type="array" variable="$rollback_statements">
            <type by_reference="false">array</type>
          </tag>
          <tag line="3000" name="param" description="Data parsed from the `ALTER TABLE` statement" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="3000" name="return" description="The modified SQL statement" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="3010">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="3010">
          <name>$extra_statements</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="3010">
          <name>$rollback_statements</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="3010">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="3456" package="Flourish">
        <name>translateOracleAlterTableStatements</name>
        <full_name>translateOracleAlterTableStatements</full_name>
        <docblock line="3447">
          <description><![CDATA[Translates Flourish SQL `ALTER TABLE` statements to the appropriate
statements for Oracle]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="3447" name="param" description="The SQL statements that will be executed against the database" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="3447" name="param" description="&amp;$extra_statements Any extra SQL statements required for Oracle" type="array" variable="$extra_statements">
            <type by_reference="false">array</type>
          </tag>
          <tag line="3447" name="param" description="Data parsed from the `ALTER TABLE` statement" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="3447" name="return" description="The modified SQL statement" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="3456">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="3456">
          <name>$extra_statements</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="3456">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="4086" package="Flourish">
        <name>translatePostgreSQLAlterTableStatements</name>
        <full_name>translatePostgreSQLAlterTableStatements</full_name>
        <docblock line="4077">
          <description><![CDATA[Translates Flourish SQL `ALTER TABLE` statements to the appropriate
statements for PostgreSQL]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="4077" name="param" description="The SQL statements that will be executed against the database" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="4077" name="param" description="&amp;$extra_statements Any extra SQL statements required for PostgreSQL" type="array" variable="$extra_statements">
            <type by_reference="false">array</type>
          </tag>
          <tag line="4077" name="param" description="Data parsed from the `ALTER TABLE` statement" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="4077" name="return" description="The modified SQL statement" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="4086">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="4086">
          <name>$extra_statements</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="4086">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="4446" package="Flourish">
        <name>translateSQLiteAlterTableStatements</name>
        <full_name>translateSQLiteAlterTableStatements</full_name>
        <docblock line="4437">
          <description><![CDATA[Translates Flourish SQL `ALTER TABLE` statements to the appropriate
statements for SQLite]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="4437" name="param" description="The SQL statements that will be executed against the database" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="4437" name="param" description="&amp;$extra_statements Any extra SQL statements required for SQLite" type="array" variable="$extra_statements">
            <type by_reference="false">array</type>
          </tag>
          <tag line="4437" name="param" description="Data parsed from the `ALTER TABLE` statement" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="4437" name="return" description="The modified SQL statement" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="4446">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="4446">
          <name>$extra_statements</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="4446">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="5112" package="Flourish">
        <name>translateSQLiteDropTableStatements</name>
        <full_name>translateSQLiteDropTableStatements</full_name>
        <docblock line="5105">
          <description><![CDATA[Translates `DROP TABLE` statements for SQLite]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="5105" name="param" description="The SQL to translate" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="5105" name="param" description="&amp;$extra_statements Any extra SQL statements that need to be added" type="array" variable="$extra_statements">
            <type by_reference="false">array</type>
          </tag>
          <tag line="5105" name="return" description="The translated SQL" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="5112">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="5112">
          <name>$extra_statements</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="5155" package="Flourish">
        <name>translateSQLiteRenameTableStatements</name>
        <full_name>translateSQLiteRenameTableStatements</full_name>
        <docblock line="5146">
          <description><![CDATA[Translates Flourish SQL `ALTER TABLE * RENAME TO` statements to the appropriate
statements for SQLite]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="5146" name="param" description="The SQL statements that will be executed against the database" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="5146" name="param" description="&amp;$extra_statements Any extra SQL statements required for SQLite" type="array" variable="$extra_statements">
            <type by_reference="false">array</type>
          </tag>
          <tag line="5146" name="param" description="Data parsed from the `ALTER TABLE` statement" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="5146" name="return" description="The modified SQL statement" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="5155">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="5155">
          <name>$extra_statements</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="5155">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fSQLSchemaTranslation.php</error>
      <notice line="31" code="50013">Parameter $component could not be found in compose()</notice>
      <notice line="31" code="50013">Parameter  could not be found in compose()</notice>
      <error line="1048" code="50015">Argument $table is missing from the Docblock of getSQLiteIndexes()</error>
      <error line="1111" code="50015">Argument $exclude_table is missing from the Docblock of getSQLiteTriggers()</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fURL.php" hash="673eabf8689bad5a12f7916a399e11e9" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="28" package="Flourish">
      <extends/>
      <name>fURL</name>
      <full_name>\fURL</full_name>
      <docblock line="2">
        <description><![CDATA[Provides functionality to retrieve and manipulate URL information]]></description>
        <long-description><![CDATA[<p>This class uses <code>$_SERVER['REQUEST_URI']</code> for all operations, meaning that
the original URL entered by the user will be used, or that any rewrites
will <strong>not</strong> be reflected by this class.</p>]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2011 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fURL" link="http://flourishlib.com/fURL"/>
        <tag line="2" name="version" description="1.0.0b10"/>
        <tag line="2" name="changes" description="1.0.0b10  Fixed some method signatures [wb, 2011-08-24]"/>
        <tag line="2" name="changes" description="1.0.0b9   Fixed ::redirect() to handle no parameters properly [wb, 2011-06-13]"/>
        <tag line="2" name="changes" description="1.0.0b8   Added the `$delimiter` parameter to ::makeFriendly() [wb, 2011-06-03]"/>
        <tag line="2" name="changes" description="1.0.0b7   Fixed ::redirect() to be able to handle unqualified and relative paths [wb, 2011-03-02]"/>
        <tag line="2" name="changes" description="1.0.0b6   Added the `$max_length` parameter to ::makeFriendly() [wb, 2010-09-19]"/>
        <tag line="2" name="changes" description="1.0.0b5   Updated ::redirect() to not require a URL, using the current URL as the default [wb, 2009-07-29]"/>
        <tag line="2" name="changes" description="1.0.0b4   ::getDomain() now includes the port number if non-standard [wb, 2009-05-02]"/>
        <tag line="2" name="changes" description="1.0.0b3   ::makeFriendly() now changes _-_ to - and multiple _ to a single _ [wb, 2009-03-24]"/>
        <tag line="2" name="changes" description="1.0.0b2   Fixed ::makeFriendly() so that _ doesn't appear at the beginning of URLs [wb, 2009-03-22]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2007-06-14]"/>
      </docblock>
      <constant namespace="global" line="31" package="Flourish">
        <name>get</name>
        <full_name>get</full_name>
        <value><![CDATA['fURL::get']]></value>
      </constant>
      <constant namespace="global" line="32" package="Flourish">
        <name>getDomain</name>
        <full_name>getDomain</full_name>
        <value><![CDATA['fURL::getDomain']]></value>
      </constant>
      <constant namespace="global" line="33" package="Flourish">
        <name>getQueryString</name>
        <full_name>getQueryString</full_name>
        <value><![CDATA['fURL::getQueryString']]></value>
      </constant>
      <constant namespace="global" line="34" package="Flourish">
        <name>getWithQueryString</name>
        <full_name>getWithQueryString</full_name>
        <value><![CDATA['fURL::getWithQueryString']]></value>
      </constant>
      <constant namespace="global" line="35" package="Flourish">
        <name>makeFriendly</name>
        <full_name>makeFriendly</full_name>
        <value><![CDATA['fURL::makeFriendly']]></value>
      </constant>
      <constant namespace="global" line="36" package="Flourish">
        <name>redirect</name>
        <full_name>redirect</full_name>
        <value><![CDATA['fURL::redirect']]></value>
      </constant>
      <constant namespace="global" line="37" package="Flourish">
        <name>removeFromQueryString</name>
        <full_name>removeFromQueryString</full_name>
        <value><![CDATA['fURL::removeFromQueryString']]></value>
      </constant>
      <constant namespace="global" line="38" package="Flourish">
        <name>replaceInQueryString</name>
        <full_name>replaceInQueryString</full_name>
        <value><![CDATA['fURL::replaceInQueryString']]></value>
      </constant>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="49" package="Flourish">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="41">
          <description><![CDATA[Returns the requested URL, does no include the domain name or query string]]></description>
          <long-description><![CDATA[<p>This will return the original URL requested by the user - ignores all
rewrites.</p>]]></long-description>
          <tag line="41" name="return" description="The requested URL without the query string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="60" package="Flourish">
        <name>getDomain</name>
        <full_name>getDomain</full_name>
        <docblock line="55">
          <description><![CDATA[Returns the current domain name, with protcol prefix.]]></description>
          <long-description><![CDATA[<p>Port will be included if not 80 for HTTP or 443 for HTTPS.</p>]]></long-description>
          <tag line="55" name="return" description="The current domain name, prefixed by `http://` or `https://`" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="76" package="Flourish">
        <name>getQueryString</name>
        <full_name>getQueryString</full_name>
        <docblock line="71">
          <description><![CDATA[Returns the current query string, does not include parameters added by rewrites]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="71" name="return" description="The query string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="87" package="Flourish">
        <name>getWithQueryString</name>
        <full_name>getWithQueryString</full_name>
        <docblock line="82">
          <description><![CDATA[Returns the current URL including query string, but without domain name - does not include query string parameters from rewrites]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="82" name="return" description="The URL with query string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="103" package="Flourish">
        <name>makeFriendly</name>
        <full_name>makeFriendly</full_name>
        <docblock line="93">
          <description><![CDATA[Changes a string into a URL-friendly string]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="93" name="param" description="The string to convert" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="93" name="param" description="The maximum length of the friendly URL" type="integer" variable="$max_length">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="93" name="param" description="The delimiter to use between words, defaults to `_`" type="string" variable="$delimiter">
            <type by_reference="false">string</type>
          </tag>
          <tag line="93" name="param" description="|$string" type="string" variable="">
            <type by_reference="false">string</type>
          </tag>
          <tag line="93" name="param" description="|$delimiter" type="string" variable="">
            <type by_reference="false">string</type>
          </tag>
          <tag line="93" name="return" description="The URL-friendly version of the string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="103">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="103">
          <name>$max_length</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="103">
          <name>$delimiter</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="151" package="Flourish">
        <name>redirect</name>
        <full_name>redirect</full_name>
        <docblock line="140">
          <description><![CDATA[Redirects to the URL specified, without requiring a full-qualified URL]]></description>
          <long-description><![CDATA[<ul>
<li>If the URL starts with <code>/</code>, it is treated as an absolute path on the current site

<ul>
<li>If the URL starts with <code>http://</code> or <code>https://</code>, it is treated as a fully-qualified URL</li>
<li>If the URL starts with anything else, including a <code>?</code>, it is appended to the current URL</li>
<li>If the URL is ommitted, it is treated as the current URL</li>
</ul></li>
</ul>]]></long-description>
          <tag line="140" name="param" description="The url to redirect to" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="140" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="151">
          <name>$url</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="203" package="Flourish">
        <name>removeFromQueryString</name>
        <full_name>removeFromQueryString</full_name>
        <docblock line="193">
          <description><![CDATA[Removes one or more parameters from the query string]]></description>
          <long-description><![CDATA[<p>This method uses the query string from the original URL and will not
contain any parameters that are from rewrites.</p>]]></long-description>
          <tag line="193" name="param" description="A parameter to remove from the query string" type="string" variable="$parameter">
            <type by_reference="false">string</type>
          </tag>
          <tag line="193" name="param" description="..." type="string" variable="">
            <type by_reference="false">string</type>
          </tag>
          <tag line="193" name="return" description="The query string with the parameter(s) specified removed, first character is `?`" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="203">
          <name>$parameter</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="230" package="Flourish">
        <name>replaceInQueryString</name>
        <full_name>replaceInQueryString</full_name>
        <docblock line="220">
          <description><![CDATA[Replaces a value in the query string]]></description>
          <long-description><![CDATA[<p>This method uses the query string from the original URL and will not
contain any parameters that are from rewrites.</p>]]></long-description>
          <tag line="220" name="param" description="The query string parameter" type="string|array" variable="$parameter">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="220" name="param" description="The value to set the parameter to" type="string|array" variable="$value">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="220" name="return" description="The full query string with the parameter replaced, first char is `?`" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="230">
          <name>$parameter</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="230">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="261" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="256">
          <description><![CDATA[Forces use as a static class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="256" name="return" description="" type="\fURL">
            <type by_reference="false">\fURL</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fURL.php</error>
      <notice line="93" code="50013">Parameter  could not be found in makeFriendly()</notice>
      <notice line="93" code="50013">Parameter  could not be found in makeFriendly()</notice>
      <notice line="193" code="50013">Parameter  could not be found in removeFromQueryString()</notice>
    </parse_markers>
  </file>
  <file path="php/flourish/fMailbox.php" hash="9bc0c9f154765f9c3aab33c5226ff7d7" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="35" package="Flourish">
      <extends/>
      <name>fMailbox</name>
      <full_name>\fMailbox</full_name>
      <docblock line="2">
        <description><![CDATA[Retrieves and deletes messages from a email account via IMAP or POP3]]></description>
        <long-description><![CDATA[<p>All headers, text and html content returned by this class are encoded in
UTF-8. Please see http://flourishlib.com/docs/UTF-8 for more information.</p>]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2010-2012 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fMailbox" link="http://flourishlib.com/fMailbox"/>
        <tag line="2" name="version" description="1.0.0b18"/>
        <tag line="2" name="changes" description="1.0.0b18  Fixed a bug in ::fetchMessageSource() where IMAP connections would add an extra `\r\n` to the end of the source [wb, 2012-09-16]"/>
        <tag line="2" name="changes" description="1.0.0b17  Updated the class to be more forgiving when parsing the response for `STATUS` and `FETCH` IMAP commands [wb, 2012-09-15]"/>
        <tag line="2" name="changes" description="1.0.0b16  Added method ::fetchMessageSource() [wb, 2012-09-15]"/>
        <tag line="2" name="changes" description="1.0.0b15  Fixed handling of bounces with no headers [wb, 2012-09-15]"/>
        <tag line="2" name="changes" description="1.0.0b14  Added a workaround for iconv having issues in MAMP 1.9.4+ [wb, 2011-07-26]"/>
        <tag line="2" name="changes" description="1.0.0b13  Fixed handling of headers in relation to encoded-words being embedded inside of quoted strings [wb, 2011-07-26]"/>
        <tag line="2" name="changes" description="1.0.0b12  Enhanced the error checking in ::write() [wb, 2011-06-03]"/>
        <tag line="2" name="changes" description="1.0.0b11  Added code to work around PHP bug #42682 (http://bugs.php.net/bug.php?id=42682) where `stream_select()` doesn't work on 64bit machines from PHP 5.2.0 to 5.2.5, improved connectivity error handling and timeouts while reading data [wb, 2011-01-10]"/>
        <tag line="2" name="changes" description="1.0.0b10  Fixed ::parseMessage() to properly handle a header format edge case and properly set the `text` and `html` keys even when the email has an explicit `Content-disposition: inline` header [wb, 2010-11-25]"/>
        <tag line="2" name="changes" description="1.0.0b9   Fixed a bug in ::parseMessage() that could cause HTML alternate content to be included in the `inline` content array instead of the `html` element [wb, 2010-09-20]"/>
        <tag line="2" name="changes" description="1.0.0b8   Fixed ::parseMessage() to be able to handle non-text/non-html multipart parts that do not have a `Content-disposition` header [wb, 2010-09-18]"/>
        <tag line="2" name="changes" description="1.0.0b7   Fixed a typo in ::read() [wb, 2010-09-07]"/>
        <tag line="2" name="changes" description="1.0.0b6   Fixed a typo from 1.0.0b4 [wb, 2010-07-21]"/>
        <tag line="2" name="changes" description="1.0.0b5   Fixes for increased compatibility with various IMAP and POP3 servers, hacked around a bug in PHP 5.3 on Windows [wb, 2010-06-22]"/>
        <tag line="2" name="changes" description="1.0.0b4   Added code to handle emails without an explicit `Content-type` header [wb, 2010-06-04]"/>
        <tag line="2" name="changes" description="1.0.0b3   Added missing static method callback constants [wb, 2010-05-11]"/>
        <tag line="2" name="changes" description="1.0.0b2   Added the missing ::enableDebugging() [wb, 2010-05-05]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2010-05-05]"/>
      </docblock>
      <constant namespace="global" line="37" package="Flourish">
        <name>addSMIMEPair</name>
        <full_name>addSMIMEPair</full_name>
        <value><![CDATA['fMailbox::addSMIMEPair']]></value>
      </constant>
      <constant namespace="global" line="38" package="Flourish">
        <name>parseMessage</name>
        <full_name>parseMessage</full_name>
        <value><![CDATA['fMailbox::parseMessage']]></value>
      </constant>
      <constant namespace="global" line="39" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <value><![CDATA['fMailbox::reset']]></value>
      </constant>
      <property final="false" static="true" visibility="private" line="47" namespace="global" package="Sutra">
        <name>$smime_pairs</name>
        <default><![CDATA[array()]]></default>
        <docblock line="42">
          <description><![CDATA[S/MIME certificates and private keys for verification and decryption]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="42" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="800" namespace="global" package="Sutra">
        <name>$command_num</name>
        <default><![CDATA[1]]></default>
        <docblock line="795">
          <description><![CDATA[A counter to use for generating command keys]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="795" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="807" namespace="global" package="Sutra">
        <name>$connection</name>
        <default><![CDATA[]]></default>
        <docblock line="802">
          <description><![CDATA[The connection resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="802" name="var" description="" type="resource">
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="814" namespace="global" package="Sutra">
        <name>$debug</name>
        <default><![CDATA[]]></default>
        <docblock line="809">
          <description><![CDATA[If debugging has been enabled]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="809" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="821" namespace="global" package="Sutra">
        <name>$host</name>
        <default><![CDATA[]]></default>
        <docblock line="816">
          <description><![CDATA[The server hostname or IP address]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="816" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="828" namespace="global" package="Sutra">
        <name>$password</name>
        <default><![CDATA[]]></default>
        <docblock line="823">
          <description><![CDATA[The password for the account]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="823" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="835" namespace="global" package="Sutra">
        <name>$port</name>
        <default><![CDATA[]]></default>
        <docblock line="830">
          <description><![CDATA[The port for the server]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="830" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="842" namespace="global" package="Sutra">
        <name>$secure</name>
        <default><![CDATA[]]></default>
        <docblock line="837">
          <description><![CDATA[If the connection to the server should be secure]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="837" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="849" namespace="global" package="Sutra">
        <name>$timeout</name>
        <default><![CDATA[5]]></default>
        <docblock line="844">
          <description><![CDATA[The timeout for the connection]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="844" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="856" namespace="global" package="Sutra">
        <name>$type</name>
        <default><![CDATA[]]></default>
        <docblock line="851">
          <description><![CDATA[The type of mailbox, `'imap'` or `'pop3'`]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="851" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="863" namespace="global" package="Sutra">
        <name>$username</name>
        <default><![CDATA[]]></default>
        <docblock line="858">
          <description><![CDATA[The username for the account]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="858" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="59" package="Flourish">
        <name>addSMIMEPair</name>
        <full_name>addSMIMEPair</full_name>
        <docblock line="50">
          <description><![CDATA[Adds an S/MIME certificate, or certificate + private key pair for verification and decryption of S/MIME messages]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="50" name="param" description="The email address the certificate or private key is for" type="string" variable="$email_address">
            <type by_reference="false">string</type>
          </tag>
          <tag line="50" name="param" description="The file the S/MIME certificate is stored in - required for verification and decryption" type="\fFile|string" variable="$certificate_file">
            <type by_reference="false">\fFile</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="50" name="param" description="The file the S/MIME private key is stored in - required for decryption only" type="\fFile" variable="$private_key_file">
            <type by_reference="false">\fFile</type>
          </tag>
          <tag line="50" name="param" description="The password for the private key" type="string" variable="$private_key_password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="50" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="59">
          <name>$email_address</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="59">
          <name>$certificate_file</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="59">
          <name>$private_key_file</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="59">
          <name>$private_key_password</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="81" package="Flourish">
        <name>cleanDate</name>
        <full_name>cleanDate</full_name>
        <docblock line="75">
          <description><![CDATA[Takes a date, removes comments and cleans up some common formatting inconsistencies]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="75" name="param" description="The date to clean" type="string" variable="$date">
            <type by_reference="false">string</type>
          </tag>
          <tag line="75" name="return" description="The cleaned date" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="81">
          <name>$date</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="97" package="Flourish">
        <name>decodeHeader</name>
        <full_name>decodeHeader</full_name>
        <docblock line="91">
          <description><![CDATA[Decodes encoded-word headers of any encoding into raw UTF-8]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="91" name="param" description="The header value to decode" type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="91" name="return" description="The decoded UTF-8" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="97">
          <name>$text</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="155" package="Flourish">
        <name>handlePart</name>
        <full_name>handlePart</full_name>
        <docblock line="148">
          <description><![CDATA[Handles an individual part of a multipart message]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="148" name="param" description="An array of information about the message" type="array" variable="$info">
            <type by_reference="false">array</type>
          </tag>
          <tag line="148" name="param" description="An array describing the structure of the message" type="array" variable="$structure">
            <type by_reference="false">array</type>
          </tag>
          <tag line="148" name="return" description="The modified $info array" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="155">
          <name>$info</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="155">
          <name>$structure</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="309" package="Flourish">
        <name>handleSMIMEDecryption</name>
        <full_name>handleSMIMEDecryption</full_name>
        <docblock line="301">
          <description><![CDATA[Tries to decrypt an S/MIME message using a private key]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="301" name="param" description="&amp;$info The array of information about a message" type="array" variable="$info">
            <type by_reference="false">array</type>
          </tag>
          <tag line="301" name="param" description="The structure of this part" type="array" variable="$structure">
            <type by_reference="false">array</type>
          </tag>
          <tag line="301" name="param" description="An associative array containing an S/MIME certificate, private key and password" type="array" variable="$smime_pair">
            <type by_reference="false">array</type>
          </tag>
          <tag line="301" name="return" description="If the message was decrypted" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="309">
          <name>$info</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="309">
          <name>$structure</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="309">
          <name>$smime_pair</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="358" package="Flourish">
        <name>handleSMIMEVerification</name>
        <full_name>handleSMIMEVerification</full_name>
        <docblock line="350">
          <description><![CDATA[Takes a message with an S/MIME signature and verifies it if possible]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="350" name="param" description="&amp;$info The array of information about a message" type="array" variable="$info">
            <type by_reference="false">array</type>
          </tag>
          <tag line="350" name="param" description="" type="array" variable="$structure">
            <type by_reference="false">array</type>
          </tag>
          <tag line="350" name="param" description="An associative array containing an S/MIME certificate file" type="array" variable="$smime_pair">
            <type by_reference="false">array</type>
          </tag>
          <tag line="350" name="return" description="If the message was verified" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="358">
          <name>$info</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="358">
          <name>$structure</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="358">
          <name>$smime_pair</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="395" package="Flourish">
        <name>iconv</name>
        <full_name>iconv</full_name>
        <docblock line="385">
          <description><![CDATA[This works around a bug in MAMP 1.9.4+ and PHP 5.3 where iconv()
does not seem to properly assign the return value to a variable, but
does work when returning the value.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="385" name="param" description="The incoming character encoding" type="string" variable="$in_charset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="385" name="param" description="The outgoing character encoding" type="string" variable="$out_charset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="385" name="param" description="The string to convert" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="385" name="return" description="The converted string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="395">
          <name>$in_charset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="395">
          <name>$out_charset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="395">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="407" package="Flourish">
        <name>joinEmails</name>
        <full_name>joinEmails</full_name>
        <docblock line="401">
          <description><![CDATA[Joins parsed emails into a comma-delimited string]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="401" name="param" description="An array of emails split into personal, mailbox and host parts" type="array" variable="$emails">
            <type by_reference="false">array</type>
          </tag>
          <tag line="401" name="return" description="An comma-delimited list of emails" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="407">
          <name>$emails</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="435" package="Flourish">
        <name>parseEmail</name>
        <full_name>parseEmail</full_name>
        <docblock line="429">
          <description><![CDATA[Parses a string representation of an email into the persona, mailbox and host parts]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="429" name="param" description="The email string to parse" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="429" name="return" description="An associative array with the key `mailbox`, and possibly `host` and `personal`" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="435">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="494" package="Flourish">
        <name>parseHeaders</name>
        <full_name>parseHeaders</full_name>
        <docblock line="487">
          <description><![CDATA[Parses full email headers into an associative array]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="487" name="param" description="The header to parse" type="string" variable="$headers">
            <type by_reference="false">string</type>
          </tag>
          <tag line="487" name="param" description="Remove any headers that match this" type="string" variable="$filter">
            <type by_reference="false">string</type>
          </tag>
          <tag line="487" name="return" description="The parsed headers" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="494">
          <name>$headers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="494">
          <name>$filter</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="621" package="Flourish">
        <name>parseMessage</name>
        <full_name>parseMessage</full_name>
        <docblock line="587">
          <description><![CDATA[Parses a MIME message into an associative array of information]]></description>
          <long-description><![CDATA[<p>The output includes the following keys:</p>

<ul>
<li><code>'received'</code>: The date the message was received by the server</li>
<li><code>'headers'</code>: An associative array of mail headers, the keys are the header names, in lowercase</li>
</ul>

<p>And one or more of the following:</p>

<ul>
<li><code>'text'</code>: The plaintext body</li>
<li><code>'html'</code>: The HTML body</li>
<li><code>'attachment'</code>: An array of attachments, each containing:

<ul>
<li><code>'filename'</code>: The name of the file</li>
<li><code>'mimetype'</code>: The mimetype of the file</li>
<li><code>'data'</code>: The raw contents of the file</li>
</ul></li>
<li><code>'inline'</code>: An array of inline files, each containing:

<ul>
<li><code>'filename'</code>: The name of the file</li>
<li><code>'mimetype'</code>: The mimetype of the file</li>
<li><code>'data'</code>: The raw contents of the file</li>
</ul></li>
<li><code>'related'</code>: An associative array of related files, such as embedded images, with the key <code>'cid:{content-id}'</code> and an array value containing:

<ul>
<li><code>'mimetype'</code>: The mimetype of the file</li>
<li><code>'data'</code>: The raw contents of the file</li>
</ul></li>
<li><code>'verified'</code>: If the message contents were verified via an S/MIME certificate - if not verified the smime.p7s will be listed as an attachment</li>
<li><code>'decrypted'</code>: If the message contents were decrypted via an S/MIME private key - if not decrypted the smime.p7m will be listed as an attachment</li>
</ul>

<p>All values in <code>headers</code>, <code>text</code> and <code>body</code> will have been decoded to
UTF-8. Files in the <code>attachment</code>, <code>inline</code> and <code>related</code> array will all
retain their original encodings.</p>]]></long-description>
          <tag line="587" name="param" description="The full source of the email message" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="587" name="param" description="If `\r\n` should be converted to `\n` in the `text` and `html` parts the message" type="boolean" variable="$convert_newlines">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="587" name="return" description="The parsed email message - see method description for details" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="621">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="621">
          <name>$convert_newlines</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="669" package="Flourish">
        <name>parseResponse</name>
        <full_name>parseResponse</full_name>
        <docblock line="661">
          <description><![CDATA[Takes a response from an IMAP command and parses it into a
multi-dimensional array]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="661" name="param" description="The IMAP command response" type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="661" name="param" description="If we are parsing the top level" type="boolean" variable="$top_level">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="661" name="return" description="The parsed representation of the response text" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="669">
          <name>$text</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="669">
          <name>$top_level</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="712" package="Flourish">
        <name>parseStructure</name>
        <full_name>parseStructure</full_name>
        <docblock line="704">
          <description><![CDATA[Takes the raw contents of a MIME message and creates an array that
describes the structure of the message]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="704" name="param" description="The contents to get the structure of" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="704" name="param" description="The parsed headers for the message - if not present they will be extracted from the `$data`" type="string" variable="$headers">
            <type by_reference="false">string</type>
          </tag>
          <tag line="704" name="return" description="The multi-dimensional, associative array containing the message structure" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="712">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="712">
          <name>$headers</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="770" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="763">
          <description><![CDATA[Resets the configuration of the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="763" name="internal" description=""/>
          <tag line="763" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="784" package="Flourish">
        <name>unfoldAssociativeArray</name>
        <full_name>unfoldAssociativeArray</full_name>
        <docblock line="776">
          <description><![CDATA[Takes an associative array and unfolds the keys and values so that the
result in an integer-indexed array of `0 => key1, 1 => value1, 2 => key2,
3 => value2, .]]></description>
          <long-description><![CDATA[<p>..`.</p>]]></long-description>
          <tag line="776" name="param" description="The array to unfold" type="array" variable="$array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="776" name="return" description="The unfolded array" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="784">
          <name>$array</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="883" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="866">
          <description><![CDATA[Configures the connection to the server]]></description>
          <long-description><![CDATA[<p>Please note that the GMail POP3 server does not act like other POP3
servers and the GMail IMAP server should be used instead. GMail POP3 only
allows retrieving a message once - during future connections the email
in question will no longer be available.</p>]]></long-description>
          <tag line="866" name="param" description="The type of mailbox, `'pop3'` or `'imap'`" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="866" name="param" description="The server hostname or IP address" type="string" variable="$host">
            <type by_reference="false">string</type>
          </tag>
          <tag line="866" name="param" description="The user to log in as" type="string" variable="$username">
            <type by_reference="false">string</type>
          </tag>
          <tag line="866" name="param" description="The user's password" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="866" name="param" description="The port to connect via - only required if non-standard" type="integer" variable="$port">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="866" name="param" description="If SSL should be used for the connection - this requires the `openssl` extension" type="boolean" variable="$secure">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="866" name="param" description="The timeout to use when connecting" type="integer" variable="$timeout">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="866" name="return" description="" type="\fMailbox">
            <type by_reference="false">\fMailbox</type>
          </tag>
        </docblock>
        <argument line="883">
          <name>$type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="883">
          <name>$host</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="883">
          <name>$username</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="883">
          <name>$password</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="883">
          <name>$port</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="883">
          <name>$secure</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
        <argument line="883">
          <name>$timeout</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="928" package="Flourish">
        <name>__destruct</name>
        <full_name>__destruct</full_name>
        <docblock line="923">
          <description><![CDATA[Disconnects from the server]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="923" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="939" package="Flourish">
        <name>close</name>
        <full_name>close</full_name>
        <docblock line="934">
          <description><![CDATA[Closes the connection to the server]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="934" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="960" package="Flourish">
        <name>connect</name>
        <full_name>connect</full_name>
        <docblock line="955">
          <description><![CDATA[Connects to the server]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="955" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1079" package="Flourish">
        <name>deleteMessages</name>
        <full_name>deleteMessages</full_name>
        <docblock line="1070">
          <description><![CDATA[Deletes one or more messages from the server]]></description>
          <long-description><![CDATA[<p>Passing more than one UID at a time is more efficient for IMAP mailboxes,
whereas POP3 mailboxes will see no difference in performance.</p>]]></long-description>
          <tag line="1070" name="param" description="The UID(s) of the message(s) to delete" type="integer|array" variable="$uid">
            <type by_reference="false">integer</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="1070" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1079">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1103" package="Flourish">
        <name>enableDebugging</name>
        <full_name>enableDebugging</full_name>
        <docblock line="1097">
          <description><![CDATA[Sets if debug messages should be shown]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1097" name="param" description="If debugging messages should be shown" type="boolean" variable="$flag">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1097" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1103">
          <name>$flag</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1144" package="Flourish">
        <name>fetchMessage</name>
        <full_name>fetchMessage</full_name>
        <docblock line="1109">
          <description><![CDATA[Retrieves a single message from the server]]></description>
          <long-description><![CDATA[<p>The output includes the following keys:</p>

<ul>
<li><code>'uid'</code>: The UID of the message</li>
<li><code>'received'</code>: The date the message was received by the server</li>
<li><code>'headers'</code>: An associative array of mail headers, the keys are the header names, in lowercase</li>
</ul>

<p>And one or more of the following:</p>

<ul>
<li><code>'text'</code>: The plaintext body</li>
<li><code>'html'</code>: The HTML body</li>
<li><code>'attachment'</code>: An array of attachments, each containing:

<ul>
<li><code>'filename'</code>: The name of the file</li>
<li><code>'mimetype'</code>: The mimetype of the file</li>
<li><code>'data'</code>: The raw contents of the file</li>
</ul></li>
<li><code>'inline'</code>: An array of inline files, each containing:

<ul>
<li><code>'filename'</code>: The name of the file</li>
<li><code>'mimetype'</code>: The mimetype of the file</li>
<li><code>'data'</code>: The raw contents of the file</li>
</ul></li>
<li><code>'related'</code>: An associative array of related files, such as embedded images, with the key <code>'cid:{content-id}'</code> and an array value containing:

<ul>
<li><code>'mimetype'</code>: The mimetype of the file</li>
<li><code>'data'</code>: The raw contents of the file</li>
</ul></li>
<li><code>'verified'</code>: If the message contents were verified via an S/MIME certificate - if not verified the smime.p7s will be listed as an attachment</li>
<li><code>'decrypted'</code>: If the message contents were decrypted via an S/MIME private key - if not decrypted the smime.p7m will be listed as an attachment</li>
</ul>

<p>All values in <code>headers</code>, <code>text</code> and <code>body</code> will have been decoded to
UTF-8. Files in the <code>attachment</code>, <code>inline</code> and <code>related</code> array will all
retain their original encodings.</p>]]></long-description>
          <tag line="1109" name="param" description="The UID of the message to retrieve" type="integer" variable="$uid">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1109" name="param" description="If `\r\n` should be converted to `\n` in the `text` and `html` parts the message" type="boolean" variable="$convert_newlines">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1109" name="return" description="The parsed email message - see method description for details" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1144">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1144">
          <name>$convert_newlines</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1167" package="Flourish">
        <name>fetchMessageSource</name>
        <full_name>fetchMessageSource</full_name>
        <docblock line="1157">
          <description><![CDATA[Retrieves the raw source of a single message from the server]]></description>
          <long-description><![CDATA[<p>This method is primarily useful for storing the raw source of a message.
Normal use of fMailbox would involved calling ::fetchMessage(), which
calls this method and then ::parseMessage().</p>]]></long-description>
          <tag line="1157" name="param" description="The UID of the message to retrieve" type="integer" variable="$uid">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1157" name="return" description="The raw message source of the email" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1167">
          <name>$uid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1225" package="Flourish">
        <name>listMessages</name>
        <full_name>listMessages</full_name>
        <docblock line="1198">
          <description><![CDATA[Gets a list of messages from the server]]></description>
          <long-description><![CDATA[<p>The structure of the returned array is:</p>

<p>{{{
array(
    (integer) {uid} => array(
        'uid'         => (integer) {a unique identifier for this message on this server},
        'received'    => (string) {date message was received},
        'size'        => (integer) {size of message in bytes},
        'date'        => (string) {date message was sent},
        'from'        => (string) {the from header value},
        'subject'     => (string) {the message subject},
        'message_id'  => (string) {optional - the message-id header value, should be globally unique},
        'to'          => (string) {optional - the to header value},
        'in_reply_to' => (string) {optional - the in-reply-to header value}
    ), ...
)
}}}</p>

<p>All values will have been decoded to UTF-8.</p>]]></long-description>
          <tag line="1198" name="param" description="The number of messages to retrieve" type="integer" variable="$limit">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1198" name="param" description="The page of messages to retrieve" type="integer" variable="$page">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1198" name="return" description="A list of messages on the server - see method description for details" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1225">
          <name>$limit</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="1225">
          <name>$page</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1370" package="Flourish">
        <name>read</name>
        <full_name>read</full_name>
        <docblock line="1364">
          <description><![CDATA[Reads responses from the server]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1364" name="param" description="The expected number of lines of response or a regex of the last line" type="integer|string" variable="$expect">
            <type by_reference="false">integer</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="1364" name="return" description="The lines of response from the server" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1370">
          <name>$expect</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1467" package="Flourish">
        <name>write</name>
        <full_name>write</full_name>
        <docblock line="1460">
          <description><![CDATA[Sends commands to the IMAP or POP3 server]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1460" name="param" description="The command to send" type="string" variable="$command">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1460" name="param" description="The number of lines or regex expected for a POP3 command" type="integer" variable="$expected">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1460" name="return" description="The response from the server" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1467">
          <name>$command</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1467">
          <name>$expected</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fMailbox.php</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fORMMoney.php" hash="6fad5bbf471c1174a7a7608fd37357d5" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="26" package="Flourish">
      <extends/>
      <name>fORMMoney</name>
      <full_name>\fORMMoney</full_name>
      <docblock line="2">
        <description><![CDATA[Provides money functionality for fActiveRecord classes]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2008-2011 Will Bond, others"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="author" description="Dan Collins, iMarc LLC [dc-imarc] &lt;dan@imarc.net&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fORMMoney" link="http://flourishlib.com/fORMMoney"/>
        <tag line="2" name="version" description="1.0.0b11"/>
        <tag line="2" name="changes" description="1.0.0b11  Fixed the generation of validation messages when a non-monetary value is supplied [wb, 2011-05-17]"/>
        <tag line="2" name="changes" description="1.0.0b10  Updated code to work with the new fORM API [wb, 2010-08-06]"/>
        <tag line="2" name="changes" description="1.0.0b9   Added the `$remove_zero_fraction` parameter to prepare methods [wb, 2010-06-09]"/>
        <tag line="2" name="changes" description="1.0.0b8   Changed validation messages array to use column name keys [wb, 2010-05-26]"/>
        <tag line="2" name="changes" description="1.0.0b7   Fixed the `set` methods to return the record object in order to be consistent with all other `set` methods [wb, 2010-03-15]"/>
        <tag line="2" name="changes" description="1.0.0b6   Fixed duplicate validation messages and fProgrammerException object being thrown when NULL is set [dc-imarc+wb, 2010-03-03]"/>
        <tag line="2" name="changes" description="1.0.0b5   Updated code for the new fORMDatabase and fORMSchema APIs [wb, 2009-10-28]"/>
        <tag line="2" name="changes" description="1.0.0b4   Updated to use new fORM::registerInspectCallback() method [wb, 2009-07-13]"/>
        <tag line="2" name="changes" description="1.0.0b3   Updated code to use new fValidationException::formatField() method [wb, 2009-06-04]"/>
        <tag line="2" name="changes" description="1.0.0b2   Fixed bugs with objectifying money columns [wb, 2008-11-24]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2008-09-05]"/>
      </docblock>
      <constant namespace="global" line="29" package="Flourish">
        <name>configureMoneyColumn</name>
        <full_name>configureMoneyColumn</full_name>
        <value><![CDATA['fORMMoney::configureMoneyColumn']]></value>
      </constant>
      <constant namespace="global" line="30" package="Flourish">
        <name>encodeMoneyColumn</name>
        <full_name>encodeMoneyColumn</full_name>
        <value><![CDATA['fORMMoney::encodeMoneyColumn']]></value>
      </constant>
      <constant namespace="global" line="31" package="Flourish">
        <name>inspect</name>
        <full_name>inspect</full_name>
        <value><![CDATA['fORMMoney::inspect']]></value>
      </constant>
      <constant namespace="global" line="32" package="Flourish">
        <name>makeMoneyObjects</name>
        <full_name>makeMoneyObjects</full_name>
        <value><![CDATA['fORMMoney::makeMoneyObjects']]></value>
      </constant>
      <constant namespace="global" line="33" package="Flourish">
        <name>objectifyMoney</name>
        <full_name>objectifyMoney</full_name>
        <value><![CDATA['fORMMoney::objectifyMoney']]></value>
      </constant>
      <constant namespace="global" line="34" package="Flourish">
        <name>objectifyMoneyWithCurrency</name>
        <full_name>objectifyMoneyWithCurrency</full_name>
        <value><![CDATA['fORMMoney::objectifyMoneyWithCurrency']]></value>
      </constant>
      <constant namespace="global" line="35" package="Flourish">
        <name>prepareMoneyColumn</name>
        <full_name>prepareMoneyColumn</full_name>
        <value><![CDATA['fORMMoney::prepareMoneyColumn']]></value>
      </constant>
      <constant namespace="global" line="36" package="Flourish">
        <name>reflect</name>
        <full_name>reflect</full_name>
        <value><![CDATA['fORMMoney::reflect']]></value>
      </constant>
      <constant namespace="global" line="37" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <value><![CDATA['fORMMoney::reset']]></value>
      </constant>
      <constant namespace="global" line="38" package="Flourish">
        <name>setCurrencyColumn</name>
        <full_name>setCurrencyColumn</full_name>
        <value><![CDATA['fORMMoney::setCurrencyColumn']]></value>
      </constant>
      <constant namespace="global" line="39" package="Flourish">
        <name>setMoneyColumn</name>
        <full_name>setMoneyColumn</full_name>
        <value><![CDATA['fORMMoney::setMoneyColumn']]></value>
      </constant>
      <constant namespace="global" line="40" package="Flourish">
        <name>validateMoneyColumns</name>
        <full_name>validateMoneyColumns</full_name>
        <value><![CDATA['fORMMoney::validateMoneyColumns']]></value>
      </constant>
      <property final="false" static="true" visibility="private" line="48" namespace="global" package="Sutra">
        <name>$currency_columns</name>
        <default><![CDATA[array()]]></default>
        <docblock line="43">
          <description><![CDATA[Columns that store currency information for a money column]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="43" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="55" namespace="global" package="Sutra">
        <name>$money_columns</name>
        <default><![CDATA[array()]]></default>
        <docblock line="50">
          <description><![CDATA[Columns that should be formatted as money]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="50" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="66" package="Flourish">
        <name>compose</name>
        <full_name>compose</full_name>
        <docblock line="58">
          <description><![CDATA[Composes text using fText if loaded]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="58" name="param" description="The message to compose" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="58" name="param" description="A string or number to insert into the message" type="mixed" variable="$component">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="58" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="58" name="return" description="The composed and possible translated message" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="66">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="89" package="Flourish">
        <name>configureMoneyColumn</name>
        <full_name>configureMoneyColumn</full_name>
        <docblock line="81">
          <description><![CDATA[Sets a column to be formatted as an fMoney object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="81" name="param" description="The class name or instance of the class to set the column format" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="81" name="param" description="The column to format as an fMoney object" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="81" name="param" description="If specified, this column will store the currency of the fMoney object" type="string" variable="$currency_column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="81" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="89">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="89">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="89">
          <name>$currency_column</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="196" package="Flourish">
        <name>encodeMoneyColumn</name>
        <full_name>encodeMoneyColumn</full_name>
        <docblock line="182">
          <description><![CDATA[Encodes a money column by calling fMoney::__toString()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="182" name="internal" description=""/>
          <tag line="182" name="param" description="The fActiveRecord instance" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="182" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="182" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="182" name="param" description="&amp;$related_records Any records related to this record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="182" name="param" description="&amp;$cache The cache array for the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="182" name="param" description="The method that was called" type="string" variable="$method_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="182" name="param" description="The parameters passed to the method" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="182" name="return" description="The encoded monetary value" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="196">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="196">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="196">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="196">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="196">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="196">
          <name>$method_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="196">
          <name>$parameters</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="221" package="Flourish">
        <name>inspect</name>
        <full_name>inspect</full_name>
        <docblock line="211">
          <description><![CDATA[Adds metadata about features added by this class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="211" name="internal" description=""/>
          <tag line="211" name="param" description="The class being inspected" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="211" name="param" description="The column being inspected" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="211" name="param" description="&amp;$metadata The array of metadata about a column" type="array" variable="$metadata">
            <type by_reference="false">array</type>
          </tag>
          <tag line="211" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="221">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="221">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="221">
          <name>$metadata</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="240" package="Flourish">
        <name>makeMoneyObjects</name>
        <full_name>makeMoneyObjects</full_name>
        <docblock line="228">
          <description><![CDATA[Makes fMoney objects for all money columns in the object that also have a currency column]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="228" name="internal" description=""/>
          <tag line="228" name="param" description="The fActiveRecord instance" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="228" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="228" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="228" name="param" description="&amp;$related_records Any records related to this record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="228" name="param" description="&amp;$cache The cache array for the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="228" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="240">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="240">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="240">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="240">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="240">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="264" package="Flourish">
        <name>objectifyMoney</name>
        <full_name>objectifyMoney</full_name>
        <docblock line="254">
          <description><![CDATA[Turns a monetary value into an fMoney object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="254" name="internal" description=""/>
          <tag line="254" name="param" description="The class this value is for" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="254" name="param" description="The column the value is in" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="254" name="param" description="The value" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="254" name="return" description="The fMoney object or raw value" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="264">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="264">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="264">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="291" package="Flourish">
        <name>objectifyMoneyWithCurrency</name>
        <full_name>objectifyMoneyWithCurrency</full_name>
        <docblock line="280">
          <description><![CDATA[Turns a monetary value into an fMoney object with a currency specified by another column]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="280" name="internal" description=""/>
          <tag line="280" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="280" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="280" name="param" description="The column holding the value" type="string" variable="$value_column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="280" name="param" description="The column holding the currency code" type="string" variable="$currency_column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="280" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="291">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="291">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="291">
          <name>$value_column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="291">
          <name>$currency_column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="339" package="Flourish">
        <name>prepareMoneyColumn</name>
        <full_name>prepareMoneyColumn</full_name>
        <docblock line="325">
          <description><![CDATA[Prepares a money column by calling fMoney::format()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="325" name="internal" description=""/>
          <tag line="325" name="param" description="The fActiveRecord instance" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="325" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="325" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="325" name="param" description="&amp;$related_records Any records related to this record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="325" name="param" description="&amp;$cache The cache array for the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="325" name="param" description="The method that was called" type="string" variable="$method_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="325" name="param" description="The parameters passed to the method" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="325" name="return" description="The formatted monetary value" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="339">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="339">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="339">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="339">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="339">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="339">
          <name>$method_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="339">
          <name>$parameters</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="372" package="Flourish">
        <name>reflect</name>
        <full_name>reflect</full_name>
        <docblock line="362">
          <description><![CDATA[Adjusts the fActiveRecord::reflect() signatures of columns that have been configured in this class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="362" name="internal" description=""/>
          <tag line="362" name="param" description="The class to reflect" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="362" name="param" description="&amp;$signatures The associative array of `{method name} =&gt; {signature}`" type="array" variable="$signatures">
            <type by_reference="false">array</type>
          </tag>
          <tag line="362" name="param" description="If doc comments should be included with the signature" type="boolean" variable="$include_doc_comments">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="362" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="372">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="372">
          <name>$signatures</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="372">
          <name>$include_doc_comments</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="453" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="446">
          <description><![CDATA[Resets the configuration of the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="446" name="internal" description=""/>
          <tag line="446" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="474" package="Flourish">
        <name>setCurrencyColumn</name>
        <full_name>setCurrencyColumn</full_name>
        <docblock line="460">
          <description><![CDATA[Sets the currency column and then tries to objectify the related money column]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="460" name="internal" description=""/>
          <tag line="460" name="param" description="The fActiveRecord instance" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="460" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="460" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="460" name="param" description="&amp;$related_records Any records related to this record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="460" name="param" description="&amp;$cache The cache array for the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="460" name="param" description="The method that was called" type="string" variable="$method_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="460" name="param" description="The parameters passed to the method" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="460" name="return" description="The record object, to allow for method chaining" type="\fActiveRecord">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
        </docblock>
        <argument line="474">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="474">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="474">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="474">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="474">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="474">
          <name>$method_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="474">
          <name>$parameters</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="516" package="Flourish">
        <name>setMoneyColumn</name>
        <full_name>setMoneyColumn</full_name>
        <docblock line="502">
          <description><![CDATA[Sets the money column and then tries to objectify it with an related currency column]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="502" name="internal" description=""/>
          <tag line="502" name="param" description="The fActiveRecord instance" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="502" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="502" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="502" name="param" description="&amp;$related_records Any records related to this record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="502" name="param" description="&amp;$cache The cache array for the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="502" name="param" description="The method that was called" type="string" variable="$method_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="502" name="param" description="The parameters passed to the method" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="502" name="return" description="The record object, to allow for method chaining" type="\fActiveRecord">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
        </docblock>
        <argument line="516">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="516">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="516">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="516">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="516">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="516">
          <name>$method_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="516">
          <name>$parameters</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="562" package="Flourish">
        <name>validateMoneyColumns</name>
        <full_name>validateMoneyColumns</full_name>
        <docblock line="549">
          <description><![CDATA[Validates all money columns]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="549" name="internal" description=""/>
          <tag line="549" name="param" description="The fActiveRecord instance" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="549" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="549" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="549" name="param" description="&amp;$related_records Any records related to this record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="549" name="param" description="&amp;$cache The cache array for the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="549" name="param" description="&amp;$validation_messages An array of ordered validation messages" type="array" variable="$validation_messages">
            <type by_reference="false">array</type>
          </tag>
          <tag line="549" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="562">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="562">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="562">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="562">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="562">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="562">
          <name>$validation_messages</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="599" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="594">
          <description><![CDATA[Forces use as a static class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="594" name="return" description="" type="\fORMMoney">
            <type by_reference="false">\fORMMoney</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fORMMoney.php</error>
      <notice line="58" code="50013">Parameter $component could not be found in compose()</notice>
      <notice line="58" code="50013">Parameter  could not be found in compose()</notice>
    </parse_markers>
  </file>
  <file path="php/flourish/fUpload.php" hash="140e1d3e35ec803be656eabce057ef8d" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="30" package="Flourish">
      <extends/>
      <name>fUpload</name>
      <full_name>\fUpload</full_name>
      <docblock line="2">
        <description><![CDATA[Provides validation and movement of uploaded files]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2012 Will Bond, others"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="author" description="Will Bond, iMarc LLC [wb-imarc] &lt;will@imarc.net&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fUpload" link="http://flourishlib.com/fUpload"/>
        <tag line="2" name="version" description="1.0.0b15"/>
        <tag line="2" name="changes" description="1.0.0b15  Fixed an undefined variable error in ::setMaxSize() [wb, 2012-09-16]"/>
        <tag line="2" name="changes" description="1.0.0b14  Fixed some method signatures [wb, 2011-08-24]"/>
        <tag line="2" name="changes" description="1.0.0b13  Changed the class to throw fValidationException objects instead of fProgrammerException objects when the form is improperly configured - this is to prevent error logs when bad requests are sent by scanners/hackers [wb, 2011-08-24]"/>
        <tag line="2" name="changes" description="1.0.0b12  Fixed the ::filter() callback constant [wb, 2010-11-24]"/>
        <tag line="2" name="changes" description="1.0.0b11  Added ::setImageDimensions() and ::setImageRatio() [wb-imarc, 2010-11-11]"/>
        <tag line="2" name="changes" description="1.0.0b10  BackwardsCompatibilityBreak - renamed ::setMaxFilesize() to ::setMaxSize() to be consistent with fFile::getSize() [wb, 2010-05-30]"/>
        <tag line="2" name="changes" description="1.0.0b9   BackwardsCompatibilityBreak - the class no longer accepts uploaded files that start with a `.` unless ::allowDotFiles() is called - added ::setOptional() [wb, 2010-05-30]"/>
        <tag line="2" name="changes" description="1.0.0b8   BackwardsCompatibilityBreak - ::validate() no longer returns the `$_FILES` array for the file being validated - added `$return_message` parameter to ::validate(), fixed a bug with detection of mime type for text files [wb, 2010-05-26]"/>
        <tag line="2" name="changes" description="1.0.0b7   Added ::filter() to allow for ignoring array file upload field entries that did not have a file uploaded [wb, 2009-10-06]"/>
        <tag line="2" name="changes" description="1.0.0b6   Updated ::move() to use the new fFilesystem::createObject() method [wb, 2009-01-21]"/>
        <tag line="2" name="changes" description="1.0.0b5   Removed some unnecessary error suppression operators from ::move() [wb, 2009-01-05]"/>
        <tag line="2" name="changes" description="1.0.0b4   Updated ::validate() so it properly handles upload max filesize specified in human-readable notation [wb, 2009-01-05]"/>
        <tag line="2" name="changes" description="1.0.0b3   Removed the dependency on fRequest [wb, 2009-01-05]"/>
        <tag line="2" name="changes" description="1.0.0b2   Fixed a bug with validating filesizes [wb, 2008-11-25]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2007-06-14]"/>
      </docblock>
      <constant namespace="global" line="33" package="Flourish">
        <name>check</name>
        <full_name>check</full_name>
        <value><![CDATA['fUpload::check']]></value>
      </constant>
      <constant namespace="global" line="34" package="Flourish">
        <name>count</name>
        <full_name>count</full_name>
        <value><![CDATA['fUpload::count']]></value>
      </constant>
      <constant namespace="global" line="35" package="Flourish">
        <name>filter</name>
        <full_name>filter</full_name>
        <value><![CDATA['fUpload::filter']]></value>
      </constant>
      <property final="false" static="false" visibility="private" line="158" namespace="global" package="Sutra">
        <name>$allow_dot_files</name>
        <default><![CDATA[FALSE]]></default>
        <docblock line="153">
          <description><![CDATA[If files starting with `.` can be uploaded]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="153" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="165" namespace="global" package="Sutra">
        <name>$allow_php</name>
        <default><![CDATA[FALSE]]></default>
        <docblock line="160">
          <description><![CDATA[If PHP files can be uploaded]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="160" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="172" namespace="global" package="Sutra">
        <name>$image_dimensions</name>
        <default><![CDATA[array()]]></default>
        <docblock line="167">
          <description><![CDATA[The dimension restrictions for uploaded images]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="167" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="179" namespace="global" package="Sutra">
        <name>$image_ratio</name>
        <default><![CDATA[array()]]></default>
        <docblock line="174">
          <description><![CDATA[The dimension ratio restriction for uploaded images]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="174" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="186" namespace="global" package="Sutra">
        <name>$enable_overwrite</name>
        <default><![CDATA[FALSE]]></default>
        <docblock line="181">
          <description><![CDATA[If existing files of the same name should be overwritten]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="181" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="193" namespace="global" package="Sutra">
        <name>$max_size</name>
        <default><![CDATA[0]]></default>
        <docblock line="188">
          <description><![CDATA[The maximum file size in bytes]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="188" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="200" namespace="global" package="Sutra">
        <name>$mime_type_message</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="195">
          <description><![CDATA[The error message to display if the mime types do not match]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="195" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="207" namespace="global" package="Sutra">
        <name>$mime_types</name>
        <default><![CDATA[array()]]></default>
        <docblock line="202">
          <description><![CDATA[The mime types of files accepted]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="202" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="214" namespace="global" package="Sutra">
        <name>$required</name>
        <default><![CDATA[TRUE]]></default>
        <docblock line="209">
          <description><![CDATA[If the file upload is required]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="209" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="47" package="Flourish">
        <name>check</name>
        <full_name>check</full_name>
        <docblock line="38">
          <description><![CDATA[Checks to see if the field specified is a valid file upload field]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="38" name="throws" description="If `$throw_exception` is `TRUE` and the request was not a POST or the content type is not multipart/form-data" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="38" name="param" description="The field to check" type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="38" name="param" description="If an exception should be thrown when there are issues with the form" type="boolean" variable="$throw_exception">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="38" name="return" description="If the field is a valid file upload field" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="47">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="47">
          <name>$throw_exception</name>
          <default><![CDATA[TRUE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="79" package="Flourish">
        <name>count</name>
        <full_name>count</full_name>
        <docblock line="71">
          <description><![CDATA[Returns the number of files uploaded to a file upload array field]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="71" name="throws" description="If the form is not properly configured for file uploads" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="71" name="param" description="The field to get the number of files for" type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="71" name="return" description="The number of uploaded files" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="79">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="107" package="Flourish">
        <name>compose</name>
        <full_name>compose</full_name>
        <docblock line="99">
          <description><![CDATA[Composes text using fText if loaded]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="99" name="param" description="The message to compose" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="99" name="param" description="A string or number to insert into the message" type="mixed" variable="$component">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="99" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="99" name="return" description="The composed and possible translated message" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="107">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="130" package="Flourish">
        <name>filter</name>
        <full_name>filter</full_name>
        <docblock line="122">
          <description><![CDATA[Removes individual file upload entries from an array of file inputs in `$_FILES` when no file was uploaded]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="122" name="throws" description="If the form is not properly configured for file uploads" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="122" name="param" description="The field to filter" type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="122" name="return" description="The indexes of the files that were uploaded" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="130">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="225" package="Flourish">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="217">
          <description><![CDATA[All requests that hit this method should be requests for callbacks]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="217" name="internal" description=""/>
          <tag line="217" name="param" description="The method to create a callback for" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="217" name="return" description="The callback for the method requested" type="callback">
            <type by_reference="false">callback</type>
          </tag>
        </docblock>
        <argument line="225">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="239" package="Flourish">
        <name>allowDotFiles</name>
        <full_name>allowDotFiles</full_name>
        <docblock line="231">
          <description><![CDATA[Sets the upload class to allow files starting with a `.`]]></description>
          <long-description><![CDATA[<p>Files starting with <code>.</code> may change the behaviour of web servers,
for instance <code>.htaccess</code> files for Apache.</p>]]></long-description>
          <tag line="231" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="250" package="Flourish">
        <name>allowPHP</name>
        <full_name>allowPHP</full_name>
        <docblock line="245">
          <description><![CDATA[Sets the upload class to allow PHP files]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="245" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="261" package="Flourish">
        <name>enableOverwrite</name>
        <full_name>enableOverwrite</full_name>
        <docblock line="256">
          <description><![CDATA[Set the class to overwrite existing files in the destination directory instead of renaming the file]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="256" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="274" package="Flourish">
        <name>extractFileUploadArray</name>
        <full_name>extractFileUploadArray</full_name>
        <docblock line="267">
          <description><![CDATA[Returns the `$_FILES` array for the field specified.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="267" name="param" description="The field to get the file array for" type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="267" name="param" description="If the field is an array file upload field, use this to specify which array index to return" type="mixed" variable="$index">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="267" name="return" description="The file info array from `$_FILES`" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="274">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="274">
          <name>$index</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="316" package="Flourish">
        <name>move</name>
        <full_name>move</full_name>
        <docblock line="306">
          <description><![CDATA[Moves an uploaded file from the temp directory to a permanent location]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="306" name="throws" description="When the form is not setup for file uploads, the `$directory` is somehow invalid or ::validate() thows an exception" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="306" name="param" description="The directory to upload the file to" type="string|\fDirectory" variable="$directory">
            <type by_reference="false">string</type>
            <type by_reference="false">\fDirectory</type>
          </tag>
          <tag line="306" name="param" description="The file upload field to get the file from" type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="306" name="param" description="If the field was an array file upload field, upload the file corresponding to this index" type="mixed" variable="$index">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="306" name="return" description="An fFile (or fImage) object, or `NULL` if no file was uploaded" type="\fFile|NULL">
            <type by_reference="false">\fFile</type>
            <type by_reference="false">NULL</type>
          </tag>
        </docblock>
        <argument line="316">
          <name>$directory</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="316">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="316">
          <name>$index</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="375" package="Flourish">
        <name>setImageDimensions</name>
        <full_name>setImageDimensions</full_name>
        <docblock line="366">
          <description><![CDATA[Sets the allowable dimensions for an uploaded image]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="366" name="param" description="The minimum width - `0` for no minimum" type="integer" variable="$min_width">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="366" name="param" description="The minimum height - `0` for no minimum" type="integer" variable="$min_height">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="366" name="param" description="The maximum width - `0` for no maximum" type="integer" variable="$max_width">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="366" name="param" description="The maximum height - `0` for no maximum" type="integer" variable="$max_height">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="366" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="375">
          <name>$min_width</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="375">
          <name>$min_height</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="375">
          <name>$max_width</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
        <argument line="375">
          <name>$max_height</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="430" package="Flourish">
        <name>setImageRatio</name>
        <full_name>setImageRatio</full_name>
        <docblock line="422">
          <description><![CDATA[Sets the allowable dimensions for an uploaded image]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="422" name="param" description="The minimum ratio width" type="\numeric" variable="$width">
            <type by_reference="false">\numeric</type>
          </tag>
          <tag line="422" name="param" description="The minimum ratio height" type="\numeric" variable="$height">
            <type by_reference="false">\numeric</type>
          </tag>
          <tag line="422" name="param" description="The dimension that should allow for excess pixels" type="string" variable="$allow_excess_dimension">
            <type by_reference="false">string</type>
          </tag>
          <tag line="422" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="430">
          <name>$width</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="430">
          <name>$height</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="430">
          <name>$allow_excess_dimension</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="482" package="Flourish">
        <name>setMaxSize</name>
        <full_name>setMaxSize</full_name>
        <docblock line="462">
          <description><![CDATA[Sets the maximum size the uploaded file may be]]></description>
          <long-description><![CDATA[<p>This method should be used with the
[http://php.net/file-upload.post-method <code>MAX_FILE_SIZE</code>] hidden form
input since the hidden form input will reject a file that is too large
before the file completely uploads, while this method will wait until the
whole file has been uploaded. This method should always be used since it
is very easy for the <code>MAX_FILE_SIZE</code> post field to be manipulated on the
client side.</p>

<p>This method can only further restrict the
[http://php.net/upload_max_filesize <code>upload_max_filesize</code> ini setting],
it can not increase that setting. <code>upload_max_filesize</code> must be set
in the php.ini (or an Apache configuration) since file uploads are
handled before the request is handed off to PHP.</p>]]></long-description>
          <tag line="462" name="param" description="The maximum file size (e.g. `1MB`, `200K`, `10.5M`) - `0` for no limit" type="string" variable="$size">
            <type by_reference="false">string</type>
          </tag>
          <tag line="462" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="482">
          <name>$size</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="509" package="Flourish">
        <name>setMIMETypes</name>
        <full_name>setMIMETypes</full_name>
        <docblock line="502">
          <description><![CDATA[Sets the file mime types accepted]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="502" name="param" description="The mime types to accept" type="array" variable="$mime_types">
            <type by_reference="false">array</type>
          </tag>
          <tag line="502" name="param" description="The message to display if the uploaded file is not one of the mime type specified" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="502" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="509">
          <name>$mime_types</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="509">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="521" package="Flourish">
        <name>setOptional</name>
        <full_name>setOptional</full_name>
        <docblock line="516">
          <description><![CDATA[Sets the file upload to be optional instead of required]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="516" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="539" package="Flourish">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="527">
          <description><![CDATA[Validates the uploaded file, ensuring a file was actually uploaded and that is matched the restrictions put in place]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="527" name="throws" description="When the form is not configured for file uploads, no file is uploaded or the uploaded file violates the options set for this object" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="527" name="param" description="The field the file was uploaded through" type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="527" name="param" description="If the field was an array of file uploads, this specifies which one to validate" type="mixed" variable="$index">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="527" name="param" description="If any validation error should be returned as a string instead of being thrown as an fValidationException" type="boolean" variable="$return_message">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="527" name="param" description="|$field" type="string" variable="">
            <type by_reference="false">string</type>
          </tag>
          <tag line="527" name="param" description="|$return_message" type="boolean" variable="">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="527" name="return" description="If `$return_message` is not `TRUE` or if no error occurs, `NULL`, otherwise a string error message" type="NULL|string">
            <type by_reference="false">NULL</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="539">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="539">
          <name>$index</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="539">
          <name>$return_message</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="570" package="Flourish">
        <name>validateField</name>
        <full_name>validateField</full_name>
        <docblock line="564">
          <description><![CDATA[Validates a $_FILES array against the upload configuration]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="564" name="param" description="The $_FILES array for a single file" type="array" variable="$file_array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="564" name="return" description="The validation error message" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="570">
          <name>$file_array</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fUpload.php</error>
      <notice line="99" code="50013">Parameter $component could not be found in compose()</notice>
      <notice line="99" code="50013">Parameter  could not be found in compose()</notice>
      <notice line="527" code="50013">Parameter  could not be found in validate()</notice>
      <notice line="527" code="50013">Parameter  could not be found in validate()</notice>
    </parse_markers>
  </file>
  <file path="php/flourish/fUnexpectedException.php" hash="359c28eae27eb94a8cc3d1d5571c091b" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="16" package="Flourish">
      <extends>\fException</extends>
      <name>fUnexpectedException</name>
      <full_name>\fUnexpectedException</full_name>
      <docblock line="2">
        <description><![CDATA[An exception that should probably not be handled by the display code, fCore::enableExceptionHandler() is recommended]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2011 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fUnexpectedException" link="http://flourishlib.com/fUnexpectedException"/>
        <tag line="2" name="version" description="1.0.0b2"/>
        <tag line="2" name="changes" description="1.0.0b2  Updated ::printMessage() to use an ASCII dash to prevent encoding issues when an output encoding is not specified [wb, 2011-05-09]"/>
        <tag line="2" name="changes" description="1.0.0b   The initial implementation [wb, 2007-06-14]"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="23" package="Flourish">
        <name>printMessage</name>
        <full_name>printMessage</full_name>
        <docblock line="18">
          <description><![CDATA[Prints out a generic error message inside of a `div` with the class being `'exception {exception_class_name}'`]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="18" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fUnexpectedException.php</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fMoney.php" hash="412583388018e82c4115fa0cba9ceb51" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="17" package="Flourish">
      <extends/>
      <name>fMoney</name>
      <full_name>\fMoney</full_name>
      <docblock line="2">
        <description><![CDATA[Represents a monetary value - USD are supported by default and others can be added via ::defineCurrency()]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2008-2010 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fMoney" link="http://flourishlib.com/fMoney"/>
        <tag line="2" name="version" description="1.0.0b3"/>
        <tag line="2" name="changes" description="1.0.0b3  Added the `$remove_zero_fraction` parameter to ::format() [wb, 2010-06-09]"/>
        <tag line="2" name="changes" description="1.0.0b2  Fixed a bug with calling ::format() when a format callback is set, fixed `NULL` `$element` handling in ::getCurrencyInfo() [wb, 2009-03-24]"/>
        <tag line="2" name="changes" description="1.0.0b   The initial implementation [wb, 2008-08-10]"/>
      </docblock>
      <constant namespace="global" line="20" package="Flourish">
        <name>defineCurrency</name>
        <full_name>defineCurrency</full_name>
        <value><![CDATA['fMoney::defineCurrency']]></value>
      </constant>
      <constant namespace="global" line="21" package="Flourish">
        <name>getCurrencies</name>
        <full_name>getCurrencies</full_name>
        <value><![CDATA['fMoney::getCurrencies']]></value>
      </constant>
      <constant namespace="global" line="22" package="Flourish">
        <name>getCurrencyInfo</name>
        <full_name>getCurrencyInfo</full_name>
        <value><![CDATA['fMoney::getCurrencyInfo']]></value>
      </constant>
      <constant namespace="global" line="23" package="Flourish">
        <name>getDefaultCurrency</name>
        <full_name>getDefaultCurrency</full_name>
        <value><![CDATA['fMoney::getDefaultCurrency']]></value>
      </constant>
      <constant namespace="global" line="24" package="Flourish">
        <name>registerFormatCallback</name>
        <full_name>registerFormatCallback</full_name>
        <value><![CDATA['fMoney::registerFormatCallback']]></value>
      </constant>
      <constant namespace="global" line="25" package="Flourish">
        <name>registerUnformatCallback</name>
        <full_name>registerUnformatCallback</full_name>
        <value><![CDATA['fMoney::registerUnformatCallback']]></value>
      </constant>
      <constant namespace="global" line="26" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <value><![CDATA['fMoney::reset']]></value>
      </constant>
      <constant namespace="global" line="27" package="Flourish">
        <name>setDefaultCurrency</name>
        <full_name>setDefaultCurrency</full_name>
        <value><![CDATA['fMoney::setDefaultCurrency']]></value>
      </constant>
      <property final="false" static="true" visibility="private" line="35" namespace="global" package="Sutra">
        <name>$currencies</name>
        <default><![CDATA[array('USD' => array('name' => 'United States Dollar', 'symbol' => '$', 'precision' => 2, 'value' => '1.00000000'))]]></default>
        <docblock line="30">
          <description><![CDATA[The number of decimal places to use for values]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="30" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="49" namespace="global" package="Sutra">
        <name>$default_currency</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="44">
          <description><![CDATA[The ISO code (three letters, e.g.]]></description>
          <long-description><![CDATA[<p>'USD') for the default currency</p>]]></long-description>
          <tag line="44" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="56" namespace="global" package="Sutra">
        <name>$format_callback</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="51">
          <description><![CDATA[A callback to process all money values through]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="51" name="var" description="" type="callback">
            <type by_reference="false">callback</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="63" namespace="global" package="Sutra">
        <name>$unformat_callback</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="58">
          <description><![CDATA[A callback to remove money formatting and return a decimal number]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="58" name="var" description="" type="callback">
            <type by_reference="false">callback</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="220" namespace="global" package="Sutra">
        <name>$amount</name>
        <default><![CDATA[]]></default>
        <docblock line="215">
          <description><![CDATA[The raw monetary value]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="215" name="var" description="" type="\fNumber">
            <type by_reference="false">\fNumber</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="227" namespace="global" package="Sutra">
        <name>$currency</name>
        <default><![CDATA[]]></default>
        <docblock line="222">
          <description><![CDATA[The ISO code or the currency of this value]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="222" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="76" package="Flourish">
        <name>defineCurrency</name>
        <full_name>defineCurrency</full_name>
        <docblock line="66">
          <description><![CDATA[Allows adding a new currency, or modifying an existing one]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="66" name="param" description="The ISO code (three letters, e.g. `'USD'`) for the currency" type="string" variable="$iso_code">
            <type by_reference="false">string</type>
          </tag>
          <tag line="66" name="param" description="The name of the currency" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="66" name="param" description="The symbol for the currency" type="string" variable="$symbol">
            <type by_reference="false">string</type>
          </tag>
          <tag line="66" name="param" description="The number of digits after the decimal separator to store" type="integer" variable="$precision">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="66" name="param" description="The value of the currency relative to some common standard between all currencies" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="66" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="76">
          <name>$iso_code</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="76">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="76">
          <name>$symbol</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="76">
          <name>$precision</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="76">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="92" package="Flourish">
        <name>getCurrencies</name>
        <full_name>getCurrencies</full_name>
        <docblock line="87">
          <description><![CDATA[Lists all of the defined currencies]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="87" name="return" description="The 3 letter ISO codes for all of the defined currencies" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="105" package="Flourish">
        <name>getCurrencyInfo</name>
        <full_name>getCurrencyInfo</full_name>
        <docblock line="98">
          <description><![CDATA[Allows retrieving information about a currency]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="98" name="param" description="The ISO code (three letters, e.g. `'USD'`) for the currency" type="string" variable="$iso_code">
            <type by_reference="false">string</type>
          </tag>
          <tag line="98" name="param" description="The element to retrieve: `'name'`, `'symbol'`, `'precision'`, `'value'`" type="string" variable="$element">
            <type by_reference="false">string</type>
          </tag>
          <tag line="98" name="return" description="An associative array of the currency info, or the element specified" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="105">
          <name>$iso_code</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="105">
          <name>$element</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="136" package="Flourish">
        <name>getDefaultCurrency</name>
        <full_name>getDefaultCurrency</full_name>
        <docblock line="131">
          <description><![CDATA[Gets the default currency]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="131" name="return" description="The ISO code of the default currency" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="148" package="Flourish">
        <name>registerFormatCallback</name>
        <full_name>registerFormatCallback</full_name>
        <docblock line="142">
          <description><![CDATA[Allows setting a callback to translate or modify any return values from ::format()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="142" name="param" description="The callback to pass all fNumber objects to. Should accept an fNumber object, a string currency abbreviation and a boolean indicating if a zero-fraction should be removed - it should return a formatted string." type="callback" variable="$callback">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="142" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="148">
          <name>$callback</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="163" package="Flourish">
        <name>registerUnformatCallback</name>
        <full_name>registerUnformatCallback</full_name>
        <docblock line="157">
          <description><![CDATA[Allows setting a callback to clean any formatted values so they can be passed to fNumber]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="157" name="param" description="The callback to pass formatted strings to. Should accept a formatted string and a currency code and return a string suitable to passing to the fNumber constructor." type="callback" variable="$callback">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="157" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="163">
          <name>$callback</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="179" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="172">
          <description><![CDATA[Resets the configuration of the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="172" name="internal" description=""/>
          <tag line="172" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="201" package="Flourish">
        <name>setDefaultCurrency</name>
        <full_name>setDefaultCurrency</full_name>
        <docblock line="195">
          <description><![CDATA[Sets the default currency to use when creating fMoney objects]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="195" name="param" description="The ISO code (three letters, e.g. `'USD'`) for the new default currency" type="string" variable="$iso_code">
            <type by_reference="false">string</type>
          </tag>
          <tag line="195" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="201">
          <name>$iso_code</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="239" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="230">
          <description><![CDATA[Creates the monetary to represent, with an optional currency]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="230" name="throws" description="When `$amount` is not a valid number/monetary value" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="230" name="param" description="The monetary value to represent, should never be a float since those are imprecise" type="\fNumber|string" variable="$amount">
            <type by_reference="false">\fNumber</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="230" name="param" description="The currency ISO code (three letters, e.g. `'USD'`) for this value" type="string" variable="$currency">
            <type by_reference="false">string</type>
          </tag>
          <tag line="230" name="return" description="" type="\fMoney">
            <type by_reference="false">\fMoney</type>
          </tag>
        </docblock>
        <argument line="239">
          <name>$amount</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="239">
          <name>$currency</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="285" package="Flourish">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="277">
          <description><![CDATA[All requests that hit this method should be requests for callbacks]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="277" name="internal" description=""/>
          <tag line="277" name="param" description="The method to create a callback for" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="277" name="return" description="The callback for the method requested" type="callback">
            <type by_reference="false">callback</type>
          </tag>
        </docblock>
        <argument line="285">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="296" package="Flourish">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="291">
          <description><![CDATA[Returns the monetary value without a currency symbol or thousand separator (e.g.]]></description>
          <long-description><![CDATA[<p><code>2000.12</code>)</p>]]></long-description>
          <tag line="291" name="return" description="The monetary value without currency symbol or thousands separator" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="310" package="Flourish">
        <name>add</name>
        <full_name>add</full_name>
        <docblock line="302">
          <description><![CDATA[Adds the passed monetary value to the current one]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="302" name="throws" description="When `$addend` is not a valid number/monetary value" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="302" name="param" description="The money object to add - a string or integer will be converted to the default currency (if defined)" type="\fMoney|string|integer" variable="$addend">
            <type by_reference="false">\fMoney</type>
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="302" name="return" description="The sum of the monetary values in this currency" type="\fMoney">
            <type by_reference="false">\fMoney</type>
          </tag>
        </docblock>
        <argument line="310">
          <name>$addend</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="333" package="Flourish">
        <name>allocate</name>
        <full_name>allocate</full_name>
        <docblock line="320">
          <description><![CDATA[Splits the current value into multiple parts ensuring that the sum of the results is exactly equal to this amount]]></description>
          <long-description><![CDATA[<p>This method takes two or more parameters. The parameters should each be
fractions that when added together equal 1.</p>]]></long-description>
          <tag line="320" name="throws" description="When one of the ratios is not a number" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="320" name="param" description="The ratio of the first amount to this amount" type="\fNumber|string" variable="$ratio1">
            <type by_reference="false">\fNumber</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="320" name="param" description="The ratio of the second amount to this amount" type="\fNumber|string" variable="$ratio2">
            <type by_reference="false">\fNumber</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="320" name="param" description="..." type="\fNumber|string" variable="">
            <type by_reference="false">\fNumber</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="320" name="return" description="fMoney objects each with the appropriate ratio of the current amount" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="333">
          <name>$ratio1</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="333">
          <name>$ratio2</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="392" package="Flourish">
        <name>convert</name>
        <full_name>convert</full_name>
        <docblock line="386">
          <description><![CDATA[Converts this money amount to another currency]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="386" name="param" description="The ISO code (three letters, e.g. `'USD'`) for the new currency" type="string" variable="$new_currency">
            <type by_reference="false">string</type>
          </tag>
          <tag line="386" name="return" description="A new fMoney object representing this amount in the new currency" type="\fMoney">
            <type by_reference="false">\fMoney</type>
          </tag>
        </docblock>
        <argument line="392">
          <name>$new_currency</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="424" package="Flourish">
        <name>eq</name>
        <full_name>eq</full_name>
        <docblock line="416">
          <description><![CDATA[Checks to see if two monetary values are equal]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="416" name="throws" description="When `$money` is not a valid number/monetary value" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="416" name="param" description="The money object to compare to - a string or integer will be converted to the default currency (if defined)" type="\fMoney|string|integer" variable="$money">
            <type by_reference="false">\fMoney</type>
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="416" name="return" description="If the monetary values are equal" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="424">
          <name>$money</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="437" package="Flourish">
        <name>format</name>
        <full_name>format</full_name>
        <docblock line="431">
          <description><![CDATA[Formats the amount by preceeding the amount with the currency symbol and adding thousands separators]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="431" name="param" description="If `TRUE` and all digits after the decimal place are `0`, the decimal place and all zeros are removed" type="boolean" variable="$remove_zero_fraction">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="431" name="return" description="The formatted (and possibly converted) value" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="437">
          <name>$remove_zero_fraction</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="480" package="Flourish">
        <name>getAmount</name>
        <full_name>getAmount</full_name>
        <docblock line="475">
          <description><![CDATA[Returns the fNumber object representing the amount]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="475" name="return" description="The amount of this monetary value" type="\fNumber">
            <type by_reference="false">\fNumber</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="491" package="Flourish">
        <name>getCurrency</name>
        <full_name>getCurrency</full_name>
        <docblock line="486">
          <description><![CDATA[Returns the currency ISO code]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="486" name="return" description="The currency ISO code (three letters, e.g. `'USD'`)" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="505" package="Flourish">
        <name>gt</name>
        <full_name>gt</full_name>
        <docblock line="497">
          <description><![CDATA[Checks to see if this value is greater than the one passed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="497" name="throws" description="When `$money` is not a valid number/monetary value" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="497" name="param" description="The money object to compare to - a string or integer will be converted to the default currency (if defined)" type="\fMoney|string|integer" variable="$money">
            <type by_reference="false">\fMoney</type>
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="497" name="return" description="If this value is greater than the one passed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="505">
          <name>$money</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="520" package="Flourish">
        <name>gte</name>
        <full_name>gte</full_name>
        <docblock line="512">
          <description><![CDATA[Checks to see if this value is greater than or equal to the one passed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="512" name="throws" description="When `$money` is not a valid number/monetary value" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="512" name="param" description="The money object to compare to - a string or integer will be converted to the default currency (if defined)" type="\fMoney|string|integer" variable="$money">
            <type by_reference="false">\fMoney</type>
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="512" name="return" description="If this value is greater than or equal to the one passed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="520">
          <name>$money</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="535" package="Flourish">
        <name>lt</name>
        <full_name>lt</full_name>
        <docblock line="527">
          <description><![CDATA[Checks to see if this value is less than the one passed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="527" name="throws" description="When `$money` is not a valid number/monetary value" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="527" name="param" description="The money object to compare to - a string or integer will be converted to the default currency (if defined)" type="\fMoney|string|integer" variable="$money">
            <type by_reference="false">\fMoney</type>
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="527" name="return" description="If this value is less than the one passed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="535">
          <name>$money</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="550" package="Flourish">
        <name>lte</name>
        <full_name>lte</full_name>
        <docblock line="542">
          <description><![CDATA[Checks to see if this value is less than or equal to the one passed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="542" name="throws" description="When `$money` is not a valid number/monetary value" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="542" name="param" description="The money object to compare to - a string or integer will be converted to the default currency (if defined)" type="\fMoney|string|integer" variable="$money">
            <type by_reference="false">\fMoney</type>
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="542" name="return" description="If this value is less than or equal to the one passed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="550">
          <name>$money</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="565" package="Flourish">
        <name>makeMoney</name>
        <full_name>makeMoney</full_name>
        <docblock line="557">
          <description><![CDATA[Turns a string into an fMoney object if a default currency is defined]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="557" name="throws" description="When `$money` is not a valid number/monetary value" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="557" name="param" description="The value to convert to an fMoney object" type="\fMoney|string|integer" variable="$money">
            <type by_reference="false">\fMoney</type>
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="557" name="return" description="The converted value" type="\fMoney">
            <type by_reference="false">\fMoney</type>
          </tag>
        </docblock>
        <argument line="565">
          <name>$money</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="602" package="Flourish">
        <name>mul</name>
        <full_name>mul</full_name>
        <docblock line="594">
          <description><![CDATA[Mupltiplies this monetary value times the number passed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="594" name="throws" description="When `$multiplicand` is not a valid number" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="594" name="param" description="The number of times to multiply this ammount - don't use a float since they are imprecise" type="\fNumber|string|integer" variable="$multiplicand">
            <type by_reference="false">\fNumber</type>
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="594" name="return" description="The product of the monetary value and the multiplicand passed" type="\fMoney">
            <type by_reference="false">\fMoney</type>
          </tag>
        </docblock>
        <argument line="602">
          <name>$multiplicand</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="618" package="Flourish">
        <name>sub</name>
        <full_name>sub</full_name>
        <docblock line="610">
          <description><![CDATA[Subtracts the passed monetary value from the current one]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="610" name="throws" description="When `$subtrahend` is not a valid number/monetary value" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="610" name="param" description="The money object to subtract - a string or integer will be converted to the default currency (if defined)" type="\fMoney|string|integer" variable="$subtrahend">
            <type by_reference="false">\fMoney</type>
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="610" name="return" description="The difference of the monetary values in this currency" type="\fMoney">
            <type by_reference="false">\fMoney</type>
          </tag>
        </docblock>
        <argument line="618">
          <name>$subtrahend</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fMoney.php</error>
      <notice line="320" code="50013">Parameter  could not be found in allocate()</notice>
    </parse_markers>
  </file>
  <file path="php/flourish/fUTF8.php" hash="7126bff345c2e1641b244dd40a5ac944" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="34" package="Flourish">
      <extends/>
      <name>fUTF8</name>
      <full_name>\fUTF8</full_name>
      <docblock line="2">
        <description><![CDATA[Provides string functions for UTF-8 strings]]></description>
        <long-description><![CDATA[<p>This class is implemented to provide a UTF-8 version of almost every built-in
PHP string function. For more information about UTF-8, please visit
http://flourishlib.com/docs/UTF-8.</p>]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2008-2012 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fUTF8" link="http://flourishlib.com/fUTF8"/>
        <tag line="2" name="version" description="1.0.0b16"/>
        <tag line="2" name="changes" description="1.0.0b16  Added code to ::clean() to use mbstring if available since recent versions of iconv and `//IGNORE` now return `FALSE` for bad encodings [wb, 2012-09-21]"/>
        <tag line="2" name="changes" description="1.0.0b15  Fixed a bug with using IBM's iconv implementation on AIX [wb, 2011-07-29]"/>
        <tag line="2" name="changes" description="1.0.0b14  Added a workaround for iconv having issues in MAMP 1.9.4+ [wb, 2011-07-26]"/>
        <tag line="2" name="changes" description="1.0.0b13  Fixed notices from being thrown when invalid data is sent to ::clean() [wb, 2011-06-10]"/>
        <tag line="2" name="changes" description="1.0.0b12  Fixed a variable name typo in ::sub() [wb, 2011-05-09]"/>
        <tag line="2" name="changes" description="1.0.0b11  Updated the class to not using phpinfo() to determine the iconv implementation [wb, 2010-11-04]"/>
        <tag line="2" name="changes" description="1.0.0b10  Fixed a bug with capitalizing a lowercase i resulting in a dotted upper-case I [wb, 2010-11-01]"/>
        <tag line="2" name="changes" description="1.0.0b9   Updated class to use fCore::startErrorCapture() instead of `error_reporting()` [wb, 2010-08-09]"/>
        <tag line="2" name="changes" description="1.0.0b8   Removed `e` flag from preg_replace() calls [wb, 2010-06-08]"/>
        <tag line="2" name="changes" description="1.0.0b7   Added the methods ::trim(), ::rtrim() and ::ltrim() [wb, 2010-05-11]"/>
        <tag line="2" name="changes" description="1.0.0b6   Fixed ::clean() to work with PHP installs that use an iconv library that doesn't support //IGNORE [wb, 2010-03-02]"/>
        <tag line="2" name="changes" description="1.0.0b5   Changed ::ucwords() to also uppercase words right after various punctuation [wb, 2009-09-18]"/>
        <tag line="2" name="changes" description="1.0.0b4   Changed replacement values in preg_replace() calls to be properly escaped [wb, 2009-06-11]"/>
        <tag line="2" name="changes" description="1.0.0b3   Fixed a parameter name in ::rpos() from `$search` to `$needle` [wb, 2009-02-06]"/>
        <tag line="2" name="changes" description="1.0.0b2   Fixed a bug in ::explode() with newlines and zero-length delimiters [wb, 2009-02-05]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2008-06-01]"/>
      </docblock>
      <constant namespace="global" line="37" package="Flourish">
        <name>ascii</name>
        <full_name>ascii</full_name>
        <value><![CDATA['fUTF8::ascii']]></value>
      </constant>
      <constant namespace="global" line="38" package="Flourish">
        <name>chr</name>
        <full_name>chr</full_name>
        <value><![CDATA['fUTF8::chr']]></value>
      </constant>
      <constant namespace="global" line="39" package="Flourish">
        <name>clean</name>
        <full_name>clean</full_name>
        <value><![CDATA['fUTF8::clean']]></value>
      </constant>
      <constant namespace="global" line="40" package="Flourish">
        <name>cmp</name>
        <full_name>cmp</full_name>
        <value><![CDATA['fUTF8::cmp']]></value>
      </constant>
      <constant namespace="global" line="41" package="Flourish">
        <name>explode</name>
        <full_name>explode</full_name>
        <value><![CDATA['fUTF8::explode']]></value>
      </constant>
      <constant namespace="global" line="42" package="Flourish">
        <name>icmp</name>
        <full_name>icmp</full_name>
        <value><![CDATA['fUTF8::icmp']]></value>
      </constant>
      <constant namespace="global" line="43" package="Flourish">
        <name>inatcmp</name>
        <full_name>inatcmp</full_name>
        <value><![CDATA['fUTF8::inatcmp']]></value>
      </constant>
      <constant namespace="global" line="44" package="Flourish">
        <name>ipos</name>
        <full_name>ipos</full_name>
        <value><![CDATA['fUTF8::ipos']]></value>
      </constant>
      <constant namespace="global" line="45" package="Flourish">
        <name>ireplace</name>
        <full_name>ireplace</full_name>
        <value><![CDATA['fUTF8::ireplace']]></value>
      </constant>
      <constant namespace="global" line="46" package="Flourish">
        <name>irpos</name>
        <full_name>irpos</full_name>
        <value><![CDATA['fUTF8::irpos']]></value>
      </constant>
      <constant namespace="global" line="47" package="Flourish">
        <name>istr</name>
        <full_name>istr</full_name>
        <value><![CDATA['fUTF8::istr']]></value>
      </constant>
      <constant namespace="global" line="48" package="Flourish">
        <name>len</name>
        <full_name>len</full_name>
        <value><![CDATA['fUTF8::len']]></value>
      </constant>
      <constant namespace="global" line="49" package="Flourish">
        <name>lower</name>
        <full_name>lower</full_name>
        <value><![CDATA['fUTF8::lower']]></value>
      </constant>
      <constant namespace="global" line="50" package="Flourish">
        <name>ltrim</name>
        <full_name>ltrim</full_name>
        <value><![CDATA['fUTF8::ltrim']]></value>
      </constant>
      <constant namespace="global" line="51" package="Flourish">
        <name>natcmp</name>
        <full_name>natcmp</full_name>
        <value><![CDATA['fUTF8::natcmp']]></value>
      </constant>
      <constant namespace="global" line="52" package="Flourish">
        <name>ord</name>
        <full_name>ord</full_name>
        <value><![CDATA['fUTF8::ord']]></value>
      </constant>
      <constant namespace="global" line="53" package="Flourish">
        <name>pad</name>
        <full_name>pad</full_name>
        <value><![CDATA['fUTF8::pad']]></value>
      </constant>
      <constant namespace="global" line="54" package="Flourish">
        <name>pos</name>
        <full_name>pos</full_name>
        <value><![CDATA['fUTF8::pos']]></value>
      </constant>
      <constant namespace="global" line="55" package="Flourish">
        <name>replace</name>
        <full_name>replace</full_name>
        <value><![CDATA['fUTF8::replace']]></value>
      </constant>
      <constant namespace="global" line="56" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <value><![CDATA['fUTF8::reset']]></value>
      </constant>
      <constant namespace="global" line="57" package="Flourish">
        <name>rev</name>
        <full_name>rev</full_name>
        <value><![CDATA['fUTF8::rev']]></value>
      </constant>
      <constant namespace="global" line="58" package="Flourish">
        <name>rpos</name>
        <full_name>rpos</full_name>
        <value><![CDATA['fUTF8::rpos']]></value>
      </constant>
      <constant namespace="global" line="59" package="Flourish">
        <name>rtrim</name>
        <full_name>rtrim</full_name>
        <value><![CDATA['fUTF8::rtrim']]></value>
      </constant>
      <constant namespace="global" line="60" package="Flourish">
        <name>str</name>
        <full_name>str</full_name>
        <value><![CDATA['fUTF8::str']]></value>
      </constant>
      <constant namespace="global" line="61" package="Flourish">
        <name>sub</name>
        <full_name>sub</full_name>
        <value><![CDATA['fUTF8::sub']]></value>
      </constant>
      <constant namespace="global" line="62" package="Flourish">
        <name>trim</name>
        <full_name>trim</full_name>
        <value><![CDATA['fUTF8::trim']]></value>
      </constant>
      <constant namespace="global" line="63" package="Flourish">
        <name>ucfirst</name>
        <full_name>ucfirst</full_name>
        <value><![CDATA['fUTF8::ucfirst']]></value>
      </constant>
      <constant namespace="global" line="64" package="Flourish">
        <name>ucwords</name>
        <full_name>ucwords</full_name>
        <value><![CDATA['fUTF8::ucwords']]></value>
      </constant>
      <constant namespace="global" line="65" package="Flourish">
        <name>upper</name>
        <full_name>upper</full_name>
        <value><![CDATA['fUTF8::upper']]></value>
      </constant>
      <constant namespace="global" line="66" package="Flourish">
        <name>wordwrap</name>
        <full_name>wordwrap</full_name>
        <value><![CDATA['fUTF8::wordwrap']]></value>
      </constant>
      <property final="false" static="true" visibility="private" line="76" namespace="global" package="Sutra">
        <name>$can_ignore_invalid</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="69">
          <description><![CDATA[Depending how things are compiled, NetBSD and Solaris don't support //IGNORE in iconv()]]></description>
          <long-description><![CDATA[<p>If //IGNORE support is not provided strings with invalid characters will be truncated</p>]]></long-description>
          <tag line="69" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="83" namespace="global" package="Sutra">
        <name>$lower_to_upper</name>
        <default><![CDATA[array('a' => 'A', 'b' => 'B', 'c' => 'C', 'd' => 'D', 'e' => 'E', 'f' => 'F', 'g' => 'G', 'h' => 'H', 'i' => 'I', 'j' => 'J', 'k' => 'K', 'l' => 'L', 'm' => 'M', 'n' => 'N', 'o' => 'O', 'p' => 'P', 'q' => 'Q', 'r' => 'R', 's' => 'S', 't' => 'T', 'u' => 'U', 'v' => 'V', 'w' => 'W', 'x' => 'X', 'y' => 'Y', 'z' => 'Z', 'à' => 'À', 'á' => 'Á', 'â' => 'Â', 'ã' => 'Ã', 'ä' => 'Ä', 'å' => 'Å', 'æ' => 'Æ', 'ç' => 'Ç', 'è' => 'È', 'é' => 'É', 'ê' => 'Ê', 'ë' => 'Ë', 'ì' => 'Ì', 'í' => 'Í', 'î' => 'Î', 'ï' => 'Ï', 'ð' => 'Ð', 'ñ' => 'Ñ', 'ò' => 'Ò', 'ó' => 'Ó', 'ô' => 'Ô', 'õ' => 'Õ', 'ö' => 'Ö', 'ø' => 'Ø', 'ù' => 'Ù', 'ú' => 'Ú', 'û' => 'Û', 'ü' => 'Ü', 'ý' => 'Ý', 'þ' => 'Þ', 'ā' => 'Ā', 'ă' => 'Ă', 'ą' => 'Ą', 'ć' => 'Ć', 'ĉ' => 'Ĉ', 'ċ' => 'Ċ', 'č' => 'Č', 'ď' => 'Ď', 'đ' => 'Đ', 'ē' => 'Ē', 'ĕ' => 'Ĕ', 'ė' => 'Ė', 'ę' => 'Ę', 'ě' => 'Ě', 'ĝ' => 'Ĝ', 'ğ' => 'Ğ', 'ġ' => 'Ġ', 'ģ' => 'Ģ', 'ĥ' => 'Ĥ', 'ħ' => 'Ħ', 'ĩ' => 'Ĩ', 'ī' => 'Ī', 'ĭ' => 'Ĭ', 'į' => 'Į', 'ĳ' => 'Ĳ', 'ĵ' => 'Ĵ', 'ķ' => 'Ķ', 'ĺ' => 'Ĺ', 'ļ' => 'Ļ', 'ľ' => 'Ľ', 'ŀ' => 'Ŀ', 'ł' => 'Ł', 'ń' => 'Ń', 'ņ' => 'Ņ', 'ň' => 'Ň', 'ŋ' => 'Ŋ', 'ō' => 'Ō', 'ŏ' => 'Ŏ', 'ő' => 'Ő', 'œ' => 'Œ', 'ŕ' => 'Ŕ', 'ŗ' => 'Ŗ', 'ř' => 'Ř', 'ś' => 'Ś', 'ŝ' => 'Ŝ', 'ş' => 'Ş', 'š' => 'Š', 'ţ' => 'Ţ', 'ť' => 'Ť', 'ŧ' => 'Ŧ', 'ũ' => 'Ũ', 'ū' => 'Ū', 'ŭ' => 'Ŭ', 'ů' => 'Ů', 'ű' => 'Ű', 'ų' => 'Ų', 'ŵ' => 'Ŵ', 'ŷ' => 'Ŷ', 'ÿ' => 'Ÿ', 'ź' => 'Ź', 'ż' => 'Ż', 'ž' => 'Ž', 'ɓ' => 'Ɓ', 'ƃ' => 'Ƃ', 'ƅ' => 'Ƅ', 'ɔ' => 'Ɔ', 'ƈ' => 'Ƈ', 'ɗ' => 'Ɗ', 'ƌ' => 'Ƌ', 'ɘ' => 'Ǝ', 'ə' => 'Ə', 'ɛ' => 'Ɛ', 'ƒ' => 'Ƒ', 'ɠ' => 'Ɠ', 'ɣ' => 'Ɣ', 'ɩ' => 'Ɩ', 'ɨ' => 'Ɨ', 'ƙ' => 'Ƙ', 'ɯ' => 'Ɯ', 'ɲ' => 'Ɲ', 'ɵ' => 'Ɵ', 'ơ' => 'Ơ', 'ƣ' => 'Ƣ', 'ƥ' => 'Ƥ', 'ƨ' => 'Ƨ', 'ʃ' => 'Ʃ', 'ƭ' => 'Ƭ', 'ʈ' => 'Ʈ', 'ư' => 'Ư', 'ʊ' => 'Ʊ', 'ʋ' => 'Ʋ', 'ƴ' => 'Ƴ', 'ƶ' => 'Ƶ', 'ʒ' => 'Ʒ', 'ƹ' => 'Ƹ', 'ƽ' => 'Ƽ', 'ǆ' => 'Ǆ', 'ǆ' => 'ǅ', 'ǉ' => 'Ǉ', 'ǉ' => 'ǈ', 'ǌ' => 'Ǌ', 'ǌ' => 'ǋ', 'ǎ' => 'Ǎ', 'ǐ' => 'Ǐ', 'ǒ' => 'Ǒ', 'ǔ' => 'Ǔ', 'ǖ' => 'Ǖ', 'ǘ' => 'Ǘ', 'ǚ' => 'Ǚ', 'ǜ' => 'Ǜ', 'ǟ' => 'Ǟ', 'ǡ' => 'Ǡ', 'ǣ' => 'Ǣ', 'ǥ' => 'Ǥ', 'ǧ' => 'Ǧ', 'ǩ' => 'Ǩ', 'ǫ' => 'Ǫ', 'ǭ' => 'Ǭ', 'ǯ' => 'Ǯ', 'ǳ' => 'Ǳ', 'ǵ' => 'Ǵ', 'ǻ' => 'Ǻ', 'ǽ' => 'Ǽ', 'ǿ' => 'Ǿ', 'ȁ' => 'Ȁ', 'ȃ' => 'Ȃ', 'ȅ' => 'Ȅ', 'ȇ' => 'Ȇ', 'ȉ' => 'Ȉ', 'ȋ' => 'Ȋ', 'ȍ' => 'Ȍ', 'ȏ' => 'Ȏ', 'ȑ' => 'Ȑ', 'ȓ' => 'Ȓ', 'ȕ' => 'Ȕ', 'ȗ' => 'Ȗ', 'ά' => 'Ά', 'έ' => 'Έ', 'ή' => 'Ή', 'ί' => 'Ί', 'ό' => 'Ό', 'ύ' => 'Ύ', 'ώ' => 'Ώ', 'α' => 'Α', 'β' => 'Β', 'γ' => 'Γ', 'δ' => 'Δ', 'ε' => 'Ε', 'ζ' => 'Ζ', 'η' => 'Η', 'θ' => 'Θ', 'ι' => 'Ι', 'κ' => 'Κ', 'λ' => 'Λ', 'μ' => 'Μ', 'ν' => 'Ν', 'ξ' => 'Ξ', 'ο' => 'Ο', 'π' => 'Π', 'ρ' => 'Ρ', 'σ' => 'Σ', 'τ' => 'Τ', 'υ' => 'Υ', 'φ' => 'Φ', 'χ' => 'Χ', 'ψ' => 'Ψ', 'ω' => 'Ω', 'ϊ' => 'Ϊ', 'ϋ' => 'Ϋ', 'ϣ' => 'Ϣ', 'ϥ' => 'Ϥ', 'ϧ' => 'Ϧ', 'ϩ' => 'Ϩ', 'ϫ' => 'Ϫ', 'ϭ' => 'Ϭ', 'ϯ' => 'Ϯ', 'ё' => 'Ё', 'ђ' => 'Ђ', 'ѓ' => 'Ѓ', 'є' => 'Є', 'ѕ' => 'Ѕ', 'і' => 'І', 'ї' => 'Ї', 'ј' => 'Ј', 'љ' => 'Љ', 'њ' => 'Њ', 'ћ' => 'Ћ', 'ќ' => 'Ќ', 'ў' => 'Ў', 'џ' => 'Џ', 'а' => 'А', 'б' => 'Б', 'в' => 'В', 'г' => 'Г', 'д' => 'Д', 'е' => 'Е', 'ж' => 'Ж', 'з' => 'З', 'и' => 'И', 'й' => 'Й', 'к' => 'К', 'л' => 'Л', 'м' => 'М', 'н' => 'Н', 'о' => 'О', 'п' => 'П', 'р' => 'Р', 'с' => 'С', 'т' => 'Т', 'у' => 'У', 'ф' => 'Ф', 'х' => 'Х', 'ц' => 'Ц', 'ч' => 'Ч', 'ш' => 'Ш', 'щ' => 'Щ', 'ъ' => 'Ъ', 'ы' => 'Ы', 'ь' => 'Ь', 'э' => 'Э', 'ю' => 'Ю', 'я' => 'Я', 'ѡ' => 'Ѡ', 'ѣ' => 'Ѣ', 'ѥ' => 'Ѥ', 'ѧ' => 'Ѧ', 'ѩ' => 'Ѩ', 'ѫ' => 'Ѫ', 'ѭ' => 'Ѭ', 'ѯ' => 'Ѯ', 'ѱ' => 'Ѱ', 'ѳ' => 'Ѳ', 'ѵ' => 'Ѵ', 'ѷ' => 'Ѷ', 'ѹ' => 'Ѹ', 'ѻ' => 'Ѻ', 'ѽ' => 'Ѽ', 'ѿ' => 'Ѿ', 'ҁ' => 'Ҁ', 'ґ' => 'Ґ', 'ғ' => 'Ғ', 'ҕ' => 'Ҕ', 'җ' => 'Җ', 'ҙ' => 'Ҙ', 'қ' => 'Қ', 'ҝ' => 'Ҝ', 'ҟ' => 'Ҟ', 'ҡ' => 'Ҡ', 'ң' => 'Ң', 'ҥ' => 'Ҥ', 'ҧ' => 'Ҧ', 'ҩ' => 'Ҩ', 'ҫ' => 'Ҫ', 'ҭ' => 'Ҭ', 'ү' => 'Ү', 'ұ' => 'Ұ', 'ҳ' => 'Ҳ', 'ҵ' => 'Ҵ', 'ҷ' => 'Ҷ', 'ҹ' => 'Ҹ', 'һ' => 'Һ', 'ҽ' => 'Ҽ', 'ҿ' => 'Ҿ', 'ӂ' => 'Ӂ', 'ӄ' => 'Ӄ', 'ӈ' => 'Ӈ', 'ӌ' => 'Ӌ', 'ӑ' => 'Ӑ', 'ӓ' => 'Ӓ', 'ӕ' => 'Ӕ', 'ӗ' => 'Ӗ', 'ә' => 'Ә', 'ӛ' => 'Ӛ', 'ӝ' => 'Ӝ', 'ӟ' => 'Ӟ', 'ӡ' => 'Ӡ', 'ӣ' => 'Ӣ', 'ӥ' => 'Ӥ', 'ӧ' => 'Ӧ', 'ө' => 'Ө', 'ӫ' => 'Ӫ', 'ӯ' => 'Ӯ', 'ӱ' => 'Ӱ', 'ӳ' => 'Ӳ', 'ӵ' => 'Ӵ', 'ӹ' => 'Ӹ', 'ա' => 'Ա', 'բ' => 'Բ', 'գ' => 'Գ', 'դ' => 'Դ', 'ե' => 'Ե', 'զ' => 'Զ', 'է' => 'Է', 'ը' => 'Ը', 'թ' => 'Թ', 'ժ' => 'Ժ', 'ի' => 'Ի', 'լ' => 'Լ', 'խ' => 'Խ', 'ծ' => 'Ծ', 'կ' => 'Կ', 'հ' => 'Հ', 'ձ' => 'Ձ', 'ղ' => 'Ղ', 'ճ' => 'Ճ', 'մ' => 'Մ', 'յ' => 'Յ', 'ն' => 'Ն', 'շ' => 'Շ', 'ո' => 'Ո', 'չ' => 'Չ', 'պ' => 'Պ', 'ջ' => 'Ջ', 'ռ' => 'Ռ', 'ս' => 'Ս', 'վ' => 'Վ', 'տ' => 'Տ', 'ր' => 'Ր', 'ց' => 'Ց', 'ւ' => 'Ւ', 'փ' => 'Փ', 'ք' => 'Ք', 'օ' => 'Օ', 'ֆ' => 'Ֆ', 'ა' => 'Ⴀ', 'ბ' => 'Ⴁ', 'გ' => 'Ⴂ', 'დ' => 'Ⴃ', 'ე' => 'Ⴄ', 'ვ' => 'Ⴅ', 'ზ' => 'Ⴆ', 'თ' => 'Ⴇ', 'ი' => 'Ⴈ', 'კ' => 'Ⴉ', 'ლ' => 'Ⴊ', 'მ' => 'Ⴋ', 'ნ' => 'Ⴌ', 'ო' => 'Ⴍ', 'პ' => 'Ⴎ', 'ჟ' => 'Ⴏ', 'რ' => 'Ⴐ', 'ს' => 'Ⴑ', 'ტ' => 'Ⴒ', 'უ' => 'Ⴓ', 'ფ' => 'Ⴔ', 'ქ' => 'Ⴕ', 'ღ' => 'Ⴖ', 'ყ' => 'Ⴗ', 'შ' => 'Ⴘ', 'ჩ' => 'Ⴙ', 'ც' => 'Ⴚ', 'ძ' => 'Ⴛ', 'წ' => 'Ⴜ', 'ჭ' => 'Ⴝ', 'ხ' => 'Ⴞ', 'ჯ' => 'Ⴟ', 'ჰ' => 'Ⴠ', 'ჱ' => 'Ⴡ', 'ჲ' => 'Ⴢ', 'ჳ' => 'Ⴣ', 'ჴ' => 'Ⴤ', 'ჵ' => 'Ⴥ', 'ḁ' => 'Ḁ', 'ḃ' => 'Ḃ', 'ḅ' => 'Ḅ', 'ḇ' => 'Ḇ', 'ḉ' => 'Ḉ', 'ḋ' => 'Ḋ', 'ḍ' => 'Ḍ', 'ḏ' => 'Ḏ', 'ḑ' => 'Ḑ', 'ḓ' => 'Ḓ', 'ḕ' => 'Ḕ', 'ḗ' => 'Ḗ', 'ḙ' => 'Ḙ', 'ḛ' => 'Ḛ', 'ḝ' => 'Ḝ', 'ḟ' => 'Ḟ', 'ḡ' => 'Ḡ', 'ḣ' => 'Ḣ', 'ḥ' => 'Ḥ', 'ḧ' => 'Ḧ', 'ḩ' => 'Ḩ', 'ḫ' => 'Ḫ', 'ḭ' => 'Ḭ', 'ḯ' => 'Ḯ', 'ḱ' => 'Ḱ', 'ḳ' => 'Ḳ', 'ḵ' => 'Ḵ', 'ḷ' => 'Ḷ', 'ḹ' => 'Ḹ', 'ḻ' => 'Ḻ', 'ḽ' => 'Ḽ', 'ḿ' => 'Ḿ', 'ṁ' => 'Ṁ', 'ṃ' => 'Ṃ', 'ṅ' => 'Ṅ', 'ṇ' => 'Ṇ', 'ṉ' => 'Ṉ', 'ṋ' => 'Ṋ', 'ṍ' => 'Ṍ', 'ṏ' => 'Ṏ', 'ṑ' => 'Ṑ', 'ṓ' => 'Ṓ', 'ṕ' => 'Ṕ', 'ṗ' => 'Ṗ', 'ṙ' => 'Ṙ', 'ṛ' => 'Ṛ', 'ṝ' => 'Ṝ', 'ṟ' => 'Ṟ', 'ṡ' => 'Ṡ', 'ṣ' => 'Ṣ', 'ṥ' => 'Ṥ', 'ṧ' => 'Ṧ', 'ṩ' => 'Ṩ', 'ṫ' => 'Ṫ', 'ṭ' => 'Ṭ', 'ṯ' => 'Ṯ', 'ṱ' => 'Ṱ', 'ṳ' => 'Ṳ', 'ṵ' => 'Ṵ', 'ṷ' => 'Ṷ', 'ṹ' => 'Ṹ', 'ṻ' => 'Ṻ', 'ṽ' => 'Ṽ', 'ṿ' => 'Ṿ', 'ẁ' => 'Ẁ', 'ẃ' => 'Ẃ', 'ẅ' => 'Ẅ', 'ẇ' => 'Ẇ', 'ẉ' => 'Ẉ', 'ẋ' => 'Ẋ', 'ẍ' => 'Ẍ', 'ẏ' => 'Ẏ', 'ẑ' => 'Ẑ', 'ẓ' => 'Ẓ', 'ẕ' => 'Ẕ', 'ạ' => 'Ạ', 'ả' => 'Ả', 'ấ' => 'Ấ', 'ầ' => 'Ầ', 'ẩ' => 'Ẩ', 'ẫ' => 'Ẫ', 'ậ' => 'Ậ', 'ắ' => 'Ắ', 'ằ' => 'Ằ', 'ẳ' => 'Ẳ', 'ẵ' => 'Ẵ', 'ặ' => 'Ặ', 'ẹ' => 'Ẹ', 'ẻ' => 'Ẻ', 'ẽ' => 'Ẽ', 'ế' => 'Ế', 'ề' => 'Ề', 'ể' => 'Ể', 'ễ' => 'Ễ', 'ệ' => 'Ệ', 'ỉ' => 'Ỉ', 'ị' => 'Ị', 'ọ' => 'Ọ', 'ỏ' => 'Ỏ', 'ố' => 'Ố', 'ồ' => 'Ồ', 'ổ' => 'Ổ', 'ỗ' => 'Ỗ', 'ộ' => 'Ộ', 'ớ' => 'Ớ', 'ờ' => 'Ờ', 'ở' => 'Ở', 'ỡ' => 'Ỡ', 'ợ' => 'Ợ', 'ụ' => 'Ụ', 'ủ' => 'Ủ', 'ứ' => 'Ứ', 'ừ' => 'Ừ', 'ử' => 'Ử', 'ữ' => 'Ữ', 'ự' => 'Ự', 'ỳ' => 'Ỳ', 'ỵ' => 'Ỵ', 'ỷ' => 'Ỷ', 'ỹ' => 'Ỹ', 'ἀ' => 'Ἀ', 'ἁ' => 'Ἁ', 'ἂ' => 'Ἂ', 'ἃ' => 'Ἃ', 'ἄ' => 'Ἄ', 'ἅ' => 'Ἅ', 'ἆ' => 'Ἆ', 'ἇ' => 'Ἇ', 'ἐ' => 'Ἐ', 'ἑ' => 'Ἑ', 'ἒ' => 'Ἒ', 'ἓ' => 'Ἓ', 'ἔ' => 'Ἔ', 'ἕ' => 'Ἕ', 'ἠ' => 'Ἠ', 'ἡ' => 'Ἡ', 'ἢ' => 'Ἢ', 'ἣ' => 'Ἣ', 'ἤ' => 'Ἤ', 'ἥ' => 'Ἥ', 'ἦ' => 'Ἦ', 'ἧ' => 'Ἧ', 'ἰ' => 'Ἰ', 'ἱ' => 'Ἱ', 'ἲ' => 'Ἲ', 'ἳ' => 'Ἳ', 'ἴ' => 'Ἴ', 'ἵ' => 'Ἵ', 'ἶ' => 'Ἶ', 'ἷ' => 'Ἷ', 'ὀ' => 'Ὀ', 'ὁ' => 'Ὁ', 'ὂ' => 'Ὂ', 'ὃ' => 'Ὃ', 'ὄ' => 'Ὄ', 'ὅ' => 'Ὅ', 'ὑ' => 'Ὑ', 'ὓ' => 'Ὓ', 'ὕ' => 'Ὕ', 'ὗ' => 'Ὗ', 'ὠ' => 'Ὠ', 'ὡ' => 'Ὡ', 'ὢ' => 'Ὢ', 'ὣ' => 'Ὣ', 'ὤ' => 'Ὤ', 'ὥ' => 'Ὥ', 'ὦ' => 'Ὦ', 'ὧ' => 'Ὧ', 'ᾀ' => 'ᾈ', 'ᾁ' => 'ᾉ', 'ᾂ' => 'ᾊ', 'ᾃ' => 'ᾋ', 'ᾄ' => 'ᾌ', 'ᾅ' => 'ᾍ', 'ᾆ' => 'ᾎ', 'ᾇ' => 'ᾏ', 'ᾐ' => 'ᾘ', 'ᾑ' => 'ᾙ', 'ᾒ' => 'ᾚ', 'ᾓ' => 'ᾛ', 'ᾔ' => 'ᾜ', 'ᾕ' => 'ᾝ', 'ᾖ' => 'ᾞ', 'ᾗ' => 'ᾟ', 'ᾠ' => 'ᾨ', 'ᾡ' => 'ᾩ', 'ᾢ' => 'ᾪ', 'ᾣ' => 'ᾫ', 'ᾤ' => 'ᾬ', 'ᾥ' => 'ᾭ', 'ᾦ' => 'ᾮ', 'ᾧ' => 'ᾯ', 'ᾰ' => 'Ᾰ', 'ᾱ' => 'Ᾱ', 'ῐ' => 'Ῐ', 'ῑ' => 'Ῑ', 'ῠ' => 'Ῠ', 'ῡ' => 'Ῡ', 'ⓐ' => 'Ⓐ', 'ⓑ' => 'Ⓑ', 'ⓒ' => 'Ⓒ', 'ⓓ' => 'Ⓓ', 'ⓔ' => 'Ⓔ', 'ⓕ' => 'Ⓕ', 'ⓖ' => 'Ⓖ', 'ⓗ' => 'Ⓗ', 'ⓘ' => 'Ⓘ', 'ⓙ' => 'Ⓙ', 'ⓚ' => 'Ⓚ', 'ⓛ' => 'Ⓛ', 'ⓜ' => 'Ⓜ', 'ⓝ' => 'Ⓝ', 'ⓞ' => 'Ⓞ', 'ⓟ' => 'Ⓟ', 'ⓠ' => 'Ⓠ', 'ⓡ' => 'Ⓡ', 'ⓢ' => 'Ⓢ', 'ⓣ' => 'Ⓣ', 'ⓤ' => 'Ⓤ', 'ⓥ' => 'Ⓥ', 'ⓦ' => 'Ⓦ', 'ⓧ' => 'Ⓧ', 'ⓨ' => 'Ⓨ', 'ⓩ' => 'Ⓩ', 'ａ' => 'Ａ', 'ｂ' => 'Ｂ', 'ｃ' => 'Ｃ', 'ｄ' => 'Ｄ', 'ｅ' => 'Ｅ', 'ｆ' => 'Ｆ', 'ｇ' => 'Ｇ', 'ｈ' => 'Ｈ', 'ｉ' => 'Ｉ', 'ｊ' => 'Ｊ', 'ｋ' => 'Ｋ', 'ｌ' => 'Ｌ', 'ｍ' => 'Ｍ', 'ｎ' => 'Ｎ', 'ｏ' => 'Ｏ', 'ｐ' => 'Ｐ', 'ｑ' => 'Ｑ', 'ｒ' => 'Ｒ', 'ｓ' => 'Ｓ', 'ｔ' => 'Ｔ', 'ｕ' => 'Ｕ', 'ｖ' => 'Ｖ', 'ｗ' => 'Ｗ', 'ｘ' => 'Ｘ', 'ｙ' => 'Ｙ', 'ｚ' => 'Ｚ')]]></default>
        <docblock line="78">
          <description><![CDATA[All lowercase UTF-8 characters mapped to uppercase characters]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="78" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="203" namespace="global" package="Sutra">
        <name>$mb_lower_to_upper_fix</name>
        <default><![CDATA[array('ɘ' => 'Ǝ', 'ǲ' => 'Ǳ', 'ა' => 'Ⴀ', 'ბ' => 'Ⴁ', 'გ' => 'Ⴂ', 'დ' => 'Ⴃ', 'ე' => 'Ⴄ', 'ვ' => 'Ⴅ', 'ზ' => 'Ⴆ', 'თ' => 'Ⴇ', 'ი' => 'Ⴈ', 'კ' => 'Ⴉ', 'ლ' => 'Ⴊ', 'მ' => 'Ⴋ', 'ნ' => 'Ⴌ', 'ო' => 'Ⴍ', 'პ' => 'Ⴎ', 'ჟ' => 'Ⴏ', 'რ' => 'Ⴐ', 'ს' => 'Ⴑ', 'ტ' => 'Ⴒ', 'უ' => 'Ⴓ', 'ფ' => 'Ⴔ', 'ქ' => 'Ⴕ', 'ღ' => 'Ⴖ', 'ყ' => 'Ⴗ', 'შ' => 'Ⴘ', 'ჩ' => 'Ⴙ', 'ც' => 'Ⴚ', 'ძ' => 'Ⴛ', 'წ' => 'Ⴜ', 'ჭ' => 'Ⴝ', 'ხ' => 'Ⴞ', 'ჯ' => 'Ⴟ', 'ჰ' => 'Ⴠ', 'ჱ' => 'Ⴡ', 'ჲ' => 'Ⴢ', 'ჳ' => 'Ⴣ', 'ჴ' => 'Ⴤ', 'ჵ' => 'Ⴥ', 'ⓐ' => 'Ⓐ', 'ⓑ' => 'Ⓑ', 'ⓒ' => 'Ⓒ', 'ⓓ' => 'Ⓓ', 'ⓔ' => 'Ⓔ', 'ⓕ' => 'Ⓕ', 'ⓖ' => 'Ⓖ', 'ⓗ' => 'Ⓗ', 'ⓘ' => 'Ⓘ', 'ⓙ' => 'Ⓙ', 'ⓚ' => 'Ⓚ', 'ⓛ' => 'Ⓛ', 'ⓜ' => 'Ⓜ', 'ⓝ' => 'Ⓝ', 'ⓞ' => 'Ⓞ', 'ⓟ' => 'Ⓟ', 'ⓠ' => 'Ⓠ', 'ⓡ' => 'Ⓡ', 'ⓢ' => 'Ⓢ', 'ⓣ' => 'Ⓣ', 'ⓤ' => 'Ⓤ', 'ⓥ' => 'Ⓥ', 'ⓦ' => 'Ⓦ', 'ⓧ' => 'Ⓧ', 'ⓨ' => 'Ⓨ', 'ⓩ' => 'Ⓩ')]]></default>
        <docblock line="198">
          <description><![CDATA[All lowercase UTF-8 characters not properly handled by [http://php.net/mb_strtoupper mb_strtoupper()] mapped to uppercase characters]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="198" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="222" namespace="global" package="Sutra">
        <name>$mb_upper_to_lower_fix</name>
        <default><![CDATA[array('ǝ' => 'ɘ', 'ǅ' => 'ǆ', 'ǈ' => 'ǉ', 'ǋ' => 'ǌ', 'Ⴀ' => 'ა', 'Ⴁ' => 'ბ', 'Ⴂ' => 'გ', 'Ⴃ' => 'დ', 'Ⴄ' => 'ე', 'Ⴅ' => 'ვ', 'Ⴆ' => 'ზ', 'Ⴇ' => 'თ', 'Ⴈ' => 'ი', 'Ⴉ' => 'კ', 'Ⴊ' => 'ლ', 'Ⴋ' => 'მ', 'Ⴌ' => 'ნ', 'Ⴍ' => 'ო', 'Ⴎ' => 'პ', 'Ⴏ' => 'ჟ', 'Ⴐ' => 'რ', 'Ⴑ' => 'ს', 'Ⴒ' => 'ტ', 'Ⴓ' => 'უ', 'Ⴔ' => 'ფ', 'Ⴕ' => 'ქ', 'Ⴖ' => 'ღ', 'Ⴗ' => 'ყ', 'Ⴘ' => 'შ', 'Ⴙ' => 'ჩ', 'Ⴚ' => 'ც', 'Ⴛ' => 'ძ', 'Ⴜ' => 'წ', 'Ⴝ' => 'ჭ', 'Ⴞ' => 'ხ', 'Ⴟ' => 'ჯ', 'Ⴠ' => 'ჰ', 'Ⴡ' => 'ჱ', 'Ⴢ' => 'ჲ', 'Ⴣ' => 'ჳ', 'Ⴤ' => 'ჴ', 'Ⴥ' => 'ჵ', 'ᾈ' => 'ᾀ', 'ᾉ' => 'ᾁ', 'ᾊ' => 'ᾂ', 'ᾋ' => 'ᾃ', 'ᾌ' => 'ᾄ', 'ᾍ' => 'ᾅ', 'ᾎ' => 'ᾆ', 'ᾏ' => 'ᾇ', 'ᾘ' => 'ᾐ', 'ᾙ' => 'ᾑ', 'ᾚ' => 'ᾒ', 'ᾛ' => 'ᾓ', 'ᾜ' => 'ᾔ', 'ᾝ' => 'ᾕ', 'ᾞ' => 'ᾖ', 'ᾟ' => 'ᾗ', 'ᾨ' => 'ᾠ', 'ᾩ' => 'ᾡ', 'ᾪ' => 'ᾢ', 'ᾫ' => 'ᾣ', 'ᾬ' => 'ᾤ', 'ᾭ' => 'ᾥ', 'ᾮ' => 'ᾦ', 'ᾯ' => 'ᾧ', 'Ⓐ' => 'ⓐ', 'Ⓑ' => 'ⓑ', 'Ⓒ' => 'ⓒ', 'Ⓓ' => 'ⓓ', 'Ⓔ' => 'ⓔ', 'Ⓕ' => 'ⓕ', 'Ⓖ' => 'ⓖ', 'Ⓗ' => 'ⓗ', 'Ⓘ' => 'ⓘ', 'Ⓙ' => 'ⓙ', 'Ⓚ' => 'ⓚ', 'Ⓛ' => 'ⓛ', 'Ⓜ' => 'ⓜ', 'Ⓝ' => 'ⓝ', 'Ⓞ' => 'ⓞ', 'Ⓟ' => 'ⓟ', 'Ⓠ' => 'ⓠ', 'Ⓡ' => 'ⓡ', 'Ⓢ' => 'ⓢ', 'Ⓣ' => 'ⓣ', 'Ⓤ' => 'ⓤ', 'Ⓥ' => 'ⓥ', 'Ⓦ' => 'ⓦ', 'Ⓧ' => 'ⓧ', 'Ⓨ' => 'ⓨ', 'Ⓩ' => 'ⓩ')]]></default>
        <docblock line="217">
          <description><![CDATA[All uppercase UTF-8 characters not properly handled by [http://php.net/mb_strtolower mb_strtolower()] mapped to lowercase characters]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="217" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="246" namespace="global" package="Sutra">
        <name>$upper_to_lower</name>
        <default><![CDATA[array('A' => 'a', 'B' => 'b', 'C' => 'c', 'D' => 'd', 'E' => 'e', 'F' => 'f', 'G' => 'g', 'H' => 'h', 'I' => 'i', 'J' => 'j', 'K' => 'k', 'L' => 'l', 'M' => 'm', 'N' => 'n', 'O' => 'o', 'P' => 'p', 'Q' => 'q', 'R' => 'r', 'S' => 's', 'T' => 't', 'U' => 'u', 'V' => 'v', 'W' => 'w', 'X' => 'x', 'Y' => 'y', 'Z' => 'z', 'À' => 'à', 'Á' => 'á', 'Â' => 'â', 'Ã' => 'ã', 'Ä' => 'ä', 'Å' => 'å', 'Æ' => 'æ', 'Ç' => 'ç', 'È' => 'è', 'É' => 'é', 'Ê' => 'ê', 'Ë' => 'ë', 'Ì' => 'ì', 'Í' => 'í', 'Î' => 'î', 'Ï' => 'ï', 'Ð' => 'ð', 'Ñ' => 'ñ', 'Ò' => 'ò', 'Ó' => 'ó', 'Ô' => 'ô', 'Õ' => 'õ', 'Ö' => 'ö', 'Ø' => 'ø', 'Ù' => 'ù', 'Ú' => 'ú', 'Û' => 'û', 'Ü' => 'ü', 'Ý' => 'ý', 'Þ' => 'þ', 'Ā' => 'ā', 'Ă' => 'ă', 'Ą' => 'ą', 'Ć' => 'ć', 'Ĉ' => 'ĉ', 'Ċ' => 'ċ', 'Č' => 'č', 'Ď' => 'ď', 'Đ' => 'đ', 'Ē' => 'ē', 'Ĕ' => 'ĕ', 'Ė' => 'ė', 'Ę' => 'ę', 'Ě' => 'ě', 'Ĝ' => 'ĝ', 'Ğ' => 'ğ', 'Ġ' => 'ġ', 'Ģ' => 'ģ', 'Ĥ' => 'ĥ', 'Ħ' => 'ħ', 'Ĩ' => 'ĩ', 'Ī' => 'ī', 'Ĭ' => 'ĭ', 'Į' => 'į', 'İ' => 'i', 'Ĳ' => 'ĳ', 'Ĵ' => 'ĵ', 'Ķ' => 'ķ', 'Ĺ' => 'ĺ', 'Ļ' => 'ļ', 'Ľ' => 'ľ', 'Ŀ' => 'ŀ', 'Ł' => 'ł', 'Ń' => 'ń', 'Ņ' => 'ņ', 'Ň' => 'ň', 'Ŋ' => 'ŋ', 'Ō' => 'ō', 'Ŏ' => 'ŏ', 'Ő' => 'ő', 'Œ' => 'œ', 'Ŕ' => 'ŕ', 'Ŗ' => 'ŗ', 'Ř' => 'ř', 'Ś' => 'ś', 'Ŝ' => 'ŝ', 'Ş' => 'ş', 'Š' => 'š', 'Ţ' => 'ţ', 'Ť' => 'ť', 'Ŧ' => 'ŧ', 'Ũ' => 'ũ', 'Ū' => 'ū', 'Ŭ' => 'ŭ', 'Ů' => 'ů', 'Ű' => 'ű', 'Ų' => 'ų', 'Ŵ' => 'ŵ', 'Ŷ' => 'ŷ', 'Ÿ' => 'ÿ', 'Ź' => 'ź', 'Ż' => 'ż', 'Ž' => 'ž', 'Ɓ' => 'ɓ', 'Ƃ' => 'ƃ', 'Ƅ' => 'ƅ', 'Ɔ' => 'ɔ', 'Ƈ' => 'ƈ', 'Ɗ' => 'ɗ', 'Ƌ' => 'ƌ', 'Ǝ' => 'ɘ', 'Ə' => 'ə', 'Ɛ' => 'ɛ', 'Ƒ' => 'ƒ', 'Ɠ' => 'ɠ', 'Ɣ' => 'ɣ', 'Ɩ' => 'ɩ', 'Ɨ' => 'ɨ', 'Ƙ' => 'ƙ', 'Ɯ' => 'ɯ', 'Ɲ' => 'ɲ', 'Ɵ' => 'ɵ', 'Ơ' => 'ơ', 'Ƣ' => 'ƣ', 'Ƥ' => 'ƥ', 'Ƨ' => 'ƨ', 'Ʃ' => 'ʃ', 'Ƭ' => 'ƭ', 'Ʈ' => 'ʈ', 'Ư' => 'ư', 'Ʊ' => 'ʊ', 'Ʋ' => 'ʋ', 'Ƴ' => 'ƴ', 'Ƶ' => 'ƶ', 'Ʒ' => 'ʒ', 'Ƹ' => 'ƹ', 'Ƽ' => 'ƽ', 'Ǆ' => 'ǆ', 'ǅ' => 'ǆ', 'Ǉ' => 'ǉ', 'ǈ' => 'ǉ', 'Ǌ' => 'ǌ', 'ǋ' => 'ǌ', 'Ǎ' => 'ǎ', 'Ǐ' => 'ǐ', 'Ǒ' => 'ǒ', 'Ǔ' => 'ǔ', 'Ǖ' => 'ǖ', 'Ǘ' => 'ǘ', 'Ǚ' => 'ǚ', 'Ǜ' => 'ǜ', 'Ǟ' => 'ǟ', 'Ǡ' => 'ǡ', 'Ǣ' => 'ǣ', 'Ǥ' => 'ǥ', 'Ǧ' => 'ǧ', 'Ǩ' => 'ǩ', 'Ǫ' => 'ǫ', 'Ǭ' => 'ǭ', 'Ǯ' => 'ǯ', 'Ǳ' => 'ǳ', 'Ǵ' => 'ǵ', 'Ǻ' => 'ǻ', 'Ǽ' => 'ǽ', 'Ǿ' => 'ǿ', 'Ȁ' => 'ȁ', 'Ȃ' => 'ȃ', 'Ȅ' => 'ȅ', 'Ȇ' => 'ȇ', 'Ȉ' => 'ȉ', 'Ȋ' => 'ȋ', 'Ȍ' => 'ȍ', 'Ȏ' => 'ȏ', 'Ȑ' => 'ȑ', 'Ȓ' => 'ȓ', 'Ȕ' => 'ȕ', 'Ȗ' => 'ȗ', 'Ά' => 'ά', 'Έ' => 'έ', 'Ή' => 'ή', 'Ί' => 'ί', 'Ό' => 'ό', 'Ύ' => 'ύ', 'Ώ' => 'ώ', 'Α' => 'α', 'Β' => 'β', 'Γ' => 'γ', 'Δ' => 'δ', 'Ε' => 'ε', 'Ζ' => 'ζ', 'Η' => 'η', 'Θ' => 'θ', 'Ι' => 'ι', 'Κ' => 'κ', 'Λ' => 'λ', 'Μ' => 'μ', 'Ν' => 'ν', 'Ξ' => 'ξ', 'Ο' => 'ο', 'Π' => 'π', 'Ρ' => 'ρ', 'Σ' => 'σ', 'Τ' => 'τ', 'Υ' => 'υ', 'Φ' => 'φ', 'Χ' => 'χ', 'Ψ' => 'ψ', 'Ω' => 'ω', 'Ϊ' => 'ϊ', 'Ϋ' => 'ϋ', 'Ϣ' => 'ϣ', 'Ϥ' => 'ϥ', 'Ϧ' => 'ϧ', 'Ϩ' => 'ϩ', 'Ϫ' => 'ϫ', 'Ϭ' => 'ϭ', 'Ϯ' => 'ϯ', 'Ё' => 'ё', 'Ђ' => 'ђ', 'Ѓ' => 'ѓ', 'Є' => 'є', 'Ѕ' => 'ѕ', 'І' => 'і', 'Ї' => 'ї', 'Ј' => 'ј', 'Љ' => 'љ', 'Њ' => 'њ', 'Ћ' => 'ћ', 'Ќ' => 'ќ', 'Ў' => 'ў', 'Џ' => 'џ', 'А' => 'а', 'Б' => 'б', 'В' => 'в', 'Г' => 'г', 'Д' => 'д', 'Е' => 'е', 'Ж' => 'ж', 'З' => 'з', 'И' => 'и', 'Й' => 'й', 'К' => 'к', 'Л' => 'л', 'М' => 'м', 'Н' => 'н', 'О' => 'о', 'П' => 'п', 'Р' => 'р', 'С' => 'с', 'Т' => 'т', 'У' => 'у', 'Ф' => 'ф', 'Х' => 'х', 'Ц' => 'ц', 'Ч' => 'ч', 'Ш' => 'ш', 'Щ' => 'щ', 'Ъ' => 'ъ', 'Ы' => 'ы', 'Ь' => 'ь', 'Э' => 'э', 'Ю' => 'ю', 'Я' => 'я', 'Ѡ' => 'ѡ', 'Ѣ' => 'ѣ', 'Ѥ' => 'ѥ', 'Ѧ' => 'ѧ', 'Ѩ' => 'ѩ', 'Ѫ' => 'ѫ', 'Ѭ' => 'ѭ', 'Ѯ' => 'ѯ', 'Ѱ' => 'ѱ', 'Ѳ' => 'ѳ', 'Ѵ' => 'ѵ', 'Ѷ' => 'ѷ', 'Ѹ' => 'ѹ', 'Ѻ' => 'ѻ', 'Ѽ' => 'ѽ', 'Ѿ' => 'ѿ', 'Ҁ' => 'ҁ', 'Ґ' => 'ґ', 'Ғ' => 'ғ', 'Ҕ' => 'ҕ', 'Җ' => 'җ', 'Ҙ' => 'ҙ', 'Қ' => 'қ', 'Ҝ' => 'ҝ', 'Ҟ' => 'ҟ', 'Ҡ' => 'ҡ', 'Ң' => 'ң', 'Ҥ' => 'ҥ', 'Ҧ' => 'ҧ', 'Ҩ' => 'ҩ', 'Ҫ' => 'ҫ', 'Ҭ' => 'ҭ', 'Ү' => 'ү', 'Ұ' => 'ұ', 'Ҳ' => 'ҳ', 'Ҵ' => 'ҵ', 'Ҷ' => 'ҷ', 'Ҹ' => 'ҹ', 'Һ' => 'һ', 'Ҽ' => 'ҽ', 'Ҿ' => 'ҿ', 'Ӂ' => 'ӂ', 'Ӄ' => 'ӄ', 'Ӈ' => 'ӈ', 'Ӌ' => 'ӌ', 'Ӑ' => 'ӑ', 'Ӓ' => 'ӓ', 'Ӕ' => 'ӕ', 'Ӗ' => 'ӗ', 'Ә' => 'ә', 'Ӛ' => 'ӛ', 'Ӝ' => 'ӝ', 'Ӟ' => 'ӟ', 'Ӡ' => 'ӡ', 'Ӣ' => 'ӣ', 'Ӥ' => 'ӥ', 'Ӧ' => 'ӧ', 'Ө' => 'ө', 'Ӫ' => 'ӫ', 'Ӯ' => 'ӯ', 'Ӱ' => 'ӱ', 'Ӳ' => 'ӳ', 'Ӵ' => 'ӵ', 'Ӹ' => 'ӹ', 'Ա' => 'ա', 'Բ' => 'բ', 'Գ' => 'գ', 'Դ' => 'դ', 'Ե' => 'ե', 'Զ' => 'զ', 'Է' => 'է', 'Ը' => 'ը', 'Թ' => 'թ', 'Ժ' => 'ժ', 'Ի' => 'ի', 'Լ' => 'լ', 'Խ' => 'խ', 'Ծ' => 'ծ', 'Կ' => 'կ', 'Հ' => 'հ', 'Ձ' => 'ձ', 'Ղ' => 'ղ', 'Ճ' => 'ճ', 'Մ' => 'մ', 'Յ' => 'յ', 'Ն' => 'ն', 'Շ' => 'շ', 'Ո' => 'ո', 'Չ' => 'չ', 'Պ' => 'պ', 'Ջ' => 'ջ', 'Ռ' => 'ռ', 'Ս' => 'ս', 'Վ' => 'վ', 'Տ' => 'տ', 'Ր' => 'ր', 'Ց' => 'ց', 'Ւ' => 'ւ', 'Փ' => 'փ', 'Ք' => 'ք', 'Օ' => 'օ', 'Ֆ' => 'ֆ', 'Ⴀ' => 'ა', 'Ⴁ' => 'ბ', 'Ⴂ' => 'გ', 'Ⴃ' => 'დ', 'Ⴄ' => 'ე', 'Ⴅ' => 'ვ', 'Ⴆ' => 'ზ', 'Ⴇ' => 'თ', 'Ⴈ' => 'ი', 'Ⴉ' => 'კ', 'Ⴊ' => 'ლ', 'Ⴋ' => 'მ', 'Ⴌ' => 'ნ', 'Ⴍ' => 'ო', 'Ⴎ' => 'პ', 'Ⴏ' => 'ჟ', 'Ⴐ' => 'რ', 'Ⴑ' => 'ს', 'Ⴒ' => 'ტ', 'Ⴓ' => 'უ', 'Ⴔ' => 'ფ', 'Ⴕ' => 'ქ', 'Ⴖ' => 'ღ', 'Ⴗ' => 'ყ', 'Ⴘ' => 'შ', 'Ⴙ' => 'ჩ', 'Ⴚ' => 'ც', 'Ⴛ' => 'ძ', 'Ⴜ' => 'წ', 'Ⴝ' => 'ჭ', 'Ⴞ' => 'ხ', 'Ⴟ' => 'ჯ', 'Ⴠ' => 'ჰ', 'Ⴡ' => 'ჱ', 'Ⴢ' => 'ჲ', 'Ⴣ' => 'ჳ', 'Ⴤ' => 'ჴ', 'Ⴥ' => 'ჵ', 'Ḁ' => 'ḁ', 'Ḃ' => 'ḃ', 'Ḅ' => 'ḅ', 'Ḇ' => 'ḇ', 'Ḉ' => 'ḉ', 'Ḋ' => 'ḋ', 'Ḍ' => 'ḍ', 'Ḏ' => 'ḏ', 'Ḑ' => 'ḑ', 'Ḓ' => 'ḓ', 'Ḕ' => 'ḕ', 'Ḗ' => 'ḗ', 'Ḙ' => 'ḙ', 'Ḛ' => 'ḛ', 'Ḝ' => 'ḝ', 'Ḟ' => 'ḟ', 'Ḡ' => 'ḡ', 'Ḣ' => 'ḣ', 'Ḥ' => 'ḥ', 'Ḧ' => 'ḧ', 'Ḩ' => 'ḩ', 'Ḫ' => 'ḫ', 'Ḭ' => 'ḭ', 'Ḯ' => 'ḯ', 'Ḱ' => 'ḱ', 'Ḳ' => 'ḳ', 'Ḵ' => 'ḵ', 'Ḷ' => 'ḷ', 'Ḹ' => 'ḹ', 'Ḻ' => 'ḻ', 'Ḽ' => 'ḽ', 'Ḿ' => 'ḿ', 'Ṁ' => 'ṁ', 'Ṃ' => 'ṃ', 'Ṅ' => 'ṅ', 'Ṇ' => 'ṇ', 'Ṉ' => 'ṉ', 'Ṋ' => 'ṋ', 'Ṍ' => 'ṍ', 'Ṏ' => 'ṏ', 'Ṑ' => 'ṑ', 'Ṓ' => 'ṓ', 'Ṕ' => 'ṕ', 'Ṗ' => 'ṗ', 'Ṙ' => 'ṙ', 'Ṛ' => 'ṛ', 'Ṝ' => 'ṝ', 'Ṟ' => 'ṟ', 'Ṡ' => 'ṡ', 'Ṣ' => 'ṣ', 'Ṥ' => 'ṥ', 'Ṧ' => 'ṧ', 'Ṩ' => 'ṩ', 'Ṫ' => 'ṫ', 'Ṭ' => 'ṭ', 'Ṯ' => 'ṯ', 'Ṱ' => 'ṱ', 'Ṳ' => 'ṳ', 'Ṵ' => 'ṵ', 'Ṷ' => 'ṷ', 'Ṹ' => 'ṹ', 'Ṻ' => 'ṻ', 'Ṽ' => 'ṽ', 'Ṿ' => 'ṿ', 'Ẁ' => 'ẁ', 'Ẃ' => 'ẃ', 'Ẅ' => 'ẅ', 'Ẇ' => 'ẇ', 'Ẉ' => 'ẉ', 'Ẋ' => 'ẋ', 'Ẍ' => 'ẍ', 'Ẏ' => 'ẏ', 'Ẑ' => 'ẑ', 'Ẓ' => 'ẓ', 'Ẕ' => 'ẕ', 'Ạ' => 'ạ', 'Ả' => 'ả', 'Ấ' => 'ấ', 'Ầ' => 'ầ', 'Ẩ' => 'ẩ', 'Ẫ' => 'ẫ', 'Ậ' => 'ậ', 'Ắ' => 'ắ', 'Ằ' => 'ằ', 'Ẳ' => 'ẳ', 'Ẵ' => 'ẵ', 'Ặ' => 'ặ', 'Ẹ' => 'ẹ', 'Ẻ' => 'ẻ', 'Ẽ' => 'ẽ', 'Ế' => 'ế', 'Ề' => 'ề', 'Ể' => 'ể', 'Ễ' => 'ễ', 'Ệ' => 'ệ', 'Ỉ' => 'ỉ', 'Ị' => 'ị', 'Ọ' => 'ọ', 'Ỏ' => 'ỏ', 'Ố' => 'ố', 'Ồ' => 'ồ', 'Ổ' => 'ổ', 'Ỗ' => 'ỗ', 'Ộ' => 'ộ', 'Ớ' => 'ớ', 'Ờ' => 'ờ', 'Ở' => 'ở', 'Ỡ' => 'ỡ', 'Ợ' => 'ợ', 'Ụ' => 'ụ', 'Ủ' => 'ủ', 'Ứ' => 'ứ', 'Ừ' => 'ừ', 'Ử' => 'ử', 'Ữ' => 'ữ', 'Ự' => 'ự', 'Ỳ' => 'ỳ', 'Ỵ' => 'ỵ', 'Ỷ' => 'ỷ', 'Ỹ' => 'ỹ', 'Ἀ' => 'ἀ', 'Ἁ' => 'ἁ', 'Ἂ' => 'ἂ', 'Ἃ' => 'ἃ', 'Ἄ' => 'ἄ', 'Ἅ' => 'ἅ', 'Ἆ' => 'ἆ', 'Ἇ' => 'ἇ', 'Ἐ' => 'ἐ', 'Ἑ' => 'ἑ', 'Ἒ' => 'ἒ', 'Ἓ' => 'ἓ', 'Ἔ' => 'ἔ', 'Ἕ' => 'ἕ', 'Ἠ' => 'ἠ', 'Ἡ' => 'ἡ', 'Ἢ' => 'ἢ', 'Ἣ' => 'ἣ', 'Ἤ' => 'ἤ', 'Ἥ' => 'ἥ', 'Ἦ' => 'ἦ', 'Ἧ' => 'ἧ', 'Ἰ' => 'ἰ', 'Ἱ' => 'ἱ', 'Ἲ' => 'ἲ', 'Ἳ' => 'ἳ', 'Ἴ' => 'ἴ', 'Ἵ' => 'ἵ', 'Ἶ' => 'ἶ', 'Ἷ' => 'ἷ', 'Ὀ' => 'ὀ', 'Ὁ' => 'ὁ', 'Ὂ' => 'ὂ', 'Ὃ' => 'ὃ', 'Ὄ' => 'ὄ', 'Ὅ' => 'ὅ', 'Ὑ' => 'ὑ', 'Ὓ' => 'ὓ', 'Ὕ' => 'ὕ', 'Ὗ' => 'ὗ', 'Ὠ' => 'ὠ', 'Ὡ' => 'ὡ', 'Ὢ' => 'ὢ', 'Ὣ' => 'ὣ', 'Ὤ' => 'ὤ', 'Ὥ' => 'ὥ', 'Ὦ' => 'ὦ', 'Ὧ' => 'ὧ', 'ᾈ' => 'ᾀ', 'ᾉ' => 'ᾁ', 'ᾊ' => 'ᾂ', 'ᾋ' => 'ᾃ', 'ᾌ' => 'ᾄ', 'ᾍ' => 'ᾅ', 'ᾎ' => 'ᾆ', 'ᾏ' => 'ᾇ', 'ᾘ' => 'ᾐ', 'ᾙ' => 'ᾑ', 'ᾚ' => 'ᾒ', 'ᾛ' => 'ᾓ', 'ᾜ' => 'ᾔ', 'ᾝ' => 'ᾕ', 'ᾞ' => 'ᾖ', 'ᾟ' => 'ᾗ', 'ᾨ' => 'ᾠ', 'ᾩ' => 'ᾡ', 'ᾪ' => 'ᾢ', 'ᾫ' => 'ᾣ', 'ᾬ' => 'ᾤ', 'ᾭ' => 'ᾥ', 'ᾮ' => 'ᾦ', 'ᾯ' => 'ᾧ', 'Ᾰ' => 'ᾰ', 'Ᾱ' => 'ᾱ', 'Ῐ' => 'ῐ', 'Ῑ' => 'ῑ', 'Ῠ' => 'ῠ', 'Ῡ' => 'ῡ', 'Ⓐ' => 'ⓐ', 'Ⓑ' => 'ⓑ', 'Ⓒ' => 'ⓒ', 'Ⓓ' => 'ⓓ', 'Ⓔ' => 'ⓔ', 'Ⓕ' => 'ⓕ', 'Ⓖ' => 'ⓖ', 'Ⓗ' => 'ⓗ', 'Ⓘ' => 'ⓘ', 'Ⓙ' => 'ⓙ', 'Ⓚ' => 'ⓚ', 'Ⓛ' => 'ⓛ', 'Ⓜ' => 'ⓜ', 'Ⓝ' => 'ⓝ', 'Ⓞ' => 'ⓞ', 'Ⓟ' => 'ⓟ', 'Ⓠ' => 'ⓠ', 'Ⓡ' => 'ⓡ', 'Ⓢ' => 'ⓢ', 'Ⓣ' => 'ⓣ', 'Ⓤ' => 'ⓤ', 'Ⓥ' => 'ⓥ', 'Ⓦ' => 'ⓦ', 'Ⓧ' => 'ⓧ', 'Ⓨ' => 'ⓨ', 'Ⓩ' => 'ⓩ', 'Ａ' => 'ａ', 'Ｂ' => 'ｂ', 'Ｃ' => 'ｃ', 'Ｄ' => 'ｄ', 'Ｅ' => 'ｅ', 'Ｆ' => 'ｆ', 'Ｇ' => 'ｇ', 'Ｈ' => 'ｈ', 'Ｉ' => 'ｉ', 'Ｊ' => 'ｊ', 'Ｋ' => 'ｋ', 'Ｌ' => 'ｌ', 'Ｍ' => 'ｍ', 'Ｎ' => 'ｎ', 'Ｏ' => 'ｏ', 'Ｐ' => 'ｐ', 'Ｑ' => 'ｑ', 'Ｒ' => 'ｒ', 'Ｓ' => 'ｓ', 'Ｔ' => 'ｔ', 'Ｕ' => 'ｕ', 'Ｖ' => 'ｖ', 'Ｗ' => 'ｗ', 'Ｘ' => 'ｘ', 'Ｙ' => 'ｙ', 'Ｚ' => 'ｚ')]]></default>
        <docblock line="241">
          <description><![CDATA[All uppercase UTF-8 characters mapped to lowercase characters]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="241" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="377" namespace="global" package="Sutra">
        <name>$utf8_to_ascii</name>
        <default><![CDATA[array('©' => '(c)', '«' => '<<', '®' => '(R)', '»' => '>>', '¼' => '1/4', '½' => '1/2', '¾' => '3/4', 'À' => 'A', 'Á' => 'A', 'Â' => 'A', 'Ã' => 'A', 'Ä' => 'A', 'Å' => 'A', 'Æ' => 'AE', 'Ç' => 'C', 'È' => 'E', 'É' => 'E', 'Ê' => 'E', 'Ë' => 'E', 'Ì' => 'I', 'Í' => 'I', 'Î' => 'I', 'Ï' => 'I', 'Ñ' => 'N', 'Ò' => 'O', 'Ó' => 'O', 'Ô' => 'O', 'Õ' => 'O', 'Ö' => 'O', 'Ø' => 'O', 'Ù' => 'U', 'Ú' => 'U', 'Û' => 'U', 'Ü' => 'U', 'Ý' => 'Y', 'à' => 'a', 'á' => 'a', 'â' => 'a', 'ã' => 'a', 'ä' => 'a', 'å' => 'a', 'æ' => 'ae', 'ç' => 'c', 'è' => 'e', 'é' => 'e', 'ê' => 'e', 'ë' => 'e', 'ì' => 'i', 'í' => 'i', 'î' => 'i', 'ï' => 'i', 'ñ' => 'n', 'ò' => 'o', 'ó' => 'o', 'ô' => 'o', 'õ' => 'o', 'ö' => 'o', 'ø' => 'o', 'ù' => 'u', 'ú' => 'u', 'û' => 'u', 'ü' => 'u', 'ý' => 'y', 'ÿ' => 'y', 'Ā' => 'A', 'ā' => 'a', 'Ă' => 'A', 'ă' => 'a', 'Ą' => 'A', 'ą' => 'a', 'Ć' => 'C', 'ć' => 'c', 'Ĉ' => 'C', 'ĉ' => 'c', 'Ċ' => 'C', 'ċ' => 'c', 'Č' => 'C', 'č' => 'c', 'Ď' => 'D', 'ď' => 'd', 'Đ' => 'D', 'đ' => 'd', 'Ē' => 'E', 'ē' => 'e', 'Ĕ' => 'E', 'ĕ' => 'e', 'Ė' => 'E', 'ė' => 'e', 'Ę' => 'E', 'ę' => 'e', 'Ě' => 'E', 'ě' => 'e', 'Ĝ' => 'G', 'ĝ' => 'g', 'Ğ' => 'G', 'ğ' => 'g', 'Ġ' => 'G', 'ġ' => 'g', 'Ģ' => 'G', 'ģ' => 'g', 'Ĥ' => 'H', 'ĥ' => 'h', 'Ħ' => 'H', 'ħ' => 'h', 'Ĩ' => 'I', 'ĩ' => 'i', 'Ī' => 'I', 'ī' => 'i', 'Ĭ' => 'I', 'ĭ' => 'i', 'Į' => 'I', 'į' => 'i', 'İ' => 'I', 'ı' => 'i', 'Ĳ' => 'IJ', 'ĳ' => 'ij', 'Ĵ' => 'J', 'ĵ' => 'j', 'Ķ' => 'K', 'ķ' => 'k', 'Ĺ' => 'L', 'ĺ' => 'l', 'Ļ' => 'L', 'ļ' => 'l', 'Ľ' => 'L', 'ľ' => 'l', 'Ŀ' => 'L', 'ŀ' => 'l', 'Ł' => 'L', 'ł' => 'l', 'Ń' => 'N', 'ń' => 'n', 'Ņ' => 'N', 'ņ' => 'n', 'Ň' => 'N', 'ň' => 'n', 'ŉ' => "'n", 'Ŋ' => 'N', 'ŋ' => 'n', 'Ō' => 'O', 'ō' => 'o', 'Ŏ' => 'O', 'ŏ' => 'o', 'Ő' => 'O', 'ő' => 'o', 'Œ' => 'OE', 'œ' => 'oe', 'Ŕ' => 'R', 'ŕ' => 'r', 'Ŗ' => 'R', 'ŗ' => 'r', 'Ř' => 'R', 'ř' => 'r', 'Ś' => 'S', 'ś' => 's', 'Ŝ' => 'S', 'ŝ' => 's', 'Ş' => 'S', 'ş' => 's', 'Š' => 'S', 'š' => 's', 'Ţ' => 'T', 'ţ' => 't', 'Ť' => 'T', 'ť' => 't', 'Ŧ' => 'T', 'ŧ' => 't', 'Ũ' => 'U', 'ũ' => 'u', 'Ū' => 'U', 'ū' => 'u', 'Ŭ' => 'U', 'ŭ' => 'u', 'Ů' => 'U', 'ů' => 'u', 'Ű' => 'U', 'ű' => 'u', 'Ų' => 'U', 'ų' => 'u', 'Ŵ' => 'W', 'ŵ' => 'w', 'Ŷ' => 'Y', 'ŷ' => 'y', 'Ÿ' => 'Y', 'Ź' => 'Z', 'ź' => 'z', 'Ż' => 'Z', 'ż' => 'z', 'Ž' => 'Z', 'ž' => 'z', 'ƀ' => 'b', 'Ɓ' => 'B', 'Ƃ' => 'B', 'ƃ' => 'b', 'Ɔ' => 'O', 'Ƈ' => 'C', 'ƈ' => 'c', 'Ɖ' => 'D', 'Ɗ' => 'D', 'Ƌ' => 'D', 'ƌ' => 'd', 'Ǝ' => 'E', 'Ɛ' => 'E', 'Ƒ' => 'F', 'ƒ' => 'f', 'Ɠ' => 'G', 'Ɨ' => 'I', 'Ƙ' => 'K', 'ƙ' => 'k', 'ƚ' => 'l', 'Ɯ' => 'M', 'Ɲ' => 'N', 'ƞ' => 'n', 'Ɵ' => 'O', 'Ơ' => 'O', 'ơ' => 'o', 'Ƣ' => 'OI', 'ƣ' => 'oi', 'Ƥ' => 'P', 'ƥ' => 'p', 'ƫ' => 't', 'Ƭ' => 'T', 'ƭ' => 't', 'Ʈ' => 'T', 'Ư' => 'U', 'ư' => 'u', 'Ʋ' => 'V', 'Ƴ' => 'Y', 'ƴ' => 'y', 'Ƶ' => 'Z', 'ƶ' => 'z', 'ƻ' => '2', 'Ǆ' => 'DZ', 'ǅ' => 'Dz', 'ǆ' => 'dz', 'Ǉ' => 'LJ', 'ǈ' => 'Lj', 'ǉ' => 'lj', 'Ǌ' => 'Nj', 'ǋ' => 'Nj', 'ǌ' => 'nj', 'Ǎ' => 'A', 'ǎ' => 'a', 'Ǐ' => 'I', 'ǐ' => 'i', 'Ǒ' => 'O', 'ǒ' => 'o', 'Ǔ' => 'U', 'ǔ' => 'u', 'Ǖ' => 'U', 'ǖ' => 'u', 'Ǘ' => 'U', 'ǘ' => 'u', 'Ǚ' => 'U', 'ǚ' => 'u', 'Ǜ' => 'U', 'ǜ' => 'u', 'ǝ' => 'e', 'Ǟ' => 'A', 'ǟ' => 'a', 'Ǡ' => 'A', 'ǡ' => 'a', 'Ǣ' => 'AE', 'ǣ' => 'ae', 'Ǥ' => 'G', 'ǥ' => 'g', 'Ǧ' => 'G', 'ǧ' => 'g', 'Ǩ' => 'K', 'ǩ' => 'k', 'Ǫ' => 'O', 'ǫ' => 'o', 'Ǭ' => 'O', 'ǭ' => 'o', 'ǰ' => 'j', 'Ǳ' => 'DZ', 'ǲ' => 'Dz', 'ǳ' => 'dz', 'Ǵ' => 'G', 'ǵ' => 'g', 'Ǹ' => 'N', 'ǹ' => 'n', 'Ǻ' => 'A', 'ǻ' => 'a', 'Ǽ' => 'AE', 'ǽ' => 'ae', 'Ǿ' => 'O', 'ǿ' => 'o', 'Ȁ' => 'A', 'ȁ' => 'a', 'Ȃ' => 'A', 'ȃ' => 'a', 'Ȅ' => 'E', 'ȅ' => 'e', 'Ȇ' => 'E', 'ȇ' => 'e', 'Ȉ' => 'I', 'ȉ' => 'i', 'Ȋ' => 'I', 'ȋ' => 'i', 'Ȍ' => 'O', 'ȍ' => 'o', 'Ȏ' => 'O', 'ȏ' => 'o', 'Ȑ' => 'R', 'ȑ' => 'r', 'Ȓ' => 'R', 'ȓ' => 'r', 'Ȕ' => 'U', 'ȕ' => 'u', 'Ȗ' => 'U', 'ȗ' => 'u', 'Ș' => 'S', 'ș' => 's', 'Ț' => 'T', 'ț' => 't', 'Ȟ' => 'H', 'ȟ' => 'h', 'Ƞ' => 'N', 'ȡ' => 'd', 'Ȥ' => 'Z', 'ȥ' => 'z', 'Ȧ' => 'A', 'ȧ' => 'a', 'Ȩ' => 'E', 'ȩ' => 'e', 'Ȫ' => 'O', 'ȫ' => 'o', 'Ȭ' => 'O', 'ȭ' => 'o', 'Ȯ' => 'O', 'ȯ' => 'o', 'Ȱ' => 'O', 'ȱ' => 'o', 'Ȳ' => 'Y', 'ȳ' => 'y', 'ȴ' => 'l', 'ȵ' => 'n', 'ȶ' => 't', 'ȷ' => 'j', 'ȸ' => 'db', 'ȹ' => 'qp', 'Ⱥ' => 'A', 'Ȼ' => 'C', 'ȼ' => 'c', 'Ƚ' => 'L', 'Ⱦ' => 'T', 'ȿ' => 's', 'ɀ' => 'z', 'Ƀ' => 'B', 'Ʉ' => 'U', 'Ʌ' => 'V', 'Ɇ' => 'E', 'ɇ' => 'e', 'Ɉ' => 'J', 'ɉ' => 'j', 'Ɋ' => 'Q', 'ɋ' => 'q', 'Ɍ' => 'R', 'ɍ' => 'r', 'Ɏ' => 'Y', 'ɏ' => 'y', 'ɐ' => 'a', 'ɓ' => 'b', 'ɔ' => 'o', 'ɕ' => 'c', 'ɖ' => 'd', 'ɗ' => 'd', 'ɘ' => 'e', 'ɛ' => 'e', 'ɜ' => 'e', 'ɝ' => 'e', 'ɞ' => 'e', 'ɟ' => 'j', 'ɠ' => 'g', 'ɡ' => 'g', 'ɢ' => 'G', 'ɥ' => 'h', 'ɦ' => 'h', 'ɨ' => 'i', 'ɪ' => 'I', 'ɫ' => 'l', 'ɬ' => 'l', 'ɭ' => 'l', 'ɯ' => 'm', 'ɰ' => 'm', 'ɱ' => 'm', 'ɲ' => 'n', 'ɳ' => 'n', 'ɴ' => 'N', 'ɵ' => 'o', 'ɶ' => 'OE', 'ɹ' => 'r', 'ɺ' => 'r', 'ɻ' => 'r', 'ɼ' => 'r', 'ɽ' => 'r', 'ɾ' => 'r', 'ɿ' => 'r', 'ʀ' => 'R', 'ʁ' => 'R', 'ʂ' => 's', 'ʇ' => 't', 'ʈ' => 't', 'ʉ' => 'u', 'ʋ' => 'v', 'ʌ' => 'v', 'ʍ' => 'w', 'ʎ' => 'y', 'ʏ' => 'Y', 'ʐ' => 'z', 'ʑ' => 'z', 'ʗ' => 'C', 'ʙ' => 'B', 'ʚ' => 'e', 'ʛ' => 'G', 'ʜ' => 'H', 'ʝ' => 'j', 'ʞ' => 'k', 'ʟ' => 'L', 'ʠ' => 'q', 'ʣ' => 'dz', 'ʥ' => 'dz', 'ʦ' => 'ts', 'ʨ' => 'tc', 'ʪ' => 'ls', 'ʫ' => 'lz', 'ʮ' => 'h', 'ʯ' => 'h', 'Ḁ' => 'A', 'ḁ' => 'a', 'Ḃ' => 'B', 'ḃ' => 'b', 'Ḅ' => 'B', 'ḅ' => 'b', 'Ḇ' => 'B', 'ḇ' => 'b', 'Ḉ' => 'C', 'ḉ' => 'c', 'Ḋ' => 'D', 'ḋ' => 'd', 'Ḍ' => 'D', 'ḍ' => 'd', 'Ḏ' => 'D', 'ḏ' => 'd', 'Ḑ' => 'D', 'ḑ' => 'd', 'Ḓ' => 'D', 'ḓ' => 'd', 'Ḕ' => 'E', 'ḕ' => 'e', 'Ḗ' => 'E', 'ḗ' => 'e', 'Ḙ' => 'E', 'ḙ' => 'e', 'Ḛ' => 'E', 'ḛ' => 'e', 'Ḝ' => 'E', 'ḝ' => 'e', 'Ḟ' => 'F', 'ḟ' => 'f', 'Ḡ' => 'G', 'ḡ' => 'g', 'Ḣ' => 'H', 'ḣ' => 'h', 'Ḥ' => 'H', 'ḥ' => 'h', 'Ḧ' => 'H', 'ḧ' => 'h', 'Ḩ' => 'H', 'ḩ' => 'h', 'Ḫ' => 'H', 'ḫ' => 'h', 'Ḭ' => 'I', 'ḭ' => 'i', 'Ḯ' => 'I', 'ḯ' => 'i', 'Ḱ' => 'K', 'ḱ' => 'k', 'Ḳ' => 'K', 'ḳ' => 'k', 'Ḵ' => 'K', 'ḵ' => 'k', 'Ḷ' => 'L', 'ḷ' => 'l', 'Ḹ' => 'L', 'ḹ' => 'l', 'Ḻ' => 'L', 'ḻ' => 'l', 'Ḽ' => 'L', 'ḽ' => 'l', 'Ḿ' => 'M', 'ḿ' => 'm', 'Ṁ' => 'M', 'ṁ' => 'm', 'Ṃ' => 'M', 'ṃ' => 'm', 'Ṅ' => 'N', 'ṅ' => 'n', 'Ṇ' => 'N', 'ṇ' => 'n', 'Ṉ' => 'N', 'ṉ' => 'n', 'Ṋ' => 'N', 'ṋ' => 'n', 'Ṍ' => 'O', 'ṍ' => 'o', 'Ṏ' => 'O', 'ṏ' => 'o', 'Ṑ' => 'O', 'ṑ' => 'o', 'Ṓ' => 'O', 'ṓ' => 'o', 'Ṕ' => 'P', 'ṕ' => 'p', 'Ṗ' => 'P', 'ṗ' => 'p', 'Ṙ' => 'R', 'ṙ' => 'r', 'Ṛ' => 'R', 'ṛ' => 'r', 'Ṝ' => 'R', 'ṝ' => 'r', 'Ṟ' => 'R', 'ṟ' => 'r', 'Ṡ' => 'S', 'ṡ' => 's', 'Ṣ' => 'S', 'ṣ' => 's', 'Ṥ' => 'S', 'ṥ' => 's', 'Ṧ' => 'S', 'ṧ' => 's', 'Ṩ' => 'S', 'ṩ' => 's', 'Ṫ' => 'T', 'ṫ' => 't', 'Ṭ' => 'T', 'ṭ' => 't', 'Ṯ' => 'T', 'ṯ' => 't', 'Ṱ' => 'T', 'ṱ' => 't', 'Ṳ' => 'U', 'ṳ' => 'u', 'Ṵ' => 'U', 'ṵ' => 'u', 'Ṷ' => 'U', 'ṷ' => 'u', 'Ṹ' => 'U', 'ṹ' => 'u', 'Ṻ' => 'U', 'ṻ' => 'u', 'Ṽ' => 'V', 'ṽ' => 'v', 'Ṿ' => 'V', 'ṿ' => 'v', 'Ẁ' => 'W', 'ẁ' => 'w', 'Ẃ' => 'W', 'ẃ' => 'w', 'Ẅ' => 'W', 'ẅ' => 'w', 'Ẇ' => 'W', 'ẇ' => 'w', 'Ẉ' => 'W', 'ẉ' => 'w', 'Ẋ' => 'X', 'ẋ' => 'x', 'Ẍ' => 'X', 'ẍ' => 'x', 'Ẏ' => 'Y', 'ẏ' => 'y', 'Ẑ' => 'Z', 'ẑ' => 'z', 'Ẓ' => 'Z', 'ẓ' => 'z', 'Ẕ' => 'Z', 'ẕ' => 'z', 'ẖ' => 'h', 'ẗ' => 't', 'ẘ' => 'w', 'ẙ' => 'y', 'ẚ' => 'a', 'Ạ' => 'A', 'ạ' => 'a', 'Ả' => 'A', 'ả' => 'a', 'Ấ' => 'A', 'ấ' => 'a', 'Ầ' => 'A', 'ầ' => 'a', 'Ẩ' => 'A', 'ẩ' => 'a', 'Ẫ' => 'A', 'ẫ' => 'a', 'Ậ' => 'A', 'ậ' => 'a', 'Ắ' => 'A', 'ắ' => 'a', 'Ằ' => 'A', 'ằ' => 'a', 'Ẳ' => 'A', 'ẳ' => 'a', 'Ẵ' => 'A', 'ẵ' => 'a', 'Ặ' => 'A', 'ặ' => 'a', 'Ẹ' => 'E', 'ẹ' => 'e', 'Ẻ' => 'E', 'ẻ' => 'e', 'Ẽ' => 'E', 'ẽ' => 'e', 'Ế' => 'E', 'ế' => 'e', 'Ề' => 'E', 'ề' => 'e', 'Ể' => 'E', 'ể' => 'e', 'Ễ' => 'E', 'ễ' => 'e', 'Ệ' => 'E', 'ệ' => 'e', 'Ỉ' => 'I', 'ỉ' => 'i', 'Ị' => 'I', 'ị' => 'i', 'Ọ' => 'O', 'ọ' => 'o', 'Ỏ' => 'O', 'ỏ' => 'o', 'Ố' => 'O', 'ố' => 'o', 'Ồ' => 'O', 'ồ' => 'o', 'Ổ' => 'O', 'ổ' => 'o', 'Ỗ' => 'O', 'ỗ' => 'o', 'Ộ' => 'O', 'ộ' => 'o', 'Ớ' => 'O', 'ớ' => 'o', 'Ờ' => 'O', 'ờ' => 'o', 'Ở' => 'O', 'ở' => 'o', 'Ỡ' => 'O', 'ỡ' => 'o', 'Ợ' => 'O', 'ợ' => 'o', 'Ụ' => 'U', 'ụ' => 'u', 'Ủ' => 'U', 'ủ' => 'u', 'Ứ' => 'U', 'ứ' => 'u', 'Ừ' => 'U', 'ừ' => 'u', 'Ử' => 'U', 'ử' => 'u', 'Ữ' => 'U', 'ữ' => 'u', 'Ự' => 'U', 'ự' => 'u', 'Ỳ' => 'Y', 'ỳ' => 'y', 'Ỵ' => 'Y', 'ỵ' => 'y', 'Ỷ' => 'Y', 'ỷ' => 'y', 'Ỹ' => 'Y', 'ỹ' => 'y', ' ' => ' ', ' ' => ' ', ' ' => ' ', ' ' => ' ', ' ' => ' ', ' ' => ' ', ' ' => ' ', ' ' => ' ', ' ' => ' ', ' ' => ' ', ' ' => ' ', '​' => '', '‌' => '', '‍' => '', '‐' => '-', '‑' => '-', '‒' => '-', '–' => '-', '—' => '-', '―' => '-', '‖' => '||', '‘' => "'", '’' => "'", '‚' => ',', '‛' => "'", '“' => '"', '”' => '"', '‟' => '"', '․' => '.', '‥' => '..', '…' => '...', ' ' => ' ', '′' => "'", '″' => '"', '‴' => '\'"', '‵' => "'", '‶' => '"', '‷' => '"\'', '‹' => '<', '›' => '>', '‼' => '!!', '‽' => '?!', '⁄' => '/', '⁇' => '?/', '⁈' => '?!', '⁉' => '!?', '℠' => 'SM', '™' => 'TM', '⅓' => '1/3', '⅔' => '2/3', '⅕' => '1/5', '⅖' => '2/5', '⅗' => '3/5', '⅘' => '4/5', '⅙' => '1/6', '⅚' => '5/6', '⅛' => '1/8', '⅜' => '3/8', '⅝' => '5/8', '⅞' => '7/8', 'Ⅰ' => 'I', 'Ⅱ' => 'II', 'Ⅲ' => 'III', 'Ⅳ' => 'IV', 'Ⅴ' => 'V', 'Ⅵ' => 'Vi', 'Ⅶ' => 'VII', 'Ⅷ' => 'VIII', 'Ⅸ' => 'IX', 'Ⅹ' => 'X', 'Ⅺ' => 'XI', 'Ⅻ' => 'XII', 'Ⅼ' => 'L', 'Ⅽ' => 'C', 'Ⅾ' => 'D', 'Ⅿ' => 'M', 'ⅰ' => 'i', 'ⅱ' => 'ii', 'ⅲ' => 'iii', 'ⅳ' => 'iv', 'ⅴ' => 'v', 'ⅵ' => 'vi', 'ⅶ' => 'vii', 'ⅷ' => 'viii', 'ⅸ' => 'ix', 'ⅹ' => 'x', 'ⅺ' => 'xi', 'ⅻ' => 'xii', 'ⅼ' => 'l', 'ⅽ' => 'c', 'ⅾ' => 'd', 'ⅿ' => 'm')]]></default>
        <docblock line="361">
          <description><![CDATA[A mapping of all ASCII-based latin characters, puntuation, symbols and number forms to ASCII.]]></description>
          <long-description><![CDATA[<p>Includes elements form the following unicode blocks:</p>

<ul>
<li>Latin-1 Supplement</li>
<li>Latin Extended-A</li>
<li>Latin Extended-B</li>
<li>IPA Extensions</li>
<li>Latin Extended Additional</li>
<li>General Punctuation</li>
<li>Letterlike symbols</li>
<li>Number Forms</li>
</ul>]]></long-description>
          <tag line="361" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="550" namespace="global" package="Sutra">
        <name>$mbstring_available</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="545">
          <description><![CDATA[If the [http://php.net/mbstring mbstring] extension is available]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="545" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="577" package="Flourish">
        <name>ascii</name>
        <full_name>ascii</full_name>
        <docblock line="553">
          <description><![CDATA[Maps UTF-8 ASCII-based latin characters, puntuation, symbols and number forms to ASCII]]></description>
          <long-description><![CDATA[<p>Any characters or symbols that can not be translated will be removed.</p>

<p>This function is most useful for situation that only allows ASCII, such
as in URLs.</p>

<p>Translates elements form the following unicode blocks:</p>

<ul>
<li>Latin-1 Supplement</li>
<li>Latin Extended-A</li>
<li>Latin Extended-B</li>
<li>IPA Extensions</li>
<li>Latin Extended Additional</li>
<li>General Punctuation</li>
<li>Letterlike symbols</li>
<li>Number Forms</li>
</ul>]]></long-description>
          <tag line="553" name="internal" description=""/>
          <tag line="553" name="param" description="The string to convert" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="553" name="return" description="The input string in pure ASCII" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="577">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="593" package="Flourish">
        <name>checkMbString</name>
        <full_name>checkMbString</full_name>
        <docblock line="588">
          <description><![CDATA[Checks to see if the [http://php.net/mbstring mbstring] extension is available]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="588" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="605" package="Flourish">
        <name>chr</name>
        <full_name>chr</full_name>
        <docblock line="599">
          <description><![CDATA[Converts a unicode value into a UTF-8 character]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="599" name="param" description="The character to create, either the `U+hex` or decimal code point" type="mixed" variable="$unicode_code_point">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="599" name="return" description="The UTF-8 character" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="605">
          <name>$unicode_code_point</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="658" package="Flourish">
        <name>clean</name>
        <full_name>clean</full_name>
        <docblock line="652">
          <description><![CDATA[Removes any invalid UTF-8 characters from a string or array of strings]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="652" name="param" description="The string or array of strings to clean" type="array|string" variable="$value">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="652" name="return" description="The cleaned string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="658">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="701" package="Flourish">
        <name>cmp</name>
        <full_name>cmp</full_name>
        <docblock line="689">
          <description><![CDATA[Compares strings, with the resulting order having latin characters that are based on ASCII letters placed after the relative ASCII characters]]></description>
          <long-description><![CDATA[<p>Please note that this function sorts based on English language sorting
rules only. Locale-sepcific sorting is done by
[http://php.net/strcoll strcoll()], however there are technical
limitations.</p>]]></long-description>
          <tag line="689" name="param" description="The first string to compare" type="string" variable="$str1">
            <type by_reference="false">string</type>
          </tag>
          <tag line="689" name="param" description="The second string to compare" type="string" variable="$str2">
            <type by_reference="false">string</type>
          </tag>
          <tag line="689" name="return" description="&lt; 0 if $str1 &lt; $str2, 0 if they are equal, &gt; 0 if $str1 &gt; $str2" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="701">
          <name>$str1</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="701">
          <name>$str2</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="724" package="Flourish">
        <name>convertOffsetToBytes</name>
        <full_name>convertOffsetToBytes</full_name>
        <docblock line="717">
          <description><![CDATA[Converts an offset in characters to an offset in bytes to that we can use the built-in functions for some operations]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="717" name="param" description="The string to base the offset on" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="717" name="param" description="The character offset to conver to bytes" type="integer" variable="$offset">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="717" name="return" description="The converted offset" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="724">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="724">
          <name>$offset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="770" package="Flourish">
        <name>detect</name>
        <full_name>detect</full_name>
        <docblock line="764">
          <description><![CDATA[Detects if a UTF-8 string contains any non-ASCII characters]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="764" name="param" description="The string to check" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="764" name="return" description="If the string contains any non-ASCII characters" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="770">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="786" package="Flourish">
        <name>explode</name>
        <full_name>explode</full_name>
        <docblock line="776">
          <description><![CDATA[Explodes a string on a delimiter]]></description>
          <long-description><![CDATA[<p>If no delimiter is provided, the string will be exploded with each
characters being an element in the array.</p>]]></long-description>
          <tag line="776" name="param" description="The string to explode" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="776" name="param" description="The string to explode on. If `NULL` or `''` this method will return one character per array index." type="string" variable="$delimiter">
            <type by_reference="false">string</type>
          </tag>
          <tag line="776" name="return" description="The exploded string" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="786">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="786">
          <name>$delimiter</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="809" package="Flourish">
        <name>iconv</name>
        <full_name>iconv</full_name>
        <docblock line="799">
          <description><![CDATA[This works around a bug in MAMP 1.9.4+ and PHP 5.3 where iconv()
does not seem to properly assign the return value to a variable, but
does work when returning the value.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="799" name="param" description="The incoming character encoding" type="string" variable="$in_charset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="799" name="param" description="The outgoing character encoding" type="string" variable="$out_charset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="799" name="param" description="The string to convert" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="799" name="return" description="The converted string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="809">
          <name>$in_charset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="809">
          <name>$out_charset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="809">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="827" package="Flourish">
        <name>icmp</name>
        <full_name>icmp</full_name>
        <docblock line="815">
          <description><![CDATA[Compares strings in a case-insensitive manner, with the resulting order having characters that are based on ASCII letters placed after the relative ASCII characters]]></description>
          <long-description><![CDATA[<p>Please note that this function sorts based on English language sorting
rules only. Locale-sepcific sorting is done by
[http://php.net/strcoll strcoll()], however there are technical
limitations.</p>]]></long-description>
          <tag line="815" name="param" description="The first string to compare" type="string" variable="$str1">
            <type by_reference="false">string</type>
          </tag>
          <tag line="815" name="param" description="The second string to compare" type="string" variable="$str2">
            <type by_reference="false">string</type>
          </tag>
          <tag line="815" name="return" description="&lt; 0 if $str1 &lt; $str2, 0 if they are equal, &gt; 0 if $str1 &gt; $str2" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="827">
          <name>$str1</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="827">
          <name>$str2</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="848" package="Flourish">
        <name>inatcmp</name>
        <full_name>inatcmp</full_name>
        <docblock line="836">
          <description><![CDATA[Compares strings using a natural order algorithm in a case-insensitive manner, with the resulting order having latin characters that are based on ASCII letters placed after the relative ASCII characters]]></description>
          <long-description><![CDATA[<p>Please note that this function sorts based on English language sorting
rules only. Locale-sepcific sorting is done by
[http://php.net/strcoll strcoll()], however there are technical
limitations.</p>]]></long-description>
          <tag line="836" name="param" description="The first string to compare" type="string" variable="$str1">
            <type by_reference="false">string</type>
          </tag>
          <tag line="836" name="param" description="The second string to compare" type="string" variable="$str2">
            <type by_reference="false">string</type>
          </tag>
          <tag line="836" name="return" description="`&lt; 0` if `$str1 &lt; $str2`, `0` if they are equal, `&gt; 0` if `$str1 &gt; $str2`" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="848">
          <name>$str1</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="848">
          <name>$str2</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="865" package="Flourish">
        <name>ipos</name>
        <full_name>ipos</full_name>
        <docblock line="857">
          <description><![CDATA[Finds the first position (in characters) of the search value in the string - case is ignored when doing performing a match]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="857" name="param" description="The string to search in" type="string" variable="$haystack">
            <type by_reference="false">string</type>
          </tag>
          <tag line="857" name="param" description="The string to search for. This match will be done in a case-insensitive manner." type="string" variable="$needle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="857" name="param" description="The character position to start searching from" type="integer" variable="$offset">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="857" name="return" description="The integer character position of the first occurence of the needle or `FALSE` if no match" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="865">
          <name>$haystack</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="865">
          <name>$needle</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="865">
          <name>$offset</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="900" package="Flourish">
        <name>ireplace</name>
        <full_name>ireplace</full_name>
        <docblock line="887">
          <description><![CDATA[Replaces matching parts of the string, with matches being done in a a case-insensitive manner]]></description>
          <long-description><![CDATA[<p>If <code>$search</code> and <code>$replace</code> are both arrays and <code>$replace</code> is shorter,
the extra <code>$search</code> string will be replaced with an empty string. If
<code>$search</code> is an array and <code>$replace</code> is a string, all <code>$search</code> values
will be replaced with the string specified.</p>]]></long-description>
          <tag line="887" name="param" description="The string to perform the replacements on" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="887" name="param" description="The string (or array of strings) to search for - see method description for details" type="mixed" variable="$search">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="887" name="param" description="The string (or array of strings) to replace with - see method description for details" type="mixed" variable="$replace">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="887" name="return" description="The input string with the specified replacements" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="900">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="900">
          <name>$search</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="900">
          <name>$replace</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="925" package="Flourish">
        <name>irpos</name>
        <full_name>irpos</full_name>
        <docblock line="917">
          <description><![CDATA[Finds the last position (in characters) of the search value in the string - case is ignored when doing performing a match]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="917" name="param" description="The string to search in" type="string" variable="$haystack">
            <type by_reference="false">string</type>
          </tag>
          <tag line="917" name="param" description="The string to search for. This match will be done in a case-insensitive manner." type="string" variable="$needle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="917" name="param" description="The character position to start searching from. A negative value will stop looking that many characters from the end of the string" type="integer" variable="$offset">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="917" name="return" description="The integer character position of the last occurence of the needle or `FALSE` if no match" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="925">
          <name>$haystack</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="925">
          <name>$needle</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="925">
          <name>$offset</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="958" package="Flourish">
        <name>istr</name>
        <full_name>istr</full_name>
        <docblock line="947">
          <description><![CDATA[Matches a string needle in the string haystack, returning a substring from the beginning of the needle to the end of the haystack]]></description>
          <long-description><![CDATA[<p>Can optionally return the part of the haystack before the needle. Matching
is done in a case-insensitive manner.</p>]]></long-description>
          <tag line="947" name="param" description="The string to search in" type="string" variable="$haystack">
            <type by_reference="false">string</type>
          </tag>
          <tag line="947" name="param" description="The string to search for. This match will be done in a case-insensitive manner." type="string" variable="$needle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="947" name="param" description="If a substring of the haystack before the needle should be returned instead of the substring from the needle to the end of the haystack" type="boolean" variable="$before_needle">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="947" name="return" description="The specified part of the haystack, or `FALSE` if the needle was not found" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="958">
          <name>$haystack</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="958">
          <name>$needle</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="958">
          <name>$before_needle</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="992" package="Flourish">
        <name>len</name>
        <full_name>len</full_name>
        <docblock line="986">
          <description><![CDATA[Determines the length (in characters) of a string]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="986" name="param" description="The string to measure" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="986" name="return" description="The number of characters in the string" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="992">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1012" package="Flourish">
        <name>lower</name>
        <full_name>lower</full_name>
        <docblock line="1006">
          <description><![CDATA[Converts all uppercase characters to lowercase]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1006" name="param" description="The string to convert" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1006" name="return" description="The input string with all uppercase characters in lowercase" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1012">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1040" package="Flourish">
        <name>ltrim</name>
        <full_name>ltrim</full_name>
        <docblock line="1033">
          <description><![CDATA[Trims whitespace, or any specified characters, from the beginning of a string]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1033" name="param" description="The string to trim" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1033" name="param" description="The characters to trim" type="string" variable="$charlist">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1033" name="return" description="The trimmed string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1040">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1040">
          <name>$charlist</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1065" package="Flourish">
        <name>natcmp</name>
        <full_name>natcmp</full_name>
        <docblock line="1053">
          <description><![CDATA[Compares strings using a natural order algorithm, with the resulting order having latin characters that are based on ASCII letters placed after the relative ASCII characters]]></description>
          <long-description><![CDATA[<p>Please note that this function sorts based on English language sorting
rules only. Locale-sepcific sorting is done by
[http://php.net/strcoll strcoll()], however there are technical
limitations.</p>]]></long-description>
          <tag line="1053" name="param" description="The first string to compare" type="string" variable="$str1">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1053" name="param" description="The second string to compare" type="string" variable="$str2">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1053" name="return" description="`&lt; 0` if `$str1 &lt; $str2`, `0` if they are equal, `&gt; 0` if `$str1 &gt; $str2`" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="1065">
          <name>$str1</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1065">
          <name>$str2</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1087" package="Flourish">
        <name>ord</name>
        <full_name>ord</full_name>
        <docblock line="1081">
          <description><![CDATA[Converts a UTF-8 character to a unicode code point]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1081" name="param" description="The character to decode" type="string" variable="$character">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1081" name="return" description="The U+hex unicode code point for the character" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1087">
          <name>$character</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1162" package="Flourish">
        <name>pad</name>
        <full_name>pad</full_name>
        <docblock line="1153">
          <description><![CDATA[Pads a string to the number of characters specified]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1153" name="param" description="The string to pad" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1153" name="param" description="The character length to pad the string to" type="integer" variable="$pad_length">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1153" name="param" description="The string to pad the source string with" type="string" variable="$pad_string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1153" name="param" description="The type of padding to do: `'left'`, `'right'`, `'both'`" type="string" variable="$pad_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1153" name="return" description="The input string padded to the specified character width" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1162">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1162">
          <name>$pad_length</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1162">
          <name>$pad_string</name>
          <default><![CDATA[' ']]></default>
          <type/>
        </argument>
        <argument line="1162">
          <name>$pad_type</name>
          <default><![CDATA['right']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1232" package="Flourish">
        <name>pos</name>
        <full_name>pos</full_name>
        <docblock line="1224">
          <description><![CDATA[Finds the first position (in characters) of the search value in the string]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1224" name="param" description="The string to search in" type="string" variable="$haystack">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1224" name="param" description="The string to search for" type="string" variable="$needle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1224" name="param" description="The character position to start searching from" type="integer" variable="$offset">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1224" name="return" description="The integer character position of the first occurence of the needle or `FALSE` if no match" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="1232">
          <name>$haystack</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1232">
          <name>$needle</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1232">
          <name>$offset</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1267" package="Flourish">
        <name>replace</name>
        <full_name>replace</full_name>
        <docblock line="1254">
          <description><![CDATA[Replaces matching parts of the string]]></description>
          <long-description><![CDATA[<p>If <code>$search</code> and <code>$replace</code> are both arrays and <code>$replace</code> is shorter,
the extra <code>$search</code> string will be replaced with an empty string. If
<code>$search</code> is an array and <code>$replace</code> is a string, all <code>$search</code> values
will be replaced with the string specified.</p>]]></long-description>
          <tag line="1254" name="param" description="The string to perform the replacements on" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1254" name="param" description="The string (or array of strings) to search for - see method description for details" type="mixed" variable="$search">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1254" name="param" description="The string (or array of strings) to replace with - see method description for details" type="mixed" variable="$replace">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1254" name="return" description="The input string with the specified replacements" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1267">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1267">
          <name>$search</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1267">
          <name>$replace</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1280" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="1273">
          <description><![CDATA[Resets the configuration of the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1273" name="internal" description=""/>
          <tag line="1273" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1292" package="Flourish">
        <name>rev</name>
        <full_name>rev</full_name>
        <docblock line="1286">
          <description><![CDATA[Reverses a string]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1286" name="param" description="The string to reverse" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1286" name="return" description="The reversed string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1292">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1342" package="Flourish">
        <name>rpos</name>
        <full_name>rpos</full_name>
        <docblock line="1334">
          <description><![CDATA[Finds the last position (in characters) of the search value in the string]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1334" name="param" description="The string to search in" type="string" variable="$haystack">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1334" name="param" description="The string to search for." type="string" variable="$needle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1334" name="param" description="The character position to start searching from. A negative value will stop looking that many characters from the end of the string" type="integer" variable="$offset">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1334" name="return" description="The integer character position of the last occurence of the needle or `FALSE` if no match" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="1342">
          <name>$haystack</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1342">
          <name>$needle</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1342">
          <name>$offset</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1370" package="Flourish">
        <name>rtrim</name>
        <full_name>rtrim</full_name>
        <docblock line="1363">
          <description><![CDATA[Trims whitespace, or any specified characters, from the end of a string]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1363" name="param" description="The string to trim" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1363" name="param" description="The characters to trim" type="string" variable="$charlist">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1363" name="return" description="The trimmed string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1370">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1370">
          <name>$charlist</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1393" package="Flourish">
        <name>str</name>
        <full_name>str</full_name>
        <docblock line="1383">
          <description><![CDATA[Matches a string needle in the string haystack, returning a substring from the beginning of the needle to the end of the haystack]]></description>
          <long-description><![CDATA[<p>Can optionally return the part of the haystack before the needle.</p>]]></long-description>
          <tag line="1383" name="param" description="The string to search in" type="string" variable="$haystack">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1383" name="param" description="The string to search for" type="string" variable="$needle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1383" name="param" description="If a substring of the haystack before the needle should be returned instead of the substring from the needle to the end of the haystack" type="boolean" variable="$before_needle">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1383" name="return" description="The specified part of the haystack, or `FALSE` if the needle was not found" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="1393">
          <name>$haystack</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1393">
          <name>$needle</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1393">
          <name>$before_needle</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1425" package="Flourish">
        <name>sub</name>
        <full_name>sub</full_name>
        <docblock line="1417">
          <description><![CDATA[Extracts part of a string]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1417" name="param" description="The string to extract from" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1417" name="param" description="The zero-based starting index to extract from. Negative values will start the extraction that many characters from the end of the string." type="integer" variable="$start">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1417" name="param" description="The length of the string to extract. If an empty value is provided, the remainder of the string will be returned." type="integer" variable="$length">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1417" name="return" description="The extracted subtring or `FALSE` if the start is out of bounds" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="1425">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1425">
          <name>$start</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1425">
          <name>$length</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1492" package="Flourish">
        <name>trim</name>
        <full_name>trim</full_name>
        <docblock line="1485">
          <description><![CDATA[Trims whitespace, or any specified characters, from the beginning and end of a string]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1485" name="param" description="The string to trim" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1485" name="param" description="The characters to trim, .. indicates a range" type="string" variable="$charlist">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1485" name="return" description="The trimmed string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1492">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1492">
          <name>$charlist</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1511" package="Flourish">
        <name>ucfirst</name>
        <full_name>ucfirst</full_name>
        <docblock line="1505">
          <description><![CDATA[Converts the first character of the string to uppercase.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1505" name="param" description="The string to process" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1505" name="return" description="The processed string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1511">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1526" package="Flourish">
        <name>ucwords</name>
        <full_name>ucwords</full_name>
        <docblock line="1517">
          <description><![CDATA[Converts the first character of every word to uppercase]]></description>
          <long-description><![CDATA[<p>Words are considered to start at the beginning of the string, or after any
whitespace character.</p>]]></long-description>
          <tag line="1517" name="param" description="The string to process" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1517" name="return" description="The processed string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1526">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="1542" package="Flourish">
        <name>ucwordsCallback</name>
        <full_name>ucwordsCallback</full_name>
        <docblock line="1536">
          <description><![CDATA[Handles converting a character to uppercase for ::ucwords()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1536" name="param" description="The regex match from ::ucwords()" type="array" variable="$match">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1536" name="return" description="The uppercase character" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1542">
          <name>$match</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1554" package="Flourish">
        <name>upper</name>
        <full_name>upper</full_name>
        <docblock line="1548">
          <description><![CDATA[Converts all lowercase characters to uppercase]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1548" name="param" description="The string to convert" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1548" name="return" description="The input string with all lowercase characters in uppercase" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1554">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1584" package="Flourish">
        <name>wordwrap</name>
        <full_name>wordwrap</full_name>
        <docblock line="1575">
          <description><![CDATA[Wraps a string to a specific character width]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1575" name="param" description="The string to wrap" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1575" name="param" description="The character width to wrap to" type="integer" variable="$width">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1575" name="param" description="The string to insert as a break" type="string" variable="$break">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1575" name="param" description="If words longer than the character width should be split to fit" type="boolean" variable="$cut">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1575" name="return" description="The input string with all lowercase characters in uppercase" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1584">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1584">
          <name>$width</name>
          <default><![CDATA[75]]></default>
          <type/>
        </argument>
        <argument line="1584">
          <name>$break</name>
          <default><![CDATA["\n"]]></default>
          <type/>
        </argument>
        <argument line="1584">
          <name>$cut</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1625" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="1620">
          <description><![CDATA[Forces use as a static class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1620" name="return" description="" type="\fUTF8">
            <type by_reference="false">\fUTF8</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fUTF8.php</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fEnvironmentException.php" hash="40178eb07f8a91cc742d28d0272a4548" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="15" package="Flourish">
      <extends>\fUnexpectedException</extends>
      <name>fEnvironmentException</name>
      <full_name>\fEnvironmentException</full_name>
      <docblock line="2">
        <description><![CDATA[An exception caused by an environment error such a file permissions]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2008 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fEnvironmentException" link="http://flourishlib.com/fEnvironmentException"/>
        <tag line="2" name="version" description="1.0.0b"/>
        <tag line="2" name="changes" description="1.0.0b  The initial implementation [wb, 2007-06-14]"/>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fEnvironmentException.php</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fFile.php" hash="2fdb99e2b161059b6e86184282f8f25a" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="56" package="Flourish">
      <extends/>
      <implements>\Iterator</implements>
      <implements>\Countable</implements>
      <name>fFile</name>
      <full_name>\fFile</full_name>
      <docblock line="2">
        <description><![CDATA[Represents a file on the filesystem, also provides static file-related methods]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2011 Will Bond, others"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="author" description="Will Bond, iMarc LLC [wb-imarc] &lt;will@imarc.net&gt;"/>
        <tag line="2" name="author" description="Kevin Hamer, iMarc LLC [kh] &lt;kevin@imarc.net&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fFile" link="http://flourishlib.com/fFile"/>
        <tag line="2" name="version" description="1.0.0b40"/>
        <tag line="2" name="changes" description="1.0.0b40  Improved ::determineMimeTypeByContents() for text files to focus on the first non-blank line and look for &lt;html. [kh, 2012-07-25]"/>
        <tag line="2" name="changes" description="1.0.0b39  Backwards Compatibility Break - ::output() now automatically ends any open output buffering and discards the contents [wb, 2011-08-24]"/>
        <tag line="2" name="changes" description="1.0.0b38  Added the Countable interface to the class [wb, 2011-06-03]"/>
        <tag line="2" name="changes" description="1.0.0b37  Fixed mime type detection of BMP images [wb, 2011-03-07]"/>
        <tag line="2" name="changes" description="1.0.0b36  Added the `$remove_extension` parameter to ::getName() [wb, 2011-01-10]"/>
        <tag line="2" name="changes" description="1.0.0b35  Added calls to clearstatcache() in ::append() and ::write() to prevent incorrect data from being returned by ::getMTime() and ::getSize() [wb, 2010-11-27]"/>
        <tag line="2" name="changes" description="1.0.0b34  Added ::getExtension() [wb, 2010-05-10]"/>
        <tag line="2" name="changes" description="1.0.0b33  Fixed another situation where ::rename() with the same name would cause the file to be deleted [wb, 2010-04-13]"/>
        <tag line="2" name="changes" description="1.0.0b32  Fixed ::rename() to not fail when the new and old filename are the same [wb, 2010-03-16]"/>
        <tag line="2" name="changes" description="1.0.0b31  Added ::append() [wb, 2010-03-15]"/>
        <tag line="2" name="changes" description="1.0.0b30  Changed the way files deleted in a filesystem transaction are handled, including improvements to the exception that is thrown [wb+wb-imarc, 2010-03-05]"/>
        <tag line="2" name="changes" description="1.0.0b29  Fixed a couple of undefined variable errors in ::determineMimeTypeByContents() [wb, 2010-03-03]"/>
        <tag line="2" name="changes" description="1.0.0b28  Added support for some JPEG files created by Photoshop [wb, 2009-12-16]"/>
        <tag line="2" name="changes" description="1.0.0b27  Backwards Compatibility Break - renamed ::getFilename() to ::getName(), ::getFilesize() to ::getSize(), ::getDirectory() to ::getParent(), added ::move() [wb, 2009-12-16]"/>
        <tag line="2" name="changes" description="1.0.0b26  ::getDirectory(), ::getFilename() and ::getPath() now all work even if the file has been deleted [wb, 2009-10-22]"/>
        <tag line="2" name="changes" description="1.0.0b25  Fixed ::__construct() to throw an fValidationException when the file does not exist [wb, 2009-08-21]"/>
        <tag line="2" name="changes" description="1.0.0b24  Fixed a bug where deleting a file would prevent any future operations in the same script execution on a file or directory with the same path [wb, 2009-08-20]"/>
        <tag line="2" name="changes" description="1.0.0b23  Added the ability to skip checks in ::__construct() for better performance in conjunction with fFilesystem::createObject() [wb, 2009-08-06]"/>
        <tag line="2" name="changes" description="1.0.0b22  Fixed ::__toString() to never throw an exception [wb, 2009-08-06]"/>
        <tag line="2" name="changes" description="1.0.0b21  Fixed a bug in ::determineMimeType() [wb, 2009-07-21]"/>
        <tag line="2" name="changes" description="1.0.0b20  Fixed the exception message thrown by ::output() when output buffering is turned on [wb, 2009-06-26]"/>
        <tag line="2" name="changes" description="1.0.0b19  ::rename() will now rename the file in its current directory if the new filename has no directory separator [wb, 2009-05-04]"/>
        <tag line="2" name="changes" description="1.0.0b18  Changed ::__sleep() to not reset the iterator since it can cause side-effects [wb, 2009-05-04]"/>
        <tag line="2" name="changes" description="1.0.0b17  Added ::__sleep() and ::__wakeup() for proper serialization with the filesystem map [wb, 2009-05-03]"/>
        <tag line="2" name="changes" description="1.0.0b16  ::output() now accepts `TRUE` in the second parameter to use the current filename as the attachment filename [wb, 2009-03-23]"/>
        <tag line="2" name="changes" description="1.0.0b15  Added support for mime type detection of MP3s based on the MPEG-2 (as opposed to MPEG-1) standard [wb, 2009-03-23]"/>
        <tag line="2" name="changes" description="1.0.0b14  Fixed a bug with detecting the mime type of some MP3s [wb, 2009-03-22]"/>
        <tag line="2" name="changes" description="1.0.0b13  Fixed a bug with overwriting files via ::rename() on Windows [wb, 2009-03-11]"/>
        <tag line="2" name="changes" description="1.0.0b12  Backwards compatibility break - Changed the second parameter of ::output() from `$ignore_output_buffer` to `$filename` [wb, 2009-03-05]"/>
        <tag line="2" name="changes" description="1.0.0b11  Changed ::__clone() and ::duplicate() to copy file permissions to the new file [wb, 2009-01-05]"/>
        <tag line="2" name="changes" description="1.0.0b10  Fixed ::duplicate() so an exception is not thrown when no parameters are passed [wb, 2009-01-05]"/>
        <tag line="2" name="changes" description="1.0.0b9   Removed the dependency on fBuffer [wb, 2009-01-05]"/>
        <tag line="2" name="changes" description="1.0.0b8   Added the Iterator interface, ::output() and ::getMTime() [wb, 2008-12-17]"/>
        <tag line="2" name="changes" description="1.0.0b7   Removed some unnecessary error suppresion operators [wb, 2008-12-11]"/>
        <tag line="2" name="changes" description="1.0.0b6   Added the ::__clone() method that duplicates the file on the filesystem when cloned [wb, 2008-12-11]"/>
        <tag line="2" name="changes" description="1.0.0b5   Fixed detection of mime type for JPEG files with Exif information [wb, 2008-12-04]"/>
        <tag line="2" name="changes" description="1.0.0b4   Changed the constructor to ensure the path is to a file and not directory [wb, 2008-11-24]"/>
        <tag line="2" name="changes" description="1.0.0b3   Fixed mime type detection of Microsoft Office files [wb, 2008-11-23]"/>
        <tag line="2" name="changes" description="1.0.0b2   Made ::rename() and ::write() return the object for method chaining [wb, 2008-11-22]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2007-06-14]"/>
      </docblock>
      <constant namespace="global" line="59" package="Flourish">
        <name>create</name>
        <full_name>create</full_name>
        <value><![CDATA['fFile::create']]></value>
      </constant>
      <property final="false" static="false" visibility="private" line="457" namespace="global" package="Sutra">
        <name>$current_line</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="452">
          <description><![CDATA[The current line of the file]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="452" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="464" namespace="global" package="Sutra">
        <name>$current_line_number</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="459">
          <description><![CDATA[The current line number of the file]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="459" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="471" namespace="global" package="Sutra">
        <name>$deleted</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="466">
          <description><![CDATA[A backtrace from when the file was deleted]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="466" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="478" namespace="global" package="Sutra">
        <name>$file</name>
        <default><![CDATA[]]></default>
        <docblock line="473">
          <description><![CDATA[The full path to the file]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="473" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="485" namespace="global" package="Sutra">
        <name>$file_handle</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="480">
          <description><![CDATA[The file handle for iteration]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="480" name="var" description="" type="resource">
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="73" package="Flourish">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="62">
          <description><![CDATA[Creates a file on the filesystem and returns an object representing it.]]></description>
          <long-description><![CDATA[<p>This operation will be reverted by a filesystem transaction being rolled back.</p>]]></long-description>
          <tag line="62" name="throws" description="When no file was specified or the file already exists" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="62" name="param" description="The path to the new file" type="string" variable="$file_path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="62" name="param" description="The contents to write to the file, must be a non-NULL value to be written" type="string" variable="$contents">
            <type by_reference="false">string</type>
          </tag>
          <tag line="62" name="return" description="" type="\fFile">
            <type by_reference="false">\fFile</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$file_path</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="73">
          <name>$contents</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="120" package="Flourish">
        <name>determineMimeType</name>
        <full_name>determineMimeType</full_name>
        <docblock line="108">
          <description><![CDATA[Determines the file's mime type by either looking at the file contents or matching the extension]]></description>
          <long-description><![CDATA[<p>Please see the ::getMimeType() description for details about how the
mime type is determined and what mime types are detected.</p>]]></long-description>
          <tag line="108" name="internal" description=""/>
          <tag line="108" name="param" description="The file to check the mime type for - must be a valid filesystem path if no `$contents` are provided, otherwise just a filename" type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="108" name="param" description="The first 4096 bytes of the file content - the `$file` parameter only need be a filename if this is provided" type="string" variable="$contents">
            <type by_reference="false">string</type>
          </tag>
          <tag line="108" name="return" description="The mime type of the file" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="120">
          <name>$file</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="120">
          <name>$contents</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="155" package="Flourish">
        <name>determineMimeTypeByContents</name>
        <full_name>determineMimeTypeByContents</full_name>
        <docblock line="148">
          <description><![CDATA[Looks for specific bytes in a file to determine the mime type of the file]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="148" name="param" description="The first 4 bytes of the file content to use for byte checking" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="148" name="param" description="The extension of the filetype, only used for difficult files such as Microsoft office documents" type="string" variable="$extension">
            <type by_reference="false">string</type>
          </tag>
          <tag line="148" name="return" description="The mime type of the file" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="155">
          <name>$content</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="155">
          <name>$extension</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="396" package="Flourish">
        <name>determineMimeTypeByExtension</name>
        <full_name>determineMimeTypeByExtension</full_name>
        <docblock line="390">
          <description><![CDATA[Uses the extension of the all-text file to determine the mime type]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="390" name="param" description="The file extension" type="string" variable="$extension">
            <type by_reference="false">string</type>
          </tag>
          <tag line="390" name="return" description="The mime type of the file" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="396">
          <name>$extension</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="495" package="Flourish">
        <name>__clone</name>
        <full_name>__clone</full_name>
        <docblock line="488">
          <description><![CDATA[Duplicates a file in the current directory when the object is cloned]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="488" name="internal" description=""/>
          <tag line="488" name="return" description="The new fFile object" type="\fFile">
            <type by_reference="false">\fFile</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="535" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="523">
          <description><![CDATA[Creates an object to represent a file on the filesystem]]></description>
          <long-description><![CDATA[<p>If multiple fFile objects are created for a single file, they will
reflect changes in each other including rename and delete actions.</p>]]></long-description>
          <tag line="523" name="throws" description="When no file was specified, the file does not exist or the path specified is not a file" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="523" name="param" description="The path to the file" type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="523" name="param" description="If file checks should be skipped, which improves performance, but may cause undefined behavior - only skip these if they are duplicated elsewhere" type="boolean" variable="$skip_checks">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="523" name="return" description="" type="\fFile">
            <type by_reference="false">\fFile</type>
          </tag>
        </docblock>
        <argument line="535">
          <name>$file</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="535">
          <name>$skip_checks</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="580" package="Flourish">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="572">
          <description><![CDATA[All requests that hit this method should be requests for callbacks]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="572" name="internal" description=""/>
          <tag line="572" name="param" description="The method to create a callback for" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="572" name="return" description="The callback for the method requested" type="callback">
            <type by_reference="false">callback</type>
          </tag>
        </docblock>
        <argument line="580">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="593" package="Flourish">
        <name>__sleep</name>
        <full_name>__sleep</full_name>
        <docblock line="586">
          <description><![CDATA[The iterator information doesn't need to be serialized since a resource can't be]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="586" name="internal" description=""/>
          <tag line="586" name="return" description="The instance variables to serialize" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="604" package="Flourish">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="599">
          <description><![CDATA[Returns the filename of the file]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="599" name="return" description="The filename" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="621" package="Flourish">
        <name>__wakeup</name>
        <full_name>__wakeup</full_name>
        <docblock line="614">
          <description><![CDATA[Re-inserts the file back into the filesystem map when unserialized]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="614" name="internal" description=""/>
          <tag line="614" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="644" package="Flourish">
        <name>append</name>
        <full_name>append</full_name>
        <docblock line="635">
          <description><![CDATA[Appends the provided data to the file]]></description>
          <long-description><![CDATA[<p>If a filesystem transaction is in progress and is rolled back, this
data will be removed.</p>]]></long-description>
          <tag line="635" name="param" description="The data to append to the file" type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="635" name="return" description="The file object, to allow for method chaining" type="\fFile">
            <type by_reference="false">\fFile</type>
          </tag>
        </docblock>
        <argument line="644">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="672" package="Flourish">
        <name>count</name>
        <full_name>count</full_name>
        <docblock line="667">
          <description><![CDATA[Returns the number of lines in the file]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="667" name="return" description="The number of lines in the file" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="709" package="Flourish">
        <name>current</name>
        <full_name>current</full_name>
        <docblock line="701">
          <description><![CDATA[Returns the current line of the file (required by iterator interface)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="701" name="throws" description="When there are no remaining lines in the file" type="\fNoRemainingException">
            <type by_reference="false">\fNoRemainingException</type>
          </tag>
          <tag line="701" name="internal" description=""/>
          <tag line="701" name="return" description="The current row" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="735" package="Flourish">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="725">
          <description><![CDATA[Deletes the current file]]></description>
          <long-description><![CDATA[<p>This operation will NOT be performed until the filesystem transaction
has been committed, if a transaction is in progress. Any non-Flourish
code (PHP or system) will still see this file as existing until that
point.</p>]]></long-description>
          <tag line="725" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="775" package="Flourish">
        <name>duplicate</name>
        <full_name>duplicate</full_name>
        <docblock line="760">
          <description><![CDATA[Creates a new file object with a copy of this file]]></description>
          <long-description><![CDATA[<p>If no directory is specified, the file is created with a new name in
the current directory. If a new directory is specified, you must also
indicate if you wish to overwrite an existing file with the same name
in the new directory or create a unique name.</p>

<p>This operation will be reverted by a filesystem transaction being rolled
back.</p>]]></long-description>
          <tag line="760" name="param" description="The directory to duplicate the file into if different than the current directory" type="string|\fDirectory" variable="$new_directory">
            <type by_reference="false">string</type>
            <type by_reference="false">\fDirectory</type>
          </tag>
          <tag line="760" name="param" description="If a new directory is specified, this indicates if a file with the same name should be overwritten." type="boolean" variable="$overwrite">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="760" name="return" description="The new fFile object" type="\fFile">
            <type by_reference="false">\fFile</type>
          </tag>
        </docblock>
        <argument line="775">
          <name>$new_directory</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="775">
          <name>$overwrite</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="837" package="Flourish">
        <name>getExtension</name>
        <full_name>getExtension</full_name>
        <docblock line="832">
          <description><![CDATA[Gets the file extension]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="832" name="return" description="The extension of the file" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="924" package="Flourish">
        <name>getMimeType</name>
        <full_name>getMimeType</full_name>
        <docblock line="843">
          <description><![CDATA[Gets the file's mime type]]></description>
          <long-description><![CDATA[<p>This method will attempt to look at the file contents and the file
extension to determine the mime type. If the file contains binary
information, the contents will be used for mime type verification,
however if the contents appear to be plain text, the file extension
will be used.</p>

<p>The following mime types are supported. All other binary file types
will be returned as <code>application/octet-stream</code> and all other text files
will be returned as <code>text/plain</code>.</p>

<p><strong>Archive:</strong></p>

<ul>
<li><code>application/x-bzip2</code> BZip2 file</li>
<li><code>application/x-compress</code> Compress (*nix) file</li>
<li><code>application/x-gzip</code> GZip file</li>
<li><code>application/x-rar-compressed</code> Rar file</li>
<li><code>application/x-stuffit</code> StuffIt file</li>
<li><code>application/x-tar</code> Tar file</li>
<li><code>application/zip</code> Zip file</li>
</ul>

<p><strong>Audio:</strong></p>

<ul>
<li><code>audio/x-flac</code> FLAC audio</li>
<li><code>audio/mpeg</code> MP3 audio</li>
<li><code>audio/mp4</code> MP4 (AAC) audio</li>
<li><code>audio/vorbis</code> Ogg Vorbis audio</li>
<li><code>audio/x-wav</code> WAV audio</li>
<li><code>audio/x-ms-wma</code> Windows media audio</li>
</ul>

<p><strong>Document:</strong></p>

<ul>
<li><code>application/vnd.ms-excel</code> Excel (2000, 2003 and 2007) file</li>
<li><code>application/pdf</code> PDF file</li>
<li><code>application/vnd.ms-powerpoint</code> Powerpoint (2000, 2003, 2007) file</li>
<li><code>text/rtf</code> RTF file</li>
<li><code>application/msword</code> Word (2000, 2003 and 2007) file</li>
</ul>

<p><strong>Image:</strong></p>

<ul>
<li><code>image/x-ms-bmp</code> BMP file</li>
<li><code>application/postscript</code> EPS file</li>
<li><code>image/gif</code> GIF file</li>
<li><code>application/vnd.microsoft.icon</code> ICO file</li>
<li><code>image/jpeg</code> JPEG file</li>
<li><code>image/png</code> PNG file</li>
<li><code>image/tiff</code> TIFF file</li>
<li><code>image/svg+xml</code> SVG file</li>
</ul>

<p><strong>Text:</strong></p>

<ul>
<li><code>text/css</code> CSS file</li>
<li><code>text/csv</code> CSV file</li>
<li><code>text/html</code> (X)HTML file</li>
<li><code>text/calendar</code> iCalendar file</li>
<li><code>application/javascript</code> Javascript file</li>
<li><code>application/x-perl</code> Perl file</li>
<li><code>application/x-httpd-php</code> PHP file</li>
<li><code>application/x-python</code> Python file</li>
<li><code>application/rss+xml</code> RSS feed</li>
<li><code>application/x-ruby</code> Ruby file</li>
<li><code>text/tab-separated-values</code> TAB file</li>
<li><code>text/x-vcard</code> VCard file</li>
<li><code>application/xhtml+xml</code> XHTML (Real) file</li>
<li><code>application/xml</code> XML file</li>
</ul>

<p><strong>Video/Animation:</strong></p>

<ul>
<li><code>video/x-msvideo</code> AVI video</li>
<li><code>application/x-shockwave-flash</code> Flash movie</li>
<li><code>video/x-flv</code> Flash video</li>
<li><code>video/x-ms-asf</code> Microsoft ASF video</li>
<li><code>video/mp4</code> MP4 video</li>
<li><code>video/ogg</code> OGM and Ogg Theora video</li>
<li><code>video/quicktime</code> Quicktime video</li>
<li><code>video/x-ms-wmv</code> Windows media video</li>
</ul>]]></long-description>
          <tag line="843" name="return" description="The mime type of the file" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="937" package="Flourish">
        <name>getMTime</name>
        <full_name>getMTime</full_name>
        <docblock line="932">
          <description><![CDATA[Returns the last modification time of the file]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="932" name="return" description="The timestamp of when the file was last modified" type="\fTimestamp">
            <type by_reference="false">\fTimestamp</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="951" package="Flourish">
        <name>getName</name>
        <full_name>getName</full_name>
        <docblock line="945">
          <description><![CDATA[Gets the filename (i.e.]]></description>
          <long-description><![CDATA[<p>does not include the directory)</p>]]></long-description>
          <tag line="945" name="param" description="If the extension should be removed from the filename" type="boolean" variable="$remove_extension">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="945" name="return" description="The filename of the file" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="951">
          <name>$remove_extension</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="963" package="Flourish">
        <name>getParent</name>
        <full_name>getParent</full_name>
        <docblock line="958">
          <description><![CDATA[Gets the directory the file is located in]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="958" name="return" description="The directory containing the file" type="\fDirectory">
            <type by_reference="false">\fDirectory</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="978" package="Flourish">
        <name>getPath</name>
        <full_name>getPath</full_name>
        <docblock line="969">
          <description><![CDATA[Gets the file's current path (directory and filename)]]></description>
          <long-description><![CDATA[<p>If the web path is requested, uses translations set with
fFilesystem::addWebPathTranslation()</p>]]></long-description>
          <tag line="969" name="param" description="If the path should be the web path" type="boolean" variable="$translate_to_web_path">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="969" name="return" description="The path (directory and filename) for the file" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="978">
          <name>$translate_to_web_path</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="996" package="Flourish">
        <name>getSize</name>
        <full_name>getSize</full_name>
        <docblock line="987">
          <description><![CDATA[Gets the size of the file]]></description>
          <long-description><![CDATA[<p>The return value may be incorrect for files over 2GB on 32-bit OSes.</p>]]></long-description>
          <tag line="987" name="param" description="If the filesize should be formatted for human readability" type="boolean" variable="$format">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="987" name="param" description="The number of decimal places to format to (if enabled)" type="integer" variable="$decimal_places">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="987" name="return" description="If formatted a string with filesize in b/kb/mb/gb/tb, otherwise an integer" type="integer|string">
            <type by_reference="false">integer</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="996">
          <name>$format</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
        <argument line="996">
          <name>$decimal_places</name>
          <default><![CDATA[1]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1016" package="Flourish">
        <name>isWritable</name>
        <full_name>isWritable</full_name>
        <docblock line="1011">
          <description><![CDATA[Check to see if the current file is writable]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1011" name="return" description="If the file is writable" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1032" package="Flourish">
        <name>key</name>
        <full_name>key</full_name>
        <docblock line="1024">
          <description><![CDATA[Returns the current one-based line number (required by iterator interface)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1024" name="throws" description="When there are no remaining lines in the file" type="\fNoRemainingException">
            <type by_reference="false">\fNoRemainingException</type>
          </tag>
          <tag line="1024" name="internal" description=""/>
          <tag line="1024" name="return" description="The current line number" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1066" package="Flourish">
        <name>move</name>
        <full_name>move</full_name>
        <docblock line="1047">
          <description><![CDATA[Moves the current file to a different directory]]></description>
          <long-description><![CDATA[<p>Please note that ::rename() will rename a file in its directory or rename
it into a different directory.</p>

<p>If the current file's filename already exists in the new directory and
the overwrite flag is set to false, the filename will be changed to a
unique name.</p>

<p>This operation will be reverted if a filesystem transaction is in
progress and is later rolled back.</p>]]></long-description>
          <tag line="1047" name="throws" description="When the directory passed is not a directory or is not readable" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="1047" name="param" description="The directory to move this file into" type="\fDirectory|string" variable="$new_directory">
            <type by_reference="false">\fDirectory</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="1047" name="param" description="If the current filename already exists in the new directory, `TRUE` will cause the file to be overwritten, `FALSE` will cause the new filename to change" type="boolean" variable="$overwrite">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1047" name="return" description="The file object, to allow for method chaining" type="\fFile">
            <type by_reference="false">\fFile</type>
          </tag>
        </docblock>
        <argument line="1066">
          <name>$new_directory</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1066">
          <name>$overwrite</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1084" package="Flourish">
        <name>next</name>
        <full_name>next</full_name>
        <docblock line="1076">
          <description><![CDATA[Advances to the next line in the file (required by iterator interface)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1076" name="throws" description="When there are no remaining lines in the file" type="\fNoRemainingException">
            <type by_reference="false">\fNoRemainingException</type>
          </tag>
          <tag line="1076" name="internal" description=""/>
          <tag line="1076" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1115" package="Flourish">
        <name>output</name>
        <full_name>output</full_name>
        <docblock line="1102">
          <description><![CDATA[Prints the contents of the file]]></description>
          <long-description><![CDATA[<p>This method is primarily intended for when PHP is used to control access
to files.</p>

<p>Be sure to close the session, if open, to prevent performance issues.
Any open output buffers are automatically closed and discarded.</p>]]></long-description>
          <tag line="1102" name="param" description="If HTTP headers for the file should be included" type="boolean" variable="$headers">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1102" name="param" description="Present the file as an attachment instead of just outputting type headers - if a string is passed, that will be used for the filename, if `TRUE` is passed, the current filename will be used" type="mixed" variable="$filename">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1102" name="return" description="The file object, to allow for method chaining" type="\fFile">
            <type by_reference="false">\fFile</type>
          </tag>
        </docblock>
        <argument line="1115">
          <name>$headers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1115">
          <name>$filename</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1152" package="Flourish">
        <name>read</name>
        <full_name>read</full_name>
        <docblock line="1142">
          <description><![CDATA[Reads the data from the file]]></description>
          <long-description><![CDATA[<p>Reads all file data into memory, use with caution on large files!</p>

<p>This operation will read the data that has been written during the
current transaction if one is in progress.</p>]]></long-description>
          <tag line="1142" name="return" description="The contents of the file" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1173" package="Flourish">
        <name>rename</name>
        <full_name>rename</full_name>
        <docblock line="1160">
          <description><![CDATA[Renames the current file]]></description>
          <long-description><![CDATA[<p>If the filename already exists and the overwrite flag is set to false,
a new filename will be created.</p>

<p>This operation will be reverted if a filesystem transaction is in
progress and is later rolled back.</p>]]></long-description>
          <tag line="1160" name="param" description="The new full path to the file or a new filename in the current directory" type="string" variable="$new_filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1160" name="param" description="If the new filename already exists, `TRUE` will cause the file to be overwritten, `FALSE` will cause the new filename to change" type="boolean" variable="$overwrite">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1160" name="return" description="The file object, to allow for method chaining" type="\fFile">
            <type by_reference="false">\fFile</type>
          </tag>
        </docblock>
        <argument line="1173">
          <name>$new_filename</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1173">
          <name>$overwrite</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1253" package="Flourish">
        <name>rewind</name>
        <full_name>rewind</full_name>
        <docblock line="1246">
          <description><![CDATA[Rewinds the file handle (required by iterator interface)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1246" name="internal" description=""/>
          <tag line="1246" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1268" package="Flourish">
        <name>tossIfDeleted</name>
        <full_name>tossIfDeleted</full_name>
        <docblock line="1263">
          <description><![CDATA[Throws an fProgrammerException if the file has been deleted]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1263" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1286" package="Flourish">
        <name>valid</name>
        <full_name>valid</full_name>
        <docblock line="1279">
          <description><![CDATA[Returns if the file has any lines left (required by iterator interface)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1279" name="internal" description=""/>
          <tag line="1279" name="return" description="If the iterator is still valid" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1310" package="Flourish">
        <name>write</name>
        <full_name>write</full_name>
        <docblock line="1298">
          <description><![CDATA[Writes the provided data to the file]]></description>
          <long-description><![CDATA[<p>Requires all previous data to be stored in memory if inside a
transaction, use with caution on large files!</p>

<p>If a filesystem transaction is in progress and is rolled back, the
previous data will be restored.</p>]]></long-description>
          <tag line="1298" name="param" description="The data to write to the file" type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1298" name="return" description="The file object, to allow for method chaining" type="\fFile">
            <type by_reference="false">\fFile</type>
          </tag>
        </docblock>
        <argument line="1310">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fFile.php</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fTime.php" hash="cc170b7abd6bdc17ef7568d6abc9d353" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="26" package="Flourish">
      <extends/>
      <name>fTime</name>
      <full_name>\fTime</full_name>
      <docblock line="2">
        <description><![CDATA[Represents a time of day as a value object]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2008-2011 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fTime" link="http://flourishlib.com/fTime"/>
        <tag line="2" name="version" description="1.0.0b12"/>
        <tag line="2" name="changes" description="1.0.0b12  Fixed a method signature [wb, 2011-08-24]"/>
        <tag line="2" name="changes" description="1.0.0b11  Fixed a bug with the constructor not properly handling unix timestamps that are negative integers [wb, 2011-06-02]"/>
        <tag line="2" name="changes" description="1.0.0b10  Changed the `$time` attribute to be protected [wb, 2011-03-20]"/>
        <tag line="2" name="changes" description="1.0.0b9   Added the `$simple` parameter to ::getFuzzyDifference() [wb, 2010-03-15]"/>
        <tag line="2" name="changes" description="1.0.0b8   Added a call to fTimestamp::callUnformatCallback() in ::__construct() for localization support [wb, 2009-06-01]"/>
        <tag line="2" name="changes" description="1.0.0b7   Backwards compatibility break - Removed ::getSecondsDifference(), added ::eq(), ::gt(), ::gte(), ::lt(), ::lte() [wb, 2009-03-05]"/>
        <tag line="2" name="changes" description="1.0.0b6   Fixed an outdated fCore method call [wb, 2009-02-23]"/>
        <tag line="2" name="changes" description="1.0.0b5   Updated for new fCore API [wb, 2009-02-16]"/>
        <tag line="2" name="changes" description="1.0.0b4   Fixed ::__construct() to properly handle the 5.0 to 5.1 change in strtotime() [wb, 2009-01-21]"/>
        <tag line="2" name="changes" description="1.0.0b3   Added support for CURRENT_TIMESTAMP and CURRENT_TIME SQL keywords [wb, 2009-01-11]"/>
        <tag line="2" name="changes" description="1.0.0b2   Removed the adjustment amount check from ::adjust() [wb, 2008-12-31]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2008-02-12]"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="56" namespace="global" package="Sutra">
        <name>$time</name>
        <default><![CDATA[]]></default>
        <docblock line="51">
          <description><![CDATA[A timestamp of the time]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="51" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="36" package="Flourish">
        <name>compose</name>
        <full_name>compose</full_name>
        <docblock line="28">
          <description><![CDATA[Composes text using fText if loaded]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="28" name="param" description="The message to compose" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="28" name="param" description="A string or number to insert into the message" type="mixed" variable="$component">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="28" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="28" name="return" description="The composed and possible translated message" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="36">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="67" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="59">
          <description><![CDATA[Creates the time to represent, no timezone is allowed since times don't have timezones]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="59" name="throws" description="When `$time` is not a valid time" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="59" name="param" description="The time to represent, `NULL` is interpreted as now" type="\fTime|object|string|integer" variable="$time">
            <type by_reference="false">\fTime</type>
            <type by_reference="false">object</type>
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="59" name="return" description="" type="\fTime">
            <type by_reference="false">\fTime</type>
          </tag>
        </docblock>
        <argument line="67">
          <name>$time</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="109" package="Flourish">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="101">
          <description><![CDATA[All requests that hit this method should be requests for callbacks]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="101" name="internal" description=""/>
          <tag line="101" name="param" description="The method to create a callback for" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="101" name="return" description="The callback for the method requested" type="callback">
            <type by_reference="false">callback</type>
          </tag>
        </docblock>
        <argument line="109">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="120" package="Flourish">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="115">
          <description><![CDATA[Returns this time in `'H:i:s'` format]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="115" name="return" description="The `'H:i:s'` format of this time" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="134" package="Flourish">
        <name>adjust</name>
        <full_name>adjust</full_name>
        <docblock line="126">
          <description><![CDATA[Changes the time by the adjustment specified, only adjustments of `'hours'`, `'minutes'`, and `'seconds'` are allowed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="126" name="throws" description="When `$adjustment` is not a valid relative time measurement" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="126" name="param" description="The adjustment to make" type="string" variable="$adjustment">
            <type by_reference="false">string</type>
          </tag>
          <tag line="126" name="return" description="The adjusted time" type="\fTime">
            <type by_reference="false">\fTime</type>
          </tag>
        </docblock>
        <argument line="134">
          <name>$adjustment</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="155" package="Flourish">
        <name>eq</name>
        <full_name>eq</full_name>
        <docblock line="149">
          <description><![CDATA[If this time is equal to the time passed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="149" name="param" description="The time to compare with, `NULL` is interpreted as today" type="\fTime|object|string|integer" variable="$other_time">
            <type by_reference="false">\fTime</type>
            <type by_reference="false">object</type>
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="149" name="return" description="If this time is equal to the one passed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="155">
          <name>$other_time</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="170" package="Flourish">
        <name>format</name>
        <full_name>format</full_name>
        <docblock line="162">
          <description><![CDATA[Formats the time]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="162" name="throws" description="When a non-time formatting character is included in `$format`" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="162" name="param" description="The [http://php.net/date date()] function compatible formatting string, or a format name from fTimestamp::defineFormat()" type="string" variable="$format">
            <type by_reference="false">string</type>
          </tag>
          <tag line="162" name="return" description="The formatted time" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="170">
          <name>$format</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="221" package="Flourish">
        <name>getFuzzyDifference</name>
        <full_name>getFuzzyDifference</full_name>
        <docblock line="187">
          <description><![CDATA[Returns the approximate difference in time, discarding any unit of measure but the least specific.]]></description>
          <long-description><![CDATA[<p>The output will read like:</p>

<ul>
<li>"This time is <code>{return value}</code> the provided one" when a time it passed</li>
<li>"This time is <code>{return value}</code>" when no time is passed and comparing with the current time</li>
</ul>

<p>Examples of output for a time passed might be:</p>

<ul>
<li><code>'5 minutes after'</code></li>
<li><code>'2 hours before'</code></li>
<li><code>'at the same time'</code></li>
</ul>

<p>Examples of output for no time passed might be:</p>

<ul>
<li><code>'5 minutes ago'</code></li>
<li><code>'2 hours ago'</code></li>
<li><code>'right now'</code></li>
</ul>

<p>You would never get the following output since it includes more than one unit of time measurement:</p>

<ul>
<li><code>'5 minutes and 28 seconds'</code></li>
<li><code>'1 hour, 15 minutes'</code></li>
</ul>

<p>Values that are close to the next largest unit of measure will be rounded up:</p>

<ul>
<li><code>'55 minutes'</code> would be represented as <code>'1 hour'</code>, however <code>'45 minutes'</code> would not</li>
</ul>]]></long-description>
          <tag line="187" name="param" description="The time to create the difference with, `NULL` is interpreted as now" type="\fTime|object|string|integer" variable="$other_time">
            <type by_reference="false">\fTime</type>
            <type by_reference="false">object</type>
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="187" name="param" description="When `TRUE`, the returned value will only include the difference in the two times, but not `from now`, `ago`, `after` or `before`" type="boolean" variable="$simple">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="187" name="param" description="|$simple" type="boolean" variable="">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="187" name="return" description="The fuzzy difference in time between the this time and the one provided" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="221">
          <name>$other_time</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="221">
          <name>$simple</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="292" package="Flourish">
        <name>gt</name>
        <full_name>gt</full_name>
        <docblock line="286">
          <description><![CDATA[If this time is greater than the time passed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="286" name="param" description="The time to compare with, `NULL` is interpreted as now" type="\fTime|object|string|integer" variable="$other_time">
            <type by_reference="false">\fTime</type>
            <type by_reference="false">object</type>
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="286" name="return" description="If this time is greater than the one passed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="292">
          <name>$other_time</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="305" package="Flourish">
        <name>gte</name>
        <full_name>gte</full_name>
        <docblock line="299">
          <description><![CDATA[If this time is greater than or equal to the time passed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="299" name="param" description="The time to compare with, `NULL` is interpreted as now" type="\fTime|object|string|integer" variable="$other_time">
            <type by_reference="false">\fTime</type>
            <type by_reference="false">object</type>
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="299" name="return" description="If this time is greater than or equal to the one passed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="305">
          <name>$other_time</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="318" package="Flourish">
        <name>lt</name>
        <full_name>lt</full_name>
        <docblock line="312">
          <description><![CDATA[If this time is less than the time passed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="312" name="param" description="The time to compare with, `NULL` is interpreted as today" type="\fTime|object|string|integer" variable="$other_time">
            <type by_reference="false">\fTime</type>
            <type by_reference="false">object</type>
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="312" name="return" description="If this time is less than the one passed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="318">
          <name>$other_time</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="331" package="Flourish">
        <name>lte</name>
        <full_name>lte</full_name>
        <docblock line="325">
          <description><![CDATA[If this time is less than or equal to the time passed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="325" name="param" description="The time to compare with, `NULL` is interpreted as today" type="\fTime|object|string|integer" variable="$other_time">
            <type by_reference="false">\fTime</type>
            <type by_reference="false">object</type>
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="325" name="return" description="If this time is less than or equal to the one passed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="331">
          <name>$other_time</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="351" package="Flourish">
        <name>modify</name>
        <full_name>modify</full_name>
        <docblock line="338">
          <description><![CDATA[Modifies the current time, creating a new fTime object]]></description>
          <long-description><![CDATA[<p>The purpose of this method is to allow for easy creation of a time
based on this time. Below are some examples of formats to
modify the current time:</p>

<ul>
<li><code>'17:i:s'</code> to set the hour of the time to 5 PM</li>
<li>'H:00:00'` to set the time to the beginning of the current hour</li>
</ul>]]></long-description>
          <tag line="338" name="param" description="The current time will be formatted with this string, and the output used to create a new object" type="string" variable="$format">
            <type by_reference="false">string</type>
          </tag>
          <tag line="338" name="return" description="The new time" type="\fTime">
            <type by_reference="false">\fTime</type>
          </tag>
        </docblock>
        <argument line="351">
          <name>$format</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fTime.php</error>
      <notice line="28" code="50013">Parameter $component could not be found in compose()</notice>
      <notice line="28" code="50013">Parameter  could not be found in compose()</notice>
      <notice line="187" code="50013">Parameter  could not be found in getFuzzyDifference()</notice>
    </parse_markers>
  </file>
  <file path="php/flourish/fCryptography.php" hash="0956552012558b241c97a2c57af481d5" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="28" package="Flourish">
      <extends/>
      <name>fCryptography</name>
      <full_name>\fCryptography</full_name>
      <docblock line="2">
        <description><![CDATA[Provides cryptography functionality, including hashing, symmetric-key encryption and public-key encryption]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2011 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fCryptography" link="http://flourishlib.com/fCryptography"/>
        <tag line="2" name="version" description="1.0.0b14"/>
        <tag line="2" name="changes" description="1.0.0b14  Added the `base36`, `base56` and custom types to ::randomString() [wb, 2011-08-25]"/>
        <tag line="2" name="changes" description="1.0.0b13  Updated documentation about symmetric-key encryption to explicitly state block and key sizes, added base64 type to ::randomString() [wb, 2010-11-06]"/>
        <tag line="2" name="changes" description="1.0.0b12  Fixed an inline comment that incorrectly references AES-256 [wb, 2010-11-04]"/>
        <tag line="2" name="changes" description="1.0.0b11  Updated class to use fCore::startErrorCapture() instead of `error_reporting()` [wb, 2010-08-09]"/>
        <tag line="2" name="changes" description="1.0.0b10  Added a missing parameter to an fProgrammerException in ::randomString() [wb, 2010-07-29]"/>
        <tag line="2" name="changes" description="1.0.0b9   Added ::hashHMAC() [wb, 2010-04-20]"/>
        <tag line="2" name="changes" description="1.0.0b8   Fixed ::seedRandom() to pass a directory instead of a file to [http://php.net/disk_free_space `disk_free_space()`] [wb, 2010-03-09]"/>
        <tag line="2" name="changes" description="1.0.0b7   SECURITY FIX: fixed issue with ::random() and ::randomString() not producing random output on OSX, made ::seedRandom() more robust [wb, 2009-10-06]"/>
        <tag line="2" name="changes" description="1.0.0b6   Changed ::symmetricKeyEncrypt() to throw an fValidationException when the $secret_key is less than 8 characters [wb, 2009-09-30]"/>
        <tag line="2" name="changes" description="1.0.0b5   Fixed a bug where some windows machines would throw an exception when generating random strings or numbers [wb, 2009-06-09]"/>
        <tag line="2" name="changes" description="1.0.0b4   Updated for new fCore API [wb, 2009-02-16]"/>
        <tag line="2" name="changes" description="1.0.0b3   Changed @ error suppression operator to `error_reporting()` calls [wb, 2009-01-26]"/>
        <tag line="2" name="changes" description="1.0.0b2   Backwards compatibility break - changed ::symmetricKeyEncrypt() to not encrypt the IV since we are using HMAC on it [wb, 2009-01-26]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2007-11-27]"/>
      </docblock>
      <constant namespace="global" line="31" package="Flourish">
        <name>checkPasswordHash</name>
        <full_name>checkPasswordHash</full_name>
        <value><![CDATA['fCryptography::checkPasswordHash']]></value>
      </constant>
      <constant namespace="global" line="32" package="Flourish">
        <name>hashHMAC</name>
        <full_name>hashHMAC</full_name>
        <value><![CDATA['fCryptography::hashHMAC']]></value>
      </constant>
      <constant namespace="global" line="33" package="Flourish">
        <name>hashPassword</name>
        <full_name>hashPassword</full_name>
        <value><![CDATA['fCryptography::hashPassword']]></value>
      </constant>
      <constant namespace="global" line="34" package="Flourish">
        <name>publicKeyDecrypt</name>
        <full_name>publicKeyDecrypt</full_name>
        <value><![CDATA['fCryptography::publicKeyDecrypt']]></value>
      </constant>
      <constant namespace="global" line="35" package="Flourish">
        <name>publicKeyEncrypt</name>
        <full_name>publicKeyEncrypt</full_name>
        <value><![CDATA['fCryptography::publicKeyEncrypt']]></value>
      </constant>
      <constant namespace="global" line="36" package="Flourish">
        <name>publicKeySign</name>
        <full_name>publicKeySign</full_name>
        <value><![CDATA['fCryptography::publicKeySign']]></value>
      </constant>
      <constant namespace="global" line="37" package="Flourish">
        <name>publicKeyVerify</name>
        <full_name>publicKeyVerify</full_name>
        <value><![CDATA['fCryptography::publicKeyVerify']]></value>
      </constant>
      <constant namespace="global" line="38" package="Flourish">
        <name>random</name>
        <full_name>random</full_name>
        <value><![CDATA['fCryptography::random']]></value>
      </constant>
      <constant namespace="global" line="39" package="Flourish">
        <name>randomString</name>
        <full_name>randomString</full_name>
        <value><![CDATA['fCryptography::randomString']]></value>
      </constant>
      <constant namespace="global" line="40" package="Flourish">
        <name>symmetricKeyDecrypt</name>
        <full_name>symmetricKeyDecrypt</full_name>
        <value><![CDATA['fCryptography::symmetricKeyDecrypt']]></value>
      </constant>
      <constant namespace="global" line="41" package="Flourish">
        <name>symmetricKeyEncrypt</name>
        <full_name>symmetricKeyEncrypt</full_name>
        <value><![CDATA['fCryptography::symmetricKeyEncrypt']]></value>
      </constant>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="51" package="Flourish">
        <name>checkPasswordHash</name>
        <full_name>checkPasswordHash</full_name>
        <docblock line="44">
          <description><![CDATA[Checks a password against a hash created with ::hashPassword()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="44" name="param" description="The password to check" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="44" name="param" description="The hash to check against" type="string" variable="$hash">
            <type by_reference="false">string</type>
          </tag>
          <tag line="44" name="return" description="If the password matches the hash" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$password</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="51">
          <name>$hash</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="72" package="Flourish">
        <name>createPrivateKeyResource</name>
        <full_name>createPrivateKeyResource</full_name>
        <docblock line="63">
          <description><![CDATA[Create a private key resource based on a filename and password]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="63" name="throws" description="When the private key is invalid" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="63" name="param" description="The path to a PEM-encoded private key" type="string" variable="$private_key_file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="63" name="param" description="The password for the private key" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="63" name="return" description="The private key resource" type="resource">
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
        <argument line="72">
          <name>$private_key_file</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="72">
          <name>$password</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="107" package="Flourish">
        <name>createPublicKeyResource</name>
        <full_name>createPublicKeyResource</full_name>
        <docblock line="101">
          <description><![CDATA[Create a public key resource based on a filename]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="101" name="param" description="The path to an X.509 public key certificate" type="string" variable="$public_key_file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="101" name="return" description="The public key resource" type="resource">
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
        <argument line="107">
          <name>$public_key_file</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="146" package="Flourish">
        <name>hashHMAC</name>
        <full_name>hashHMAC</full_name>
        <docblock line="136">
          <description><![CDATA[Provides a pure PHP implementation of `hash_hmac()` for when the hash extension is not installed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="136" name="internal" description=""/>
          <tag line="136" name="param" description="The hashing algorithm to use: `'md5'` or `'sha1'`" type="string" variable="$algorithm">
            <type by_reference="false">string</type>
          </tag>
          <tag line="136" name="param" description="The data to create an HMAC for" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="136" name="param" description="The key to generate the HMAC with" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="136" name="return" description="The HMAC" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="146">
          <name>$algorithm</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="146">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="146">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="171" package="Flourish">
        <name>hashPassword</name>
        <full_name>hashPassword</full_name>
        <docblock line="165">
          <description><![CDATA[Hashes a password using a loop of sha1 hashes and a salt, making rainbow table attacks infeasible]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="165" name="param" description="The password to hash" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="165" name="return" description="An 80 character string of the Flourish fingerprint, salt and hashed password" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="171">
          <name>$password</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="186" package="Flourish">
        <name>hashWithSalt</name>
        <full_name>hashWithSalt</full_name>
        <docblock line="179">
          <description><![CDATA[Performs a large iteration of hashing a string with a salt]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="179" name="param" description="The string to hash" type="string" variable="$source">
            <type by_reference="false">string</type>
          </tag>
          <tag line="179" name="param" description="The salt for the hash" type="string" variable="$salt">
            <type by_reference="false">string</type>
          </tag>
          <tag line="179" name="return" description="An 80 character string of the Flourish fingerprint, salt and hashed password" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="186">
          <name>$source</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="186">
          <name>$salt</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="210" package="Flourish">
        <name>publicKeyDecrypt</name>
        <full_name>publicKeyDecrypt</full_name>
        <docblock line="197">
          <description><![CDATA[Decrypts ciphertext encrypted using public-key encryption via ::publicKeyEncrypt()]]></description>
          <long-description><![CDATA[<p>A public key (X.509 certificate) is required for encryption and a
private key (PEM) is required for decryption.</p>]]></long-description>
          <tag line="197" name="throws" description="When the ciphertext appears to be corrupted" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="197" name="param" description="The content to be decrypted" type="string" variable="$ciphertext">
            <type by_reference="false">string</type>
          </tag>
          <tag line="197" name="param" description="The path to a PEM-encoded private key" type="string" variable="$private_key_file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="197" name="param" description="The password for the private key" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="197" name="return" description="The decrypted plaintext" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="210">
          <name>$ciphertext</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="210">
          <name>$private_key_file</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="210">
          <name>$password</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="263" package="Flourish">
        <name>publicKeyEncrypt</name>
        <full_name>publicKeyEncrypt</full_name>
        <docblock line="253">
          <description><![CDATA[Encrypts the passed data using public key encryption via OpenSSL]]></description>
          <long-description><![CDATA[<p>A public key (X.509 certificate) is required for encryption and a
private key (PEM) is required for decryption.</p>]]></long-description>
          <tag line="253" name="param" description="The content to be encrypted" type="string" variable="$plaintext">
            <type by_reference="false">string</type>
          </tag>
          <tag line="253" name="param" description="The path to an X.509 public key certificate" type="string" variable="$public_key_file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="253" name="return" description="A base-64 encoded result containing a Flourish fingerprint and suitable for decryption using ::publicKeyDecrypt()" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="263">
          <name>$plaintext</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="263">
          <name>$public_key_file</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="299" package="Flourish">
        <name>publicKeySign</name>
        <full_name>publicKeySign</full_name>
        <docblock line="286">
          <description><![CDATA[Creates a signature for plaintext to allow verification of the creator]]></description>
          <long-description><![CDATA[<p>A private key (PEM) is required for signing and a public key
(X.509 certificate) is required for verification.</p>]]></long-description>
          <tag line="286" name="throws" description="When the private key is invalid" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="286" name="param" description="The content to be signed" type="string" variable="$plaintext">
            <type by_reference="false">string</type>
          </tag>
          <tag line="286" name="param" description="The path to a PEM-encoded private key" type="string" variable="$private_key_file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="286" name="param" description="The password for the private key" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="286" name="return" description="The base64-encoded signature suitable for verification using ::publicKeyVerify()" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="299">
          <name>$plaintext</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="299">
          <name>$private_key_file</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="299">
          <name>$password</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="329" package="Flourish">
        <name>publicKeyVerify</name>
        <full_name>publicKeyVerify</full_name>
        <docblock line="318">
          <description><![CDATA[Checks a signature for plaintext to verify the creator - works with ::publicKeySign()]]></description>
          <long-description><![CDATA[<p>A private key (PEM) is required for signing and a public key
(X.509 certificate) is required for verification.</p>]]></long-description>
          <tag line="318" name="param" description="The content to check" type="string" variable="$plaintext">
            <type by_reference="false">string</type>
          </tag>
          <tag line="318" name="param" description="The base64-encoded signature for the plaintext" type="string" variable="$signature">
            <type by_reference="false">string</type>
          </tag>
          <tag line="318" name="param" description="The path to an X.509 public key certificate" type="string" variable="$public_key_file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="318" name="return" description="If the public key file is the public key of the user who signed the plaintext" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="329">
          <name>$plaintext</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="329">
          <name>$signature</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="329">
          <name>$public_key_file</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="355" package="Flourish">
        <name>random</name>
        <full_name>random</full_name>
        <docblock line="348">
          <description><![CDATA[Generates a random number using [http://php.net/mt_rand mt_rand()] after ensuring a good PRNG seed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="348" name="param" description="The minimum number to return" type="integer" variable="$min">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="348" name="param" description="The maximum number to return" type="integer" variable="$max">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="348" name="return" description="The psuedo-random number" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="355">
          <name>$min</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="355">
          <name>$max</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="372" package="Flourish">
        <name>randomString</name>
        <full_name>randomString</full_name>
        <docblock line="365">
          <description><![CDATA[Returns a random string of the type and length specified]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="365" name="param" description="The length of string to return" type="integer" variable="$length">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="365" name="param" description="The type of string to return: `'base64'`, `'base56'`, `'base36'`, `'alphanumeric'`, `'alpha'`, `'numeric'`, or `'hexadecimal'`, if a different string is provided, it will be used for the alphabet" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="365" name="return" description="A random string of the type and length specified" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="372">
          <name>$length</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="372">
          <name>$type</name>
          <default><![CDATA['alphanumeric']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="431" package="Flourish">
        <name>seedRandom</name>
        <full_name>seedRandom</full_name>
        <docblock line="426">
          <description><![CDATA[Makes sure that the PRNG has been seeded with a fairly secure value]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="426" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="486" package="Flourish">
        <name>symmetricKeyDecrypt</name>
        <full_name>symmetricKeyDecrypt</full_name>
        <docblock line="474">
          <description><![CDATA[Decrypts ciphertext encrypted using symmetric-key encryption via ::symmetricKeyEncrypt()]]></description>
          <long-description><![CDATA[<p>Since this is symmetric-key cryptography, the same key is used for
encryption and decryption.</p>]]></long-description>
          <tag line="474" name="throws" description="When the ciphertext appears to be corrupted" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="474" name="param" description="The content to be decrypted" type="string" variable="$ciphertext">
            <type by_reference="false">string</type>
          </tag>
          <tag line="474" name="param" description="The secret key to use for decryption" type="string" variable="$secret_key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="474" name="return" description="The decrypted plaintext" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="486">
          <name>$ciphertext</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="486">
          <name>$secret_key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="541" package="Flourish">
        <name>symmetricKeyEncrypt</name>
        <full_name>symmetricKeyEncrypt</full_name>
        <docblock line="529">
          <description><![CDATA[Encrypts the passed data using symmetric-key encryption]]></description>
          <long-description><![CDATA[<p>Since this is symmetric-key cryptography, the same key is used for
encryption and decryption.</p>]]></long-description>
          <tag line="529" name="throws" description="When the $secret_key is less than 8 characters long" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="529" name="param" description="The content to be encrypted" type="string" variable="$plaintext">
            <type by_reference="false">string</type>
          </tag>
          <tag line="529" name="param" description="The secret key to use for encryption - must be at least 8 characters" type="string" variable="$secret_key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="529" name="return" description="An encrypted and base-64 encoded result containing a Flourish fingerprint and suitable for decryption using ::symmetricKeyDecrypt()" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="541">
          <name>$plaintext</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="541">
          <name>$secret_key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="589" package="Flourish">
        <name>verifyPublicKeyEnvironment</name>
        <full_name>verifyPublicKeyEnvironment</full_name>
        <docblock line="584">
          <description><![CDATA[Makes sure the required PHP extensions and library versions are all correct]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="584" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="605" package="Flourish">
        <name>verifySymmetricKeyEnvironment</name>
        <full_name>verifySymmetricKeyEnvironment</full_name>
        <docblock line="600">
          <description><![CDATA[Makes sure the required PHP extensions and library versions are all correct]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="600" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="635" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="630">
          <description><![CDATA[Forces use as a static class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="630" name="return" description="" type="\fSecurity">
            <type by_reference="false">\fSecurity</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fCryptography.php</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fORM.php" hash="e01a4f975931c73fbcce28f6309a1868" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="44" package="Flourish">
      <extends/>
      <name>fORM</name>
      <full_name>\fORM</full_name>
      <docblock line="2">
        <description><![CDATA[Dynamically handles many centralized object-relational mapping tasks]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2011 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="author" description="Jeff Turcotte [jt] &lt;jeff.turcotte@gmail.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fORM" link="http://flourishlib.com/fORM"/>
        <tag line="2" name="version" description="1.0.0b29"/>
        <tag line="2" name="changes" description="1.0.0b29  Added ::registerActiveRecordStaticMethod() for static hooks in PHP 5.3 [jt, 2012-07-25]"/>
        <tag line="2" name="changes" description="1.0.0b28  Updated ::getColumnName() and ::getRecordName() to use fText if loaded [wb, 2011-02-02]"/>
        <tag line="2" name="changes" description="1.0.0b27  Added links to the detailed documentation for the parameters passed to hooks [wb, 2010-11-27]"/>
        <tag line="2" name="changes" description="1.0.0b26  Added ::getRelatedClass() for handling related classes in PHP 5.3 namespaces [wb, 2010-11-17]"/>
        <tag line="2" name="changes" description="1.0.0b25  Added support for PHP 5.3 namespaced fActiveRecord classes [wb, 2010-11-11]"/>
        <tag line="2" name="changes" description="1.0.0b24  Backwards Compatibility Break - Callbacks registered via ::registerRecordSetMethod() should now accept the `$method_name` in the position where the `$pointer` parameter used to be passed [wb, 2010-09-28]"/>
        <tag line="2" name="changes" description="1.0.0b23  Added the `'pre::replicate()'`, `'post::replicate()'` and `'cloned::replicate()'` hooks [wb, 2010-09-07]"/>
        <tag line="2" name="changes" description="1.0.0b22  Internal Backwards Compatibility Break - changed ::parseMethod() to not underscorize the subject of the method [wb, 2010-08-06]"/>
        <tag line="2" name="changes" description="1.0.0b21  Fixed some documentation to reflect the API changes from v1.0.0b9 [wb, 2010-07-14]"/>
        <tag line="2" name="changes" description="1.0.0b20  Added the ability to register a wildcard active record method for all classes [wb, 2010-04-22]"/>
        <tag line="2" name="changes" description="1.0.0b19  Added the method ::isClassMappedToTable() [wb, 2010-03-30]"/>
        <tag line="2" name="changes" description="1.0.0b18  Added the `post::loadFromIdentityMap()` hook [wb, 2010-03-14]"/>
        <tag line="2" name="changes" description="1.0.0b17  Changed ::enableSchemaCaching() to rely on fDatabase::clearCache() instead of explicitly calling fSQLTranslation::clearCache() [wb, 2010-03-09]"/>
        <tag line="2" name="changes" description="1.0.0b16  Backwards Compatibility Break - renamed ::addCustomClassToTableMapping() to ::mapClassToTable(). Added ::getDatabaseName() and ::mapClassToDatabase(). Updated code for new fORMDatabase and fORMSchema APIs [wb, 2009-10-28]"/>
        <tag line="2" name="changes" description="1.0.0b15  Added support for fActiveRecord to ::getRecordName() [wb, 2009-10-06]"/>
        <tag line="2" name="changes" description="1.0.0b14  Updated documentation for ::registerActiveRecordMethod() to include info about prefix method matches [wb, 2009-08-07]"/>
        <tag line="2" name="changes" description="1.0.0b13  Updated documentation for ::registerRecordSetMethod() [wb, 2009-07-14]"/>
        <tag line="2" name="changes" description="1.0.0b12  Updated ::callReflectCallbacks() to accept a class name instead of an object [wb, 2009-07-13]"/>
        <tag line="2" name="changes" description="1.0.0b11  Added ::registerInspectCallback() and ::callInspectCallbacks() [wb, 2009-07-13]"/>
        <tag line="2" name="changes" description="1.0.0b10  Fixed a bug with ::objectify() caching during NULL date/time/timestamp values and breaking further objectification [wb, 2009-06-18]"/>
        <tag line="2" name="changes" description="1.0.0b9   Added caching for performance and changed some method APIs to only allow class names instead of instances [wb, 2009-06-15]"/>
        <tag line="2" name="changes" description="1.0.0b8   Updated documentation to reflect removal of `$associate` parameter for callbacks passed to ::registerRecordSetMethod() [wb, 2009-06-02]"/>
        <tag line="2" name="changes" description="1.0.0b7   Added ::enableSchemaCaching() to replace fORMSchema::enableSmartCaching() [wb, 2009-05-04]"/>
        <tag line="2" name="changes" description="1.0.0b6   Added the ability to pass a class instance to ::addCustomClassTableMapping() [wb, 2009-02-23]"/>
        <tag line="2" name="changes" description="1.0.0b5   Backwards compatibility break - renamed ::addCustomTableClassMapping() to ::addCustomClassTableMapping() and swapped the parameters [wb, 2009-01-26]"/>
        <tag line="2" name="changes" description="1.0.0b4   Fixed a bug with retrieving fActiveRecord methods registered for all classes [wb, 2009-01-14]"/>
        <tag line="2" name="changes" description="1.0.0b3   Fixed a static method callback constant [wb, 2008-12-17]"/>
        <tag line="2" name="changes" description="1.0.0b2   Added ::replicate() and ::registerReplicateCallback() for fActiveRecord::replicate() [wb, 2008-12-12]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2007-08-04]"/>
      </docblock>
      <constant namespace="global" line="47" package="Flourish">
        <name>callHookCallbacks</name>
        <full_name>callHookCallbacks</full_name>
        <value><![CDATA['fORM::callHookCallbacks']]></value>
      </constant>
      <constant namespace="global" line="48" package="Flourish">
        <name>callInspectCallbacks</name>
        <full_name>callInspectCallbacks</full_name>
        <value><![CDATA['fORM::callInspectCallbacks']]></value>
      </constant>
      <constant namespace="global" line="49" package="Flourish">
        <name>callReflectCallbacks</name>
        <full_name>callReflectCallbacks</full_name>
        <value><![CDATA['fORM::callReflectCallbacks']]></value>
      </constant>
      <constant namespace="global" line="50" package="Flourish">
        <name>checkHookCallback</name>
        <full_name>checkHookCallback</full_name>
        <value><![CDATA['fORM::checkHookCallback']]></value>
      </constant>
      <constant namespace="global" line="51" package="Flourish">
        <name>classize</name>
        <full_name>classize</full_name>
        <value><![CDATA['fORM::classize']]></value>
      </constant>
      <constant namespace="global" line="52" package="Flourish">
        <name>defineActiveRecordClass</name>
        <full_name>defineActiveRecordClass</full_name>
        <value><![CDATA['fORM::defineActiveRecordClass']]></value>
      </constant>
      <constant namespace="global" line="53" package="Flourish">
        <name>enableSchemaCaching</name>
        <full_name>enableSchemaCaching</full_name>
        <value><![CDATA['fORM::enableSchemaCaching']]></value>
      </constant>
      <constant namespace="global" line="54" package="Flourish">
        <name>getActiveRecordMethod</name>
        <full_name>getActiveRecordMethod</full_name>
        <value><![CDATA['fORM::getActiveRecordMethod']]></value>
      </constant>
      <constant namespace="global" line="55" package="Flourish">
        <name>getClass</name>
        <full_name>getClass</full_name>
        <value><![CDATA['fORM::getClass']]></value>
      </constant>
      <constant namespace="global" line="56" package="Flourish">
        <name>getColumnName</name>
        <full_name>getColumnName</full_name>
        <value><![CDATA['fORM::getColumnName']]></value>
      </constant>
      <constant namespace="global" line="57" package="Flourish">
        <name>getDatabaseName</name>
        <full_name>getDatabaseName</full_name>
        <value><![CDATA['fORM::getDatabaseName']]></value>
      </constant>
      <constant namespace="global" line="58" package="Flourish">
        <name>getRecordName</name>
        <full_name>getRecordName</full_name>
        <value><![CDATA['fORM::getRecordName']]></value>
      </constant>
      <constant namespace="global" line="59" package="Flourish">
        <name>getRecordSetMethod</name>
        <full_name>getRecordSetMethod</full_name>
        <value><![CDATA['fORM::getRecordSetMethod']]></value>
      </constant>
      <constant namespace="global" line="60" package="Flourish">
        <name>getRelatedClass</name>
        <full_name>getRelatedClass</full_name>
        <value><![CDATA['fORM::getRelatedClass']]></value>
      </constant>
      <constant namespace="global" line="61" package="Flourish">
        <name>isClassMappedToTable</name>
        <full_name>isClassMappedToTable</full_name>
        <value><![CDATA['fORM::isClassMappedToTable']]></value>
      </constant>
      <constant namespace="global" line="62" package="Flourish">
        <name>mapClassToDatabase</name>
        <full_name>mapClassToDatabase</full_name>
        <value><![CDATA['fORM::mapClassToDatabase']]></value>
      </constant>
      <constant namespace="global" line="63" package="Flourish">
        <name>mapClassToTable</name>
        <full_name>mapClassToTable</full_name>
        <value><![CDATA['fORM::mapClassToTable']]></value>
      </constant>
      <constant namespace="global" line="64" package="Flourish">
        <name>objectify</name>
        <full_name>objectify</full_name>
        <value><![CDATA['fORM::objectify']]></value>
      </constant>
      <constant namespace="global" line="65" package="Flourish">
        <name>overrideColumnName</name>
        <full_name>overrideColumnName</full_name>
        <value><![CDATA['fORM::overrideColumnName']]></value>
      </constant>
      <constant namespace="global" line="66" package="Flourish">
        <name>overrideRecordName</name>
        <full_name>overrideRecordName</full_name>
        <value><![CDATA['fORM::overrideRecordName']]></value>
      </constant>
      <constant namespace="global" line="67" package="Flourish">
        <name>parseMethod</name>
        <full_name>parseMethod</full_name>
        <value><![CDATA['fORM::parseMethod']]></value>
      </constant>
      <constant namespace="global" line="68" package="Flourish">
        <name>registerActiveRecordMethod</name>
        <full_name>registerActiveRecordMethod</full_name>
        <value><![CDATA['fORM::registerActiveRecordMethod']]></value>
      </constant>
      <constant namespace="global" line="69" package="Flourish">
        <name>registerActiveRecordStaticMethod</name>
        <full_name>registerActiveRecordStaticMethod</full_name>
        <value><![CDATA['fORM::registerActiveRecordStaticMethod']]></value>
      </constant>
      <constant namespace="global" line="70" package="Flourish">
        <name>registerHookCallback</name>
        <full_name>registerHookCallback</full_name>
        <value><![CDATA['fORM::registerHookCallback']]></value>
      </constant>
      <constant namespace="global" line="71" package="Flourish">
        <name>registerInspectCallback</name>
        <full_name>registerInspectCallback</full_name>
        <value><![CDATA['fORM::registerInspectCallback']]></value>
      </constant>
      <constant namespace="global" line="72" package="Flourish">
        <name>registerObjectifyCallback</name>
        <full_name>registerObjectifyCallback</full_name>
        <value><![CDATA['fORM::registerObjectifyCallback']]></value>
      </constant>
      <constant namespace="global" line="73" package="Flourish">
        <name>registerRecordSetMethod</name>
        <full_name>registerRecordSetMethod</full_name>
        <value><![CDATA['fORM::registerRecordSetMethod']]></value>
      </constant>
      <constant namespace="global" line="74" package="Flourish">
        <name>registerReflectCallback</name>
        <full_name>registerReflectCallback</full_name>
        <value><![CDATA['fORM::registerReflectCallback']]></value>
      </constant>
      <constant namespace="global" line="75" package="Flourish">
        <name>registerReplicateCallback</name>
        <full_name>registerReplicateCallback</full_name>
        <value><![CDATA['fORM::registerReplicateCallback']]></value>
      </constant>
      <constant namespace="global" line="76" package="Flourish">
        <name>registerScalarizeCallback</name>
        <full_name>registerScalarizeCallback</full_name>
        <value><![CDATA['fORM::registerScalarizeCallback']]></value>
      </constant>
      <constant namespace="global" line="77" package="Flourish">
        <name>replicate</name>
        <full_name>replicate</full_name>
        <value><![CDATA['fORM::replicate']]></value>
      </constant>
      <constant namespace="global" line="78" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <value><![CDATA['fORM::reset']]></value>
      </constant>
      <constant namespace="global" line="79" package="Flourish">
        <name>scalarize</name>
        <full_name>scalarize</full_name>
        <value><![CDATA['fORM::scalarize']]></value>
      </constant>
      <constant namespace="global" line="80" package="Flourish">
        <name>tablize</name>
        <full_name>tablize</full_name>
        <value><![CDATA['form::tablize']]></value>
      </constant>
      <property final="false" static="true" visibility="private" line="88" namespace="global" package="Sutra">
        <name>$active_record_method_callbacks</name>
        <default><![CDATA[array()]]></default>
        <docblock line="83">
          <description><![CDATA[An array of `{method} => {callback}` mappings for fActiveRecord]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="83" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="95" namespace="global" package="Sutra">
        <name>$active_record_static_method_callbacks</name>
        <default><![CDATA[array()]]></default>
        <docblock line="90">
          <description><![CDATA[An array of `{static_method} => {callback}` mappings for fActiveRecord]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="90" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="102" namespace="global" package="Sutra">
        <name>$cache</name>
        <default><![CDATA[array('parseMethod' => array(), 'getActiveRecordMethod' => array(), 'objectify' => array())]]></default>
        <docblock line="97">
          <description><![CDATA[Cache for repetitive computation]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="97" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="113" namespace="global" package="Sutra">
        <name>$class_database_map</name>
        <default><![CDATA[array('fActiveRecord' => 'default')]]></default>
        <docblock line="108">
          <description><![CDATA[Custom mappings for class -> database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="108" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="122" namespace="global" package="Sutra">
        <name>$class_table_map</name>
        <default><![CDATA[array()]]></default>
        <docblock line="117">
          <description><![CDATA[Custom mappings for class <-> table]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="117" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="129" namespace="global" package="Sutra">
        <name>$column_names</name>
        <default><![CDATA[array()]]></default>
        <docblock line="124">
          <description><![CDATA[Custom column names for columns in fActiveRecord classes]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="124" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="136" namespace="global" package="Sutra">
        <name>$hook_callbacks</name>
        <default><![CDATA[array()]]></default>
        <docblock line="131">
          <description><![CDATA[Tracks callbacks registered for various fActiveRecord hooks]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="131" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="143" namespace="global" package="Sutra">
        <name>$inspect_callbacks</name>
        <default><![CDATA[array()]]></default>
        <docblock line="138">
          <description><![CDATA[Callbacks for ::callInspectCallbacks()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="138" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="150" namespace="global" package="Sutra">
        <name>$objectify_callbacks</name>
        <default><![CDATA[array()]]></default>
        <docblock line="145">
          <description><![CDATA[Callbacks for ::objectify()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="145" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="157" namespace="global" package="Sutra">
        <name>$record_names</name>
        <default><![CDATA[array('fActiveRecord' => 'Active Record')]]></default>
        <docblock line="152">
          <description><![CDATA[Custom record names for fActiveRecord classes]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="152" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="166" namespace="global" package="Sutra">
        <name>$record_set_method_callbacks</name>
        <default><![CDATA[array()]]></default>
        <docblock line="161">
          <description><![CDATA[An array of `{method} => {callback}` mappings for fRecordSet]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="161" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="173" namespace="global" package="Sutra">
        <name>$reflect_callbacks</name>
        <default><![CDATA[array()]]></default>
        <docblock line="168">
          <description><![CDATA[Callbacks for ::callReflectCallbacks()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="168" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="180" namespace="global" package="Sutra">
        <name>$related_class_names</name>
        <default><![CDATA[array()]]></default>
        <docblock line="175">
          <description><![CDATA[A cache for resolving related class names for fActiveRecord classes in a PHP 5.3 namespace]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="175" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="187" namespace="global" package="Sutra">
        <name>$replicate_callbacks</name>
        <default><![CDATA[array()]]></default>
        <docblock line="182">
          <description><![CDATA[Callbacks for ::replicate()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="182" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="194" namespace="global" package="Sutra">
        <name>$scalarize_callbacks</name>
        <default><![CDATA[array()]]></default>
        <docblock line="189">
          <description><![CDATA[Callbacks for ::scalarize()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="189" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="211" package="Flourish">
        <name>callHookCallbacks</name>
        <full_name>callHookCallbacks</full_name>
        <docblock line="197">
          <description><![CDATA[Calls the hook callbacks for the class and hook specified]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="197" name="internal" description=""/>
          <tag line="197" name="param" description="The instance of the class to call the hook for" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="197" name="param" description="The hook to call" type="string" variable="$hook">
            <type by_reference="false">string</type>
          </tag>
          <tag line="197" name="param" description="&amp;$values The current values of the record" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="197" name="param" description="&amp;$old_values The old values of the record" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="197" name="param" description="&amp;$related_records Records related to the current record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="197" name="param" description="&amp;$cache The cache array of the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="197" name="param" description="&amp;$parameter The parameter to send the callback" type="mixed" variable="$parameter">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="197" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="211">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="211">
          <name>$hook</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="211">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="211">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="211">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="211">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="211">
          <name>$parameter</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="257" package="Flourish">
        <name>callInspectCallbacks</name>
        <full_name>callInspectCallbacks</full_name>
        <docblock line="247">
          <description><![CDATA[Calls all inspect callbacks for the class and column specified]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="247" name="internal" description=""/>
          <tag line="247" name="param" description="The class to inspect the column of" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="247" name="param" description="The column to inspect" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="247" name="param" description="&amp;$metadata The associative array of data about the column" type="array" variable="$metadata">
            <type by_reference="false">array</type>
          </tag>
          <tag line="247" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="257">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="257">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="257">
          <name>$metadata</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="285" package="Flourish">
        <name>callReflectCallbacks</name>
        <full_name>callReflectCallbacks</full_name>
        <docblock line="275">
          <description><![CDATA[Calls all reflect callbacks for the class passed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="275" name="internal" description=""/>
          <tag line="275" name="param" description="The class to call the callbacks for" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="275" name="param" description="&amp;$signatures The associative array of `{method_name} =&gt; {signature}`" type="array" variable="$signatures">
            <type by_reference="false">array</type>
          </tag>
          <tag line="275" name="param" description="If the doc comments should be included in the signature" type="boolean" variable="$include_doc_comments">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="275" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="285">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="285">
          <name>$signatures</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="285">
          <name>$include_doc_comments</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="327" package="Flourish">
        <name>checkHookCallback</name>
        <full_name>checkHookCallback</full_name>
        <docblock line="317">
          <description><![CDATA[Checks to see if any (or a specific) callback has been registered for a specific hook]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="317" name="internal" description=""/>
          <tag line="317" name="param" description="The name of the class" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="317" name="param" description="The hook to check" type="string" variable="$hook">
            <type by_reference="false">string</type>
          </tag>
          <tag line="317" name="param" description="The specific callback to check for" type="array" variable="$callback">
            <type by_reference="false">array</type>
          </tag>
          <tag line="317" name="return" description="If the specified callback exists" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="327">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="327">
          <name>$hook</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="327">
          <name>$callback</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="359" package="Flourish">
        <name>classize</name>
        <full_name>classize</full_name>
        <docblock line="353">
          <description><![CDATA[Takes a table and turns it into a class name - uses custom mapping if set]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="353" name="param" description="The table name" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="353" name="return" description="The class name" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="359">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="381" package="Flourish">
        <name>defineActiveRecordClass</name>
        <full_name>defineActiveRecordClass</full_name>
        <docblock line="370">
          <description><![CDATA[Will dynamically create an fActiveRecord-based class for a database table]]></description>
          <long-description><![CDATA[<p>Normally this would be called from an <code>__autoload()</code> function.</p>

<p>This method will only create classes for tables in the default ORM
database.</p>]]></long-description>
          <tag line="370" name="param" description="The name of the class to create" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="370" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="381">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="417" package="Flourish">
        <name>enableSchemaCaching</name>
        <full_name>enableSchemaCaching</full_name>
        <docblock line="401">
          <description><![CDATA[Enables caching on the fDatabase, fSQLTranslation and fSchema objects used for the ORM]]></description>
          <long-description><![CDATA[<p>This method will cache database schema information to the three objects
that use it during normal ORM operation: fDatabase, fSQLTranslation and
fSchema. To allow for schema changes without having to manually clear
the cache, all cached information will be cleared if any
fUnexpectedException objects are thrown.</p>

<p>This method should be called right after fORMDatabase::attach().</p>]]></long-description>
          <tag line="401" name="param" description="The object to cache schema information to" type="\fCache" variable="$cache">
            <type by_reference="false">\fCache</type>
          </tag>
          <tag line="401" name="param" description="The database to enable caching for" type="string" variable="$database_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="401" name="param" description="This is a token that is used in cache keys to prevent conflicts for server-wide caches - when non-NULL the document root is used" type="string" variable="$key_token">
            <type by_reference="false">string</type>
          </tag>
          <tag line="401" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="417">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="417">
          <name>$database_name</name>
          <default><![CDATA['default']]></default>
          <type/>
        </argument>
        <argument line="417">
          <name>$key_token</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="452" package="Flourish">
        <name>getActiveRecordMethod</name>
        <full_name>getActiveRecordMethod</full_name>
        <docblock line="437">
          <description><![CDATA[Returns a matching callback for the class and method specified]]></description>
          <long-description><![CDATA[<p>The callback returned will be determined by the following logic:</p>

<ol>
<li>If an exact callback has been defined for the method, it will be returned</li>
<li>If a callback in the form <code>{prefix}*</code> has been defined that matches the method, it will be returned</li>
<li><code>NULL</code> will be returned</li>
</ol>]]></long-description>
          <tag line="437" name="internal" description=""/>
          <tag line="437" name="param" description="The name of the class" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="437" name="param" description="The method to get the callback for" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="437" name="return" description="The callback for the method or `NULL` if none exists - see method description for details" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="452">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="452">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="497" package="Flourish">
        <name>getActiveRecordStaticMethod</name>
        <full_name>getActiveRecordStaticMethod</full_name>
        <docblock line="482">
          <description><![CDATA[Returns a matching callback for the class and static method specified]]></description>
          <long-description><![CDATA[<p>The callback returned will be determined by the following logic:</p>

<ol>
<li>If an exact callback has been defined for the method, it will be returned</li>
<li>If a callback in the form <code>{prefix}*</code> has been defined that matches the method, it will be returned</li>
<li><code>NULL</code> will be returned</li>
</ol>]]></long-description>
          <tag line="482" name="internal" description=""/>
          <tag line="482" name="param" description="The name of the class" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="482" name="param" description="The method to get the callback for" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="482" name="return" description="The callback for the method or `NULL` if none exists - see method description for details" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="497">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="497">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="536" package="Flourish">
        <name>getClass</name>
        <full_name>getClass</full_name>
        <docblock line="528">
          <description><![CDATA[Takes a class name or class and returns the class name]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="528" name="internal" description=""/>
          <tag line="528" name="param" description="The object to get the name of, or possibly a string already containing the class" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="528" name="return" description="The class name" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="536">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="555" package="Flourish">
        <name>getColumnName</name>
        <full_name>getColumnName</full_name>
        <docblock line="543">
          <description><![CDATA[Returns the column name]]></description>
          <long-description><![CDATA[<p>The default column name is the result of calling fGrammar::humanize()
on the column.</p>]]></long-description>
          <tag line="543" name="internal" description=""/>
          <tag line="543" name="param" description="The class name the column is part of" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="543" name="param" description="The database column" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="543" name="return" description="The column name for the column specified" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="555">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="555">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="585" package="Flourish">
        <name>getDatabaseName</name>
        <full_name>getDatabaseName</full_name>
        <docblock line="577">
          <description><![CDATA[Returns the name for the database used by the class specified]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="577" name="internal" description=""/>
          <tag line="577" name="param" description="The class name to get the database name for" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="577" name="return" description="The name of the database to use" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="585">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="606" package="Flourish">
        <name>getRecordName</name>
        <full_name>getRecordName</full_name>
        <docblock line="595">
          <description><![CDATA[Returns the record name for a class]]></description>
          <long-description><![CDATA[<p>The default record name is the result of calling fGrammar::humanize()
on the class.</p>]]></long-description>
          <tag line="595" name="internal" description=""/>
          <tag line="595" name="param" description="The class name to get the record name of" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="595" name="return" description="The record name for the class specified" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="606">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="645" package="Flourish">
        <name>getRecordSetMethod</name>
        <full_name>getRecordSetMethod</full_name>
        <docblock line="631">
          <description><![CDATA[Returns a matching callback for the method specified]]></description>
          <long-description><![CDATA[<p>The callback returned will be determined by the following logic:</p>

<ol>
<li>If an exact callback has been defined for the method, it will be returned</li>
<li>If a callback in the form <code>{action}*</code> has been defined that matches the method, it will be returned</li>
<li><code>NULL</code> will be returned</li>
</ol>]]></long-description>
          <tag line="631" name="internal" description=""/>
          <tag line="631" name="param" description="The method to get the callback for" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="631" name="return" description="The callback for the method or `NULL` if none exists - see method description for details" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="645">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="671" package="Flourish">
        <name>getRelatedClass</name>
        <full_name>getRelatedClass</full_name>
        <docblock line="662">
          <description><![CDATA[Takes a class name and related class name and ensures the related class has the appropriate namespace prefix]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="662" name="internal" description=""/>
          <tag line="662" name="param" description="The primary class" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="662" name="param" description="The related class name" type="string" variable="$related_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="662" name="return" description="The related class name, with the appropriate namespace prefix" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="671">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="671">
          <name>$related_class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="696" package="Flourish">
        <name>isClassMappedToTable</name>
        <full_name>isClassMappedToTable</full_name>
        <docblock line="688">
          <description><![CDATA[Checks if a class has been mapped to a table]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="688" name="internal" description=""/>
          <tag line="688" name="param" description="The name of the class" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="688" name="return" description="If the class has been mapped to a table" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="696">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="714" package="Flourish">
        <name>mapClassToDatabase</name>
        <full_name>mapClassToDatabase</full_name>
        <docblock line="704">
          <description><![CDATA[Sets a class to use a database other than the "default"]]></description>
          <long-description><![CDATA[<p>Multiple database objects can be attached for the ORM by passing a
unique <code>$name</code> to the ::attach() method.</p>]]></long-description>
          <tag line="704" name="param" description="The name of the class, or an instance of it" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="704" name="param" description="The name given to the database when passed to ::attach()" type="string" variable="$database_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="704" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="714">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="714">
          <name>$database_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="734" package="Flourish">
        <name>mapClassToTable</name>
        <full_name>mapClassToTable</full_name>
        <docblock line="722">
          <description><![CDATA[Allows non-standard class to table mapping]]></description>
          <long-description><![CDATA[<p>By default, all database tables are assumed to be plural nouns in
<code>underscore_notation</code> and all class names are assumed to be singular
nouns in <code>UpperCamelCase</code>. This method allows arbitrary class to
table mapping.</p>]]></long-description>
          <tag line="722" name="param" description="The name of the class, or an instance of it" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="722" name="param" description="The name of the database table" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="722" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="734">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="734">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="752" package="Flourish">
        <name>objectify</name>
        <full_name>objectify</full_name>
        <docblock line="742">
          <description><![CDATA[Takes a scalar value and turns it into an object if applicable]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="742" name="internal" description=""/>
          <tag line="742" name="param" description="The class name of the class the column is part of" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="742" name="param" description="The database column" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="742" name="param" description="The value to possibly objectify" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="742" name="return" description="The scalar or object version of the value, depending on the column type and column options" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="752">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="752">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="752">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="808" package="Flourish">
        <name>overrideColumnName</name>
        <full_name>overrideColumnName</full_name>
        <docblock line="797">
          <description><![CDATA[Allows overriding of default column names]]></description>
          <long-description><![CDATA[<p>By default a column name is the result of fGrammar::humanize() called
on the column.</p>]]></long-description>
          <tag line="797" name="param" description="The class name or instance of the class the column is located in" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="797" name="param" description="The database column" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="797" name="param" description="The name for the column" type="string" variable="$column_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="797" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="808">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="808">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="808">
          <name>$column_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="830" package="Flourish">
        <name>overrideRecordName</name>
        <full_name>overrideRecordName</full_name>
        <docblock line="820">
          <description><![CDATA[Allows overriding of default record names]]></description>
          <long-description><![CDATA[<p>By default a record name is the result of fGrammar::humanize() called
on the class.</p>]]></long-description>
          <tag line="820" name="param" description="The class name or instance of the class to override the name of" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="820" name="param" description="The human version of the record" type="string" variable="$record_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="820" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="830">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="830">
          <name>$record_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="845" package="Flourish">
        <name>parseMethod</name>
        <full_name>parseMethod</full_name>
        <docblock line="837">
          <description><![CDATA[Parses a `camelCase` method name for an action and subject in the form `actionSubject()`]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="837" name="internal" description=""/>
          <tag line="837" name="param" description="The method name to parse" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="837" name="return" description="An array of `0 =&gt; {action}, 1 =&gt; {subject}`" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="845">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="880" package="Flourish">
        <name>registerActiveRecordMethod</name>
        <full_name>registerActiveRecordMethod</full_name>
        <docblock line="862">
          <description><![CDATA[Registers a callback for an fActiveRecord method that falls through to fActiveRecord::__call() or hits a predefined method hook]]></description>
          <long-description><![CDATA[<p>The callback should accept the following parameters:</p>

<ul>
<li><strong><code>$object</code></strong>:           The fActiveRecord instance</li>
<li><strong><code>&amp;$values</code></strong>:          The values array for the record</li>
<li><strong><code>&amp;$old_values</code></strong>:      The old values array for the record</li>
<li><strong><code>&amp;$related_records</code></strong>: The related records array for the record</li>
<li><strong><code>&amp;$cache</code></strong>:           The cache array for the record</li>
<li><strong><code>$method_name</code></strong>:      The method that was called</li>
<li><strong><code>&amp;$parameters</code></strong>:      The parameters passed to the method</li>
</ul>]]></long-description>
          <tag line="862" name="param" description="The class name or instance of the class to register for, `'*'` will register for all classes" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="862" name="param" description="The method to hook for - this can be a complete method name or `{prefix}*` where `*` will match any column name" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="862" name="param" description="The callback to execute - see method description for parameter list" type="callback" variable="$callback">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="862" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="880">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="880">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="880">
          <name>$callback</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="916" package="Flourish">
        <name>registerActiveRecordStaticMethod</name>
        <full_name>registerActiveRecordStaticMethod</full_name>
        <docblock line="898">
          <description><![CDATA[Registers a callback for an fActiveRecord method that falls through to fActiveRecord::__callStatic() or hits a predefined method hook]]></description>
          <long-description><![CDATA[<p>Only available to PHP 5.3+ which supports the __callStatic magic method.</p>

<p>The callback should accept the following parameters:</p>

<ul>
<li><strong><code>&amp;$class</code></strong>:           The class calling the static method</li>
<li><strong><code>$method_name</code></strong>:      The method that was called</li>
<li><strong><code>&amp;$parameters</code></strong>:      The parameters passed to the method</li>
</ul>]]></long-description>
          <tag line="898" name="throws" description="When the PHP version less than 5.3" type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="898" name="param" description="The class name or instance of the class to register for, `'*'` will register for all classes" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="898" name="param" description="The method to hook for - this can be a complete method name or `{prefix}*` where `*` will match any column name" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="898" name="param" description="The callback to execute - see method description for parameter list" type="callback" variable="$callback">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="898" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="916">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="916">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="916">
          <name>$callback</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="992" package="Flourish">
        <name>registerHookCallback</name>
        <full_name>registerHookCallback</full_name>
        <docblock line="940">
          <description><![CDATA[Registers a callback for one of the various fActiveRecord hooks - multiple callbacks can be registered for each hook]]></description>
          <long-description><![CDATA[<p>The method signature should include the follow parameters:</p>

<ul>
<li><strong><code>$object</code></strong>:           The fActiveRecord instance</li>
<li><strong><code>&amp;$values</code></strong>:          The values array for the record - see the [http://flourishlib.com/docs/fORM#values $values] documentation for details</li>
<li><strong><code>&amp;$old_values</code></strong>:      The old values array for the record - see the [http://flourishlib.com/docs/fORM#old_values $old_values] documentation for details</li>
<li><strong><code>&amp;$related_records</code></strong>: The related records array for the record - see the [http://flourishlib.com/docs/fORM#related_records $related_records] documentation for details</li>
<li><strong><code>&amp;$cache</code></strong>:           The cache array for the record - see the [http://flourishlib.com/docs/fORM#cache $cache] documentation for details</li>
</ul>

<p>The <code>'pre::validate()'</code> and <code>'post::validate()'</code> hooks have an extra
parameter:</p>

<ul>
<li><strong><code>&amp;$validation_messages</code></strong>: An ordered array of validation errors that will be returned or tossed as an fValidationException - see the [http://flourishlib.com/docs/fORM#validation_messages $validation_messages] documentation for details</li>
</ul>

<p>The <code>'pre::replicate()'</code>, <code>'post::replicate()'</code> and
<code>'cloned::replicate()'</code> hooks have an extra parameter:</p>

<ul>
<li><strong><code>$replication_level</code></strong>: An integer representing the level of recursion - the object being replicated will be <code>0</code>, children will be <code>1</code>, grandchildren <code>2</code> and so on.</li>
</ul>

<p>Below is a list of all valid hooks:</p>

<ul>
<li><code>'post::__construct()'</code></li>
<li><code>'pre::delete()'</code></li>
<li><code>'post-begin::delete()'</code></li>
<li><code>'pre-commit::delete()'</code></li>
<li><code>'post-commit::delete()'</code></li>
<li><code>'post-rollback::delete()'</code></li>
<li><code>'post::delete()'</code></li>
<li><code>'post::loadFromIdentityMap()'</code></li>
<li><code>'post::loadFromResult()'</code></li>
<li><code>'pre::populate()'</code></li>
<li><code>'post::populate()'</code></li>
<li><code>'pre::replicate()'</code></li>
<li><code>'post::replicate()'</code></li>
<li><code>'cloned::replicate()'</code></li>
<li><code>'pre::store()'</code></li>
<li><code>'post-begin::store()'</code></li>
<li><code>'post-validate::store()'</code></li>
<li><code>'pre-commit::store()'</code></li>
<li><code>'post-commit::store()'</code></li>
<li><code>'post-rollback::store()'</code></li>
<li><code>'post::store()'</code></li>
<li><code>'pre::validate()'</code></li>
<li><code>'post::validate()'</code></li>
</ul>]]></long-description>
          <tag line="940" name="param" description="The class name or instance of the class to hook, `'*'` will hook all classes" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="940" name="param" description="The hook to register for" type="string" variable="$hook">
            <type by_reference="false">string</type>
          </tag>
          <tag line="940" name="param" description="The callback to register - see the method description for details about the method signature" type="callback" variable="$callback">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="940" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="992">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="992">
          <name>$hook</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="992">
          <name>$callback</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1054" package="Flourish">
        <name>registerInspectCallback</name>
        <full_name>registerInspectCallback</full_name>
        <docblock line="1046">
          <description><![CDATA[Registers a callback to modify the results of fActiveRecord::inspect() methods]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1046" name="param" description="The class name or instance of the class to register for" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1046" name="param" description="The column to register for" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1046" name="param" description="The callback to register. Callback should accept a single parameter by reference, an associative array of the various metadata about a column." type="callback" variable="$callback">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="1046" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1054">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1054">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1054">
          <name>$callback</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1081" package="Flourish">
        <name>registerObjectifyCallback</name>
        <full_name>registerObjectifyCallback</full_name>
        <docblock line="1073">
          <description><![CDATA[Registers a callback for when ::objectify() is called on a specific column]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1073" name="param" description="The class name or instance of the class to register for" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1073" name="param" description="The column to register for" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1073" name="param" description="The callback to register. Callback should accept a single parameter, the value to objectify and should return the objectified value." type="callback" variable="$callback">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="1073" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1081">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1081">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1081">
          <name>$callback</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1114" package="Flourish">
        <name>registerRecordSetMethod</name>
        <full_name>registerRecordSetMethod</full_name>
        <docblock line="1099">
          <description><![CDATA[Registers a callback for an fRecordSet method that fall through to fRecordSet::__call()]]></description>
          <long-description><![CDATA[<p>The callback should accept the following parameters:</p>

<ul>
<li><strong><code>$object</code></strong>:      The actual record set</li>
<li><strong><code>$class</code></strong>:       The class of each record</li>
<li><strong><code>&amp;$records</code></strong>:    The ordered array of fActiveRecord objects</li>
<li><strong><code>$method_name</code></strong>: The method name that was called</li>
<li><strong><code>$parameters</code></strong>:  Any parameters passed to the method</li>
</ul>]]></long-description>
          <tag line="1099" name="param" description="The method to hook for" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1099" name="param" description="The callback to execute - see method description for parameter list" type="callback" variable="$callback">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="1099" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1114">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1114">
          <name>$callback</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1140" package="Flourish">
        <name>registerReflectCallback</name>
        <full_name>registerReflectCallback</full_name>
        <docblock line="1123">
          <description><![CDATA[Registers a callback to modify the results of fActiveRecord::reflect()]]></description>
          <long-description><![CDATA[<p>Callbacks registered here can override default method signatures and add
method signatures, however any methods that are defined in the actual class
will override these signatures.</p>

<p>The callback should accept three parameters:</p>

<ul>
<li><strong><code>$class</code></strong>: the class name</li>
<li><strong><code>&amp;$signatures</code></strong>: an associative array of <code>{method_name} =&gt; {signature}</code></li>
<li><strong><code>$include_doc_comments</code></strong>: a boolean indicating if the signature should include the doc comment for the method, or just the signature</li>
</ul>]]></long-description>
          <tag line="1123" name="param" description="The class name or instance of the class to register for, `'*'` will register for all classes" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1123" name="param" description="The callback to register. Callback should accept a three parameters - see method description for details." type="callback" variable="$callback">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="1123" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1140">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1140">
          <name>$callback</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1166" package="Flourish">
        <name>registerReplicateCallback</name>
        <full_name>registerReplicateCallback</full_name>
        <docblock line="1158">
          <description><![CDATA[Registers a callback for when a value is replicated for a specific column]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1158" name="param" description="The class name or instance of the class to register for" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1158" name="param" description="The column to register for" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1158" name="param" description="The callback to register. Callback should accept a single parameter, the value to replicate and should return the replicated value." type="callback" variable="$callback">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="1158" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1166">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1166">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1166">
          <name>$callback</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1190" package="Flourish">
        <name>registerScalarizeCallback</name>
        <full_name>registerScalarizeCallback</full_name>
        <docblock line="1182">
          <description><![CDATA[Registers a callback for when ::scalarize() is called on a specific column]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1182" name="param" description="The class name or instance of the class to register for" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1182" name="param" description="The column to register for" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1182" name="param" description="The callback to register. Callback should accept a single parameter, the value to scalarize and should return the scalarized value." type="callback" variable="$callback">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="1182" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1190">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1190">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1190">
          <name>$callback</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1218" package="Flourish">
        <name>replicate</name>
        <full_name>replicate</full_name>
        <docblock line="1206">
          <description><![CDATA[Takes and value and returns a copy is scalar or a clone if an object]]></description>
          <long-description><![CDATA[<p>The ::registerReplicateCallback() allows for custom replication code</p>]]></long-description>
          <tag line="1206" name="internal" description=""/>
          <tag line="1206" name="param" description="The class the column is part of" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1206" name="param" description="The database column" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1206" name="param" description="The value to copy/clone" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1206" name="return" description="The copied/cloned value" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="1218">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1218">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1218">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1239" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="1232">
          <description><![CDATA[Resets the configuration of the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1232" name="internal" description=""/>
          <tag line="1232" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1276" package="Flourish">
        <name>scalarize</name>
        <full_name>scalarize</full_name>
        <docblock line="1266">
          <description><![CDATA[If the value passed is an object, calls `__toString()` on it]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1266" name="internal" description=""/>
          <tag line="1266" name="param" description="The class name or instance of the class the column is part of" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1266" name="param" description="The database column" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1266" name="param" description="The value to get the scalar value of" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1266" name="return" description="The scalar value of the value" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="1276">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1276">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1276">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1300" package="Flourish">
        <name>tablize</name>
        <full_name>tablize</full_name>
        <docblock line="1294">
          <description><![CDATA[Takes a class name (or class) and turns it into a table name - Uses custom mapping if set]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1294" name="param" description="The class name" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1294" name="return" description="The table name" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1300">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1321" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="1316">
          <description><![CDATA[Forces use as a static class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1316" name="return" description="" type="\fORM">
            <type by_reference="false">\fORM</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fORM.php</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fORMJSON.php" hash="5abe7e551acb9d404bbf5a826dfc42c9" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="17" package="Flourish">
      <extends/>
      <name>fORMJSON</name>
      <full_name>\fORMJSON</full_name>
      <docblock line="2">
        <description><![CDATA[Adds JSON functionality to fActiveRecord and fRecordSet]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2008-2009 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fORMJSON" link="http://flourishlib.com/fORMJSON"/>
        <tag line="2" name="version" description="1.0.0b3"/>
        <tag line="2" name="changes" description="1.0.0b3  Removed the `$pointer` parameter from ::toJSONRecordSet() since fRecordSet no longer has a pointer [wb, 2010-09-28]"/>
        <tag line="2" name="changes" description="1.0.0b2  Updated the code to remove the `$associate` parameter for the record set method callback [wb, 2009-06-02]"/>
        <tag line="2" name="changes" description="1.0.0b   The initial implementation [wb, 2008-06-25]"/>
      </docblock>
      <constant namespace="global" line="20" package="Flourish">
        <name>extend</name>
        <full_name>extend</full_name>
        <value><![CDATA['fORMJSON::extend']]></value>
      </constant>
      <constant namespace="global" line="21" package="Flourish">
        <name>reflect</name>
        <full_name>reflect</full_name>
        <value><![CDATA['fORMJSON::reflect']]></value>
      </constant>
      <constant namespace="global" line="22" package="Flourish">
        <name>toJSON</name>
        <full_name>toJSON</full_name>
        <value><![CDATA['fORMJSON::toJSON']]></value>
      </constant>
      <constant namespace="global" line="23" package="Flourish">
        <name>toJSONRecordSet</name>
        <full_name>toJSONRecordSet</full_name>
        <value><![CDATA['fORMJSON::toJSONRecordSet']]></value>
      </constant>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="31" package="Flourish">
        <name>extend</name>
        <full_name>extend</full_name>
        <docblock line="26">
          <description><![CDATA[Adds the method `toJSON()` to fActiveRecord and fRecordSet instances]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="26" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="61" package="Flourish">
        <name>reflect</name>
        <full_name>reflect</full_name>
        <docblock line="51">
          <description><![CDATA[Adjusts the fActiveRecord::reflect() signatures of columns that have been added by this class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="51" name="internal" description=""/>
          <tag line="51" name="param" description="The class to reflect" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="51" name="param" description="&amp;$signatures The associative array of `{method name} =&gt; {signature}`" type="array" variable="$signatures">
            <type by_reference="false">array</type>
          </tag>
          <tag line="51" name="param" description="If doc comments should be included with the signature" type="boolean" variable="$include_doc_comments">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="51" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="61">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="61">
          <name>$signatures</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="61">
          <name>$include_doc_comments</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="91" package="Flourish">
        <name>toJSON</name>
        <full_name>toJSON</full_name>
        <docblock line="77">
          <description><![CDATA[Returns a JSON object representation of the record]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="77" name="internal" description=""/>
          <tag line="77" name="param" description="The fActiveRecord instance" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="77" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="77" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="77" name="param" description="&amp;$related_records Any records related to this record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="77" name="param" description="&amp;$cache The cache array for the record" type="array" variable="$cache">
            <type by_reference="false">array</type>
          </tag>
          <tag line="77" name="param" description="The method that was called" type="string" variable="$method_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="77" name="param" description="The parameters passed to the method" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="77" name="return" description="The JSON object that represents the values of this record" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="91">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="91">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="91">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="91">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="91">
          <name>$method_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="91">
          <name>$parameters</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="117" package="Flourish">
        <name>toJSONRecordSet</name>
        <full_name>toJSONRecordSet</full_name>
        <docblock line="107">
          <description><![CDATA[Returns a JSON object representation of a record set]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="107" name="internal" description=""/>
          <tag line="107" name="param" description="The fRecordSet instance" type="\fRecordSet" variable="$record_set">
            <type by_reference="false">\fRecordSet</type>
          </tag>
          <tag line="107" name="param" description="The class of the records" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="107" name="param" description="&amp;$records The fActiveRecord objects" type="array" variable="$records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="107" name="return" description="The JSON object that represents an array of all of the fActiveRecord objects" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="117">
          <name>$record_set</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="117">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="117">
          <name>$records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="128" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="123">
          <description><![CDATA[Forces use as a static class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="123" name="return" description="" type="\fORMJSON">
            <type by_reference="false">\fORMJSON</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fORMJSON.php</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fBuffer.php" hash="eda56081c6a9098fd1abf7251bc3ff2b" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="17" package="Flourish">
      <extends/>
      <name>fBuffer</name>
      <full_name>\fBuffer</full_name>
      <docblock line="2">
        <description><![CDATA[Provides a single, simplified interface for [http://php.net/outcontrol output buffering] to prevent nested buffering issues and provide a more logical API]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2008-2010 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fBuffer" link="http://flourishlib.com/fBuffer"/>
        <tag line="2" name="version" description="1.0.0b3"/>
        <tag line="2" name="changes" description="1.0.0b3  Added a check to ensure the zlib extension is installd when doing gzipped buffering [wb, 2010-05-20]"/>
        <tag line="2" name="changes" description="1.0.0b2  Added the `$gzip` parameter to ::start() [wb, 2010-05-19]"/>
        <tag line="2" name="changes" description="1.0.0b   The initial implementation [wb, 2008-03-16]"/>
      </docblock>
      <constant namespace="global" line="20" package="Flourish">
        <name>erase</name>
        <full_name>erase</full_name>
        <value><![CDATA['fBuffer::erase']]></value>
      </constant>
      <constant namespace="global" line="21" package="Flourish">
        <name>get</name>
        <full_name>get</full_name>
        <value><![CDATA['fBuffer::get']]></value>
      </constant>
      <constant namespace="global" line="22" package="Flourish">
        <name>isStarted</name>
        <full_name>isStarted</full_name>
        <value><![CDATA['fBuffer::isStarted']]></value>
      </constant>
      <constant namespace="global" line="23" package="Flourish">
        <name>replace</name>
        <full_name>replace</full_name>
        <value><![CDATA['fBuffer::replace']]></value>
      </constant>
      <constant namespace="global" line="24" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <value><![CDATA['fBuffer::reset']]></value>
      </constant>
      <constant namespace="global" line="25" package="Flourish">
        <name>start</name>
        <full_name>start</full_name>
        <value><![CDATA['fBuffer::start']]></value>
      </constant>
      <constant namespace="global" line="26" package="Flourish">
        <name>startCapture</name>
        <full_name>startCapture</full_name>
        <value><![CDATA['fBuffer::startCapture']]></value>
      </constant>
      <constant namespace="global" line="27" package="Flourish">
        <name>stop</name>
        <full_name>stop</full_name>
        <value><![CDATA['fBuffer::stop']]></value>
      </constant>
      <constant namespace="global" line="28" package="Flourish">
        <name>stopCapture</name>
        <full_name>stopCapture</full_name>
        <value><![CDATA['fBuffer::stopCapture']]></value>
      </constant>
      <property final="false" static="true" visibility="private" line="36" namespace="global" package="Sutra">
        <name>$capturing</name>
        <default><![CDATA[FALSE]]></default>
        <docblock line="31">
          <description><![CDATA[If output capturing is currently active]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="31" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="43" namespace="global" package="Sutra">
        <name>$started</name>
        <default><![CDATA[FALSE]]></default>
        <docblock line="38">
          <description><![CDATA[If output buffering has been started]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="38" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="51" package="Flourish">
        <name>erase</name>
        <full_name>erase</full_name>
        <docblock line="46">
          <description><![CDATA[Erases the output buffer]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="46" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="72" package="Flourish">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="67">
          <description><![CDATA[Returns the contents of output buffer]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="67" name="return" description="The contents of the output buffer" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="93" package="Flourish">
        <name>isStarted</name>
        <full_name>isStarted</full_name>
        <docblock line="88">
          <description><![CDATA[Checks if buffering has been started]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="88" name="return" description="If buffering has been started" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="106" package="Flourish">
        <name>replace</name>
        <full_name>replace</full_name>
        <docblock line="99">
          <description><![CDATA[Replaces a value in the output buffer]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="99" name="param" description="The string to find" type="string" variable="$find">
            <type by_reference="false">string</type>
          </tag>
          <tag line="99" name="param" description="The string to replace" type="string" variable="$replace">
            <type by_reference="false">string</type>
          </tag>
          <tag line="99" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="106">
          <name>$find</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="106">
          <name>$replace</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="134" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="127">
          <description><![CDATA[Resets the configuration and buffer of the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="127" name="internal" description=""/>
          <tag line="127" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="152" package="Flourish">
        <name>start</name>
        <full_name>start</full_name>
        <docblock line="146">
          <description><![CDATA[Starts output buffering]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="146" name="param" description="If the buffered output should be gzipped using [http://php.net/ob_gzhandler `ob_gzhandler()`]" type="boolean" variable="$gzip">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="146" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="152">
          <name>$gzip</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="180" package="Flourish">
        <name>startCapture</name>
        <full_name>startCapture</full_name>
        <docblock line="175">
          <description><![CDATA[Starts capturing output, should be used with ::stopCapture() to grab output from code that does not offer an option of returning a value instead of outputting it]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="175" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="197" package="Flourish">
        <name>stop</name>
        <full_name>stop</full_name>
        <docblock line="192">
          <description><![CDATA[Stops output buffering, flushing everything to the browser]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="192" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="227" package="Flourish">
        <name>stopCapture</name>
        <full_name>stopCapture</full_name>
        <docblock line="222">
          <description><![CDATA[Stops capturing output, returning what was captured]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="222" name="return" description="The captured output" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="244" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="239">
          <description><![CDATA[Forces use as a static class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="239" name="return" description="" type="\fBuffer">
            <type by_reference="false">\fBuffer</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fBuffer.php</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fJSON.php" hash="7174094a4cdae8e266c4b4ba22f5d83f" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="28" package="Flourish">
      <extends/>
      <name>fJSON</name>
      <full_name>\fJSON</full_name>
      <docblock line="2">
        <description><![CDATA[Provides encoding and decoding for JSON]]></description>
        <long-description><![CDATA[<p>This class is a compatibility class for the
[http://php.net/json json extension] on servers with PHP 5.0 or 5.1, or
servers with the json extension compiled out.</p>

<p>This class will handle JSON values that are not contained in an array or
object - such values are not valid according to the JSON spec, but the
functionality is included for compatiblity with the json extension.</p>]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2008-2010 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fJSON" link="http://flourishlib.com/fJSON"/>
        <tag line="2" name="version" description="1.0.0b6"/>
        <tag line="2" name="changes" description="1.0.0b6  Removed `e` flag from preg_replace() calls [wb, 2010-06-08]"/>
        <tag line="2" name="changes" description="1.0.0b5  Added the ::output() method [wb, 2010-03-15]"/>
        <tag line="2" name="changes" description="1.0.0b4  Fixed a bug with ::decode() where JSON objects could lose all but the first key: value pair [wb, 2009-05-06]"/>
        <tag line="2" name="changes" description="1.0.0b3  Updated the class to be consistent with PHP 5.2.9+ for encoding and decoding invalid data [wb, 2009-05-04]"/>
        <tag line="2" name="changes" description="1.0.0b2  Changed @ error suppression operator to `error_reporting()` calls [wb, 2009-01-26]"/>
        <tag line="2" name="changes" description="1.0.0b   The initial implementation [wb, 2008-07-12]"/>
      </docblock>
      <constant namespace="global" line="31" package="Flourish">
        <name>decode</name>
        <full_name>decode</full_name>
        <value><![CDATA['fJSON::decode']]></value>
      </constant>
      <constant namespace="global" line="32" package="Flourish">
        <name>encode</name>
        <full_name>encode</full_name>
        <value><![CDATA['fJSON::encode']]></value>
      </constant>
      <constant namespace="global" line="33" package="Flourish">
        <name>output</name>
        <full_name>output</full_name>
        <value><![CDATA['fJSON::output']]></value>
      </constant>
      <constant namespace="global" line="34" package="Flourish">
        <name>sendHeader</name>
        <full_name>sendHeader</full_name>
        <value><![CDATA['fJSON::sendHeader']]></value>
      </constant>
      <constant namespace="global" line="44" package="Flourish">
        <name>J_ARRAY_OPEN</name>
        <full_name>J_ARRAY_OPEN</full_name>
        <value><![CDATA[0]]></value>
        <docblock line="37">
          <description><![CDATA[An abstract representation of []]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="37" name="internal" description=""/>
          <tag line="37" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="53" package="Flourish">
        <name>J_ARRAY_COMMA</name>
        <full_name>J_ARRAY_COMMA</full_name>
        <value><![CDATA[1]]></value>
        <docblock line="46">
          <description><![CDATA[An abstract representation of , in a JSON array]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="46" name="internal" description=""/>
          <tag line="46" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="62" package="Flourish">
        <name>J_ARRAY_CLOSE</name>
        <full_name>J_ARRAY_CLOSE</full_name>
        <value><![CDATA[2]]></value>
        <docblock line="55">
          <description><![CDATA[An abstract representation of ]]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="55" name="internal" description=""/>
          <tag line="55" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="71" package="Flourish">
        <name>J_OBJ_OPEN</name>
        <full_name>J_OBJ_OPEN</full_name>
        <value><![CDATA[3]]></value>
        <docblock line="64">
          <description><![CDATA[An abstract representation of {]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="64" name="internal" description=""/>
          <tag line="64" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="80" package="Flourish">
        <name>J_KEY</name>
        <full_name>J_KEY</full_name>
        <value><![CDATA[4]]></value>
        <docblock line="73">
          <description><![CDATA[An abstract representation of a JSON object key]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="73" name="internal" description=""/>
          <tag line="73" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="89" package="Flourish">
        <name>J_COLON</name>
        <full_name>J_COLON</full_name>
        <value><![CDATA[5]]></value>
        <docblock line="82">
          <description><![CDATA[An abstract representation of :]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="82" name="internal" description=""/>
          <tag line="82" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="98" package="Flourish">
        <name>J_OBJ_COMMA</name>
        <full_name>J_OBJ_COMMA</full_name>
        <value><![CDATA[6]]></value>
        <docblock line="91">
          <description><![CDATA[An abstract representation of , in a JSON object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="91" name="internal" description=""/>
          <tag line="91" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="107" package="Flourish">
        <name>J_OBJ_CLOSE</name>
        <full_name>J_OBJ_CLOSE</full_name>
        <value><![CDATA[7]]></value>
        <docblock line="100">
          <description><![CDATA[An abstract representation of }]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="100" name="internal" description=""/>
          <tag line="100" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="116" package="Flourish">
        <name>J_INTEGER</name>
        <full_name>J_INTEGER</full_name>
        <value><![CDATA[8]]></value>
        <docblock line="109">
          <description><![CDATA[An abstract representation of an integer]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="109" name="internal" description=""/>
          <tag line="109" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="125" package="Flourish">
        <name>J_FLOAT</name>
        <full_name>J_FLOAT</full_name>
        <value><![CDATA[9]]></value>
        <docblock line="118">
          <description><![CDATA[An abstract representation of a floating value]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="118" name="internal" description=""/>
          <tag line="118" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="134" package="Flourish">
        <name>J_TRUE</name>
        <full_name>J_TRUE</full_name>
        <value><![CDATA[10]]></value>
        <docblock line="127">
          <description><![CDATA[An abstract representation of a boolean true]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="127" name="internal" description=""/>
          <tag line="127" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="143" package="Flourish">
        <name>J_FALSE</name>
        <full_name>J_FALSE</full_name>
        <value><![CDATA[11]]></value>
        <docblock line="136">
          <description><![CDATA[An abstract representation of a boolean false]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="136" name="internal" description=""/>
          <tag line="136" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="152" package="Flourish">
        <name>J_NULL</name>
        <full_name>J_NULL</full_name>
        <value><![CDATA[12]]></value>
        <docblock line="145">
          <description><![CDATA[An abstract representation of null]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="145" name="internal" description=""/>
          <tag line="145" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="161" package="Flourish">
        <name>J_STRING</name>
        <full_name>J_STRING</full_name>
        <value><![CDATA[13]]></value>
        <docblock line="154">
          <description><![CDATA[An abstract representation of a string]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="154" name="internal" description=""/>
          <tag line="154" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="true" visibility="private" line="169" namespace="global" package="Sutra">
        <name>$control_character_map</name>
        <default><![CDATA[array('"' => '\"', '\\' => '\\\\', '/' => '\/', "\x8" => '\b', "\xC" => '\f', "\n" => '\n', "\r" => '\r', "\t" => '\t')]]></default>
        <docblock line="164">
          <description><![CDATA[An array of special characters in JSON strings]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="164" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="181" namespace="global" package="Sutra">
        <name>$next_values</name>
        <default><![CDATA[array(self::J_ARRAY_OPEN => array(self::J_ARRAY_OPEN => TRUE, self::J_ARRAY_CLOSE => TRUE, self::J_OBJ_OPEN => TRUE, self::J_INTEGER => TRUE, self::J_FLOAT => TRUE, self::J_TRUE => TRUE, self::J_FALSE => TRUE, self::J_NULL => TRUE, self::J_STRING => TRUE), self::J_ARRAY_COMMA => array(self::J_ARRAY_OPEN => TRUE, self::J_OBJ_OPEN => TRUE, self::J_INTEGER => TRUE, self::J_FLOAT => TRUE, self::J_TRUE => TRUE, self::J_FALSE => TRUE, self::J_NULL => TRUE, self::J_STRING => TRUE), self::J_ARRAY_CLOSE => array(self::J_ARRAY_CLOSE => TRUE, self::J_OBJ_CLOSE => TRUE, self::J_ARRAY_COMMA => TRUE, self::J_OBJ_COMMA => TRUE), self::J_OBJ_OPEN => array(self::J_OBJ_CLOSE => TRUE, self::J_KEY => TRUE), self::J_KEY => array(self::J_COLON => TRUE), self::J_OBJ_COMMA => array(self::J_KEY => TRUE), self::J_COLON => array(self::J_ARRAY_OPEN => TRUE, self::J_OBJ_OPEN => TRUE, self::J_INTEGER => TRUE, self::J_FLOAT => TRUE, self::J_TRUE => TRUE, self::J_FALSE => TRUE, self::J_NULL => TRUE, self::J_STRING => TRUE), self::J_OBJ_CLOSE => array(self::J_ARRAY_CLOSE => TRUE, self::J_OBJ_CLOSE => TRUE, self::J_ARRAY_COMMA => TRUE, self::J_OBJ_COMMA => TRUE), self::J_INTEGER => array(self::J_ARRAY_CLOSE => TRUE, self::J_OBJ_CLOSE => TRUE, self::J_ARRAY_COMMA => TRUE, self::J_OBJ_COMMA => TRUE), self::J_FLOAT => array(self::J_ARRAY_CLOSE => TRUE, self::J_OBJ_CLOSE => TRUE, self::J_ARRAY_COMMA => TRUE, self::J_OBJ_COMMA => TRUE), self::J_TRUE => array(self::J_ARRAY_CLOSE => TRUE, self::J_OBJ_CLOSE => TRUE, self::J_ARRAY_COMMA => TRUE, self::J_OBJ_COMMA => TRUE), self::J_FALSE => array(self::J_ARRAY_CLOSE => TRUE, self::J_OBJ_CLOSE => TRUE, self::J_ARRAY_COMMA => TRUE, self::J_OBJ_COMMA => TRUE), self::J_NULL => array(self::J_ARRAY_CLOSE => TRUE, self::J_OBJ_CLOSE => TRUE, self::J_ARRAY_COMMA => TRUE, self::J_OBJ_COMMA => TRUE), self::J_STRING => array(self::J_ARRAY_CLOSE => TRUE, self::J_OBJ_CLOSE => TRUE, self::J_ARRAY_COMMA => TRUE, self::J_OBJ_COMMA => TRUE))]]></default>
        <docblock line="174">
          <description><![CDATA[An array of what values are allowed after other values]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="174" name="internal" description=""/>
          <tag line="174" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="284" package="Flourish">
        <name>decode</name>
        <full_name>decode</full_name>
        <docblock line="274">
          <description><![CDATA[Decodes a JSON string into native PHP data types]]></description>
          <long-description><![CDATA[<p>This function is very strict about the format of JSON. If the string is
not a valid JSON string, <code>NULL</code> will be returned.</p>]]></long-description>
          <tag line="274" name="param" description="This should be the name of a related class" type="string" variable="$json">
            <type by_reference="false">string</type>
          </tag>
          <tag line="274" name="param" description="If this is TRUE, JSON objects will be represented as an assocative array instead of a `stdClass` object" type="boolean" variable="$assoc">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="274" name="return" description="A PHP equivalent of the JSON string" type="array|\stdClass">
            <type by_reference="false">array</type>
            <type by_reference="false">\stdClass</type>
          </tag>
        </docblock>
        <argument line="284">
          <name>$json</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="284">
          <name>$assoc</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="480" package="Flourish">
        <name>encode</name>
        <full_name>encode</full_name>
        <docblock line="474">
          <description><![CDATA[Encodes a PHP value into a JSON string]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="474" name="param" description="The PHP value to encode" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="474" name="return" description="The JSON string that is equivalent to the PHP value" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="480">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="580" package="Flourish">
        <name>getElementType</name>
        <full_name>getElementType</full_name>
        <docblock line="572">
          <description><![CDATA[Determines the type of a parser JSON element]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="572" name="param" description="&amp;$stack The stack of arrays/objects being parsed" type="array" variable="$stack">
            <type by_reference="false">array</type>
          </tag>
          <tag line="572" name="param" description="The type of the last element parsed" type="integer" variable="$last">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="572" name="param" description="The element being detected" type="string" variable="$element">
            <type by_reference="false">string</type>
          </tag>
          <tag line="572" name="return" description="The element type" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="580">
          <name>$stack</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="580">
          <name>$last</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="580">
          <name>$element</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="645" package="Flourish">
        <name>makeUnicodeCodePoint</name>
        <full_name>makeUnicodeCodePoint</full_name>
        <docblock line="639">
          <description><![CDATA[Created a unicode code point from a JS escaped unicode character]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="639" name="param" description="A regex match containing the 4 digit code referenced by the key `1`" type="array" variable="$match">
            <type by_reference="false">array</type>
          </tag>
          <tag line="639" name="return" description="The U+{digits} unicode code point" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="645">
          <name>$match</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="657" package="Flourish">
        <name>output</name>
        <full_name>output</full_name>
        <docblock line="651">
          <description><![CDATA[Sets the proper `Content-Type` header and outputs the value, encoded as JSON]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="651" name="param" description="The PHP value to output as JSON" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="651" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="657">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="671" package="Flourish">
        <name>scalarize</name>
        <full_name>scalarize</full_name>
        <docblock line="664">
          <description><![CDATA[Decodes a scalar value]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="664" name="param" description="The type of the element" type="integer" variable="$type">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="664" name="param" description="The element to be converted to a scalar" type="string" variable="$element">
            <type by_reference="false">string</type>
          </tag>
          <tag line="664" name="return" description="The scalar value or the original string of the element" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="671">
          <name>$type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="671">
          <name>$element</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="703" package="Flourish">
        <name>sendHeader</name>
        <full_name>sendHeader</full_name>
        <docblock line="698">
          <description><![CDATA[Sets the proper `Content-Type` header for UTF-8 encoded JSON]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="698" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="714" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="709">
          <description><![CDATA[Forces use as a static class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="709" name="return" description="" type="\fJSON">
            <type by_reference="false">\fJSON</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fJSON.php</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fResult.php" hash="21ff7c41ee1ccd0bdda315a2fb146cda" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="27" package="Flourish">
      <extends/>
      <implements>\Iterator</implements>
      <name>fResult</name>
      <full_name>\fResult</full_name>
      <docblock line="2">
        <description><![CDATA[Representation of a result from a query against the fDatabase class]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2011 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fResult" link="http://flourishlib.com/fResult"/>
        <tag line="2" name="version" description="1.0.0b13"/>
        <tag line="2" name="changes" description="1.0.0b12  Added a workaround for iconv having issues in MAMP 1.9.4+ [wb, 2011-07-26]"/>
        <tag line="2" name="changes" description="1.0.0b12  Fixed MSSQL to have a properly reset row array, added ::silenceNotices(), fixed pdo_dblib on Windows when using the Microsoft DBLib driver [wb, 2011-05-09]"/>
        <tag line="2" name="changes" description="1.0.0b11  Backwards Compatibility Break - removed ODBC support [wb, 2010-07-31]"/>
        <tag line="2" name="changes" description="1.0.0b10  Added IBM DB2 support [wb, 2010-04-13]"/>
        <tag line="2" name="changes" description="1.0.0b9   Added support for prepared statements [wb, 2010-03-02]"/>
        <tag line="2" name="changes" description="1.0.0b8   Fixed a bug with decoding MSSQL national column when using an ODBC connection [wb, 2009-09-18]"/>
        <tag line="2" name="changes" description="1.0.0b7   Added the method ::unescape(), changed ::tossIfNoRows() to return the object for chaining [wb, 2009-08-12]"/>
        <tag line="2" name="changes" description="1.0.0b6   Fixed a bug where ::fetchAllRows() would throw a fNoRowsException [wb, 2009-06-30]"/>
        <tag line="2" name="changes" description="1.0.0b5   Added the method ::asObjects() to allow for returning objects instead of associative arrays [wb, 2009-06-23]"/>
        <tag line="2" name="changes" description="1.0.0b4   Fixed a bug with not properly converting SQL Server text to UTF-8 [wb, 2009-06-18]"/>
        <tag line="2" name="changes" description="1.0.0b3   Added support for Oracle, various bug fixes [wb, 2009-05-04]"/>
        <tag line="2" name="changes" description="1.0.0b2   Updated for new fCore API [wb, 2009-02-16]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2007-09-25]"/>
      </docblock>
      <property final="false" static="true" visibility="private" line="34" namespace="global" package="Sutra">
        <name>$silence_notices</name>
        <default><![CDATA[FALSE]]></default>
        <docblock line="29">
          <description><![CDATA[If notices should be hidden for broken database drivers]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="29" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="92" namespace="global" package="Sutra">
        <name>$affected_rows</name>
        <default><![CDATA[0]]></default>
        <docblock line="87">
          <description><![CDATA[The number of rows affected by an `INSERT`, `UPDATE`, `DELETE`, etc]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="87" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="99" namespace="global" package="Sutra">
        <name>$auto_incremented_value</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="94">
          <description><![CDATA[The auto incremented value from the query]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="94" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="106" namespace="global" package="Sutra">
        <name>$character_set</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="101">
          <description><![CDATA[The character set to transcode from for MSSQL queries]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="101" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="113" namespace="global" package="Sutra">
        <name>$current_row</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="108">
          <description><![CDATA[The current row of the result set]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="108" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="120" namespace="global" package="Sutra">
        <name>$database</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="115">
          <description><![CDATA[The database object this result was created from]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="115" name="var" description="" type="\fDatabase">
            <type by_reference="false">\fDatabase</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="127" namespace="global" package="Sutra">
        <name>$extension</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="122">
          <description><![CDATA[The database extension]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="122" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="134" namespace="global" package="Sutra">
        <name>$output_objects</name>
        <default><![CDATA[FALSE]]></default>
        <docblock line="129">
          <description><![CDATA[If rows should be converted to objects]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="129" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="141" namespace="global" package="Sutra">
        <name>$pointer</name>
        <default><![CDATA[]]></default>
        <docblock line="136">
          <description><![CDATA[The position of the pointer in the result set]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="136" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="148" namespace="global" package="Sutra">
        <name>$result</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="143">
          <description><![CDATA[The result resource or array]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="143" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="155" namespace="global" package="Sutra">
        <name>$returned_rows</name>
        <default><![CDATA[0]]></default>
        <docblock line="150">
          <description><![CDATA[The number of rows returned by a select]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="150" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="162" namespace="global" package="Sutra">
        <name>$sql</name>
        <default><![CDATA['']]></default>
        <docblock line="157">
          <description><![CDATA[The SQL query]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="157" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="169" namespace="global" package="Sutra">
        <name>$unescape_map</name>
        <default><![CDATA[array()]]></default>
        <docblock line="164">
          <description><![CDATA[Holds the data types for each column to allow for on-the-fly unescaping]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="164" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="176" namespace="global" package="Sutra">
        <name>$untranslated_sql</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="171">
          <description><![CDATA[The SQL from before translation - only applicable to translated queries]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="171" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="45" package="Flourish">
        <name>compose</name>
        <full_name>compose</full_name>
        <docblock line="37">
          <description><![CDATA[Composes text using fText if loaded]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="37" name="param" description="The message to compose" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="37" name="param" description="A string or number to insert into the message" type="mixed" variable="$component">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="37" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="37" name="return" description="The composed and possible translated message" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="45">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="70" package="Flourish">
        <name>iconv</name>
        <full_name>iconv</full_name>
        <docblock line="60">
          <description><![CDATA[This works around a bug in MAMP 1.9.4+ and PHP 5.3 where iconv()
does not seem to properly assign the return value to a variable, but
does work when returning the value.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="60" name="param" description="The incoming character encoding" type="string" variable="$in_charset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="60" name="param" description="The outgoing character encoding" type="string" variable="$out_charset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="60" name="param" description="The string to convert" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="60" name="return" description="The converted string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="70">
          <name>$in_charset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="70">
          <name>$out_charset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="70">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="81" package="Flourish">
        <name>silenceNotices</name>
        <full_name>silenceNotices</full_name>
        <docblock line="76">
          <description><![CDATA[Turns off notices about broken database extensions much as the MSSQL DBLib driver]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="76" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="188" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="179">
          <description><![CDATA[Configures the result set]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="179" name="internal" description=""/>
          <tag line="179" name="param" description="The database object this result set was created from" type="\fDatabase" variable="$database">
            <type by_reference="false">\fDatabase</type>
          </tag>
          <tag line="179" name="param" description="MSSQL only: the character set to transcode from since MSSQL doesn't do UTF-8" type="string" variable="$character_set">
            <type by_reference="false">string</type>
          </tag>
          <tag line="179" name="return" description="" type="\fResult">
            <type by_reference="false">\fResult</type>
          </tag>
        </docblock>
        <argument line="188">
          <name>$database</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="188">
          <name>$character_set</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="209" package="Flourish">
        <name>__destruct</name>
        <full_name>__destruct</full_name>
        <docblock line="202">
          <description><![CDATA[Frees up the result object to save memory]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="202" name="internal" description=""/>
          <tag line="202" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="247" package="Flourish">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="239">
          <description><![CDATA[All requests that hit this method should be requests for callbacks]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="239" name="internal" description=""/>
          <tag line="239" name="param" description="The method to create a callback for" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="239" name="return" description="The callback for the method requested" type="callback">
            <type by_reference="false">callback</type>
          </tag>
        </docblock>
        <argument line="247">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="258" package="Flourish">
        <name>advanceCurrentRow</name>
        <full_name>advanceCurrentRow</full_name>
        <docblock line="253">
          <description><![CDATA[Gets the next row from the result and assigns it to the current row]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="253" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="347" package="Flourish">
        <name>asObjects</name>
        <full_name>asObjects</full_name>
        <docblock line="342">
          <description><![CDATA[Sets the object to return rows as objects instead of associative arrays (the default)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="342" name="return" description="The result object, to allow for method chaining" type="\fResult">
            <type by_reference="false">\fResult</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="359" package="Flourish">
        <name>countAffectedRows</name>
        <full_name>countAffectedRows</full_name>
        <docblock line="354">
          <description><![CDATA[Returns the number of rows affected by the query]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="354" name="return" description="The number of rows affected by the query" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="370" package="Flourish">
        <name>countReturnedRows</name>
        <full_name>countReturnedRows</full_name>
        <docblock line="365">
          <description><![CDATA[Returns the number of rows returned by the query]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="365" name="return" description="The number of rows returned by the query" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="385" package="Flourish">
        <name>current</name>
        <full_name>current</full_name>
        <docblock line="376">
          <description><![CDATA[Returns the current row in the result set (required by iterator interface)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="376" name="throws" description="When the query did not return any rows" type="\fNoRowsException">
            <type by_reference="false">\fNoRowsException</type>
          </tag>
          <tag line="376" name="throws" description="When there are no remaining rows in the result" type="\fNoRemainingException">
            <type by_reference="false">\fNoRemainingException</type>
          </tag>
          <tag line="376" name="internal" description=""/>
          <tag line="376" name="return" description="The current row" type="array|\stdClass">
            <type by_reference="false">array</type>
            <type by_reference="false">\stdClass</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="414" package="Flourish">
        <name>decodeMSSQLNationalColumns</name>
        <full_name>decodeMSSQLNationalColumns</full_name>
        <docblock line="408">
          <description><![CDATA[Decodes national (unicode) character data coming out of MSSQL into UTF-8]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="408" name="param" description="The row from the database" type="array" variable="$row">
            <type by_reference="false">array</type>
          </tag>
          <tag line="408" name="return" description="The fixed row" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="414">
          <name>$row</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="442" package="Flourish">
        <name>fetchAllRows</name>
        <full_name>fetchAllRows</full_name>
        <docblock line="437">
          <description><![CDATA[Returns all of the rows from the result set]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="437" name="return" description="The array of rows" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="460" package="Flourish">
        <name>fetchRow</name>
        <full_name>fetchRow</full_name>
        <docblock line="452">
          <description><![CDATA[Returns the row next row in the result set (where the pointer is currently assigned to)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="452" name="throws" description="When the query did not return any rows" type="\fNoRowsException">
            <type by_reference="false">\fNoRowsException</type>
          </tag>
          <tag line="452" name="throws" description="When there are no rows left in the result" type="\fNoRemainingException">
            <type by_reference="false">\fNoRemainingException</type>
          </tag>
          <tag line="452" name="return" description="The next row in the result" type="array|\stdClass">
            <type by_reference="false">array</type>
            <type by_reference="false">\stdClass</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="476" package="Flourish">
        <name>fetchScalar</name>
        <full_name>fetchScalar</full_name>
        <docblock line="468">
          <description><![CDATA[Wraps around ::fetchRow() and returns the first field from the row instead of the whole row]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="468" name="throws" description="When the query did not return any rows" type="\fNoRowsException">
            <type by_reference="false">\fNoRowsException</type>
          </tag>
          <tag line="468" name="throws" description="When there are no rows left in the result" type="\fNoRemainingException">
            <type by_reference="false">\fNoRemainingException</type>
          </tag>
          <tag line="468" name="return" description="The first scalar value from ::fetchRow()" type="string|\number|boolean">
            <type by_reference="false">string</type>
            <type by_reference="false">\number</type>
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="489" package="Flourish">
        <name>fixDblibMSSQLDriver</name>
        <full_name>fixDblibMSSQLDriver</full_name>
        <docblock line="483">
          <description><![CDATA[Warns the user about bugs in the DBLib driver for MSSQL, fixes some bugs]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="483" name="param" description="The row from the database" type="array" variable="$row">
            <type by_reference="false">array</type>
          </tag>
          <tag line="483" name="return" description="The fixed row" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="489">
          <name>$row</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="560" package="Flourish">
        <name>getAutoIncrementedValue</name>
        <full_name>getAutoIncrementedValue</full_name>
        <docblock line="555">
          <description><![CDATA[Returns the last auto incremented value for this database connection.]]></description>
          <long-description><![CDATA[<p>This may or may not be from the current query.</p>]]></long-description>
          <tag line="555" name="return" description="The auto incremented value" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="573" package="Flourish">
        <name>getResult</name>
        <full_name>getResult</full_name>
        <docblock line="566">
          <description><![CDATA[Returns the result]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="566" name="internal" description=""/>
          <tag line="566" name="return" description="The result of the query" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="584" package="Flourish">
        <name>getSQL</name>
        <full_name>getSQL</full_name>
        <docblock line="579">
          <description><![CDATA[Returns the SQL used in the query]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="579" name="return" description="The SQL used in the query" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="595" package="Flourish">
        <name>getUntranslatedSQL</name>
        <full_name>getUntranslatedSQL</full_name>
        <docblock line="590">
          <description><![CDATA[Returns the SQL as it was before translation]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="590" name="return" description="The SQL from before translation" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="610" package="Flourish">
        <name>key</name>
        <full_name>key</full_name>
        <docblock line="601">
          <description><![CDATA[Returns the current row number (required by iterator interface)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="601" name="throws" description="When the query did not return any rows" type="\fNoRowsException">
            <type by_reference="false">\fNoRowsException</type>
          </tag>
          <tag line="601" name="throws" description="When there are no remaining rows in the result" type="\fNoRemainingException">
            <type by_reference="false">\fNoRemainingException</type>
          </tag>
          <tag line="601" name="internal" description=""/>
          <tag line="601" name="return" description="The current row number" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="629" package="Flourish">
        <name>next</name>
        <full_name>next</full_name>
        <docblock line="620">
          <description><![CDATA[Advances to the next row in the result (required by iterator interface)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="620" name="throws" description="When the query did not return any rows" type="\fNoRowsException">
            <type by_reference="false">\fNoRowsException</type>
          </tag>
          <tag line="620" name="throws" description="When there are no remaining rows in the result" type="\fNoRemainingException">
            <type by_reference="false">\fNoRemainingException</type>
          </tag>
          <tag line="620" name="internal" description=""/>
          <tag line="620" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="652" package="Flourish">
        <name>rewind</name>
        <full_name>rewind</full_name>
        <docblock line="645">
          <description><![CDATA[Rewinds the query (required by iterator interface)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="645" name="internal" description=""/>
          <tag line="645" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="668" package="Flourish">
        <name>seek</name>
        <full_name>seek</full_name>
        <docblock line="660">
          <description><![CDATA[Seeks to the specified zero-based row for the specified SQL query]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="660" name="throws" description="When the query did not return any rows" type="\fNoRowsException">
            <type by_reference="false">\fNoRowsException</type>
          </tag>
          <tag line="660" name="param" description="The row number to seek to (zero-based)" type="integer" variable="$row">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="660" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="668">
          <name>$row</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="733" package="Flourish">
        <name>setAffectedRows</name>
        <full_name>setAffectedRows</full_name>
        <docblock line="725">
          <description><![CDATA[Sets the number of affected rows]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="725" name="internal" description=""/>
          <tag line="725" name="param" description="The number of affected rows" type="integer" variable="$affected_rows">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="725" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="733">
          <name>$affected_rows</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="748" package="Flourish">
        <name>setAutoIncrementedValue</name>
        <full_name>setAutoIncrementedValue</full_name>
        <docblock line="740">
          <description><![CDATA[Sets the auto incremented value]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="740" name="internal" description=""/>
          <tag line="740" name="param" description="The auto incremented value" type="integer" variable="$auto_incremented_value">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="740" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="748">
          <name>$auto_incremented_value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="762" package="Flourish">
        <name>setResult</name>
        <full_name>setResult</full_name>
        <docblock line="754">
          <description><![CDATA[Sets the result from the query]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="754" name="internal" description=""/>
          <tag line="754" name="param" description="The result from the query" type="mixed" variable="$result">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="754" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="762">
          <name>$result</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="776" package="Flourish">
        <name>setReturnedRows</name>
        <full_name>setReturnedRows</full_name>
        <docblock line="768">
          <description><![CDATA[Sets the number of rows returned]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="768" name="internal" description=""/>
          <tag line="768" name="param" description="The number of rows returned" type="integer" variable="$returned_rows">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="768" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="776">
          <name>$returned_rows</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="793" package="Flourish">
        <name>setSQL</name>
        <full_name>setSQL</full_name>
        <docblock line="785">
          <description><![CDATA[Sets the SQL used in the query]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="785" name="internal" description=""/>
          <tag line="785" name="param" description="The SQL used in the query" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="785" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="793">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="807" package="Flourish">
        <name>setUntranslatedSQL</name>
        <full_name>setUntranslatedSQL</full_name>
        <docblock line="799">
          <description><![CDATA[Sets the SQL from before translation]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="799" name="internal" description=""/>
          <tag line="799" name="param" description="The SQL from before translation" type="string" variable="$untranslated_sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="799" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="807">
          <name>$untranslated_sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="821" package="Flourish">
        <name>tossIfNoRows</name>
        <full_name>tossIfNoRows</full_name>
        <docblock line="813">
          <description><![CDATA[Throws an fNoResultException if the query did not return any rows]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="813" name="throws" description="When the query did not return any rows" type="\fNoRowsException">
            <type by_reference="false">\fNoRowsException</type>
          </tag>
          <tag line="813" name="param" description="The message to use for the exception if there are no rows in this result set" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="813" name="return" description="The result object, to allow for method chaining" type="\fResult">
            <type by_reference="false">\fResult</type>
          </tag>
        </docblock>
        <argument line="821">
          <name>$message</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="843" package="Flourish">
        <name>unescape</name>
        <full_name>unescape</full_name>
        <docblock line="834">
          <description><![CDATA[Sets the result object to unescape all values as they are retrieved from the object]]></description>
          <long-description><![CDATA[<p>The data types should be from the list of types supported by
fDatabase::unescape().</p>]]></long-description>
          <tag line="834" name="param" description="An associative array with column names as the keys and the data types as the values" type="array" variable="$column_data_type_map">
            <type by_reference="false">array</type>
          </tag>
          <tag line="834" name="return" description="The result object, to allow for method chaining" type="\fResult">
            <type by_reference="false">\fResult</type>
          </tag>
        </docblock>
        <argument line="843">
          <name>$column_data_type_map</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="863" package="Flourish">
        <name>valid</name>
        <full_name>valid</full_name>
        <docblock line="858">
          <description><![CDATA[Returns if the query has any rows left]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="858" name="return" description="If the iterator is still valid" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fResult.php</error>
      <notice line="37" code="50013">Parameter $component could not be found in compose()</notice>
      <notice line="37" code="50013">Parameter  could not be found in compose()</notice>
    </parse_markers>
  </file>
  <file path="php/flourish/fDirectory.php" hash="9103bb91436814d649fe9a437283713a" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="29" package="Flourish">
      <extends/>
      <name>fDirectory</name>
      <full_name>\fDirectory</full_name>
      <docblock line="2">
        <description><![CDATA[Represents a directory on the filesystem, also provides static directory-related methods]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2011 Will Bond, others"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="author" description="Will Bond, iMarc LLC [wb-imarc] &lt;will@imarc.net&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fDirectory" link="http://flourishlib.com/fDirectory"/>
        <tag line="2" name="version" description="1.0.0b14"/>
        <tag line="2" name="changes" description="1.0.0b14  Fixed a bug in ::delete() where a non-existent method was being called on fFilesystem, added a permission check to ::delete() [wb, 2011-08-23]"/>
        <tag line="2" name="changes" description="1.0.0b13  Added the ::clear() method [wb, 2011-01-10]"/>
        <tag line="2" name="changes" description="1.0.0b12  Fixed ::scanRecursive() to not add duplicate entries for certain nested directory structures [wb, 2010-08-10]"/>
        <tag line="2" name="changes" description="1.0.0b11  Fixed ::scan() to properly add trailing /s for directories [wb, 2010-03-16]"/>
        <tag line="2" name="changes" description="1.0.0b10  BackwardsCompatibilityBreak - Fixed ::scan() and ::scanRecursive() to strip the current directory's path before matching, added support for glob style matching [wb, 2010-03-05]"/>
        <tag line="2" name="changes" description="1.0.0b9   Changed the way directories deleted in a filesystem transaction are handled, including improvements to the exception that is thrown [wb+wb-imarc, 2010-03-05]"/>
        <tag line="2" name="changes" description="1.0.0b8   Backwards Compatibility Break - renamed ::getFilesize() to ::getSize(), added ::move() [wb, 2009-12-16]"/>
        <tag line="2" name="changes" description="1.0.0b7   Fixed ::__construct() to throw an fValidationException when the directory does not exist [wb, 2009-08-21]"/>
        <tag line="2" name="changes" description="1.0.0b6   Fixed a bug where deleting a directory would prevent any future operations in the same script execution on a file or directory with the same path [wb, 2009-08-20]"/>
        <tag line="2" name="changes" description="1.0.0b5   Added the ability to skip checks in ::__construct() for better performance in conjunction with fFilesystem::createObject() [wb, 2009-08-06]"/>
        <tag line="2" name="changes" description="1.0.0b4   Refactored ::scan() to use the new fFilesystem::createObject() method [wb, 2009-01-21]"/>
        <tag line="2" name="changes" description="1.0.0b3   Added the $regex_filter parameter to ::scan() and ::scanRecursive(), fixed bug in ::scanRecursive() [wb, 2009-01-05]"/>
        <tag line="2" name="changes" description="1.0.0b2   Removed some unnecessary error suppresion operators [wb, 2008-12-11]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2007-12-21]"/>
      </docblock>
      <constant namespace="global" line="32" package="Flourish">
        <name>create</name>
        <full_name>create</full_name>
        <value><![CDATA['fDirectory::create']]></value>
      </constant>
      <constant namespace="global" line="33" package="Flourish">
        <name>makeCanonical</name>
        <full_name>makeCanonical</full_name>
        <value><![CDATA['fDirectory::makeCanonical']]></value>
      </constant>
      <property final="false" static="false" visibility="protected" line="105" namespace="global" package="Sutra">
        <name>$deleted</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="100">
          <description><![CDATA[A backtrace from when the file was deleted]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="100" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="112" namespace="global" package="Sutra">
        <name>$directory</name>
        <default><![CDATA[]]></default>
        <docblock line="107">
          <description><![CDATA[The full path to the directory]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="107" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="50" package="Flourish">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="36">
          <description><![CDATA[Creates a directory on the filesystem and returns an object representing it]]></description>
          <long-description><![CDATA[<p>The directory creation is done recursively, so if any of the parent
directories do not exist, they will be created.</p>

<p>This operation will be reverted by a filesystem transaction being rolled back.</p>]]></long-description>
          <tag line="36" name="throws" description="When no directory was specified, or the directory already exists" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="36" name="param" description="The path to the new directory" type="string" variable="$directory">
            <type by_reference="false">string</type>
          </tag>
          <tag line="36" name="param" description="The mode (permissions) to use when creating the directory. This should be an octal number (requires a leading zero). This has no effect on the Windows platform." type="\numeric" variable="$mode">
            <type by_reference="false">\numeric</type>
          </tag>
          <tag line="36" name="return" description="" type="\fDirectory">
            <type by_reference="false">\fDirectory</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$directory</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="50">
          <name>$mode</name>
          <default><![CDATA[511]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="91" package="Flourish">
        <name>makeCanonical</name>
        <full_name>makeCanonical</full_name>
        <docblock line="85">
          <description><![CDATA[Makes sure a directory has a `/` or `\` at the end]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="85" name="param" description="The directory to check" type="string" variable="$directory">
            <type by_reference="false">string</type>
          </tag>
          <tag line="85" name="return" description="The directory name in canonical form" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$directory</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="128" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="115">
          <description><![CDATA[Creates an object to represent a directory on the filesystem]]></description>
          <long-description><![CDATA[<p>If multiple fDirectory objects are created for a single directory,
they will reflect changes in each other including rename and delete
actions.</p>]]></long-description>
          <tag line="115" name="throws" description="When no directory was specified, when the directory does not exist or when the path specified is not a directory" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="115" name="param" description="The path to the directory" type="string" variable="$directory">
            <type by_reference="false">string</type>
          </tag>
          <tag line="115" name="param" description="If file checks should be skipped, which improves performance, but may cause undefined behavior - only skip these if they are duplicated elsewhere" type="boolean" variable="$skip_checks">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="115" name="return" description="" type="\fDirectory">
            <type by_reference="false">\fDirectory</type>
          </tag>
        </docblock>
        <argument line="128">
          <name>$directory</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="128">
          <name>$skip_checks</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="170" package="Flourish">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="162">
          <description><![CDATA[All requests that hit this method should be requests for callbacks]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="162" name="internal" description=""/>
          <tag line="162" name="param" description="The method to create a callback for" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="162" name="return" description="The callback for the method requested" type="callback">
            <type by_reference="false">callback</type>
          </tag>
        </docblock>
        <argument line="170">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="181" package="Flourish">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="176">
          <description><![CDATA[Returns the full filesystem path for the directory]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="176" name="return" description="The full filesystem path" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="192" package="Flourish">
        <name>clear</name>
        <full_name>clear</full_name>
        <docblock line="187">
          <description><![CDATA[Removes all files and directories inside of the directory]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="187" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="214" package="Flourish">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="204">
          <description><![CDATA[Will delete a directory and all files and directories inside of it]]></description>
          <long-description><![CDATA[<p>This operation will not be performed until the filesystem transaction
has been committed, if a transaction is in progress. Any non-Flourish
code (PHP or system) will still see this directory and all contents as
existing until that point.</p>]]></long-description>
          <tag line="204" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="250" package="Flourish">
        <name>getName</name>
        <full_name>getName</full_name>
        <docblock line="245">
          <description><![CDATA[Gets the name of the directory]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="245" name="return" description="The name of the directory" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="261" package="Flourish">
        <name>getParent</name>
        <full_name>getParent</full_name>
        <docblock line="256">
          <description><![CDATA[Gets the parent directory]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="256" name="return" description="The object representing the parent directory" type="\fDirectory">
            <type by_reference="false">\fDirectory</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="286" package="Flourish">
        <name>getPath</name>
        <full_name>getPath</full_name>
        <docblock line="277">
          <description><![CDATA[Gets the directory's current path]]></description>
          <long-description><![CDATA[<p>If the web path is requested, uses translations set with
fFilesystem::addWebPathTranslation()</p>]]></long-description>
          <tag line="277" name="param" description="If the path should be the web path" type="boolean" variable="$translate_to_web_path">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="277" name="return" description="The path for the directory" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="286">
          <name>$translate_to_web_path</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="307" package="Flourish">
        <name>getSize</name>
        <full_name>getSize</full_name>
        <docblock line="297">
          <description><![CDATA[Gets the disk usage of the directory and all files and folders contained within]]></description>
          <long-description><![CDATA[<p>This method may return incorrect results if files over 2GB exist and the
server uses a 32 bit operating system</p>]]></long-description>
          <tag line="297" name="param" description="If the filesize should be formatted for human readability" type="boolean" variable="$format">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="297" name="param" description="The number of decimal places to format to (if enabled)" type="integer" variable="$decimal_places">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="297" name="return" description="If formatted, a string with filesize in b/kb/mb/gb/tb, otherwise an integer" type="integer|string">
            <type by_reference="false">integer</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="307">
          <name>$format</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
        <argument line="307">
          <name>$decimal_places</name>
          <default><![CDATA[1]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="331" package="Flourish">
        <name>isWritable</name>
        <full_name>isWritable</full_name>
        <docblock line="326">
          <description><![CDATA[Check to see if the current directory is writable]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="326" name="return" description="If the directory is writable" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="358" package="Flourish">
        <name>move</name>
        <full_name>move</full_name>
        <docblock line="339">
          <description><![CDATA[Moves the current directory into a different directory]]></description>
          <long-description><![CDATA[<p>Please note that ::rename() will rename a directory in its current
parent directory or rename it into a different parent directory.</p>

<p>If the current directory's name already exists in the new parent
directory and the overwrite flag is set to false, the name will be
changed to a unique name.</p>

<p>This operation will be reverted if a filesystem transaction is in
progress and is later rolled back.</p>]]></long-description>
          <tag line="339" name="throws" description="When the new parent directory passed is not a directory, is not readable or is a sub-directory of this directory" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="339" name="param" description="The directory to move this directory into" type="\fDirectory|string" variable="$new_parent_directory">
            <type by_reference="false">\fDirectory</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="339" name="param" description="If the current filename already exists in the new directory, `TRUE` will cause the file to be overwritten, `FALSE` will cause the new filename to change" type="boolean" variable="$overwrite">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="339" name="return" description="The directory object, to allow for method chaining" type="\fDirectory">
            <type by_reference="false">\fDirectory</type>
          </tag>
        </docblock>
        <argument line="358">
          <name>$new_parent_directory</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="358">
          <name>$overwrite</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="384" package="Flourish">
        <name>rename</name>
        <full_name>rename</full_name>
        <docblock line="372">
          <description><![CDATA[Renames the current directory]]></description>
          <long-description><![CDATA[<p>This operation will NOT be performed until the filesystem transaction
has been committed, if a transaction is in progress. Any non-Flourish
code (PHP or system) will still see this directory (and all contained
files/dirs) as existing with the old paths until that point.</p>]]></long-description>
          <tag line="372" name="param" description="The new full path to the directory or a new name in the current parent directory" type="string" variable="$new_dirname">
            <type by_reference="false">string</type>
          </tag>
          <tag line="372" name="param" description="If the new dirname already exists, TRUE will cause the file to be overwritten, FALSE will cause the new filename to change" type="boolean" variable="$overwrite">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="372" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="384">
          <name>$new_dirname</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="384">
          <name>$overwrite</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="461" package="Flourish">
        <name>scan</name>
        <full_name>scan</full_name>
        <docblock line="443">
          <description><![CDATA[Performs a [http://php.net/scandir scandir()] on a directory, removing the `.` and `.]]></description>
          <long-description><![CDATA[<p>.` entries</p>

<p>If the <code>$filter</code> looks like a valid PCRE pattern - matching delimeters
(a delimeter can be any non-alphanumeric, non-backslash, non-whitespace
character) followed by zero or more of the flags <code>i</code>, <code>m</code>, <code>s</code>, <code>x</code>,
<code>e</code>, <code>A</code>, <code>D</code>,  <code>S</code>, <code>U</code>, <code>X</code>, <code>J</code>, <code>u</code> - then
[http://php.net/preg_match <code>preg_match()</code>] will be used.</p>

<p>Otherwise the <code>$filter</code> will do a case-sensitive match with <code>*</code> matching
zero or more characters and <code>?</code> matching a single character.</p>

<p>On all OSes (even Windows), directories will be separated by <code>/</code>s when
comparing with the <code>$filter</code>.</p>]]></long-description>
          <tag line="443" name="param" description="A PCRE or glob pattern to filter files/directories by path - directories can be detected by checking for a trailing / (even on Windows)" type="string" variable="$filter">
            <type by_reference="false">string</type>
          </tag>
          <tag line="443" name="return" description="The fFile (or fImage) and fDirectory objects for the files/directories in this directory" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="461">
          <name>$filter</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="501" package="Flourish">
        <name>scanRecursive</name>
        <full_name>scanRecursive</full_name>
        <docblock line="495">
          <description><![CDATA[Performs a **recursive** [http://php.net/scandir scandir()] on a directory, removing the `.` and `.]]></description>
          <long-description><![CDATA[<p>.` entries</p>]]></long-description>
          <tag line="495" name="param" description="A PCRE or glob pattern to filter files/directories by path - see ::scan() for details" type="string" variable="$filter">
            <type by_reference="false">string</type>
          </tag>
          <tag line="495" name="return" description="The fFile (or fImage) and fDirectory objects for the files/directories (listed recursively) in this directory" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="501">
          <name>$filter</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="546" package="Flourish">
        <name>tossIfDeleted</name>
        <full_name>tossIfDeleted</full_name>
        <docblock line="541">
          <description><![CDATA[Throws an exception if the directory has been deleted]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="541" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fDirectory.php</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fEmptySetException.php" hash="e925d813e75dfcbcc61dc131ff5db3e5" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="15" package="Flourish">
      <extends>\fExpectedException</extends>
      <name>fEmptySetException</name>
      <full_name>\fEmptySetException</full_name>
      <docblock line="2">
        <description><![CDATA[An exception when an fRecordSet does not contain any elements]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2008 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fEmptySetException" link="http://flourishlib.com/fEmptySetException"/>
        <tag line="2" name="version" description="1.0.0b"/>
        <tag line="2" name="changes" description="1.0.0b  The initial implementation [wb, 2007-06-14]"/>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fEmptySetException.php</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fConnectivityException.php" hash="e8abf7626394c4152d23ed130d557c27" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="15" package="Flourish">
      <extends>\fUnexpectedException</extends>
      <name>fConnectivityException</name>
      <full_name>\fConnectivityException</full_name>
      <docblock line="2">
        <description><![CDATA[An exception caused by a connectivity error]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2008 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fConnectivityException" link="http://flourishlib.com/fConnectivityException"/>
        <tag line="2" name="version" description="1.0.0b"/>
        <tag line="2" name="changes" description="1.0.0b  The initial implementation [wb, 2007-06-14]"/>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fConnectivityException.php</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fDate.php" hash="447c834f6efab40c015de511a6902e1d" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="25" package="Flourish">
      <extends/>
      <name>fDate</name>
      <full_name>\fDate</full_name>
      <docblock line="2">
        <description><![CDATA[Represents a date as a value object]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2008-2011 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fDate" link="http://flourishlib.com/fDate"/>
        <tag line="2" name="version" description="1.0.0b11"/>
        <tag line="2" name="changes" description="1.0.0b11  Fixed a method signature [wb, 2011-08-24]"/>
        <tag line="2" name="changes" description="1.0.0b10  Fixed a bug with the constructor not properly handling unix timestamps that are negative integers [wb, 2011-06-02]"/>
        <tag line="2" name="changes" description="1.0.0b9   Changed the `$date` attribute to be protected [wb, 2011-03-20]"/>
        <tag line="2" name="changes" description="1.0.0b8   Added the `$simple` parameter to ::getFuzzyDifference() [wb, 2010-03-15]"/>
        <tag line="2" name="changes" description="1.0.0b7   Added a call to fTimestamp::callUnformatCallback() in ::__construct() for localization support [wb, 2009-06-01]"/>
        <tag line="2" name="changes" description="1.0.0b6   Backwards compatibility break - Removed ::getSecondsDifference(), added ::eq(), ::gt(), ::gte(), ::lt(), ::lte() [wb, 2009-03-05]"/>
        <tag line="2" name="changes" description="1.0.0b5   Updated for new fCore API [wb, 2009-02-16]"/>
        <tag line="2" name="changes" description="1.0.0b4   Fixed ::__construct() to properly handle the 5.0 to 5.1 change in strtotime() [wb, 2009-01-21]"/>
        <tag line="2" name="changes" description="1.0.0b3   Added support for CURRENT_TIMESTAMP and CURRENT_DATE SQL keywords [wb, 2009-01-11]"/>
        <tag line="2" name="changes" description="1.0.0b2   Removed the adjustment amount check from ::adjust() [wb, 2008-12-31]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2008-02-10]"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="55" namespace="global" package="Sutra">
        <name>$date</name>
        <default><![CDATA[]]></default>
        <docblock line="50">
          <description><![CDATA[A timestamp of the date]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="50" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="35" package="Flourish">
        <name>compose</name>
        <full_name>compose</full_name>
        <docblock line="27">
          <description><![CDATA[Composes text using fText if loaded]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="27" name="param" description="The message to compose" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="27" name="param" description="A string or number to insert into the message" type="mixed" variable="$component">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="27" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="27" name="return" description="The composed and possible translated message" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="35">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="66" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="58">
          <description><![CDATA[Creates the date to represent, no timezone is allowed since dates don't have timezones]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="58" name="throws" description="When `$date` is not a valid date" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="58" name="param" description="The date to represent, `NULL` is interpreted as today" type="\fDate|object|string|integer" variable="$date">
            <type by_reference="false">\fDate</type>
            <type by_reference="false">object</type>
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="58" name="return" description="" type="\fDate">
            <type by_reference="false">\fDate</type>
          </tag>
        </docblock>
        <argument line="66">
          <name>$date</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="108" package="Flourish">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="100">
          <description><![CDATA[All requests that hit this method should be requests for callbacks]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="100" name="internal" description=""/>
          <tag line="100" name="param" description="The method to create a callback for" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="100" name="return" description="The callback for the method requested" type="callback">
            <type by_reference="false">callback</type>
          </tag>
        </docblock>
        <argument line="108">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="119" package="Flourish">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="114">
          <description><![CDATA[Returns this date in `Y-m-d` format]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="114" name="return" description="The `Y-m-d` format of this date" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="133" package="Flourish">
        <name>adjust</name>
        <full_name>adjust</full_name>
        <docblock line="125">
          <description><![CDATA[Changes the date by the adjustment specified, only adjustments of a day or more will be made]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="125" name="throws" description="When `$adjustment` is not a relative date measurement" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="125" name="param" description="The adjustment to make" type="string" variable="$adjustment">
            <type by_reference="false">string</type>
          </tag>
          <tag line="125" name="return" description="The adjusted date" type="\fDate">
            <type by_reference="false">\fDate</type>
          </tag>
        </docblock>
        <argument line="133">
          <name>$adjustment</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="154" package="Flourish">
        <name>eq</name>
        <full_name>eq</full_name>
        <docblock line="148">
          <description><![CDATA[If this date is equal to the date passed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="148" name="param" description="The date to compare with, `NULL` is interpreted as today" type="\fDate|object|string|integer" variable="$other_date">
            <type by_reference="false">\fDate</type>
            <type by_reference="false">object</type>
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="148" name="return" description="If this date is equal to the one passed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="154">
          <name>$other_date</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="169" package="Flourish">
        <name>format</name>
        <full_name>format</full_name>
        <docblock line="161">
          <description><![CDATA[Formats the date]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="161" name="throws" description="When a non-date formatting character is included in `$format`" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="161" name="param" description="The [http://php.net/date date()] function compatible formatting string, or a format name from fTimestamp::defineFormat()" type="string" variable="$format">
            <type by_reference="false">string</type>
          </tag>
          <tag line="161" name="return" description="The formatted date" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="169">
          <name>$format</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="221" package="Flourish">
        <name>getFuzzyDifference</name>
        <full_name>getFuzzyDifference</full_name>
        <docblock line="186">
          <description><![CDATA[Returns the approximate difference in time, discarding any unit of measure but the least specific.]]></description>
          <long-description><![CDATA[<p>The output will read like:</p>

<ul>
<li>"This date is <code>{return value}</code> the provided one" when a date it passed</li>
<li>"This date is <code>{return value}</code>" when no date is passed and comparing with today</li>
</ul>

<p>Examples of output for a date passed might be:</p>

<ul>
<li><code>'2 days after'</code></li>
<li><code>'1 year before'</code></li>
<li><code>'same day'</code></li>
</ul>

<p>Examples of output for no date passed might be:</p>

<ul>
<li><code>'2 days from now'</code></li>
<li><code>'1 year ago'</code></li>
<li><code>'today'</code></li>
</ul>

<p>You would never get the following output since it includes more than one unit of time measurement:</p>

<ul>
<li><code>'3 weeks and 1 day'</code></li>
<li><code>'1 year and 2 months'</code></li>
</ul>

<p>Values that are close to the next largest unit of measure will be rounded up:</p>

<ul>
<li><code>6 days</code> would be represented as <code>1 week</code>, however <code>5 days</code> would not</li>
<li><code>29 days</code> would be represented as <code>1 month</code>, but <code>21 days</code> would be shown as <code>3 weeks</code></li>
</ul>]]></long-description>
          <tag line="186" name="param" description="The date to create the difference with, `NULL` is interpreted as today" type="\fDate|object|string|integer" variable="$other_date">
            <type by_reference="false">\fDate</type>
            <type by_reference="false">object</type>
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="186" name="param" description="When `TRUE`, the returned value will only include the difference in the two dates, but not `from now`, `ago`, `after` or `before`" type="boolean" variable="$simple">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="186" name="param" description="|$simple" type="boolean" variable="">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="186" name="return" description="The fuzzy difference in time between the this date and the one provided" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="221">
          <name>$other_date</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="221">
          <name>$simple</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="291" package="Flourish">
        <name>gt</name>
        <full_name>gt</full_name>
        <docblock line="285">
          <description><![CDATA[If this date is greater than the date passed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="285" name="param" description="The date to compare with, `NULL` is interpreted as today" type="\fDate|object|string|integer" variable="$other_date">
            <type by_reference="false">\fDate</type>
            <type by_reference="false">object</type>
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="285" name="return" description="If this date is greater than the one passed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="291">
          <name>$other_date</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="304" package="Flourish">
        <name>gte</name>
        <full_name>gte</full_name>
        <docblock line="298">
          <description><![CDATA[If this date is greater than or equal to the date passed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="298" name="param" description="The date to compare with, `NULL` is interpreted as today" type="\fDate|object|string|integer" variable="$other_date">
            <type by_reference="false">\fDate</type>
            <type by_reference="false">object</type>
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="298" name="return" description="If this date is greater than or equal to the one passed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="304">
          <name>$other_date</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="317" package="Flourish">
        <name>lt</name>
        <full_name>lt</full_name>
        <docblock line="311">
          <description><![CDATA[If this date is less than the date passed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="311" name="param" description="The date to compare with, `NULL` is interpreted as today" type="\fDate|object|string|integer" variable="$other_date">
            <type by_reference="false">\fDate</type>
            <type by_reference="false">object</type>
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="311" name="return" description="If this date is less than the one passed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="317">
          <name>$other_date</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="330" package="Flourish">
        <name>lte</name>
        <full_name>lte</full_name>
        <docblock line="324">
          <description><![CDATA[If this date is less than or equal to the date passed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="324" name="param" description="The date to compare with, `NULL` is interpreted as today" type="\fDate|object|string|integer" variable="$other_date">
            <type by_reference="false">\fDate</type>
            <type by_reference="false">object</type>
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="324" name="return" description="If this date is less than or equal to the one passed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="330">
          <name>$other_date</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="351" package="Flourish">
        <name>modify</name>
        <full_name>modify</full_name>
        <docblock line="337">
          <description><![CDATA[Modifies the current date, creating a new fDate object]]></description>
          <long-description><![CDATA[<p>The purpose of this method is to allow for easy creation of a date
based on this date. Below are some examples of formats to
modify the current date:</p>

<ul>
<li><code>'Y-m-01'</code> to change the date to the first of the month</li>
<li><code>'Y-m-t'</code> to change the date to the last of the month</li>
<li><code>'Y-\W5-N'</code> to change the date to the 5th week of the year</li>
</ul>]]></long-description>
          <tag line="337" name="param" description="The current date will be formatted with this string, and the output used to create a new object" type="string" variable="$format">
            <type by_reference="false">string</type>
          </tag>
          <tag line="337" name="return" description="The new date" type="\fDate">
            <type by_reference="false">\fDate</type>
          </tag>
        </docblock>
        <argument line="351">
          <name>$format</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fDate.php</error>
      <notice line="27" code="50013">Parameter $component could not be found in compose()</notice>
      <notice line="27" code="50013">Parameter  could not be found in compose()</notice>
      <notice line="186" code="50013">Parameter  could not be found in getFuzzyDifference()</notice>
    </parse_markers>
  </file>
  <file path="php/flourish/fSMTP.php" hash="63dc367be3d59677d861b8ea04b0c836" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="25" package="Flourish">
      <extends/>
      <name>fSMTP</name>
      <full_name>\fSMTP</full_name>
      <docblock line="2">
        <description><![CDATA[Creates a connection to an SMTP server to be used by fEmail]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2010-2011 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fSMTP" link="http://flourishlib.com/fSMTP"/>
        <tag line="2" name="version" description="1.0.0b11"/>
        <tag line="2" name="changes" description="1.0.0b11  Enhanced the error checking for ::write() [wb, 2011-06-03]"/>
        <tag line="2" name="changes" description="1.0.0b10  Added code to work around PHP bug #42682 (http://bugs.php.net/bug.php?id=42682) where `stream_select()` doesn't work on 64bit machines from PHP 5.2.0 to 5.2.5, improved timeouts while reading data [wb, 2011-01-10]"/>
        <tag line="2" name="changes" description="1.0.0b9   Fixed a bug where lines starting with `.` and containing other content would have the `.` stripped [wb, 2010-09-11]"/>
        <tag line="2" name="changes" description="1.0.0b8   Updated the class to use fEmail::getFQDN() [wb, 2010-09-07]"/>
        <tag line="2" name="changes" description="1.0.0b7   Updated class to use new fCore::startErrorCapture() functionality [wb, 2010-08-09]"/>
        <tag line="2" name="changes" description="1.0.0b6   Updated the class to use new fCore functionality [wb, 2010-07-05]"/>
        <tag line="2" name="changes" description="1.0.0b5   Hacked around a bug in PHP 5.3 on Windows [wb, 2010-06-22]"/>
        <tag line="2" name="changes" description="1.0.0b4   Updated the class to not connect and authenticate until a message is sent, moved message id generation in fEmail [wb, 2010-05-05]"/>
        <tag line="2" name="changes" description="1.0.0b3   Fixed a bug with connecting to servers that send an initial response of `220-` and instead of `220 ` [wb, 2010-04-26]"/>
        <tag line="2" name="changes" description="1.0.0b2   Fixed a bug where `STARTTLS` would not be triggered if it was last in the SMTP server's list of supported extensions [wb, 2010-04-20]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2010-04-20]"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="32" namespace="global" package="Sutra">
        <name>$auth_methods</name>
        <default><![CDATA[]]></default>
        <docblock line="27">
          <description><![CDATA[The authorization methods that are valid for this server]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="27" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="39" namespace="global" package="Sutra">
        <name>$connection</name>
        <default><![CDATA[]]></default>
        <docblock line="34">
          <description><![CDATA[The socket connection to the SMTP server]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="34" name="var" description="" type="resource">
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="46" namespace="global" package="Sutra">
        <name>$debug</name>
        <default><![CDATA[]]></default>
        <docblock line="41">
          <description><![CDATA[If debugging has been enabled]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="41" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="53" namespace="global" package="Sutra">
        <name>$host</name>
        <default><![CDATA[]]></default>
        <docblock line="48">
          <description><![CDATA[The hostname or IP of the SMTP server]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="48" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="60" namespace="global" package="Sutra">
        <name>$max_size</name>
        <default><![CDATA[]]></default>
        <docblock line="55">
          <description><![CDATA[The maximum size message the SMTP server supports]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="55" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="67" namespace="global" package="Sutra">
        <name>$password</name>
        <default><![CDATA[]]></default>
        <docblock line="62">
          <description><![CDATA[The password to authenticate with]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="62" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="74" namespace="global" package="Sutra">
        <name>$pipelining</name>
        <default><![CDATA[]]></default>
        <docblock line="69">
          <description><![CDATA[If the server supports pipelining]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="69" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="81" namespace="global" package="Sutra">
        <name>$port</name>
        <default><![CDATA[]]></default>
        <docblock line="76">
          <description><![CDATA[The port the SMTP server is on]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="76" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="88" namespace="global" package="Sutra">
        <name>$secure</name>
        <default><![CDATA[]]></default>
        <docblock line="83">
          <description><![CDATA[If the connection to the SMTP server is secure]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="83" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="95" namespace="global" package="Sutra">
        <name>$timeout</name>
        <default><![CDATA[]]></default>
        <docblock line="90">
          <description><![CDATA[The timeout for the connection]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="90" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="102" namespace="global" package="Sutra">
        <name>$username</name>
        <default><![CDATA[]]></default>
        <docblock line="97">
          <description><![CDATA[The username to authenticate with]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="97" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="121" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="105">
          <description><![CDATA[Configures the SMTP connection]]></description>
          <long-description><![CDATA[<p>The SMTP connection is only made once authentication is attempted or
an email is sent.</p>

<p>Please note that this class will upgrade the connection to TLS via the
SMTP <code>STARTTLS</code> command if possible, even if a secure connection was not
requested. This helps to keep authentication information secure.</p>]]></long-description>
          <tag line="105" name="param" description="The hostname or IP address to connect to" type="string" variable="$host">
            <type by_reference="false">string</type>
          </tag>
          <tag line="105" name="param" description="The port number to use" type="integer" variable="$port">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="105" name="param" description="If the connection should be secure - if `STARTTLS` is available, the connection will be upgraded even if this is `FALSE`" type="boolean" variable="$secure">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="105" name="param" description="The timeout for the connection - defaults to the `default_socket_timeout` ini setting" type="integer" variable="$timeout">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="105" name="return" description="" type="\fSMTP">
            <type by_reference="false">\fSMTP</type>
          </tag>
        </docblock>
        <argument line="121">
          <name>$host</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="121">
          <name>$port</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="121">
          <name>$secure</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
        <argument line="121">
          <name>$timeout</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="149" package="Flourish">
        <name>__destruct</name>
        <full_name>__destruct</full_name>
        <docblock line="144">
          <description><![CDATA[Closes the connection to the SMTP server]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="144" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="163" package="Flourish">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="155">
          <description><![CDATA[All requests that hit this method should be requests for callbacks]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="155" name="internal" description=""/>
          <tag line="155" name="param" description="The method to create a callback for" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="155" name="return" description="The callback for the method requested" type="callback">
            <type by_reference="false">callback</type>
          </tag>
        </docblock>
        <argument line="163">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="183" package="Flourish">
        <name>authenticate</name>
        <full_name>authenticate</full_name>
        <docblock line="169">
          <description><![CDATA[Authenticates with the SMTP server]]></description>
          <long-description><![CDATA[<p>This method supports the digest-md5, cram-md5, login and plain
SMTP authentication methods. This method will try to use the more secure
digest-md5 and cram-md5 methods first since they do not send information
in the clear.</p>]]></long-description>
          <tag line="169" name="throws" description="When the `$username` and `$password` are not accepted" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="169" name="param" description="The username" type="string" variable="$username">
            <type by_reference="false">string</type>
          </tag>
          <tag line="169" name="param" description="The password" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="169" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="183">
          <name>$username</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="183">
          <name>$password</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="195" package="Flourish">
        <name>close</name>
        <full_name>close</full_name>
        <docblock line="190">
          <description><![CDATA[Closes the connection to the SMTP server]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="190" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="212" package="Flourish">
        <name>connect</name>
        <full_name>connect</full_name>
        <docblock line="207">
          <description><![CDATA[Initiates the connection to the server]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="207" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="369" package="Flourish">
        <name>enableDebugging</name>
        <full_name>enableDebugging</full_name>
        <docblock line="363">
          <description><![CDATA[Sets if debug messages should be shown]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="363" name="param" description="If debugging messages should be shown" type="boolean" variable="$flag">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="363" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="369">
          <name>$flag</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="382" package="Flourish">
        <name>find</name>
        <full_name>find</full_name>
        <docblock line="375">
          <description><![CDATA[Searches the response array for the the regex and returns any matches]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="375" name="param" description="The lines of data to search through" type="array" variable="$response">
            <type by_reference="false">array</type>
          </tag>
          <tag line="375" name="param" description="The regex to search with" type="string" variable="$regex">
            <type by_reference="false">string</type>
          </tag>
          <tag line="375" name="return" description="The regex matches" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="382">
          <name>$response</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="382">
          <name>$regex</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="400" package="Flourish">
        <name>handleErrors</name>
        <full_name>handleErrors</full_name>
        <docblock line="394">
          <description><![CDATA[Searches the response array for SMTP error codes]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="394" name="param" description="The response array to search through" type="array" variable="$response">
            <type by_reference="false">array</type>
          </tag>
          <tag line="394" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="400">
          <name>$response</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="430" package="Flourish">
        <name>read</name>
        <full_name>read</full_name>
        <docblock line="424">
          <description><![CDATA[Reads lines from the SMTP server]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="424" name="param" description="The expected number of lines of response or a regex of the last line" type="integer|string" variable="$expect">
            <type by_reference="false">integer</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="424" name="return" description="The lines of response from the server" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="430">
          <name>$expect</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="471" package="Flourish">
        <name>select</name>
        <full_name>select</full_name>
        <docblock line="464">
          <description><![CDATA[Performs a "fixed" stream_select() for the connection]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="464" name="param" description="The number of seconds in the timeout" type="integer" variable="$timeout">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="464" name="param" description="The number of microseconds in the timeout" type="integer" variable="$utimeout">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="464" name="return" description="TRUE (or a character) is the connection is ready to be read from, FALSE if not" type="boolean|string">
            <type by_reference="false">boolean</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="471">
          <name>$timeout</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="471">
          <name>$utimeout</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="528" package="Flourish">
        <name>send</name>
        <full_name>send</full_name>
        <docblock line="515">
          <description><![CDATA[Sends a message via the SMTP server]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="515" name="internal" description=""/>
          <tag line="515" name="throws" description="When the message is too large for the server" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="515" name="param" description="The email address being sent from - this will be used as the `Return-Path` header" type="string" variable="$from">
            <type by_reference="false">string</type>
          </tag>
          <tag line="515" name="param" description="All of the To, Cc and Bcc email addresses to send the message to - this does not affect the message headers in any way" type="array" variable="$to">
            <type by_reference="false">array</type>
          </tag>
          <tag line="515" name="param" description="The message headers - the Bcc header will be removed if present" type="string" variable="$headers">
            <type by_reference="false">string</type>
          </tag>
          <tag line="515" name="param" description="The mail body" type="string" variable="$body">
            <type by_reference="false">string</type>
          </tag>
          <tag line="515" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="528">
          <name>$from</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="528">
          <name>$to</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="528">
          <name>$headers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="528">
          <name>$body</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="584" package="Flourish">
        <name>write</name>
        <full_name>write</full_name>
        <docblock line="577">
          <description><![CDATA[Sends raw text/commands to the SMTP server]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="577" name="param" description="The data or commands to send" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="577" name="param" description="The expected number of lines of response or a regex of the last line" type="integer|string" variable="$expect">
            <type by_reference="false">integer</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="577" name="return" description="The response from the server" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="584">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="584">
          <name>$expect</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fSMTP.php</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fNoRemainingException.php" hash="229c6b6688a3ae9212205abc973fac37" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="16" package="Flourish">
      <extends>\fExpectedException</extends>
      <name>fNoRemainingException</name>
      <full_name>\fNoRemainingException</full_name>
      <docblock line="2">
        <description><![CDATA[An exception caused when trying to get a value from an iterator and there is nothing left]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2008 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fNoRemainingException" link="http://flourishlib.com/fNoRemainingException"/>
        <tag line="2" name="version" description="1.0.0b2"/>
        <tag line="2" name="changes" description="1.0.0b2  Fixed a typo in the documentation [wb, 2010-07-14]"/>
        <tag line="2" name="changes" description="1.0.0b   The initial implementation [wb, 2007-06-14]"/>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fNoRemainingException.php</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fText.php" hash="db454c19f37c4aa30dcd835cc7588c13" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="16" package="Flourish">
      <extends/>
      <name>fText</name>
      <full_name>\fText</full_name>
      <docblock line="2">
        <description><![CDATA[Provides internationlization support for strings]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2008-2009 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fText" link="http://flourishlib.com/fText"/>
        <tag line="2" name="version" description="1.0.0b2"/>
        <tag line="2" name="changes" description="1.0.0b2  Updated ::compose() to more handle `$components` passed as an array [wb, 2009-02-05]"/>
        <tag line="2" name="changes" description="1.0.0b   The initial implementation [wb, 2008-11-12]"/>
      </docblock>
      <constant namespace="global" line="19" package="Flourish">
        <name>compose</name>
        <full_name>compose</full_name>
        <value><![CDATA['fText::compose']]></value>
      </constant>
      <constant namespace="global" line="20" package="Flourish">
        <name>registerComposeCallback</name>
        <full_name>registerComposeCallback</full_name>
        <value><![CDATA['fText::registerComposeCallback']]></value>
      </constant>
      <constant namespace="global" line="21" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <value><![CDATA['fText::reset']]></value>
      </constant>
      <property final="false" static="true" visibility="private" line="29" namespace="global" package="Sutra">
        <name>$compose_callbacks</name>
        <default><![CDATA[array('pre' => array(), 'post' => array())]]></default>
        <docblock line="24">
          <description><![CDATA[Callbacks for when messages are composed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="24" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="43" package="Flourish">
        <name>compose</name>
        <full_name>compose</full_name>
        <docblock line="35">
          <description><![CDATA[Performs an [http://php.net/sprintf sprintf()] on a string and provides a hook for modifications such as internationalization]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="35" name="param" description="A message to compose" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="35" name="param" description="A string or number to insert into the message" type="mixed" variable="$component">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="35" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="35" name="return" description="The composed message" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="43">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="89" package="Flourish">
        <name>registerComposeCallback</name>
        <full_name>registerComposeCallback</full_name>
        <docblock line="70">
          <description><![CDATA[Adds a callback for when a message is created using ::compose()]]></description>
          <long-description><![CDATA[<p>The primary purpose of these callbacks is for internationalization of
error messaging in Flourish. The callback should accept a single
parameter, the message being composed and should return the message
with any modifications.</p>

<p>The timing parameter controls if the callback happens before or after
the actual composition takes place, which is simply a call to
[http://php.net/sprintf sprintf()]. Thus the message passed <code>'pre'</code>
will always be exactly the same, while the message <code>'post'</code> will include
the interpolated variables. Because of this, most of the time the <code>'pre'</code>
timing should be chosen.</p>]]></long-description>
          <tag line="70" name="param" description="When the callback should be executed - `'pre'` or `'post'` performing the actual composition" type="string" variable="$timing">
            <type by_reference="false">string</type>
          </tag>
          <tag line="70" name="param" description="The callback" type="callback" variable="$callback">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="70" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="89">
          <name>$timing</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="89">
          <name>$callback</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="115" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="108">
          <description><![CDATA[Resets the configuration of the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="108" name="internal" description=""/>
          <tag line="108" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="129" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="124">
          <description><![CDATA[Forces use as a static class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="124" name="return" description="" type="\fText">
            <type by_reference="false">\fText</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fText.php</error>
      <notice line="35" code="50013">Parameter $component could not be found in compose()</notice>
      <notice line="35" code="50013">Parameter  could not be found in compose()</notice>
    </parse_markers>
  </file>
  <file path="php/flourish/fMessaging.php" hash="2cd083e76b7731bc00b4acf7b930addd" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="21" package="Flourish">
      <extends/>
      <name>fMessaging</name>
      <full_name>\fMessaging</full_name>
      <docblock line="2">
        <description><![CDATA[Provides session-based messaging for page-to-page communication]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2010 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fMessaging" link="http://flourishlib.com/fMessaging"/>
        <tag line="2" name="version" description="1.0.0b7"/>
        <tag line="2" name="changes" description="1.0.0b7  Fixed a small PHPDoc error [wb, 2010-03-15]"/>
        <tag line="2" name="changes" description="1.0.0b6  Updated class to use new fSession API [wb, 2009-10-23]"/>
        <tag line="2" name="changes" description="1.0.0b5  Made the `$recipient` parameter optional for all methods [wb, 2009-07-08]"/>
        <tag line="2" name="changes" description="1.0.0b4  Added support for `'*'` and arrays of names to ::check() [wb, 2009-06-02]"/>
        <tag line="2" name="changes" description="1.0.0b3  Updated class to use new fSession API [wb, 2009-05-08]"/>
        <tag line="2" name="changes" description="1.0.0b2  Changed ::show() to accept more than one message name, or * for all messages [wb, 2009-01-12]"/>
        <tag line="2" name="changes" description="1.0.0b   The initial implementation [wb, 2008-03-05]"/>
      </docblock>
      <constant namespace="global" line="24" package="Flourish">
        <name>check</name>
        <full_name>check</full_name>
        <value><![CDATA['fMessaging::check']]></value>
      </constant>
      <constant namespace="global" line="25" package="Flourish">
        <name>create</name>
        <full_name>create</full_name>
        <value><![CDATA['fMessaging::create']]></value>
      </constant>
      <constant namespace="global" line="26" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <value><![CDATA['fMessaging::reset']]></value>
      </constant>
      <constant namespace="global" line="27" package="Flourish">
        <name>retrieval</name>
        <full_name>retrieval</full_name>
        <value><![CDATA['fMessaging::retrieval']]></value>
      </constant>
      <constant namespace="global" line="28" package="Flourish">
        <name>show</name>
        <full_name>show</full_name>
        <value><![CDATA['fMessaging::show']]></value>
      </constant>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="38" package="Flourish">
        <name>check</name>
        <full_name>check</full_name>
        <docblock line="31">
          <description><![CDATA[Checks to see if a message exists of the name specified for the recipient specified]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="31" name="param" description="The name or array of names of the message(s) to check for, or `'*'` to check for any" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="31" name="param" description="The intended recipient" type="string" variable="$recipient">
            <type by_reference="false">string</type>
          </tag>
          <tag line="31" name="return" description="If a message of the name and recipient specified exists" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="38">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="38">
          <name>$recipient</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="81" package="Flourish">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="71">
          <description><![CDATA[Creates a message that is stored in the session and retrieved by another page]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="71" name="param" description="A name for the message" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="71" name="param" description="The intended recipient - this may be ommitted" type="string" variable="$recipient">
            <type by_reference="false">string</type>
          </tag>
          <tag line="71" name="param" description="The message to send" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="71" name="param" description=":$name" type="string" variable="">
            <type by_reference="false">string</type>
          </tag>
          <tag line="71" name="param" description=":$message" type="string" variable="">
            <type by_reference="false">string</type>
          </tag>
          <tag line="71" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="81">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="81">
          <name>$recipient</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="81">
          <name>$message</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="100" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="93">
          <description><![CDATA[Resets the data of the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="93" name="internal" description=""/>
          <tag line="93" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="113" package="Flourish">
        <name>retrieve</name>
        <full_name>retrieve</full_name>
        <docblock line="106">
          <description><![CDATA[Retrieves and removes a message from the session]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="106" name="param" description="The name of the message to retrieve" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="106" name="param" description="The intended recipient" type="string" variable="$recipient">
            <type by_reference="false">string</type>
          </tag>
          <tag line="106" name="return" description="The message contents" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="113">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="113">
          <name>$recipient</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="137" package="Flourish">
        <name>show</name>
        <full_name>show</full_name>
        <docblock line="126">
          <description><![CDATA[Retrieves a message, removes it from the session and prints it - will not print if no content]]></description>
          <long-description><![CDATA[<p>The message will be printed in a <code>p</code> tag if it does not contain
any block level HTML, otherwise it will be printed in a <code>div</code> tag.</p>]]></long-description>
          <tag line="126" name="param" description="The name or array of names of the message(s) to show, or `'*'` to show all" type="mixed" variable="$name">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="126" name="param" description="The intended recipient" type="string" variable="$recipient">
            <type by_reference="false">string</type>
          </tag>
          <tag line="126" name="param" description="Overrides using the `$name` as the CSS class when displaying the message - only used if a single `$name` is specified" type="string" variable="$css_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="126" name="return" description="If one or more messages was shown" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="137">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="137">
          <name>$recipient</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="137">
          <name>$css_class</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="182" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="177">
          <description><![CDATA[Forces use as a static class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="177" name="return" description="" type="\fMessaging">
            <type by_reference="false">\fMessaging</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fMessaging.php</error>
      <notice line="71" code="50013">Parameter  could not be found in create()</notice>
      <notice line="71" code="50013">Parameter  could not be found in create()</notice>
    </parse_markers>
  </file>
  <file path="php/flourish/fFilesystem.php" hash="ff3c992e383d0eab4855409e75d50cfc" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="32" package="Flourish">
      <extends/>
      <name>fFilesystem</name>
      <full_name>\fFilesystem</full_name>
      <docblock line="2">
        <description><![CDATA[Handles filesystem-level tasks including filesystem transactions and the reference map to keep all fFile and fDirectory objects in sync]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2008-2010 Will Bond, others"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="author" description="Alex Leeds [al] &lt;alex@kingleeds.com&gt;"/>
        <tag line="2" name="author" description="Will Bond, iMarc LLC [wb-imarc] &lt;will@imarc.net&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fFilesystem" link="http://flourishlib.com/fFilesystem"/>
        <tag line="2" name="version" description="1.0.0b16"/>
        <tag line="2" name="changes" description="1.0.0b16  Added a call to clearstatcache() to ::rollback() to prevent incorrect data from being returned by fFile::getMTime() and fFile::getSize() [wb, 2010-11-27]"/>
        <tag line="2" name="changes" description="1.0.0b15  Fixed ::translateToWebPath() to handle Windows \s [wb, 2010-04-09]"/>
        <tag line="2" name="changes" description="1.0.0b14  Added ::recordAppend() [wb, 2010-03-15]"/>
        <tag line="2" name="changes" description="1.0.0b13  Changed the way files/directories deleted in a filesystem transaction are handled, including improvements to the exception that is thrown [wb+wb-imarc, 2010-03-05]"/>
        <tag line="2" name="changes" description="1.0.0b12  Updated ::convertToBytes() to properly handle integers without a suffix and sizes with fractions [al+wb, 2009-11-14]"/>
        <tag line="2" name="changes" description="1.0.0b11  Corrected the API documentation for ::getPathInfo() [wb, 2009-09-09]"/>
        <tag line="2" name="changes" description="1.0.0b10  Updated ::updateExceptionMap() to not contain the Exception class parameter hint, allowing NULL to be passed [wb, 2009-08-20]"/>
        <tag line="2" name="changes" description="1.0.0b9   Added some performance tweaks to ::createObject() [wb, 2009-08-06]"/>
        <tag line="2" name="changes" description="1.0.0b8   Changed ::formatFilesize() to not use decimal places for bytes, add a space before and drop the `B` in suffixes [wb, 2009-07-12]"/>
        <tag line="2" name="changes" description="1.0.0b7   Fixed ::formatFilesize() to work when `$bytes` equals zero [wb, 2009-07-08]"/>
        <tag line="2" name="changes" description="1.0.0b6   Changed replacement values in preg_replace() calls to be properly escaped [wb, 2009-06-11]"/>
        <tag line="2" name="changes" description="1.0.0b5   Changed ::formatFilesize() to use proper uppercase letters instead of lowercase [wb, 2009-06-02]"/>
        <tag line="2" name="changes" description="1.0.0b4   Added the ::createObject() method [wb, 2009-01-21]"/>
        <tag line="2" name="changes" description="1.0.0b3   Removed some unnecessary error suppresion operators [wb, 2008-12-11]"/>
        <tag line="2" name="changes" description="1.0.0b2   Fixed a bug where the filepath and exception maps weren't being updated after a rollback [wb, 2008-12-11]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2008-03-24]"/>
      </docblock>
      <constant namespace="global" line="35" package="Flourish">
        <name>addWebPathTranslation</name>
        <full_name>addWebPathTranslation</full_name>
        <value><![CDATA['fFilesystem::addWebPathTranslation']]></value>
      </constant>
      <constant namespace="global" line="36" package="Flourish">
        <name>begin</name>
        <full_name>begin</full_name>
        <value><![CDATA['fFilesystem::begin']]></value>
      </constant>
      <constant namespace="global" line="37" package="Flourish">
        <name>commit</name>
        <full_name>commit</full_name>
        <value><![CDATA['fFilesystem::commit']]></value>
      </constant>
      <constant namespace="global" line="38" package="Flourish">
        <name>convertToBytes</name>
        <full_name>convertToBytes</full_name>
        <value><![CDATA['fFilesystem::convertToBytes']]></value>
      </constant>
      <constant namespace="global" line="39" package="Flourish">
        <name>createObject</name>
        <full_name>createObject</full_name>
        <value><![CDATA['fFilesystem::createObject']]></value>
      </constant>
      <constant namespace="global" line="40" package="Flourish">
        <name>formatFilesize</name>
        <full_name>formatFilesize</full_name>
        <value><![CDATA['fFilesystem::formatFilesize']]></value>
      </constant>
      <constant namespace="global" line="41" package="Flourish">
        <name>getPathInfo</name>
        <full_name>getPathInfo</full_name>
        <value><![CDATA['fFilesystem::getPathInfo']]></value>
      </constant>
      <constant namespace="global" line="42" package="Flourish">
        <name>hookDeletedMap</name>
        <full_name>hookDeletedMap</full_name>
        <value><![CDATA['fFilesystem::hookDeletedMap']]></value>
      </constant>
      <constant namespace="global" line="43" package="Flourish">
        <name>hookFilenameMap</name>
        <full_name>hookFilenameMap</full_name>
        <value><![CDATA['fFilesystem::hookFilenameMap']]></value>
      </constant>
      <constant namespace="global" line="44" package="Flourish">
        <name>isInsideTransaction</name>
        <full_name>isInsideTransaction</full_name>
        <value><![CDATA['fFilesystem::isInsideTransaction']]></value>
      </constant>
      <constant namespace="global" line="45" package="Flourish">
        <name>makeUniqueName</name>
        <full_name>makeUniqueName</full_name>
        <value><![CDATA['fFilesystem::makeUniqueName']]></value>
      </constant>
      <constant namespace="global" line="46" package="Flourish">
        <name>recordAppend</name>
        <full_name>recordAppend</full_name>
        <value><![CDATA['fFilesystem::recordAppend']]></value>
      </constant>
      <constant namespace="global" line="47" package="Flourish">
        <name>recordCreate</name>
        <full_name>recordCreate</full_name>
        <value><![CDATA['fFilesystem::recordCreate']]></value>
      </constant>
      <constant namespace="global" line="48" package="Flourish">
        <name>recordDelete</name>
        <full_name>recordDelete</full_name>
        <value><![CDATA['fFilesystem::recordDelete']]></value>
      </constant>
      <constant namespace="global" line="49" package="Flourish">
        <name>recordDuplicate</name>
        <full_name>recordDuplicate</full_name>
        <value><![CDATA['fFilesystem::recordDuplicate']]></value>
      </constant>
      <constant namespace="global" line="50" package="Flourish">
        <name>recordRename</name>
        <full_name>recordRename</full_name>
        <value><![CDATA['fFilesystem::recordRename']]></value>
      </constant>
      <constant namespace="global" line="51" package="Flourish">
        <name>recordWrite</name>
        <full_name>recordWrite</full_name>
        <value><![CDATA['fFilesystem::recordWrite']]></value>
      </constant>
      <constant namespace="global" line="52" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <value><![CDATA['fFilesystem::reset']]></value>
      </constant>
      <constant namespace="global" line="53" package="Flourish">
        <name>rollback</name>
        <full_name>rollback</full_name>
        <value><![CDATA['fFilesystem::rollback']]></value>
      </constant>
      <constant namespace="global" line="54" package="Flourish">
        <name>translateToWebPath</name>
        <full_name>translateToWebPath</full_name>
        <value><![CDATA['fFilesystem::translateToWebPath']]></value>
      </constant>
      <constant namespace="global" line="55" package="Flourish">
        <name>updateDeletedMap</name>
        <full_name>updateDeletedMap</full_name>
        <value><![CDATA['fFilesystem::updateDeletedMap']]></value>
      </constant>
      <constant namespace="global" line="56" package="Flourish">
        <name>updateFilenameMap</name>
        <full_name>updateFilenameMap</full_name>
        <value><![CDATA['fFilesystem::updateFilenameMap']]></value>
      </constant>
      <constant namespace="global" line="57" package="Flourish">
        <name>updateFilenameMapForDirectory</name>
        <full_name>updateFilenameMapForDirectory</full_name>
        <value><![CDATA['fFilesystem::updateFilenameMapForDirectory']]></value>
      </constant>
      <property final="false" static="true" visibility="private" line="65" namespace="global" package="Sutra">
        <name>$commit_operations</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="60">
          <description><![CDATA[Stores the operations to perform when a commit occurs]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="60" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="72" namespace="global" package="Sutra">
        <name>$deleted_map</name>
        <default><![CDATA[array()]]></default>
        <docblock line="67">
          <description><![CDATA[Maps deletion backtraces to all instances of a file or directory, providing consistency]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="67" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="79" namespace="global" package="Sutra">
        <name>$filename_map</name>
        <default><![CDATA[array()]]></default>
        <docblock line="74">
          <description><![CDATA[Stores file and directory names by reference, allowing all object instances to be updated at once]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="74" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="86" namespace="global" package="Sutra">
        <name>$rollback_operations</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="81">
          <description><![CDATA[Stores the operations to perform if a rollback occurs]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="81" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="93" namespace="global" package="Sutra">
        <name>$web_path_translations</name>
        <default><![CDATA[array()]]></default>
        <docblock line="88">
          <description><![CDATA[Stores a list of search => replace strings for web path translations]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="88" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="110" package="Flourish">
        <name>addWebPathTranslation</name>
        <full_name>addWebPathTranslation</full_name>
        <docblock line="96">
          <description><![CDATA[Adds a directory to the web path translation list]]></description>
          <long-description><![CDATA[<p>The web path conversion list is a list of directory paths that will be
converted (from the beginning of filesystem paths) when preparing a path
for output into HTML.</p>

<p>By default the <code>$_SERVER['DOCUMENT_ROOT']</code> will be converted to a blank
string, in essence stripping it from filesystem paths.</p>]]></long-description>
          <tag line="96" name="param" description="The path to look for" type="string" variable="$search_path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="96" name="param" description="The path to replace with" type="string" variable="$replace_path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="96" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="110">
          <name>$search_path</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="110">
          <name>$replace_path</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="131" package="Flourish">
        <name>begin</name>
        <full_name>begin</full_name>
        <docblock line="119">
          <description><![CDATA[Starts a filesystem pseudo-transaction, should only be called when no transaction is in progress.]]></description>
          <long-description><![CDATA[<p>Flourish filesystem transactions are NOT full ACID-compliant
transactions, but rather more of an filesystem undo buffer which can
return the filesystem to the state when ::begin() was called. If your PHP
script dies in the middle of an operation this functionality will do
nothing for you and all operations will be retained, except for deletes
which only occur once the transaction is committed.</p>]]></long-description>
          <tag line="119" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="148" package="Flourish">
        <name>commit</name>
        <full_name>commit</full_name>
        <docblock line="143">
          <description><![CDATA[Commits a filesystem transaction, should only be called when a transaction is in progress]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="143" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="183" package="Flourish">
        <name>convertToBytes</name>
        <full_name>convertToBytes</full_name>
        <docblock line="174">
          <description><![CDATA[Takes a file size including a unit of measure (i.e.]]></description>
          <long-description><![CDATA[<p>kb, GB, M) and converts it to bytes</p>

<p>Sizes are interpreted using base 2, not base 10. Sizes above 2GB may not
be accurately represented on 32 bit operating systems.</p>]]></long-description>
          <tag line="174" name="param" description="The size to convert to bytes" type="string" variable="$size">
            <type by_reference="false">string</type>
          </tag>
          <tag line="174" name="return" description="The number of bytes represented by the size" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="183">
          <name>$size</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="213" package="Flourish">
        <name>createObject</name>
        <full_name>createObject</full_name>
        <docblock line="205">
          <description><![CDATA[Takes a filesystem path and creates either an fDirectory, fFile or fImage object from it]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="205" name="throws" description="When no path was specified or the path specified does not exist" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="205" name="param" description="The path to the filesystem object" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="205" name="return" description="" type="\fDirectory|\fFile|\fImage">
            <type by_reference="false">\fDirectory</type>
            <type by_reference="false">\fFile</type>
            <type by_reference="false">\fImage</type>
          </tag>
        </docblock>
        <argument line="213">
          <name>$path</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="247" package="Flourish">
        <name>formatFilesize</name>
        <full_name>formatFilesize</full_name>
        <docblock line="240">
          <description><![CDATA[Takes the size of a file in bytes and returns a friendly size in B/K/M/G/T]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="240" name="param" description="The size of the file in bytes" type="integer" variable="$bytes">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="240" name="param" description="The number of decimal places to display" type="integer" variable="$decimal_places">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="240" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="247">
          <name>$bytes</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="247">
          <name>$decimal_places</name>
          <default><![CDATA[1]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="266" package="Flourish">
        <name>getPathInfo</name>
        <full_name>getPathInfo</full_name>
        <docblock line="259">
          <description><![CDATA[Returns info about a path including dirname, basename, extension and filename]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="259" name="param" description="The file/directory path to retrieve information about" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="259" name="param" description="The piece of information to return: `'dirname'`, `'basename'`, `'extension'`, or `'filename'`" type="string" variable="$element">
            <type by_reference="false">string</type>
          </tag>
          <tag line="259" name="return" description="The file's dirname, basename, extension and filename" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="266">
          <name>$path</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="266">
          <name>$element</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="307" package="Flourish">
        <name>hookDeletedMap</name>
        <full_name>hookDeletedMap</full_name>
        <docblock line="296">
          <description><![CDATA[Hooks a file/directory into the deleted backtrace map entry for that filename]]></description>
          <long-description><![CDATA[<p>Since the value is returned by reference, all objects that represent
this file/directory always see the same backtrace.</p>]]></long-description>
          <tag line="296" name="internal" description=""/>
          <tag line="296" name="param" description="The name of the file or directory" type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="296" name="return" description="Will return `NULL` if no match, or the backtrace array if a match occurs" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="307">
          <name>$file</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="327" package="Flourish">
        <name>hookFilenameMap</name>
        <full_name>hookFilenameMap</full_name>
        <docblock line="316">
          <description><![CDATA[Hooks a file/directory name to the filename map]]></description>
          <long-description><![CDATA[<p>Since the value is returned by reference, all objects that represent
this file/directory will always be update on a rename.</p>]]></long-description>
          <tag line="316" name="internal" description=""/>
          <tag line="316" name="param" description="The name of the file or directory" type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="316" name="return" description="Will return `NULL` if no match, or the exception object if a match occurs" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="327">
          <name>$file</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="341" package="Flourish">
        <name>isInsideTransaction</name>
        <full_name>isInsideTransaction</full_name>
        <docblock line="336">
          <description><![CDATA[Indicates if a transaction is in progress]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="336" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="353" package="Flourish">
        <name>makeURLSafe</name>
        <full_name>makeURLSafe</full_name>
        <docblock line="347">
          <description><![CDATA[Changes a filename to be safe for URLs by making it all lower case and changing everything but letters, numers, - and .]]></description>
          <long-description><![CDATA[<p>to _</p>]]></long-description>
          <tag line="347" name="param" description="The filename to clean up" type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="347" name="return" description="The cleaned up filename" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="353">
          <name>$filename</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="368" package="Flourish">
        <name>makeUniqueName</name>
        <full_name>makeUniqueName</full_name>
        <docblock line="361">
          <description><![CDATA[Returns a unique name for a file]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="361" name="param" description="The filename to check" type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="361" name="param" description="The new extension for the filename, should not include `.`" type="string" variable="$new_extension">
            <type by_reference="false">string</type>
          </tag>
          <tag line="361" name="return" description="The unique file name" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="368">
          <name>$file</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="368">
          <name>$new_extension</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="408" package="Flourish">
        <name>updateDeletedMap</name>
        <full_name>updateDeletedMap</full_name>
        <docblock line="399">
          <description><![CDATA[Updates the deleted backtrace for a file or directory]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="399" name="internal" description=""/>
          <tag line="399" name="param" description="A file or directory name, directories should end in `/` or `\`" type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="399" name="param" description="The backtrace for this file/directory" type="array" variable="$backtrace">
            <type by_reference="false">array</type>
          </tag>
          <tag line="399" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="408">
          <name>$file</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="408">
          <name>$backtrace</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="423" package="Flourish">
        <name>updateFilenameMap</name>
        <full_name>updateFilenameMap</full_name>
        <docblock line="414">
          <description><![CDATA[Updates the filename map, causing all objects representing a file/directory to be updated]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="414" name="internal" description=""/>
          <tag line="414" name="param" description="The existing filename" type="string" variable="$existing_filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="414" name="param" description="The new filename" type="string" variable="$new_filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="414" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="423">
          <name>$existing_filename</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="423">
          <name>$new_filename</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="450" package="Flourish">
        <name>updateFilenameMapForDirectory</name>
        <full_name>updateFilenameMapForDirectory</full_name>
        <docblock line="439">
          <description><![CDATA[Updates the filename map recursively, causing all objects representing a directory to be updated]]></description>
          <long-description><![CDATA[<p>Also updates all files and directories in the specified directory to the new paths.</p>]]></long-description>
          <tag line="439" name="internal" description=""/>
          <tag line="439" name="param" description="The existing directory name" type="string" variable="$existing_dirname">
            <type by_reference="false">string</type>
          </tag>
          <tag line="439" name="param" description="The new dirname" type="string" variable="$new_dirname">
            <type by_reference="false">string</type>
          </tag>
          <tag line="439" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="450">
          <name>$existing_dirname</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="450">
          <name>$new_dirname</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="496" package="Flourish">
        <name>recordAppend</name>
        <full_name>recordAppend</full_name>
        <docblock line="487">
          <description><![CDATA[Stores what data has been added to a file so it can be removed if there is a rollback]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="487" name="internal" description=""/>
          <tag line="487" name="param" description="The file that is being written to" type="\fFile" variable="$file">
            <type by_reference="false">\fFile</type>
          </tag>
          <tag line="487" name="param" description="The data being appended to the file" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="487" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="496">
          <name>$file</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="496">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="514" package="Flourish">
        <name>recordCreate</name>
        <full_name>recordCreate</full_name>
        <docblock line="506">
          <description><![CDATA[Keeps a record of created files so they can be deleted up in case of a rollback]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="506" name="internal" description=""/>
          <tag line="506" name="param" description="The new file or directory to get rid of on rollback" type="object" variable="$object">
            <type by_reference="false">object</type>
          </tag>
          <tag line="506" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="514">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="531" package="Flourish">
        <name>recordDelete</name>
        <full_name>recordDelete</full_name>
        <docblock line="523">
          <description><![CDATA[Keeps track of file and directory names to delete when a transaction is committed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="523" name="internal" description=""/>
          <tag line="523" name="param" description="The filesystem object to delete" type="\fFile|\fDirectory" variable="$object">
            <type by_reference="false">\fFile</type>
            <type by_reference="false">\fDirectory</type>
          </tag>
          <tag line="523" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="531">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="548" package="Flourish">
        <name>recordDuplicate</name>
        <full_name>recordDuplicate</full_name>
        <docblock line="540">
          <description><![CDATA[Keeps a record of duplicated files so they can be cleaned up in case of a rollback]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="540" name="internal" description=""/>
          <tag line="540" name="param" description="The duplicate file to get rid of on rollback" type="\fFile" variable="$file">
            <type by_reference="false">\fFile</type>
          </tag>
          <tag line="540" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="548">
          <name>$file</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="566" package="Flourish">
        <name>recordRename</name>
        <full_name>recordRename</full_name>
        <docblock line="557">
          <description><![CDATA[Keeps a temp file in place of the old filename so the file can be restored during a rollback]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="557" name="internal" description=""/>
          <tag line="557" name="param" description="The old file or directory name" type="string" variable="$old_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="557" name="param" description="The new file or directory name" type="string" variable="$new_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="557" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="566">
          <name>$old_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="566">
          <name>$new_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="592" package="Flourish">
        <name>recordWrite</name>
        <full_name>recordWrite</full_name>
        <docblock line="584">
          <description><![CDATA[Keeps backup copies of files so they can be restored if there is a rollback]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="584" name="internal" description=""/>
          <tag line="584" name="param" description="The file that is being written to" type="\fFile" variable="$file">
            <type by_reference="false">\fFile</type>
          </tag>
          <tag line="584" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="592">
          <name>$file</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="609" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="602">
          <description><![CDATA[Resets the configuration of the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="602" name="internal" description=""/>
          <tag line="602" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="625" package="Flourish">
        <name>rollback</name>
        <full_name>rollback</full_name>
        <docblock line="620">
          <description><![CDATA[Rolls back a filesystem transaction, it is safe to rollback when no transaction is in progress]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="620" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="690" package="Flourish">
        <name>translateToWebPath</name>
        <full_name>translateToWebPath</full_name>
        <docblock line="684">
          <description><![CDATA[Takes a filesystem path and translates it to a web path using the rules added]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="684" name="param" description="The path to translate" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="684" name="return" description="The filesystem path translated to a web path" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="690">
          <name>$path</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="711" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="706">
          <description><![CDATA[Forces use as a static class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="706" name="return" description="" type="\fFilesystem">
            <type by_reference="false">\fFilesystem</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fFilesystem.php</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fSession.php" hash="318d3d3473322ab09043933563bb5ac4" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="42" package="Flourish">
      <extends/>
      <name>fSession</name>
      <full_name>\fSession</full_name>
      <docblock line="2">
        <description><![CDATA[Wraps the session control functions and the `$_SESSION` superglobal for a more consistent and safer API]]></description>
        <long-description><![CDATA[<p>A <code>Cannot send session cache limiter</code> warning will be triggered if ::open(),
::add(), ::clear(), ::delete(), ::get() or ::set() is called after output has
been sent to the browser. To prevent such a warning, explicitly call ::open()
before generating any output.</p>]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2012 Will Bond, others"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="author" description="Alex Leeds [al] &lt;alex@kingleeds.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fSession" link="http://flourishlib.com/fSession"/>
        <tag line="2" name="version" description="1.0.0b22"/>
        <tag line="2" name="changes" description="1.0.0b22  Fixed ::destroy() to no longer call ::regenerateID() since it fails after a session is destroyed [wb, 2012-09-20]"/>
        <tag line="2" name="changes" description="1.0.0b21  Changed ::regenerateID() to not fail silently if the session has not been opened yet [wb, 2012-09-15]"/>
        <tag line="2" name="changes" description="1.0.0b20  Fixed bugs with ::reset() introduced in 1.0.0b19 [wb, 2011-08-23]"/>
        <tag line="2" name="changes" description="1.0.0b19  Fixed some session warning messages for PHP 5.1.6 [wb, 2011-07-29]"/>
        <tag line="2" name="changes" description="1.0.0b18  Added support for storing session data in memcache, redis and databases using fCache and ::setBackend() [wb, 2011-06-21]"/>
        <tag line="2" name="changes" description="1.0.0b17  Updated ::ignoreSubdomain() to use `$_SERVER['HTTP_HOST']` when `$_SERVER['SERVER_NAME']` is not set [wb, 2011-02-01]"/>
        <tag line="2" name="changes" description="1.0.0b16  Changed ::delete() to return the value of the key being deleted [wb, 2010-09-19]"/>
        <tag line="2" name="changes" description="1.0.0b15  Added documentation about `[sub-key]` syntax [wb, 2010-09-12]"/>
        <tag line="2" name="changes" description="1.0.0b14  Backwards Compatibility Break - ::add(), ::delete(), ::get() and ::set() now interpret `[` and `]` as array shorthand and thus they can not be used in keys - added `$beginning` parameter to ::add(), added ::remove() method [wb, 2010-09-12]"/>
        <tag line="2" name="changes" description="1.0.0b13  Fixed a bug that prevented working with existing sessions since they did not have the `fSession::expires` key [wb, 2010-08-24]"/>
        <tag line="2" name="changes" description="1.0.0b12  Changed ::enablePersistence() to always regenerate the session ID, which ensures the function works even if the ID has already been regenerated by fAuthorizaton [wb, 2010-08-21]"/>
        <tag line="2" name="changes" description="1.0.0b11  Updated the class to make sure ::enablePersistence() is called after ::ignoreSubdomain(), ::setLength() and ::setPath() [wb, 2010-05-29]"/>
        <tag line="2" name="changes" description="1.0.0b10  Fixed some documentation bugs [wb, 2010-03-03]"/>
        <tag line="2" name="changes" description="1.0.0b9   Fixed a bug in ::destroy() where sessions weren't always being properly destroyed [wb, 2009-12-08]"/>
        <tag line="2" name="changes" description="1.0.0b8   Fixed a bug that made the unit tests fail on PHP 5.1 [wb, 2009-10-27]"/>
        <tag line="2" name="changes" description="1.0.0b7   Backwards Compatibility Break - Removed the `$prefix` parameter from the methods ::delete(), ::get() and ::set() - added the methods ::add(), ::enablePersistence(), ::regenerateID() [wb+al, 2009-10-23]"/>
        <tag line="2" name="changes" description="1.0.0b6   Backwards Compatibility Break - the first parameter of ::clear() was removed, use ::delete() instead [wb, 2009-05-08]"/>
        <tag line="2" name="changes" description="1.0.0b5   Added documentation about session cache limiter warnings [wb, 2009-05-04]"/>
        <tag line="2" name="changes" description="1.0.0b4   The class now works with existing sessions [wb, 2009-05-04]"/>
        <tag line="2" name="changes" description="1.0.0b3   Fixed ::clear() to properly handle when `$key` is `NULL` [wb, 2009-02-05]"/>
        <tag line="2" name="changes" description="1.0.0b2   Made ::open() public, fixed some consistency issues with setting session options through the class [wb, 2009-01-06]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2007-06-14]"/>
      </docblock>
      <constant namespace="global" line="45" package="Flourish">
        <name>add</name>
        <full_name>add</full_name>
        <value><![CDATA['fSession::add']]></value>
      </constant>
      <constant namespace="global" line="46" package="Flourish">
        <name>clear</name>
        <full_name>clear</full_name>
        <value><![CDATA['fSession::clear']]></value>
      </constant>
      <constant namespace="global" line="47" package="Flourish">
        <name>close</name>
        <full_name>close</full_name>
        <value><![CDATA['fSession::close']]></value>
      </constant>
      <constant namespace="global" line="48" package="Flourish">
        <name>closeCache</name>
        <full_name>closeCache</full_name>
        <value><![CDATA['fSession::closeCache']]></value>
      </constant>
      <constant namespace="global" line="49" package="Flourish">
        <name>delete</name>
        <full_name>delete</full_name>
        <value><![CDATA['fSession::delete']]></value>
      </constant>
      <constant namespace="global" line="50" package="Flourish">
        <name>destroy</name>
        <full_name>destroy</full_name>
        <value><![CDATA['fSession::destroy']]></value>
      </constant>
      <constant namespace="global" line="51" package="Flourish">
        <name>destroyCache</name>
        <full_name>destroyCache</full_name>
        <value><![CDATA['fSession::destroyCache']]></value>
      </constant>
      <constant namespace="global" line="52" package="Flourish">
        <name>enablePersistence</name>
        <full_name>enablePersistence</full_name>
        <value><![CDATA['fSession::enablePersistence']]></value>
      </constant>
      <constant namespace="global" line="53" package="Flourish">
        <name>gcCache</name>
        <full_name>gcCache</full_name>
        <value><![CDATA['fSession::gcCache']]></value>
      </constant>
      <constant namespace="global" line="54" package="Flourish">
        <name>get</name>
        <full_name>get</full_name>
        <value><![CDATA['fSession::get']]></value>
      </constant>
      <constant namespace="global" line="55" package="Flourish">
        <name>ignoreSubdomain</name>
        <full_name>ignoreSubdomain</full_name>
        <value><![CDATA['fSession::ignoreSubdomain']]></value>
      </constant>
      <constant namespace="global" line="56" package="Flourish">
        <name>open</name>
        <full_name>open</full_name>
        <value><![CDATA['fSession::open']]></value>
      </constant>
      <constant namespace="global" line="57" package="Flourish">
        <name>openCache</name>
        <full_name>openCache</full_name>
        <value><![CDATA['fSession::openCache']]></value>
      </constant>
      <constant namespace="global" line="58" package="Flourish">
        <name>readCache</name>
        <full_name>readCache</full_name>
        <value><![CDATA['fSession::readCache']]></value>
      </constant>
      <constant namespace="global" line="59" package="Flourish">
        <name>regenerateID</name>
        <full_name>regenerateID</full_name>
        <value><![CDATA['fSession::regenerateID']]></value>
      </constant>
      <constant namespace="global" line="60" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <value><![CDATA['fSession::reset']]></value>
      </constant>
      <constant namespace="global" line="61" package="Flourish">
        <name>set</name>
        <full_name>set</full_name>
        <value><![CDATA['fSession::set']]></value>
      </constant>
      <constant namespace="global" line="62" package="Flourish">
        <name>setBackend</name>
        <full_name>setBackend</full_name>
        <value><![CDATA['fSession::setBackend']]></value>
      </constant>
      <constant namespace="global" line="63" package="Flourish">
        <name>setLength</name>
        <full_name>setLength</full_name>
        <value><![CDATA['fSession::setLength']]></value>
      </constant>
      <constant namespace="global" line="64" package="Flourish">
        <name>setPath</name>
        <full_name>setPath</full_name>
        <value><![CDATA['fSession::setPath']]></value>
      </constant>
      <constant namespace="global" line="65" package="Flourish">
        <name>writeCache</name>
        <full_name>writeCache</full_name>
        <value><![CDATA['fSession::writeCache']]></value>
      </constant>
      <property final="false" static="true" visibility="private" line="73" namespace="global" package="Sutra">
        <name>$backend</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="68">
          <description><![CDATA[The fCache backend to use for the session]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="68" name="var" description="" type="\fCache">
            <type by_reference="false">\fCache</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="80" namespace="global" package="Sutra">
        <name>$key_prefix</name>
        <default><![CDATA['']]></default>
        <docblock line="75">
          <description><![CDATA[The key prefix to use when saving the session to an fCache]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="75" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="87" namespace="global" package="Sutra">
        <name>$normal_timespan</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="82">
          <description><![CDATA[The length for a normal session]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="82" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="94" namespace="global" package="Sutra">
        <name>$old_session_module_name</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="89">
          <description><![CDATA[The name of the old session module to revent to when fSession is closed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="89" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="101" namespace="global" package="Sutra">
        <name>$open</name>
        <default><![CDATA[FALSE]]></default>
        <docblock line="96">
          <description><![CDATA[If the session is open]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="96" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="108" namespace="global" package="Sutra">
        <name>$persistent_timespan</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="103">
          <description><![CDATA[The length for a persistent session cookie - one that survives browser restarts]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="103" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="115" namespace="global" package="Sutra">
        <name>$regenerated</name>
        <default><![CDATA[FALSE]]></default>
        <docblock line="110">
          <description><![CDATA[If the session ID was regenerated during this script]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="110" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="126" package="Flourish">
        <name>add</name>
        <full_name>add</full_name>
        <docblock line="118">
          <description><![CDATA[Adds a value to an already-existing array value, or to a new array value]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="118" name="param" description="The name to access the array under - array elements can be modified via `[sub-key]` syntax, and thus `[` and `]` can not be used in key names" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="118" name="param" description="The value to add to the array" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="118" name="param" description="If the value should be added to the beginning" type="boolean" variable="$beginning">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="118" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="126">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="126">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="126">
          <name>$beginning</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="183" package="Flourish">
        <name>clear</name>
        <full_name>clear</full_name>
        <docblock line="174">
          <description><![CDATA[Removes all session values with the provided prefix]]></description>
          <long-description><![CDATA[<p>This method will not remove session variables used by this class, which
are prefixed with <code>fSession::</code>.</p>]]></long-description>
          <tag line="174" name="param" description="The prefix to clear all session values for" type="string" variable="$prefix">
            <type by_reference="false">string</type>
          </tag>
          <tag line="174" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="183">
          <name>$prefix</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="210" package="Flourish">
        <name>close</name>
        <full_name>close</full_name>
        <docblock line="205">
          <description><![CDATA[Closes the session for writing, allowing other pages to open the session]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="205" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="230" package="Flourish">
        <name>closeCache</name>
        <full_name>closeCache</full_name>
        <docblock line="223">
          <description><![CDATA[Callback to close the session]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="223" name="internal" description=""/>
          <tag line="223" name="return" description="If the operation succeeded" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="243" package="Flourish">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="236">
          <description><![CDATA[Deletes a value from the session]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="236" name="param" description="The key of the value to delete - array elements can be modified via `[sub-key]` syntax, and thus `[` and `]` can not be used in key names" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="236" name="param" description="The value to return if the `$key` is not set" type="mixed" variable="$default_value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="236" name="return" description="The value of the `$key` that was deleted" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="243">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="243">
          <name>$default_value</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="296" package="Flourish">
        <name>destroy</name>
        <full_name>destroy</full_name>
        <docblock line="291">
          <description><![CDATA[Destroys the session, removing all values]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="291" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="317" package="Flourish">
        <name>destroyCache</name>
        <full_name>destroyCache</full_name>
        <docblock line="309">
          <description><![CDATA[Callback to destroy a session]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="309" name="internal" description=""/>
          <tag line="309" name="param" description="The session to destroy" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="309" name="return" description="If the operation succeeded" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="317">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="338" package="Flourish">
        <name>enablePersistence</name>
        <full_name>enablePersistence</full_name>
        <docblock line="323">
          <description><![CDATA[Changed the session to use a time-based cookie instead of a session-based cookie]]></description>
          <long-description><![CDATA[<p>The length of the time-based cookie is controlled by ::setLength(). When
this method is called, a time-based cookie is used to store the session
ID. This means the session can persist browser restarts. Normally, a
session-based cookie is used, which is wiped when a browser restart
occurs.</p>

<p>This method should be called during the login process and will normally
be controlled by a checkbox or similar where the user can indicate if
they want to stay logged in for an extended period of time.</p>]]></long-description>
          <tag line="323" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="376" package="Flourish">
        <name>gcCache</name>
        <full_name>gcCache</full_name>
        <docblock line="369">
          <description><![CDATA[Callback to garbage-collect the session cache]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="369" name="internal" description=""/>
          <tag line="369" name="return" description="If the operation succeeded" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="390" package="Flourish">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="383">
          <description><![CDATA[Gets data from the `$_SESSION` superglobal]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="383" name="param" description="The name to get the value for - array elements can be accessed via `[sub-key]` syntax, and thus `[` and `]` can not be used in key names" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="383" name="param" description="The default value to use if the requested key is not set" type="mixed" variable="$default_value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="383" name="return" description="The data element requested" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="390">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="390">
          <name>$default_value</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="429" package="Flourish">
        <name>ignoreSubdomain</name>
        <full_name>ignoreSubdomain</full_name>
        <docblock line="421">
          <description><![CDATA[Sets the session to run on the main domain, not just the specific subdomain currently being accessed]]></description>
          <long-description><![CDATA[<p>This method should be called after any calls to
[http://php.net/session_set_cookie_params <code>session_set_cookie_params()</code>].</p>]]></long-description>
          <tag line="421" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="482" package="Flourish">
        <name>open</name>
        <full_name>open</full_name>
        <docblock line="471">
          <description><![CDATA[Opens the session for writing, is automatically called by ::clear(), ::get() and ::set()]]></description>
          <long-description><![CDATA[<p>A <code>Cannot send session cache limiter</code> warning will be triggered if this,
::add(), ::clear(), ::delete(), ::get() or ::set() is called after output
has been sent to the browser. To prevent such a warning, explicitly call
this method before generating any output.</p>]]></long-description>
          <tag line="471" name="param" description="If the session id should only be allowed via cookie - this is a security issue and should only be set to `FALSE` when absolutely necessary" type="boolean" variable="$cookie_only_session_id">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="471" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="482">
          <name>$cookie_only_session_id</name>
          <default><![CDATA[TRUE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="546" package="Flourish">
        <name>openCache</name>
        <full_name>openCache</full_name>
        <docblock line="539">
          <description><![CDATA[Callback to open the session]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="539" name="internal" description=""/>
          <tag line="539" name="return" description="If the operation succeeded" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="560" package="Flourish">
        <name>readCache</name>
        <full_name>readCache</full_name>
        <docblock line="552">
          <description><![CDATA[Callback to read a session's values]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="552" name="internal" description=""/>
          <tag line="552" name="param" description="The session to read" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="552" name="return" description="The session's serialized data" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="560">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="573" package="Flourish">
        <name>regenerateID</name>
        <full_name>regenerateID</full_name>
        <docblock line="566">
          <description><![CDATA[Regenerates the session ID, but only once per script execution]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="566" name="internal" description=""/>
          <tag line="566" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="592" package="Flourish">
        <name>remove</name>
        <full_name>remove</full_name>
        <docblock line="585">
          <description><![CDATA[Removes and returns the value from the end of an array value]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="585" name="param" description="The name of the element to remove the value from - array elements can be modified via `[sub-key]` syntax, and thus `[` and `]` can not be used in key names" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="585" name="param" description="If the value should be removed to the beginning" type="boolean" variable="$beginning">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="585" name="return" description="The value that was removed" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="592">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="592">
          <name>$beginning</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="647" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="640">
          <description><![CDATA[Resets the configuration of the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="640" name="internal" description=""/>
          <tag line="640" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="666" package="Flourish">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="659">
          <description><![CDATA[Sets data to the `$_SESSION` superglobal]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="659" name="param" description="The name to save the value under - array elements can be modified via `[sub-key]` syntax, and thus `[` and `]` can not be used in key names" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="659" name="param" description="The value to store" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="659" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="666">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="666">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="723" package="Flourish">
        <name>setBackend</name>
        <full_name>setBackend</full_name>
        <docblock line="693">
          <description><![CDATA[Sets an fCache object to store sessions in]]></description>
          <long-description><![CDATA[<p>While any type of fCache backend should technically work, it would be
unwise to use the <code>file</code> and <code>directory</code> types. The <code>file</code> caching
backend stores all values in a single file, which would quickly become a
performance bottleneck and could cause data loss with many concurrent
users. The <code>directory</code> caching backend would not make sense since it is
the same general functionality as the default session handler, but it
would be slightly slower since it is written in PHP and not C.</p>

<p>It is recommended to set the <code>serializer</code> and <code>unserializer</code> <code>$config</code>
settings on the fCache object to <code>string</code> for the best performance and
minimal storage space.</p>

<p>For better performance, check out using the built-in session handlers
that are bundled with the following extensions:</p>

<ul>
<li>[http://php.net/memcached.sessions memcached]</li>
<li>[http://php.net/memcache.examples-overview#example-3596 memcache]</li>
<li>[https://github.com/nicolasff/phpredis redis]</li>
</ul>

<p>The [http://pecl.php.net/package/igbinary igbinary] extension can
provide even more of a performance boost by storing serialized data in
binary format instead of as text.</p>]]></long-description>
          <tag line="693" name="param" description="An fCache object to store session values in" type="\fCache" variable="$backend">
            <type by_reference="false">\fCache</type>
          </tag>
          <tag line="693" name="param" description="A prefix to add to all session IDs before storing them in the cache" type="string" variable="$key_prefix">
            <type by_reference="false">string</type>
          </tag>
          <tag line="693" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="723">
          <name>$backend</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="723">
          <name>$key_prefix</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="773" package="Flourish">
        <name>setLength</name>
        <full_name>setLength</full_name>
        <docblock line="758">
          <description><![CDATA[Sets the minimum length of a session - PHP might not clean up the session data right away once this timespan has elapsed]]></description>
          <long-description><![CDATA[<p>Please be sure to set a custom session path via ::setPath() to ensure
another site on the server does not garbage collect the session files
from this site!</p>

<p>Both of the timespan can accept either a integer timespan in seconds,
or an english description of a timespan (e.g. <code>'30 minutes'</code>, <code>'1 hour'</code>,
<code>'1 day 2 hours'</code>).</p>]]></long-description>
          <tag line="758" name="param" description="The normal, session-based cookie, length for the session" type="string|integer" variable="$normal_timespan">
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="758" name="param" description="The persistent, timed-based cookie, length for the session - this is enabled by calling ::enabledPersistence() during login" type="string|integer" variable="$persistent_timespan">
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="758" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="773">
          <name>$normal_timespan</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="773">
          <name>$persistent_timespan</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="813" package="Flourish">
        <name>setPath</name>
        <full_name>setPath</full_name>
        <docblock line="801">
          <description><![CDATA[Sets the path to store session files in]]></description>
          <long-description><![CDATA[<p>This method should always be called with a non-standard directory
whenever ::setLength() is called to ensure that another site on the
server does not garbage collect the session files for this site.</p>

<p>Standard session directories usually include <code>/tmp</code> and <code>/var/tmp</code>.</p>]]></long-description>
          <tag line="801" name="param" description="The directory to store session files in" type="string|\fDirectory" variable="$directory">
            <type by_reference="false">string</type>
            <type by_reference="false">\fDirectory</type>
          </tag>
          <tag line="801" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="813">
          <name>$directory</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="853" package="Flourish">
        <name>writeCache</name>
        <full_name>writeCache</full_name>
        <docblock line="844">
          <description><![CDATA[Callback to write a session's values]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="844" name="internal" description=""/>
          <tag line="844" name="param" description="The session to write" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="844" name="param" description="The serialized values" type="string" variable="$values">
            <type by_reference="false">string</type>
          </tag>
          <tag line="844" name="return" description="The session's serialized data" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="853">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="853">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="864" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="859">
          <description><![CDATA[Forces use as a static class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="859" name="return" description="" type="\fSession">
            <type by_reference="false">\fSession</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fSession.php</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fORMSchema.php" hash="aa9d399c5bba98586708247fcd781790" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="23" package="Flourish">
      <extends/>
      <name>fORMSchema</name>
      <full_name>\fORMSchema</full_name>
      <docblock line="2">
        <description><![CDATA[Provides fSchema class related functions for ORM code]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2010 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fORMSchema" link="http://flourishlib.com/fORMSchema"/>
        <tag line="2" name="version" description="1.0.0b9"/>
        <tag line="2" name="changes" description="1.0.0b9  Enhanced various exception messages [wb, 2010-09-19]"/>
        <tag line="2" name="changes" description="1.0.0b8  Added 'one-to-one' support to ::getRouteNameFromRelationship(), '!many-to-one' to ::getRoute() [wb, 2010-03-03]"/>
        <tag line="2" name="changes" description="1.0.0b7  Added support for multiple databases [wb, 2009-10-28]"/>
        <tag line="2" name="changes" description="1.0.0b6  Internal Backwards Compatibility Break - Added the `$schema` parameter to the beginning of ::getRoute(), ::getRouteName(), ::getRoutes() and ::isOneToOne() - added '!many-to-one' relationship type handling [wb, 2009-10-22]"/>
        <tag line="2" name="changes" description="1.0.0b5  Fixed some error messaging to not include {empty_string} in some situations [wb, 2009-07-31]"/>
        <tag line="2" name="changes" description="1.0.0b4  Added ::isOneToOne() [wb, 2009-07-21]"/>
        <tag line="2" name="changes" description="1.0.0b3  Added routes caching for performance [wb, 2009-06-15]"/>
        <tag line="2" name="changes" description="1.0.0b2  Backwards Compatiblity Break - removed ::enableSmartCaching(), fORM::enableSchemaCaching() now provides equivalent functionality [wb, 2009-05-04]"/>
        <tag line="2" name="changes" description="1.0.0b   The initial implementation [wb, 2007-06-14]"/>
      </docblock>
      <constant namespace="global" line="26" package="Flourish">
        <name>attach</name>
        <full_name>attach</full_name>
        <value><![CDATA['fORMSchema::attach']]></value>
      </constant>
      <constant namespace="global" line="27" package="Flourish">
        <name>getRoute</name>
        <full_name>getRoute</full_name>
        <value><![CDATA['fORMSchema::getRoute']]></value>
      </constant>
      <constant namespace="global" line="28" package="Flourish">
        <name>getRouteName</name>
        <full_name>getRouteName</full_name>
        <value><![CDATA['fORMSchema::getRouteName']]></value>
      </constant>
      <constant namespace="global" line="29" package="Flourish">
        <name>getRouteNameFromRelationship</name>
        <full_name>getRouteNameFromRelationship</full_name>
        <value><![CDATA['fORMSchema::getRouteNameFromRelationship']]></value>
      </constant>
      <constant namespace="global" line="30" package="Flourish">
        <name>getRoutes</name>
        <full_name>getRoutes</full_name>
        <value><![CDATA['fORMSchema::getRoutes']]></value>
      </constant>
      <constant namespace="global" line="31" package="Flourish">
        <name>isOneToOne</name>
        <full_name>isOneToOne</full_name>
        <value><![CDATA['fORMSchema::isOneToOne']]></value>
      </constant>
      <constant namespace="global" line="32" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <value><![CDATA['fORMSchema::reset']]></value>
      </constant>
      <constant namespace="global" line="33" package="Flourish">
        <name>retrieve</name>
        <full_name>retrieve</full_name>
        <value><![CDATA['fORMSchema::retrieve']]></value>
      </constant>
      <property final="false" static="true" visibility="private" line="41" namespace="global" package="Sutra">
        <name>$cache</name>
        <default><![CDATA[array('getRoutes' => array())]]></default>
        <docblock line="36">
          <description><![CDATA[A cache for computed information]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="36" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="51" namespace="global" package="Sutra">
        <name>$schema_objects</name>
        <default><![CDATA[array()]]></default>
        <docblock line="46">
          <description><![CDATA[The schema objects to use for all ORM functionality]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="46" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="61" package="Flourish">
        <name>attach</name>
        <full_name>attach</full_name>
        <docblock line="54">
          <description><![CDATA[Allows attaching an fSchema-compatible object as the schema singleton for ORM code]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="54" name="param" description="An object that is compatible with fSchema" type="\fSchema" variable="$schema">
            <type by_reference="false">\fSchema</type>
          </tag>
          <tag line="54" name="param" description="The name of the database this schema is for" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="54" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="61">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="61">
          <name>$name</name>
          <default><![CDATA['default']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="79" package="Flourish">
        <name>getRoute</name>
        <full_name>getRoute</full_name>
        <docblock line="67">
          <description><![CDATA[Returns information about the specified route]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="67" name="internal" description=""/>
          <tag line="67" name="param" description="The schema object to get the route from" type="\fSchema" variable="$schema">
            <type by_reference="false">\fSchema</type>
          </tag>
          <tag line="67" name="param" description="The main table we are searching on behalf of" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="67" name="param" description="The related table we are searching under" type="string" variable="$related_table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="67" name="param" description="The route to get info about" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="67" name="param" description="The relationship type: `NULL`, `'*-to-many'`, `'*-to-one'`, `'!many-to-one'`, `'one-to-one'`, `'one-to-meny'`, `'many-to-one'`, `'many-to-many'`" type="string" variable="$relationship_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="67" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="79">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="79">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="79">
          <name>$related_table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="79">
          <name>$route</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="79">
          <name>$relationship_type</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="133" package="Flourish">
        <name>getRouteName</name>
        <full_name>getRouteName</full_name>
        <docblock line="121">
          <description><![CDATA[Returns the name of the only route from the specified table to one of its related tables]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="121" name="internal" description=""/>
          <tag line="121" name="param" description="The schema object to get the route name from" type="\fSchema" variable="$schema">
            <type by_reference="false">\fSchema</type>
          </tag>
          <tag line="121" name="param" description="The main table we are searching on behalf of" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="121" name="param" description="The related table we are trying to find the routes for" type="string" variable="$related_table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="121" name="param" description="The route that was preselected, will be verified if present" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="121" name="param" description="The relationship type: `NULL`, `'*-to-many'`, `'*-to-one'`, `'!many-to-one'`, `'one-to-one'`, `'one-to-many'`, `'many-to-one'`, `'many-to-many'`" type="string" variable="$relationship_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="121" name="return" description="The only route from the main table to the related table" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="133">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="133">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="133">
          <name>$related_table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="133">
          <name>$route</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="133">
          <name>$relationship_type</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="202" package="Flourish">
        <name>getRouteNameFromRelationship</name>
        <full_name>getRouteNameFromRelationship</full_name>
        <docblock line="193">
          <description><![CDATA[Returns the name of the route specified by the relationship]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="193" name="internal" description=""/>
          <tag line="193" name="param" description="The type of relationship: `'*-to-one'`, `'one-to-one'`, `'one-to-many'`, `'many-to-one'`, `'many-to-many'`" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="193" name="param" description="The relationship array from fSchema::getKeys()" type="array" variable="$relationship">
            <type by_reference="false">array</type>
          </tag>
          <tag line="193" name="return" description="The name of the route" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="202">
          <name>$type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="202">
          <name>$relationship</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="236" package="Flourish">
        <name>getRoutes</name>
        <full_name>getRoutes</full_name>
        <docblock line="225">
          <description><![CDATA[Returns an array of all routes from a table to one of its related tables]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="225" name="internal" description=""/>
          <tag line="225" name="param" description="The schema object to get the routes for" type="\fSchema" variable="$schema">
            <type by_reference="false">\fSchema</type>
          </tag>
          <tag line="225" name="param" description="The main table we are searching on behalf of" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="225" name="param" description="The related table we are trying to find the routes for" type="string" variable="$related_table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="225" name="param" description="The relationship type: `NULL`, `'*-to-many'`, `'*-to-one'`, `'!many-to-one'`, `'one-to-one'`, `'one-to-many'`, `'many-to-one'`, `'many-to-many'`" type="string" variable="$relationship_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="225" name="return" description="All of the routes from the main table to the related table" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="236">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="236">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="236">
          <name>$related_table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="236">
          <name>$relationship_type</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="318" package="Flourish">
        <name>isOneToOne</name>
        <full_name>isOneToOne</full_name>
        <docblock line="307">
          <description><![CDATA[Indicates if the relationship specified is a one-to-one relationship]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="307" name="internal" description=""/>
          <tag line="307" name="param" description="The schema object the tables are from" type="\fSchema" variable="$schema">
            <type by_reference="false">\fSchema</type>
          </tag>
          <tag line="307" name="param" description="The main table we are searching on behalf of" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="307" name="param" description="The related table we are trying to find the routes for" type="string" variable="$related_table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="307" name="param" description="The route between the two tables" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="307" name="return" description="If the table is in a one-to-one relationship with the related table over the route specified" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="318">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="318">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="318">
          <name>$related_table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="318">
          <name>$route</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="352" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="345">
          <description><![CDATA[Resets the configuration of the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="345" name="internal" description=""/>
          <tag line="345" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="364" package="Flourish">
        <name>retrieve</name>
        <full_name>retrieve</full_name>
        <docblock line="358">
          <description><![CDATA[Return the instance of the fSchema class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="358" name="param" description="The class the object will be used with" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="358" name="return" description="The schema instance" type="\fSchema">
            <type by_reference="false">\fSchema</type>
          </tag>
        </docblock>
        <argument line="364">
          <name>$class</name>
          <default><![CDATA['fActiveRecord']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="385" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="380">
          <description><![CDATA[Forces use as a static class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="380" name="return" description="" type="\fORMSchema">
            <type by_reference="false">\fORMSchema</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fORMSchema.php</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fValidation.php" hash="db6a1c4997349ff97347dd5cc19ae193" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="30" package="Flourish">
      <extends/>
      <name>fValidation</name>
      <full_name>\fValidation</full_name>
      <docblock line="2">
        <description><![CDATA[Provides validation routines for standalone forms, such as contact forms]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2011 Will Bond, others"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="author" description="Andrew Udvare [au] &lt;andrew@bne1.com&gt;"/>
        <tag line="2" name="author" description="Kerri Gertz [kg] &lt;kerri@imarc.net&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fValidation" link="http://flourishlib.com/fValidation"/>
        <tag line="2" name="version" description="1.0.0b14"/>
        <tag line="2" name="changes" description="1.0.0b14  Added ::setCSRFTokenField() [au, 2012-04-27]"/>
        <tag line="2" name="changes" description="1.0.0b13  Fixed return bug in ::checkConditionalRules [kg, 2010-06-19]"/>
        <tag line="2" name="changes" description="1.0.0b12  Fixed some method signatures [wb, 2011-08-24]"/>
        <tag line="2" name="changes" description="1.0.0b11  Fixed ::addCallbackRule() to be able to handle multiple rules per field [wb, 2011-06-02]"/>
        <tag line="2" name="changes" description="1.0.0b10  Fixed ::addRegexRule() to be able to handle multiple rules per field [wb, 2010-08-30]"/>
        <tag line="2" name="changes" description="1.0.0b9   Enhanced all of the add fields methods to accept one field per parameter, or an array of fields [wb, 2010-06-24]"/>
        <tag line="2" name="changes" description="1.0.0b8   Added/fixed support for array-syntax fields names [wb, 2010-06-09]"/>
        <tag line="2" name="changes" description="1.0.0b7   Added the ability to pass an array of replacements to ::addRegexReplacement() and ::addStringReplacement() [wb, 2010-05-31]"/>
        <tag line="2" name="changes" description="1.0.0b6   BackwardsCompatibilityBreak - moved one-or-more required fields from ::addRequiredFields() to ::addOneOrMoreRule(), moved conditional required fields from ::addRequiredFields() to ::addConditionalRule(), changed returned messages array to have field name keys - added lots of functionality [wb, 2010-05-26]"/>
        <tag line="2" name="changes" description="1.0.0b5   Added the `$return_messages` parameter to ::validate() and updated code for new fValidationException API [wb, 2009-09-17]"/>
        <tag line="2" name="changes" description="1.0.0b4   Changed date checking from `strtotime()` to fTimestamp for better localization support [wb, 2009-06-01]"/>
        <tag line="2" name="changes" description="1.0.0b3   Updated for new fCore API [wb, 2009-02-16]"/>
        <tag line="2" name="changes" description="1.0.0b2   Added support for validating date and URL fields [wb, 2009-01-23]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2007-06-14]"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="118" namespace="global" package="Sutra">
        <name>$callback_rules</name>
        <default><![CDATA[array()]]></default>
        <docblock line="113">
          <description><![CDATA[Rules that run through a callback]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="113" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="125" namespace="global" package="Sutra">
        <name>$conditional_rules</name>
        <default><![CDATA[array()]]></default>
        <docblock line="120">
          <description><![CDATA[Rules for conditionally requiring fields]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="120" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="132" namespace="global" package="Sutra">
        <name>$date_fields</name>
        <default><![CDATA[array()]]></default>
        <docblock line="127">
          <description><![CDATA[Fields that should be valid dates]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="127" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="139" namespace="global" package="Sutra">
        <name>$field_names</name>
        <default><![CDATA[array()]]></default>
        <docblock line="134">
          <description><![CDATA[An array for custom field names]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="134" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="146" namespace="global" package="Sutra">
        <name>$file_upload_rules</name>
        <default><![CDATA[array()]]></default>
        <docblock line="141">
          <description><![CDATA[File upload rules]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="141" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="153" namespace="global" package="Sutra">
        <name>$message_order</name>
        <default><![CDATA[array()]]></default>
        <docblock line="148">
          <description><![CDATA[An array for ordering the fields in the resulting message]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="148" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="160" namespace="global" package="Sutra">
        <name>$one_or_more_rules</name>
        <default><![CDATA[array()]]></default>
        <docblock line="155">
          <description><![CDATA[Rules for at least one field of multiple having a value]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="155" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="167" namespace="global" package="Sutra">
        <name>$only_one_rules</name>
        <default><![CDATA[array()]]></default>
        <docblock line="162">
          <description><![CDATA[Rules for exactly one field of multiple having a value]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="162" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="174" namespace="global" package="Sutra">
        <name>$regex_replacements</name>
        <default><![CDATA[array()]]></default>
        <docblock line="169">
          <description><![CDATA[Regular expression replacements for the validation messages]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="169" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="181" namespace="global" package="Sutra">
        <name>$regex_rules</name>
        <default><![CDATA[array()]]></default>
        <docblock line="176">
          <description><![CDATA[Rules to validate fields via regular expressions]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="176" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="188" namespace="global" package="Sutra">
        <name>$required_fields</name>
        <default><![CDATA[array()]]></default>
        <docblock line="183">
          <description><![CDATA[The fields to be required]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="183" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="195" namespace="global" package="Sutra">
        <name>$string_replacements</name>
        <default><![CDATA[array()]]></default>
        <docblock line="190">
          <description><![CDATA[String replacements for the validation messages]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="190" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="202" namespace="global" package="Sutra">
        <name>$valid_values_rules</name>
        <default><![CDATA[array()]]></default>
        <docblock line="197">
          <description><![CDATA[Rules for validating a field against a set of valid values]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="197" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="209" namespace="global" package="Sutra">
        <name>$csrf_url</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="204">
          <description><![CDATA[CSRF token URL]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="204" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="216" namespace="global" package="Sutra">
        <name>$csrf_field</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="211">
          <description><![CDATA[CSRF token field name]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="211" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="40" package="Flourish">
        <name>compose</name>
        <full_name>compose</full_name>
        <docblock line="32">
          <description><![CDATA[Composes text using fText if loaded]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="32" name="param" description="The message to compose" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="32" name="param" description="A string or number to insert into the message" type="mixed" variable="$component">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="32" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="32" name="return" description="The composed and possible translated message" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="40">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="61" package="Flourish">
        <name>hasValue</name>
        <full_name>hasValue</full_name>
        <docblock line="55">
          <description><![CDATA[Check if a field has a value]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="55" name="param" description="The key to check for a value" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="55" name="return" description="If the key has a value" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="61">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="85" package="Flourish">
        <name>sortMessageMatches</name>
        <full_name>sortMessageMatches</full_name>
        <docblock line="78">
          <description><![CDATA[Compares the message matching strings by longest first so that the longest matches are made first]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="78" name="param" description="The first string to compare" type="string" variable="$a">
            <type by_reference="false">string</type>
          </tag>
          <tag line="78" name="param" description="The second string to compare" type="string" variable="$b">
            <type by_reference="false">string</type>
          </tag>
          <tag line="78" name="return" description="`-1` if `$a` is longer than `$b`, `0` if they are equal length, `1` if `$a` is shorter than `$b`" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="85">
          <name>$a</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="85">
          <name>$b</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="103" package="Flourish">
        <name>stringlike</name>
        <full_name>stringlike</full_name>
        <docblock line="97">
          <description><![CDATA[Returns `TRUE` for non-empty strings, numbers, objects, empty numbers and string-like numbers (such as `0`, `0.0`, `'0'`)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="97" name="param" description="The value to check" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="97" name="return" description="If the value is string-like" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="103">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="227" package="Flourish">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="219">
          <description><![CDATA[All requests that hit this method should be requests for callbacks]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="219" name="internal" description=""/>
          <tag line="219" name="param" description="The method to create a callback for" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="219" name="return" description="The callback for the method requested" type="callback">
            <type by_reference="false">callback</type>
          </tag>
        </docblock>
        <argument line="227">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="241" package="Flourish">
        <name>addBooleanFields</name>
        <full_name>addBooleanFields</full_name>
        <docblock line="233">
          <description><![CDATA[Adds fields to be checked for 1/0, t/f, true/false, yes/no]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="233" name="param" description="A field that should contain a boolean value" type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="233" name="param" description="..." type="string" variable="">
            <type by_reference="false">string</type>
          </tag>
          <tag line="233" name="param" description="|$fields Any number of fields that should contain a boolean value" type="array" variable="">
            <type by_reference="false">array</type>
          </tag>
          <tag line="233" name="return" description="The validation object, to allow for method chaining" type="\fValidation">
            <type by_reference="false">\fValidation</type>
          </tag>
        </docblock>
        <argument line="241">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="264" package="Flourish">
        <name>addCallbackRule</name>
        <full_name>addCallbackRule</full_name>
        <docblock line="256">
          <description><![CDATA[Adds a callback validation of a field, with a custom error message]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="256" name="param" description="The field to test with the callback" type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="256" name="param" description="The callback to test the value with - this callback should accept a single string parameter and return a boolean" type="callback" variable="$callback">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="256" name="param" description="The error message to return if the regular expression does not match the value" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="256" name="return" description="The validation object, to allow for method chaining" type="\fValidation">
            <type by_reference="false">\fValidation</type>
          </tag>
        </docblock>
        <argument line="264">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="264">
          <name>$callback</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="264">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="286" package="Flourish">
        <name>addConditionalRule</name>
        <full_name>addConditionalRule</full_name>
        <docblock line="278">
          <description><![CDATA[Adds fields to be conditionally required if another field has any value, or specific values]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="278" name="param" description="The fields(s) to check for a value" type="string|array" variable="$main_fields">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="278" name="param" description="If `NULL`, any value in the main field(s) will trigger the conditional field(s), otherwise the value must match this scalar value or be present in the array of values" type="mixed" variable="$conditional_values">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="278" name="param" description="The field(s) that are to be required" type="string|array" variable="$conditional_fields">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="278" name="return" description="The validation object, to allow for method chaining" type="\fValidation">
            <type by_reference="false">\fValidation</type>
          </tag>
        </docblock>
        <argument line="286">
          <name>$main_fields</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="286">
          <name>$conditional_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="286">
          <name>$conditional_fields</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="314" package="Flourish">
        <name>addDateFields</name>
        <full_name>addDateFields</full_name>
        <docblock line="304">
          <description><![CDATA[Adds form fields to the list of fields to be blank or a valid date]]></description>
          <long-description><![CDATA[<p>Use ::addRequiredFields() disallow blank values.</p>]]></long-description>
          <tag line="304" name="param" description="A field that should contain a valid date" type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="304" name="param" description="..." type="string" variable="">
            <type by_reference="false">string</type>
          </tag>
          <tag line="304" name="param" description="|$fields Any number of fields that should contain a valid date" type="array" variable="">
            <type by_reference="false">array</type>
          </tag>
          <tag line="304" name="return" description="The validation object, to allow for method chaining" type="\fValidation">
            <type by_reference="false">\fValidation</type>
          </tag>
        </docblock>
        <argument line="314">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="337" package="Flourish">
        <name>addEmailFields</name>
        <full_name>addEmailFields</full_name>
        <docblock line="327">
          <description><![CDATA[Adds form fields to the list of fields to be blank or a valid email address]]></description>
          <long-description><![CDATA[<p>Use ::addRequiredFields() disallow blank values.</p>]]></long-description>
          <tag line="327" name="param" description="A field that should contain a valid email address" type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="327" name="param" description="..." type="string" variable="">
            <type by_reference="false">string</type>
          </tag>
          <tag line="327" name="param" description="|$fields Any number of fields that should contain a valid email address" type="array" variable="">
            <type by_reference="false">array</type>
          </tag>
          <tag line="327" name="return" description="The validation object, to allow for method chaining" type="\fValidation">
            <type by_reference="false">\fValidation</type>
          </tag>
        </docblock>
        <argument line="337">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="359" package="Flourish">
        <name>setCSRFTokenField</name>
        <full_name>setCSRFTokenField</full_name>
        <docblock line="352">
          <description><![CDATA[Set the CSRF token field to validate.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="352" name="param" description="A field that should contain a CSRF token string" type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="352" name="param" description="URL to validate with" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="352" name="return" description="The validation object, to allow for method chaining" type="\fValidation">
            <type by_reference="false">\fValidation</type>
          </tag>
        </docblock>
        <argument line="359">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="359">
          <name>$url</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="381" package="Flourish">
        <name>addEmailHeaderFields</name>
        <full_name>addEmailHeaderFields</full_name>
        <docblock line="370">
          <description><![CDATA[Adds form fields to be checked for email injection]]></description>
          <long-description><![CDATA[<p>Every field that is included in email headers should be passed to this
method.</p>]]></long-description>
          <tag line="370" name="param" description="A field to be checked for email injection" type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="370" name="param" description="..." type="string" variable="">
            <type by_reference="false">string</type>
          </tag>
          <tag line="370" name="param" description="|$fields Any number of fields to be checked for email injection" type="array" variable="">
            <type by_reference="false">array</type>
          </tag>
          <tag line="370" name="return" description="The validation object, to allow for method chaining" type="\fValidation">
            <type by_reference="false">\fValidation</type>
          </tag>
        </docblock>
        <argument line="381">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="406" package="Flourish">
        <name>addFileUploadRule</name>
        <full_name>addFileUploadRule</full_name>
        <docblock line="396">
          <description><![CDATA[Add a file upload field to be validated using an fUpload object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="396" name="param" description="The field to validate" type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="396" name="param" description="The index for array file upload fields" type="mixed" variable="$index">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="396" name="param" description="The uploader to validate the field with" type="\fUpload" variable="$uploader">
            <type by_reference="false">\fUpload</type>
          </tag>
          <tag line="396" name="param" description=":$field" type="string" variable="">
            <type by_reference="false">string</type>
          </tag>
          <tag line="396" name="param" description=":$uploader" type="\fUpload" variable="">
            <type by_reference="false">\fUpload</type>
          </tag>
          <tag line="396" name="return" description="The validation object, to allow for method chaining" type="\fValidation">
            <type by_reference="false">\fValidation</type>
          </tag>
        </docblock>
        <argument line="406">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="406">
          <name>$index</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="406">
          <name>$uploader</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="431" package="Flourish">
        <name>addFloatFields</name>
        <full_name>addFloatFields</full_name>
        <docblock line="423">
          <description><![CDATA[Adds fields to be checked for float values]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="423" name="param" description="A field that should contain a float value" type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="423" name="param" description="..." type="string" variable="">
            <type by_reference="false">string</type>
          </tag>
          <tag line="423" name="param" description="|$fields Any number of fields that should contain a float value" type="array" variable="">
            <type by_reference="false">array</type>
          </tag>
          <tag line="423" name="return" description="The validation object, to allow for method chaining" type="\fValidation">
            <type by_reference="false">\fValidation</type>
          </tag>
        </docblock>
        <argument line="431">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="454" package="Flourish">
        <name>addIntegerFields</name>
        <full_name>addIntegerFields</full_name>
        <docblock line="446">
          <description><![CDATA[Adds fields to be checked for integer values]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="446" name="param" description="A field that should contain an integer value" type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="446" name="param" description="..." type="string" variable="">
            <type by_reference="false">string</type>
          </tag>
          <tag line="446" name="param" description="|$fields Any number of fields that should contain an integer value" type="array" variable="">
            <type by_reference="false">array</type>
          </tag>
          <tag line="446" name="return" description="The validation object, to allow for method chaining" type="\fValidation">
            <type by_reference="false">\fValidation</type>
          </tag>
        </docblock>
        <argument line="454">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="477" package="Flourish">
        <name>addOneOrMoreRule</name>
        <full_name>addOneOrMoreRule</full_name>
        <docblock line="469">
          <description><![CDATA[Adds a rule to make sure at least one field of multiple has a value]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="469" name="param" description="One of the fields to check for a value" type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="469" name="param" description="Another field to check for a value" type="string" variable="$field_2">
            <type by_reference="false">string</type>
          </tag>
          <tag line="469" name="param" description="..." type="string" variable="">
            <type by_reference="false">string</type>
          </tag>
          <tag line="469" name="return" description="The validation object, to allow for method chaining" type="\fValidation">
            <type by_reference="false">\fValidation</type>
          </tag>
        </docblock>
        <argument line="477">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="477">
          <name>$field_2</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="494" package="Flourish">
        <name>addOnlyOneRule</name>
        <full_name>addOnlyOneRule</full_name>
        <docblock line="486">
          <description><![CDATA[Adds a rule to make sure at exactly one field of multiple has a value]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="486" name="param" description="One of the fields to check for a value" type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="486" name="param" description="Another field to check for a value" type="string" variable="$field_2">
            <type by_reference="false">string</type>
          </tag>
          <tag line="486" name="param" description="..." type="string" variable="">
            <type by_reference="false">string</type>
          </tag>
          <tag line="486" name="return" description="The validation object, to allow for method chaining" type="\fValidation">
            <type by_reference="false">\fValidation</type>
          </tag>
        </docblock>
        <argument line="494">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="494">
          <name>$field_2</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="516" package="Flourish">
        <name>addRegexReplacement</name>
        <full_name>addRegexReplacement</full_name>
        <docblock line="503">
          <description><![CDATA[Adds a call to [http://php.net/preg_replace `preg_replace()`] for each message]]></description>
          <long-description><![CDATA[<p>Replacement is done right before the messages are reordered and returned.</p>

<p>If a message is an empty string after replacement, it will be
removed from the list of messages.</p>]]></long-description>
          <tag line="503" name="param" description="The PCRE regex to search for - see http://php.net/pcre for details" type="string" variable="$search">
            <type by_reference="false">string</type>
          </tag>
          <tag line="503" name="param" description="The string to replace with - all $ and \ are used in back references and must be escaped with a \ when meant literally" type="string" variable="$replace">
            <type by_reference="false">string</type>
          </tag>
          <tag line="503" name="param" description=":$replacements An associative array with keys being regular expressions to search for and values being the string to replace with" type="array" variable="">
            <type by_reference="false">array</type>
          </tag>
          <tag line="503" name="return" description="The validation object, to allow for method chaining" type="\fValidation">
            <type by_reference="false">\fValidation</type>
          </tag>
        </docblock>
        <argument line="516">
          <name>$search</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="516">
          <name>$replace</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="536" package="Flourish">
        <name>addRegexRule</name>
        <full_name>addRegexRule</full_name>
        <docblock line="528">
          <description><![CDATA[Adds regular expression validation of a field, with a custom error message]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="528" name="param" description="The field to test with the regular expression" type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="528" name="param" description="The PCRE regex to search for - see http://php.net/pcre for details" type="string" variable="$regex">
            <type by_reference="false">string</type>
          </tag>
          <tag line="528" name="param" description="The error message to return if the regular expression does not match the value" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="528" name="return" description="The validation object, to allow for method chaining" type="\fValidation">
            <type by_reference="false">\fValidation</type>
          </tag>
        </docblock>
        <argument line="536">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="536">
          <name>$regex</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="536">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="558" package="Flourish">
        <name>addRequiredFields</name>
        <full_name>addRequiredFields</full_name>
        <docblock line="550">
          <description><![CDATA[Adds form fields to be required]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="550" name="param" description="A field to require a value for" type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="550" name="param" description="..." type="string" variable="">
            <type by_reference="false">string</type>
          </tag>
          <tag line="550" name="param" description="|$fields Any number of fields to require a value for" type="array" variable="">
            <type by_reference="false">array</type>
          </tag>
          <tag line="550" name="return" description="The validation object, to allow for method chaining" type="\fValidation">
            <type by_reference="false">\fValidation</type>
          </tag>
        </docblock>
        <argument line="558">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="584" package="Flourish">
        <name>addStringReplacement</name>
        <full_name>addStringReplacement</full_name>
        <docblock line="571">
          <description><![CDATA[Adds a call to [http://php.net/str_replace `str_replace()`] for each message]]></description>
          <long-description><![CDATA[<p>Replacement is done right before the messages are reordered and returned.</p>

<p>If a message is an empty string after replacement, it will be
removed from the list of messages.</p>]]></long-description>
          <tag line="571" name="param" description="The string to search for" type="string" variable="$search">
            <type by_reference="false">string</type>
          </tag>
          <tag line="571" name="param" description="The string to replace with" type="string" variable="$replace">
            <type by_reference="false">string</type>
          </tag>
          <tag line="571" name="param" description=":$replacements An associative array with keys being strings to search for and values being the string to replace with" type="array" variable="">
            <type by_reference="false">array</type>
          </tag>
          <tag line="571" name="return" description="The validation object, to allow for method chaining" type="\fValidation">
            <type by_reference="false">\fValidation</type>
          </tag>
        </docblock>
        <argument line="584">
          <name>$search</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="584">
          <name>$replace</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="602" package="Flourish">
        <name>addURLFields</name>
        <full_name>addURLFields</full_name>
        <docblock line="592">
          <description><![CDATA[Adds form fields to the list of fields to be blank or a valid URL]]></description>
          <long-description><![CDATA[<p>Use ::addRequiredFields() disallow blank values.</p>]]></long-description>
          <tag line="592" name="param" description="A field that should contain a valid URL" type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="592" name="param" description="..." type="string" variable="">
            <type by_reference="false">string</type>
          </tag>
          <tag line="592" name="param" description="|$fields Any number of fields that should contain a valid URL" type="array" variable="">
            <type by_reference="false">array</type>
          </tag>
          <tag line="592" name="return" description="The validation object, to allow for method chaining" type="\fValidation">
            <type by_reference="false">\fValidation</type>
          </tag>
        </docblock>
        <argument line="602">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="632" package="Flourish">
        <name>addValidValuesRule</name>
        <full_name>addValidValuesRule</full_name>
        <docblock line="622">
          <description><![CDATA[Adds a rule to make sure a field has one of the specified valid values]]></description>
          <long-description><![CDATA[<p>A strict comparison will be made from the string request value to the
array of valid values.</p>]]></long-description>
          <tag line="622" name="param" description="The field to check the value of" type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="622" name="param" description="The valid values" type="array" variable="$valid_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="622" name="return" description="The validation object, to allow for method chaining" type="\fValidation">
            <type by_reference="false">\fValidation</type>
          </tag>
        </docblock>
        <argument line="632">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="632">
          <name>$valid_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="646" package="Flourish">
        <name>castToStrings</name>
        <full_name>castToStrings</full_name>
        <docblock line="640">
          <description><![CDATA[Converts an array of values to string, recursively]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="640" name="param" description="An array of values to cast to strings" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="640" name="return" description="The values, casted to strings, but preserving multi-dimensional arrays" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="646">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="674" package="Flourish">
        <name>checkCallbackRules</name>
        <full_name>checkCallbackRules</full_name>
        <docblock line="668">
          <description><![CDATA[Runs all callback validation rules]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="668" name="param" description="&amp;$messages The messages to display to the user" type="array" variable="$messages">
            <type by_reference="false">array</type>
          </tag>
          <tag line="668" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="674">
          <name>$messages</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="696" package="Flourish">
        <name>checkConditionalRules</name>
        <full_name>checkConditionalRules</full_name>
        <docblock line="690">
          <description><![CDATA[Checks the conditional validation rules]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="690" name="param" description="&amp;$messages The messages to display to the user" type="array" variable="$messages">
            <type by_reference="false">array</type>
          </tag>
          <tag line="690" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="696">
          <name>$messages</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="731" package="Flourish">
        <name>checkDateFields</name>
        <full_name>checkDateFields</full_name>
        <docblock line="725">
          <description><![CDATA[Validates the date fields, requiring that any date fields that have a value that can be interpreted as a date]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="725" name="param" description="&amp;$messages The messages to display to the user" type="array" variable="$messages">
            <type by_reference="false">array</type>
          </tag>
          <tag line="725" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="731">
          <name>$messages</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="755" package="Flourish">
        <name>checkCSRFField</name>
        <full_name>checkCSRFField</full_name>
        <docblock line="749">
          <description><![CDATA[Validates the CSRF field]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="749" name="param" description="&amp;$messages The messages to display to the user" type="array" variable="$messages">
            <type by_reference="false">array</type>
          </tag>
          <tag line="749" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="755">
          <name>$messages</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="777" package="Flourish">
        <name>checkFileUploadRules</name>
        <full_name>checkFileUploadRules</full_name>
        <docblock line="771">
          <description><![CDATA[Checks the file upload validation rules]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="771" name="param" description="&amp;$messages The messages to display to the user" type="array" variable="$messages">
            <type by_reference="false">array</type>
          </tag>
          <tag line="771" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="777">
          <name>$messages</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="798" package="Flourish">
        <name>checkOneOrMoreRules</name>
        <full_name>checkOneOrMoreRules</full_name>
        <docblock line="792">
          <description><![CDATA[Ensures all of the one-or-more rules is met]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="792" name="param" description="&amp;$messages The messages to display to the user" type="array" variable="$messages">
            <type by_reference="false">array</type>
          </tag>
          <tag line="792" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="798">
          <name>$messages</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="824" package="Flourish">
        <name>checkOnlyOneRules</name>
        <full_name>checkOnlyOneRules</full_name>
        <docblock line="818">
          <description><![CDATA[Ensures all of the only-one rules is met]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="818" name="param" description="&amp;$messages The messages to display to the user" type="array" variable="$messages">
            <type by_reference="false">array</type>
          </tag>
          <tag line="818" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="824">
          <name>$messages</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="856" package="Flourish">
        <name>checkRegexRules</name>
        <full_name>checkRegexRules</full_name>
        <docblock line="850">
          <description><![CDATA[Runs all regex validation rules]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="850" name="param" description="&amp;$messages The messages to display to the user" type="array" variable="$messages">
            <type by_reference="false">array</type>
          </tag>
          <tag line="850" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="856">
          <name>$messages</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="878" package="Flourish">
        <name>checkRequiredFields</name>
        <full_name>checkRequiredFields</full_name>
        <docblock line="872">
          <description><![CDATA[Validates the required fields, adding any missing fields to the messages array]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="872" name="param" description="&amp;$messages The messages to display to the user" type="array" variable="$messages">
            <type by_reference="false">array</type>
          </tag>
          <tag line="872" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="878">
          <name>$messages</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="897" package="Flourish">
        <name>checkValidValuesRules</name>
        <full_name>checkValidValuesRules</full_name>
        <docblock line="891">
          <description><![CDATA[Runs all valid-values rules]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="891" name="param" description="&amp;$messages The messages to display to the user" type="array" variable="$messages">
            <type by_reference="false">array</type>
          </tag>
          <tag line="891" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="897">
          <name>$messages</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="919" package="Flourish">
        <name>joinRecursive</name>
        <full_name>joinRecursive</full_name>
        <docblock line="912">
          <description><![CDATA[Joins a multi-dimensional array recursively]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="912" name="param" description="The string to join the array elements with" type="string" variable="$glue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="912" name="param" description="The array of values to join together" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="912" name="return" description="The joined array" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="919">
          <name>$glue</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="919">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="939" package="Flourish">
        <name>makeFieldName</name>
        <full_name>makeFieldName</full_name>
        <docblock line="933">
          <description><![CDATA[Creates the name for a field taking into account custom field names]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="933" name="param" description="The field to get the name for" type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="933" name="return" description="The field name" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="939">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="973" package="Flourish">
        <name>reorderMessages</name>
        <full_name>reorderMessages</full_name>
        <docblock line="967">
          <description><![CDATA[Reorders an array of messages based on the requested order]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="967" name="param" description="An array of the messages" type="array" variable="$messages">
            <type by_reference="false">array</type>
          </tag>
          <tag line="967" name="return" description="The reordered messages" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="973">
          <name>$messages</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1013" package="Flourish">
        <name>overrideFieldName</name>
        <full_name>overrideFieldName</full_name>
        <docblock line="1001">
          <description><![CDATA[Allows overriding the default name used for a field in the error message]]></description>
          <long-description><![CDATA[<p>By default, all fields are referred to by the field name run through
fGrammar::humanize(). This may not be correct for acronyms or complex
field names.</p>]]></long-description>
          <tag line="1001" name="param" description="The field to set the custom name for" type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1001" name="param" description="The custom name for the field" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1001" name="param" description=":$field_names An associative array of custom field names where the keys are the field and the values are the names" type="array" variable="">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1001" name="return" description="The validation object, to allow for method chaining" type="\fValidation">
            <type by_reference="false">\fValidation</type>
          </tag>
        </docblock>
        <argument line="1013">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1013">
          <name>$name</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1036" package="Flourish">
        <name>setMessageOrder</name>
        <full_name>setMessageOrder</full_name>
        <docblock line="1025">
          <description><![CDATA[Allows setting the order that the individual errors in a message will be displayed]]></description>
          <long-description><![CDATA[<p>All string comparisons during the reordering process are done in a
case-insensitive manner.</p>]]></long-description>
          <tag line="1025" name="param" description="The string match to order first" type="string" variable="$match">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1025" name="param" description="The string match to order second" type="string" variable="$match_2">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1025" name="param" description="..." type="string" variable="">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1025" name="return" description="The validation object, to allow for method chaining" type="\fValidation">
            <type by_reference="false">\fValidation</type>
          </tag>
        </docblock>
        <argument line="1036">
          <name>$match</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1036">
          <name>$match_2</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1059" package="Flourish">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="1050">
          <description><![CDATA[Checks for required fields, email field formatting and email header injection using values previously set]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1050" name="throws" description="When one of the options set for the object is violated" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="1050" name="param" description="If an array of validation messages should be returned instead of an exception being thrown" type="boolean" variable="$return_messages">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1050" name="param" description="If field names should be removed from the returned messages, leaving just the message itself" type="boolean" variable="$remove_field_names">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1050" name="return" description="If $return_messages is TRUE, an array of validation messages will be returned" type="void|array">
            <type by_reference="false">void</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1059">
          <name>$return_messages</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
        <argument line="1059">
          <name>$remove_field_names</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fValidation.php</error>
      <notice line="32" code="50013">Parameter $component could not be found in compose()</notice>
      <notice line="32" code="50013">Parameter  could not be found in compose()</notice>
      <notice line="233" code="50013">Parameter  could not be found in addBooleanFields()</notice>
      <notice line="233" code="50013">Parameter  could not be found in addBooleanFields()</notice>
      <notice line="304" code="50013">Parameter  could not be found in addDateFields()</notice>
      <notice line="304" code="50013">Parameter  could not be found in addDateFields()</notice>
      <notice line="327" code="50013">Parameter  could not be found in addEmailFields()</notice>
      <notice line="327" code="50013">Parameter  could not be found in addEmailFields()</notice>
      <notice line="370" code="50013">Parameter  could not be found in addEmailHeaderFields()</notice>
      <notice line="370" code="50013">Parameter  could not be found in addEmailHeaderFields()</notice>
      <notice line="396" code="50013">Parameter  could not be found in addFileUploadRule()</notice>
      <notice line="396" code="50013">Parameter  could not be found in addFileUploadRule()</notice>
      <notice line="423" code="50013">Parameter  could not be found in addFloatFields()</notice>
      <notice line="423" code="50013">Parameter  could not be found in addFloatFields()</notice>
      <notice line="446" code="50013">Parameter  could not be found in addIntegerFields()</notice>
      <notice line="446" code="50013">Parameter  could not be found in addIntegerFields()</notice>
      <notice line="469" code="50013">Parameter  could not be found in addOneOrMoreRule()</notice>
      <notice line="486" code="50013">Parameter  could not be found in addOnlyOneRule()</notice>
      <notice line="503" code="50013">Parameter  could not be found in addRegexReplacement()</notice>
      <notice line="550" code="50013">Parameter  could not be found in addRequiredFields()</notice>
      <notice line="550" code="50013">Parameter  could not be found in addRequiredFields()</notice>
      <notice line="571" code="50013">Parameter  could not be found in addStringReplacement()</notice>
      <notice line="592" code="50013">Parameter  could not be found in addURLFields()</notice>
      <notice line="592" code="50013">Parameter  could not be found in addURLFields()</notice>
      <notice line="1001" code="50013">Parameter  could not be found in overrideFieldName()</notice>
      <notice line="1025" code="50013">Parameter  could not be found in setMessageOrder()</notice>
    </parse_markers>
  </file>
  <file path="php/flourish/fPagination.php" hash="33ecf67a81323012a7c0b5e0810edd0a" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="16" package="Flourish">
      <extends/>
      <name>fPagination</name>
      <full_name>\fPagination</full_name>
      <docblock line="2">
        <description><![CDATA[Prints pagination links for fRecordSet or other paginated records]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2010-2012 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fPagination" link="http://flourishlib.com/fPagination"/>
        <tag line="2" name="version" description="1.0.0b2"/>
        <tag line="2" name="changes" description="1.0.0b2   Improved the determination of what pages to show with `with_first_last` templates [wb, 2012-09-16]"/>
        <tag line="2" name="changes" description="1.0.0b    Added the `prev_disabled` and `next_disabled` pieces [wb, 2011-09-06]"/>
      </docblock>
      <constant namespace="global" line="19" package="Flourish">
        <name>defineTemplate</name>
        <full_name>defineTemplate</full_name>
        <value><![CDATA['fPagination::defineTemplate']]></value>
      </constant>
      <constant namespace="global" line="20" package="Flourish">
        <name>extend</name>
        <full_name>extend</full_name>
        <value><![CDATA['fPagination::extend']]></value>
      </constant>
      <constant namespace="global" line="21" package="Flourish">
        <name>printRecordSetInfo</name>
        <full_name>printRecordSetInfo</full_name>
        <value><![CDATA['fPagination::printRecordSetInfo']]></value>
      </constant>
      <constant namespace="global" line="22" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <value><![CDATA['fPagination::reset']]></value>
      </constant>
      <constant namespace="global" line="23" package="Flourish">
        <name>showRecordSetLinks</name>
        <full_name>showRecordSetLinks</full_name>
        <value><![CDATA['fPagination::showRecordSetLinks']]></value>
      </constant>
      <property final="false" static="true" visibility="private" line="31" namespace="global" package="Sutra">
        <name>$filters</name>
        <default><![CDATA[array('inflect', 'lower', 'url_encode', 'humanize')]]></default>
        <docblock line="26">
          <description><![CDATA[The available filters to use in templates]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="43" namespace="global" package="Sutra">
        <name>$templates</name>
        <default><![CDATA[array('default' => array('type' => 'without_first_last', 'size' => 4, 'pieces' => array('info' => '<div class="paginator_info">Page {{ page }} of {{ total_records }} items</div>', 'start' => '<div class="paginator_list"><ul>', 'prev' => '<li class="prev"><a href="{{ url }}">Prev</a></li>', 'prev_disabled' => '', 'page' => '<li class="page {{ first }} {{ last }} {{ current }}"><a href="{{ url }}">{{ page }}</a></li>', 'next' => '<li class="next"><a href="{{ url }}">Next</a></li>', 'next_disabled' => '', 'end' => '</ul></div>')))]]></default>
        <docblock line="38">
          <description><![CDATA[The available templates to use for a paginator]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="38" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="571" namespace="global" package="Sutra">
        <name>$data</name>
        <default><![CDATA[]]></default>
        <docblock line="566">
          <description><![CDATA[Extra data for the templates]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="566" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="578" namespace="global" package="Sutra">
        <name>$page</name>
        <default><![CDATA[]]></default>
        <docblock line="573">
          <description><![CDATA[The page number]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="573" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="585" namespace="global" package="Sutra">
        <name>$per_page</name>
        <default><![CDATA[]]></default>
        <docblock line="580">
          <description><![CDATA[The number of records per page]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="580" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="592" namespace="global" package="Sutra">
        <name>$total_records</name>
        <default><![CDATA[]]></default>
        <docblock line="587">
          <description><![CDATA[The total number of records]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="587" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="125" package="Flourish">
        <name>defineTemplate</name>
        <full_name>defineTemplate</full_name>
        <docblock line="61">
          <description><![CDATA[Defines a new template to use with the paginator]]></description>
          <long-description><![CDATA[<p>The <code>$pieces</code> array must contain the following array keys:</p>

<ul>
<li><code>info</code>:          the template to use when calling the <code>printInfo()</code> method</li>
<li><code>start</code>:         the template to start the page list with</li>
<li><code>prev</code>:          the template for the previous link</li>
<li><code>prev_disabled</code>: the template for the previous link, when disabled</li>
<li><code>page</code>:          the template for a single page link</li>
<li><code>separator</code>:     the template for the separator to use when the type is <code>with_first_last</code></li>
<li><code>next</code>:          the template for the next link</li>
<li><code>next_disabled</code>: the template for the next link, when disabled</li>
<li><code>end</code>:           the template to end the page list with</li>
</ul>

<p>There are various pre-defined variables available for use in the template
pieces. These variables are printed by using the syntax <code>{{ variable }}</code>.</p>

<p>The <code>info</code>, <code>start</code> and <code>end</code> pieces may use the following variables:</p>

<ul>
<li><code>page</code>:          the page of records being shown</li>
<li><code>total_pages</code>:   the total number of pages of records</li>
<li><code>first_record</code>:  the record number of the first record being shown</li>
<li><code>last_record</code>:   the record number of the last record being shown</li>
<li><code>total_records</code>: the total number of records being paginated</li>
</ul>

<p>The <code>prev</code> and <code>next</code> pieces may use the following variables:</p>

<ul>
<li><code>page</code>: the page number of the page of results being linked to</li>
<li><code>url</code>:  the URL of the page being linked to</li>
</ul>

<p>The <code>page</code> piece may use the following variables:</p>

<ul>
<li><code>page</code>:    the page number of the page being linked to</li>
<li><code>url</code>:     the URL of the page being linked to</li>
<li><code>first</code>:   the string "first" if the link is to the first page</li>
<li><code>last</code>:    the string "last" if the link is to the last page</li>
<li><code>current</code>: the string "current" if the link is to the current page</li>
</ul>

<p>The <code>separator</code> piece does not have access to any pre-defined variables.</p>

<p>In addition to the pre-defined variables, it is possible to add any other
variables to be used in any of the pieces by calling the instance method
::set().</p>

<p>It is possible to use variable filters on a variable to modify it. The
most common variable to filter would be <code>name</code>. To filter a variable,
add a <code>|</code> and the filter name after the variable name, in the form
<code>{{ variable|filter }}</code>. The following filters are available:</p>

<ul>
<li><code>inflect</code>:    if the total number of records is not 1, pluralize the variable - this only works for nouns</li>
<li><code>lower</code>:      converts the contents of the variable to lower case</li>
<li><code>url_encode</code>: encode the value for inclusion in a URL</li>
<li><code>humanize</code>:   converts a <code>underscore_notation</code> or <code>CamelCase</code> string to a string with spaces between words and in <code>Title Caps</code></li>
</ul>

<p>Filters can be combined, in which case they are list one after the other
in the form <code>{{ variable|filter_1|filter_2 }}</code>.</p>]]></long-description>
          <tag line="61" name="param" description="The name of the template" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="61" name="param" description="The type of pagination: `without_first_last` or `with_first_last` - `with_first_last` always includes links to the first and last pages" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="61" name="param" description="The number of pages to show on either side of the current page" type="integer" variable="$size">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="61" name="param" description="The chunks of HTML to create the paginator from - see method description for details" type="array" variable="$pieces">
            <type by_reference="false">array</type>
          </tag>
          <tag line="61" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="125">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="125">
          <name>$type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="125">
          <name>$size</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="125">
          <name>$pieces</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="187" package="Flourish">
        <name>extend</name>
        <full_name>extend</full_name>
        <docblock line="182">
          <description><![CDATA[Adds the methods `printInfo()` and `showLinks()` to fRecordSet]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="182" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="201" package="Flourish">
        <name>extendRecordSetInfo</name>
        <full_name>extendRecordSetInfo</full_name>
        <docblock line="194">
          <description><![CDATA[Overlays user data over info from the record set]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="194" name="param" description="The user data" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="194" name="param" description="The class or classes present in the record set" type="string|array" variable="$class">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="194" name="return" description="The merged data" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="201">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="201">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="230" package="Flourish">
        <name>printRecordSetInfo</name>
        <full_name>printRecordSetInfo</full_name>
        <docblock line="218">
          <description><![CDATA[Handles the `printInfo()` method for fRecordSet]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="218" name="internal" description=""/>
          <tag line="218" name="param" description="The record set" type="\fRecordSet" variable="$object">
            <type by_reference="false">\fRecordSet</type>
          </tag>
          <tag line="218" name="param" description="The class(es) contained in the record set" type="string|array" variable="$class">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="218" name="param" description="&amp;$records The records" type="array" variable="$records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="218" name="param" description="The method that was called" type="string" variable="$method_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="218" name="param" description="The parameters passed to the method" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="218" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="230">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="230">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="230">
          <name>$records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="230">
          <name>$method_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="230">
          <name>$parameters</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="249" package="Flourish">
        <name>printTemplatedInfo</name>
        <full_name>printTemplatedInfo</full_name>
        <docblock line="239">
          <description><![CDATA[Prints the info for the displayed records]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="239" name="param" description="The template to use" type="string" variable="$template">
            <type by_reference="false">string</type>
          </tag>
          <tag line="239" name="param" description="The extra data to make available to the template" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="239" name="param" description="The page of records being displayed" type="integer" variable="$page">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="239" name="param" description="The number of records being displayed on each page" type="integer" variable="$per_page">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="239" name="param" description="The total number of records" type="integer" variable="$total_records">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="239" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="249">
          <name>$template</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="249">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="249">
          <name>$page</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="249">
          <name>$per_page</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="249">
          <name>$total_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="277" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="270">
          <description><![CDATA[Resets the configuration of the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="270" name="internal" description=""/>
          <tag line="270" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="316" package="Flourish">
        <name>showRecordSetLinks</name>
        <full_name>showRecordSetLinks</full_name>
        <docblock line="304">
          <description><![CDATA[Handles the `showLinks()` method for fRecordSet]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="304" name="internal" description=""/>
          <tag line="304" name="param" description="The record set" type="\fRecordSet" variable="$object">
            <type by_reference="false">\fRecordSet</type>
          </tag>
          <tag line="304" name="param" description="The class(es) contained in the record set" type="string|array" variable="$class">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="304" name="param" description="&amp;$records The records" type="array" variable="$records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="304" name="param" description="The method that was called" type="string" variable="$method_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="304" name="param" description="The parameters passed to the method" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="304" name="return" description="If the links were shown" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="316">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="316">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="316">
          <name>$records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="316">
          <name>$method_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="316">
          <name>$parameters</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="335" package="Flourish">
        <name>showTemplatedLinks</name>
        <full_name>showTemplatedLinks</full_name>
        <docblock line="325">
          <description><![CDATA[Prints the links for a set of records]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="325" name="param" description="The template to use" type="string" variable="$template">
            <type by_reference="false">string</type>
          </tag>
          <tag line="325" name="param" description="The extra data to make available to the template" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="325" name="param" description="The page of records being displayed" type="integer" variable="$page">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="325" name="param" description="The number of records being displayed on each page" type="integer" variable="$per_page">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="325" name="param" description="The total number of records" type="integer" variable="$total_records">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="325" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="335">
          <name>$template</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="335">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="335">
          <name>$page</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="335">
          <name>$per_page</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="335">
          <name>$total_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="522" package="Flourish">
        <name>printPiece</name>
        <full_name>printPiece</full_name>
        <docblock line="514">
          <description><![CDATA[Prints out a piece of a template]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="514" name="param" description="The name of the template to print" type="string" variable="$template">
            <type by_reference="false">string</type>
          </tag>
          <tag line="514" name="param" description="The piece of the template to print" type="string" variable="$piece">
            <type by_reference="false">string</type>
          </tag>
          <tag line="514" name="param" description="The data to replace the variables with" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="514" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="522">
          <name>$template</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="522">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="522">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="607" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="595">
          <description><![CDATA[Accepts the record information necessary for printing pagination]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="595" name="throws" description="When the `$page` is less than 1 or not an integer" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="595" name="throws" description="When there are not records for the specified `$page` and `$page` is greater than 1" type="\fNoRemainingException">
            <type by_reference="false">\fNoRemainingException</type>
          </tag>
          <tag line="595" name="param" description="The total number of records" type="integer" variable="$records">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="595" name="param" description="The number of records per page" type="integer" variable="$per_page">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="595" name="param" description="The page number" type="integer" variable="$page">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="595" name="param" description=":$records The records to create the paginator for" type="\fRecordSet" variable="">
            <type by_reference="false">\fRecordSet</type>
          </tag>
          <tag line="595" name="return" description="" type="\fPaginator">
            <type by_reference="false">\fPaginator</type>
          </tag>
        </docblock>
        <argument line="607">
          <name>$records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="607">
          <name>$per_page</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="607">
          <name>$page</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="658" package="Flourish">
        <name>printInfo</name>
        <full_name>printInfo</full_name>
        <docblock line="652">
          <description><![CDATA[Prints which records are showing on the current page]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="652" name="param" description="The template to use" type="string" variable="$template">
            <type by_reference="false">string</type>
          </tag>
          <tag line="652" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="658">
          <name>$template</name>
          <default><![CDATA['default']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="672" package="Flourish">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="664">
          <description><![CDATA[Sets data to be available to the templates]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="664" name="param" description="The key to set" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="664" name="param" description="The value to set" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="664" name="param" description=":$data An associative array of keys and values" type="array" variable="">
            <type by_reference="false">array</type>
          </tag>
          <tag line="664" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="672">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="672">
          <name>$value</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="688" package="Flourish">
        <name>showLinks</name>
        <full_name>showLinks</full_name>
        <docblock line="682">
          <description><![CDATA[Shows links to other pages when more than one page of records exists]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="682" name="param" description="The template to use" type="string" variable="$template">
            <type by_reference="false">string</type>
          </tag>
          <tag line="682" name="return" description="If link were printed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="688">
          <name>$template</name>
          <default><![CDATA['default']]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fPagination.php</error>
      <error line="514" code="50014">Name of argument $name does not match with the DocBlock's name $piece in printPiece()</error>
      <notice line="514" code="50013">Parameter $piece could not be found in printPiece()</notice>
      <notice line="595" code="50013">Parameter  could not be found in __construct()</notice>
      <notice line="664" code="50013">Parameter  could not be found in set()</notice>
    </parse_markers>
  </file>
  <file path="php/flourish/fTimestamp.php" hash="4ac274056f67136710b122afcec93f43" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="27" package="Flourish">
      <extends/>
      <name>fTimestamp</name>
      <full_name>\fTimestamp</full_name>
      <docblock line="2">
        <description><![CDATA[Represents a date and time as a value object]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2008-2011 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fTimestamp" link="http://flourishlib.com/fTimestamp"/>
        <tag line="2" name="version" description="1.0.0b13"/>
        <tag line="2" name="changes" description="1.0.0b13  Fixed a method signature [wb, 2011-08-24]"/>
        <tag line="2" name="changes" description="1.0.0b12  Fixed a bug with the constructor not properly handling unix timestamps that are negative integers [wb, 2011-06-02]"/>
        <tag line="2" name="changes" description="1.0.0b11  Changed the `$timestamp` and `$timezone` attributes to be protected [wb, 2011-03-20]"/>
        <tag line="2" name="changes" description="1.0.0b10  Fixed a bug in ::__construct() with specifying a timezone other than the default for a relative time string such as &quot;now&quot; or &quot;+2 hours&quot; [wb, 2010-07-05]"/>
        <tag line="2" name="changes" description="1.0.0b9   Added the `$simple` parameter to ::getFuzzyDifference() [wb, 2010-03-15]"/>
        <tag line="2" name="changes" description="1.0.0b8   Fixed a bug with ::fixISOWeek() not properly parsing some ISO week dates [wb, 2009-10-06]"/>
        <tag line="2" name="changes" description="1.0.0b7   Fixed a translation bug with ::getFuzzyDifference() [wb, 2009-07-11]"/>
        <tag line="2" name="changes" description="1.0.0b6   Added ::registerUnformatCallback() and ::callUnformatCallback() to allow for localization of date/time parsing [wb, 2009-06-01]"/>
        <tag line="2" name="changes" description="1.0.0b5   Backwards compatibility break - Removed ::getSecondsDifference() and ::getSeconds(), added ::eq(), ::gt(), ::gte(), ::lt(), ::lte() [wb, 2009-03-05]"/>
        <tag line="2" name="changes" description="1.0.0b4   Updated for new fCore API [wb, 2009-02-16]"/>
        <tag line="2" name="changes" description="1.0.0b3   Removed a useless double check of the strtotime() return value in ::__construct() [wb, 2009-01-21]"/>
        <tag line="2" name="changes" description="1.0.0b2   Added support for CURRENT_TIMESTAMP, CURRENT_DATE and CURRENT_TIME SQL keywords [wb, 2009-01-11]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2008-02-12]"/>
      </docblock>
      <constant namespace="global" line="30" package="Flourish">
        <name>callFormatCallback</name>
        <full_name>callFormatCallback</full_name>
        <value><![CDATA['fTimestamp::callFormatCallback']]></value>
      </constant>
      <constant namespace="global" line="31" package="Flourish">
        <name>callUnformatCallback</name>
        <full_name>callUnformatCallback</full_name>
        <value><![CDATA['fTimestamp::callUnformatCallback']]></value>
      </constant>
      <constant namespace="global" line="32" package="Flourish">
        <name>combine</name>
        <full_name>combine</full_name>
        <value><![CDATA['fTimestamp::combine']]></value>
      </constant>
      <constant namespace="global" line="33" package="Flourish">
        <name>defineFormat</name>
        <full_name>defineFormat</full_name>
        <value><![CDATA['fTimestamp::defineFormat']]></value>
      </constant>
      <constant namespace="global" line="34" package="Flourish">
        <name>fixISOWeek</name>
        <full_name>fixISOWeek</full_name>
        <value><![CDATA['fTimestamp::fixISOWeek']]></value>
      </constant>
      <constant namespace="global" line="35" package="Flourish">
        <name>getDefaultTimezone</name>
        <full_name>getDefaultTimezone</full_name>
        <value><![CDATA['fTimestamp::getDefaultTimezone']]></value>
      </constant>
      <constant namespace="global" line="36" package="Flourish">
        <name>isValidTimezone</name>
        <full_name>isValidTimezone</full_name>
        <value><![CDATA['fTimestamp::isValidTimezone']]></value>
      </constant>
      <constant namespace="global" line="37" package="Flourish">
        <name>registerFormatCallback</name>
        <full_name>registerFormatCallback</full_name>
        <value><![CDATA['fTimestamp::registerFormatCallback']]></value>
      </constant>
      <constant namespace="global" line="38" package="Flourish">
        <name>registerUnformatCallback</name>
        <full_name>registerUnformatCallback</full_name>
        <value><![CDATA['fTimestamp::registerUnformatCallback']]></value>
      </constant>
      <constant namespace="global" line="39" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <value><![CDATA['fTimestamp::reset']]></value>
      </constant>
      <constant namespace="global" line="40" package="Flourish">
        <name>setDefaultTimezone</name>
        <full_name>setDefaultTimezone</full_name>
        <value><![CDATA['fTimestamp::setDefaultTimezone']]></value>
      </constant>
      <constant namespace="global" line="41" package="Flourish">
        <name>translateFormat</name>
        <full_name>translateFormat</full_name>
        <value><![CDATA['fTimestamp::translateFormat']]></value>
      </constant>
      <property final="false" static="true" visibility="private" line="49" namespace="global" package="Sutra">
        <name>$formats</name>
        <default><![CDATA[array()]]></default>
        <docblock line="44">
          <description><![CDATA[Pre-defined formatting styles]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="44" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="56" namespace="global" package="Sutra">
        <name>$format_callback</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="51">
          <description><![CDATA[A callback to process all formatting strings through]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="51" name="var" description="" type="callback">
            <type by_reference="false">callback</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="63" namespace="global" package="Sutra">
        <name>$unformat_callback</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="58">
          <description><![CDATA[A callback to parse all date string to allow for locale-specific parsing]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="58" name="var" description="" type="callback">
            <type by_reference="false">callback</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="743" namespace="global" package="Sutra">
        <name>$timestamp</name>
        <default><![CDATA[]]></default>
        <docblock line="738">
          <description><![CDATA[The date/time]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="738" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="750" namespace="global" package="Sutra">
        <name>$timezone</name>
        <default><![CDATA[]]></default>
        <docblock line="745">
          <description><![CDATA[The timezone for this date/time]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="745" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="74" package="Flourish">
        <name>callFormatCallback</name>
        <full_name>callFormatCallback</full_name>
        <docblock line="66">
          <description><![CDATA[If a format callback is defined, call it]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="66" name="internal" description=""/>
          <tag line="66" name="param" description="The formatted date/time/timestamp string to be (possibly) modified" type="string" variable="$formatted_string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="66" name="return" description="The (possibly) modified formatted string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$formatted_string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="91" package="Flourish">
        <name>callUnformatCallback</name>
        <full_name>callUnformatCallback</full_name>
        <docblock line="83">
          <description><![CDATA[If an unformat callback is defined, call it]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="83" name="internal" description=""/>
          <tag line="83" name="param" description="A raw date/time/timestamp string to be (possibly) parsed/modified" type="string" variable="$date_time_string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="83" name="return" description="The (possibly) parsed or modified date/time/timestamp" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$date_time_string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="105" package="Flourish">
        <name>checkPHPVersion</name>
        <full_name>checkPHPVersion</full_name>
        <docblock line="100">
          <description><![CDATA[Checks to make sure the current version of PHP is high enough to support timezone features]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="100" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="124" package="Flourish">
        <name>compose</name>
        <full_name>compose</full_name>
        <docblock line="116">
          <description><![CDATA[Composes text using fText if loaded]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="116" name="param" description="The message to compose" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="116" name="param" description="A string or number to insert into the message" type="mixed" variable="$component">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="116" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="116" name="return" description="The composed and possible translated message" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="124">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="146" package="Flourish">
        <name>defineFormat</name>
        <full_name>defineFormat</full_name>
        <docblock line="139">
          <description><![CDATA[Creates a reusable format for formatting fDate, fTime, and fTimestamp objects]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="139" name="param" description="The name of the format" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="139" name="param" description="The format string compatible with the [http://php.net/date date()] function" type="string" variable="$formatting_string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="139" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="146">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="146">
          <name>$formatting_string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="160" package="Flourish">
        <name>fixISOWeek</name>
        <full_name>fixISOWeek</full_name>
        <docblock line="152">
          <description><![CDATA[Fixes an ISO week format into `'Y-m-d'` so [http://php.net/strtotime strtotime()] will accept it]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="152" name="internal" description=""/>
          <tag line="152" name="param" description="The date to fix" type="string" variable="$date">
            <type by_reference="false">string</type>
          </tag>
          <tag line="152" name="return" description="The fixed date" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="160">
          <name>$date</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="186" package="Flourish">
        <name>getDefaultTimezone</name>
        <full_name>getDefaultTimezone</full_name>
        <docblock line="181">
          <description><![CDATA[Provides a consistent interface to getting the default timezone.]]></description>
          <long-description><![CDATA[<p>Wraps the [http://php.net/date_default_timezone_get date_default_timezone_get()] function.</p>]]></long-description>
          <tag line="181" name="return" description="The default timezone used for all date/time calculations" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="202" package="Flourish">
        <name>isValidTimezone</name>
        <full_name>isValidTimezone</full_name>
        <docblock line="194">
          <description><![CDATA[Checks to see if a timezone is valid]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="194" name="internal" description=""/>
          <tag line="194" name="param" description="The timezone to check" type="string" variable="$timezone">
            <type by_reference="false">string</type>
          </tag>
          <tag line="194" name="return" description="If the timezone is valid" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="202">
          <name>$timezone</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="663" package="Flourish">
        <name>registerFormatCallback</name>
        <full_name>registerFormatCallback</full_name>
        <docblock line="657">
          <description><![CDATA[Allows setting a callback to translate or modify any return values from ::format(), fDate::format() and fTime::format()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="657" name="param" description="The callback to pass all formatted dates/times/timestamps through. Should accept a single string and return a single string." type="callback" variable="$callback">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="657" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="663">
          <name>$callback</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="678" package="Flourish">
        <name>registerUnformatCallback</name>
        <full_name>registerUnformatCallback</full_name>
        <docblock line="672">
          <description><![CDATA[Allows setting a callback to parse any date strings passed into ::__construct(), fDate::__construct() and fTime::__construct()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="672" name="param" description="The callback to pass all date/time/timestamp strings through. Should accept a single string and return a single string that is parsable by [http://php.net/strtotime `strtotime()`]." type="callback" variable="$callback">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="672" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="678">
          <name>$callback</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="694" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="687">
          <description><![CDATA[Resets the configuration of the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="687" name="internal" description=""/>
          <tag line="687" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="707" package="Flourish">
        <name>setDefaultTimezone</name>
        <full_name>setDefaultTimezone</full_name>
        <docblock line="701">
          <description><![CDATA[Provides a consistent interface to setting the default timezone.]]></description>
          <long-description><![CDATA[<p>Wraps the [http://php.net/date_default_timezone_set date_default_timezone_set()] function.</p>]]></long-description>
          <tag line="701" name="param" description="The default timezone to use for all date/time calculations" type="string" variable="$timezone">
            <type by_reference="false">string</type>
          </tag>
          <tag line="701" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="707">
          <name>$timezone</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="729" package="Flourish">
        <name>translateFormat</name>
        <full_name>translateFormat</full_name>
        <docblock line="721">
          <description><![CDATA[Takes a format name set via ::defineFormat() and returns the [http://php.net/date date()] function formatting string]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="721" name="internal" description=""/>
          <tag line="721" name="param" description="The format to translate" type="string" variable="$format">
            <type by_reference="false">string</type>
          </tag>
          <tag line="721" name="return" description="The formatting string. If no matching format was found, this will be the same as the `$format` parameter." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="729">
          <name>$format</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="762" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="753">
          <description><![CDATA[Creates the date/time to represent]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="753" name="throws" description="When `$datetime` is not a valid date/time, date or time value" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="753" name="param" description="The date/time to represent, `NULL` is interpreted as now" type="\fTimestamp|object|string|integer" variable="$datetime">
            <type by_reference="false">\fTimestamp</type>
            <type by_reference="false">object</type>
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="753" name="param" description="The timezone for the date/time. This causes the date/time to be interpretted as being in the specified timezone. If not specified, will default to timezone set by ::setDefaultTimezone()." type="string" variable="$timezone">
            <type by_reference="false">string</type>
          </tag>
          <tag line="753" name="return" description="" type="\fTimestamp">
            <type by_reference="false">\fTimestamp</type>
          </tag>
        </docblock>
        <argument line="762">
          <name>$datetime</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="762">
          <name>$timezone</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="830" package="Flourish">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="822">
          <description><![CDATA[All requests that hit this method should be requests for callbacks]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="822" name="internal" description=""/>
          <tag line="822" name="param" description="The method to create a callback for" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="822" name="return" description="The callback for the method requested" type="callback">
            <type by_reference="false">callback</type>
          </tag>
        </docblock>
        <argument line="830">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="841" package="Flourish">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="836">
          <description><![CDATA[Returns this date/time]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="836" name="return" description="The `'Y-m-d H:i:s'` format of this date/time" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="855" package="Flourish">
        <name>adjust</name>
        <full_name>adjust</full_name>
        <docblock line="847">
          <description><![CDATA[Changes the date/time by the adjustment specified]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="847" name="throws" description="When `$adjustment` is not a valid relative date/time measurement or timezone" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="847" name="param" description="The adjustment to make - may be a relative adjustment or a different timezone" type="string" variable="$adjustment">
            <type by_reference="false">string</type>
          </tag>
          <tag line="847" name="return" description="The adjusted date/time" type="\fTimestamp">
            <type by_reference="false">\fTimestamp</type>
          </tag>
        </docblock>
        <argument line="855">
          <name>$adjustment</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="883" package="Flourish">
        <name>eq</name>
        <full_name>eq</full_name>
        <docblock line="877">
          <description><![CDATA[If this timestamp is equal to the timestamp passed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="877" name="param" description="The timestamp to compare with, `NULL` is interpreted as today" type="\fTimestamp|object|string|integer" variable="$other_timestamp">
            <type by_reference="false">\fTimestamp</type>
            <type by_reference="false">object</type>
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="877" name="return" description="If this timestamp is equal to the one passed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="883">
          <name>$other_timestamp</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="896" package="Flourish">
        <name>format</name>
        <full_name>format</full_name>
        <docblock line="890">
          <description><![CDATA[Formats the date/time]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="890" name="param" description="The [http://php.net/date date()] function compatible formatting string, or a format name from ::defineFormat()" type="string" variable="$format">
            <type by_reference="false">string</type>
          </tag>
          <tag line="890" name="return" description="The formatted date/time" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="896">
          <name>$format</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="949" package="Flourish">
        <name>getFuzzyDifference</name>
        <full_name>getFuzzyDifference</full_name>
        <docblock line="911">
          <description><![CDATA[Returns the approximate difference in time, discarding any unit of measure but the least specific.]]></description>
          <long-description><![CDATA[<p>The output will read like:</p>

<ul>
<li>"This timestamp is <code>{return value}</code> the provided one" when a timestamp it passed</li>
<li>"This timestamp is <code>{return value}</code>" when no timestamp is passed and comparing with the current timestamp</li>
</ul>

<p>Examples of output for a timestamp passed might be:</p>

<ul>
<li><code>'5 minutes after'</code></li>
<li><code>'2 hours before'</code></li>
<li><code>'2 days after'</code></li>
<li><code>'at the same time'</code></li>
</ul>

<p>Examples of output for no timestamp passed might be:</p>

<ul>
<li><code>'5 minutes ago'</code></li>
<li><code>'2 hours ago'</code></li>
<li><code>'2 days from now'</code></li>
<li><code>'1 year ago'</code></li>
<li><code>'right now'</code></li>
</ul>

<p>You would never get the following output since it includes more than one unit of time measurement:</p>

<ul>
<li><code>'5 minutes and 28 seconds'</code></li>
<li><code>'3 weeks, 1 day and 4 hours'</code></li>
</ul>

<p>Values that are close to the next largest unit of measure will be rounded up:</p>

<ul>
<li><code>'55 minutes'</code> would be represented as <code>'1 hour'</code>, however <code>'45 minutes'</code> would not</li>
<li><code>'29 days'</code> would be represented as <code>'1 month'</code>, but <code>'21 days'</code> would be shown as <code>'3 weeks'</code></li>
</ul>]]></long-description>
          <tag line="911" name="param" description="The timestamp to create the difference with, `NULL` is interpreted as now" type="\fTimestamp|object|string|integer" variable="$other_timestamp">
            <type by_reference="false">\fTimestamp</type>
            <type by_reference="false">object</type>
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="911" name="param" description="When `TRUE`, the returned value will only include the difference in the two timestamps, but not `from now`, `ago`, `after` or `before`" type="boolean" variable="$simple">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="911" name="param" description="|$simple" type="boolean" variable="">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="911" name="return" description="The fuzzy difference in time between the this timestamp and the one provided" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="949">
          <name>$other_timestamp</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="949">
          <name>$simple</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1022" package="Flourish">
        <name>gt</name>
        <full_name>gt</full_name>
        <docblock line="1016">
          <description><![CDATA[If this timestamp is greater than the timestamp passed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1016" name="param" description="The timestamp to compare with, `NULL` is interpreted as now" type="\fTimestamp|object|string|integer" variable="$other_timestamp">
            <type by_reference="false">\fTimestamp</type>
            <type by_reference="false">object</type>
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1016" name="return" description="If this timestamp is greater than the one passed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="1022">
          <name>$other_timestamp</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1035" package="Flourish">
        <name>gte</name>
        <full_name>gte</full_name>
        <docblock line="1029">
          <description><![CDATA[If this timestamp is greater than or equal to the timestamp passed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1029" name="param" description="The timestamp to compare with, `NULL` is interpreted as now" type="\fTimestamp|object|string|integer" variable="$other_timestamp">
            <type by_reference="false">\fTimestamp</type>
            <type by_reference="false">object</type>
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1029" name="return" description="If this timestamp is greater than or equal to the one passed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="1035">
          <name>$other_timestamp</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1048" package="Flourish">
        <name>lt</name>
        <full_name>lt</full_name>
        <docblock line="1042">
          <description><![CDATA[If this timestamp is less than the timestamp passed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1042" name="param" description="The timestamp to compare with, `NULL` is interpreted as today" type="\fTimestamp|object|string|integer" variable="$other_timestamp">
            <type by_reference="false">\fTimestamp</type>
            <type by_reference="false">object</type>
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1042" name="return" description="If this timestamp is less than the one passed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="1048">
          <name>$other_timestamp</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1061" package="Flourish">
        <name>lte</name>
        <full_name>lte</full_name>
        <docblock line="1055">
          <description><![CDATA[If this timestamp is less than or equal to the timestamp passed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1055" name="param" description="The timestamp to compare with, `NULL` is interpreted as today" type="\fTimestamp|object|string|integer" variable="$other_timestamp">
            <type by_reference="false">\fTimestamp</type>
            <type by_reference="false">object</type>
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1055" name="return" description="If this timestamp is less than or equal to the one passed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="1061">
          <name>$other_timestamp</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1083" package="Flourish">
        <name>modify</name>
        <full_name>modify</full_name>
        <docblock line="1068">
          <description><![CDATA[Modifies the current timestamp, creating a new fTimestamp object]]></description>
          <long-description><![CDATA[<p>The purpose of this method is to allow for easy creation of a timestamp
based on this timestamp. Below are some examples of formats to
modify the current timestamp:</p>

<ul>
<li><code>'Y-m-01 H:i:s'</code> to change the date of the timestamp to the first of the month:</li>
<li><code>'Y-m-t H:i:s'</code> to change the date of the timestamp to the last of the month:</li>
<li><code>'Y-m-d 17:i:s'</code> to set the hour of the timestamp to 5 PM:</li>
</ul>]]></long-description>
          <tag line="1068" name="param" description="The current timestamp will be formatted with this string, and the output used to create a new object. The format should **not** include the timezone (character `e`)." type="string" variable="$format">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1068" name="param" description="The timezone for the new object if different from the current timezone" type="string" variable="$timezone">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1068" name="return" description="The new timestamp" type="\fTimestamp">
            <type by_reference="false">\fTimestamp</type>
          </tag>
        </docblock>
        <argument line="1083">
          <name>$format</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1083">
          <name>$timezone</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fTimestamp.php</error>
      <notice line="116" code="50013">Parameter $component could not be found in compose()</notice>
      <notice line="116" code="50013">Parameter  could not be found in compose()</notice>
      <notice line="911" code="50013">Parameter  could not be found in getFuzzyDifference()</notice>
    </parse_markers>
  </file>
  <file path="php/flourish/fProgrammerException.php" hash="fee9f163f4e7f855d3edb0650a565794" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="15" package="Flourish">
      <extends>\fUnexpectedException</extends>
      <name>fProgrammerException</name>
      <full_name>\fProgrammerException</full_name>
      <docblock line="2">
        <description><![CDATA[An exception caused by programmer error]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2008 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fProgrammerException" link="http://flourishlib.com/fProgrammerException"/>
        <tag line="2" name="version" description="1.0.0b"/>
        <tag line="2" name="changes" description="1.0.0b  The initial implementation [wb, 2007-06-14]"/>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fProgrammerException.php</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fEmail.php" hash="5333c5c2eefed6b281179fc6cc578469" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="53" package="Flourish">
      <extends/>
      <name>fEmail</name>
      <full_name>\fEmail</full_name>
      <docblock line="2">
        <description><![CDATA[Allows creating and sending a single email containing plaintext, HTML, attachments and S/MIME encryption]]></description>
        <long-description><![CDATA[<p>Please note that this class uses the [http://php.net/function.mail mail()]
function by default. Developers that are sending multiple emails, or need
SMTP support, should use fSMTP with this class.</p>

<p>This class is implemented to use the UTF-8 character encoding. Please see
http://flourishlib.com/docs/UTF-8 for more information.</p>]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2008-2011 Will Bond, others"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="author" description="Bill Bushee, iMarc LLC [bb-imarc] &lt;bill@imarc.net&gt;"/>
        <tag line="2" name="author" description="netcarver [n] &lt;fContrib@netcarving.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fEmail" link="http://flourishlib.com/fEmail"/>
        <tag line="2" name="version" description="1.0.0b30"/>
        <tag line="2" name="changes" description="1.0.0b30  Changed methods to return instance for method chaining [n, 2011-09-12]"/>
        <tag line="2" name="changes" description="1.0.0b29  Changed ::combineNameEmail() to be a static method and to be exposed publicly for use by other classes [wb, 2011-07-26]"/>
        <tag line="2" name="changes" description="1.0.0b28  Fixed ::addAttachment() and ::addRelatedFile() to properly handle duplicate filenames [wb, 2011-05-17]"/>
        <tag line="2" name="changes" description="1.0.0b27  Fixed a bug with generating FQDNs on some Windows machines [wb, 2011-02-24]"/>
        <tag line="2" name="changes" description="1.0.0b26  Added ::addCustomerHeader() [wb, 2011-02-02]"/>
        <tag line="2" name="changes" description="1.0.0b25  Fixed a bug with finding the FQDN on non-Windows machines [wb, 2011-01-19]"/>
        <tag line="2" name="changes" description="1.0.0b24  Backwards Compatibility Break - the `$contents` parameter of ::addAttachment() is now first instead of third, ::addAttachment() will now accept fFile objects for the `$contents` parameter, added ::addRelatedFile() [wb, 2010-12-01]"/>
        <tag line="2" name="changes" description="1.0.0b23  Fixed a bug on Windows where emails starting with a `.` would have the `.` removed [wb, 2010-09-11]"/>
        <tag line="2" name="changes" description="1.0.0b22  Revamped the FQDN code and added ::getFQDN() [wb, 2010-09-07]"/>
        <tag line="2" name="changes" description="1.0.0b21  Added a check to prevent permissions warnings when getting the FQDN on Windows machines [wb, 2010-09-02]"/>
        <tag line="2" name="changes" description="1.0.0b20  Fixed ::send() to only remove the name of a recipient when dealing with the `mail()` function on Windows and to leave it when using fSMTP [wb, 2010-06-22]"/>
        <tag line="2" name="changes" description="1.0.0b19  Changed ::send() to return the message id for the email, fixed the email regexes to require [] around IPs [wb, 2010-05-05]"/>
        <tag line="2" name="changes" description="1.0.0b18  Fixed the name of the static method ::unindentExpand() [wb, 2010-04-28]"/>
        <tag line="2" name="changes" description="1.0.0b17  Added the static method ::unindentExpand() [wb, 2010-04-26]"/>
        <tag line="2" name="changes" description="1.0.0b16  Added support for sending emails via fSMTP [wb, 2010-04-20]"/>
        <tag line="2" name="changes" description="1.0.0b15  Added the `$unindent_expand_constants` parameter to ::setBody(), added ::loadBody() and ::loadHTMLBody(), fixed HTML emails with attachments [wb, 2010-03-14]"/>
        <tag line="2" name="changes" description="1.0.0b14  Changed ::send() to not double `.`s at the beginning of lines on Windows since it seemed to break things rather than fix them [wb, 2010-03-05]"/>
        <tag line="2" name="changes" description="1.0.0b13  Fixed the class to work when safe mode is turned on [wb, 2009-10-23]"/>
        <tag line="2" name="changes" description="1.0.0b12  Removed duplicate MIME-Version headers that were being included in S/MIME encrypted emails [wb, 2009-10-05]"/>
        <tag line="2" name="changes" description="1.0.0b11  Updated to use the new fValidationException API [wb, 2009-09-17]"/>
        <tag line="2" name="changes" description="1.0.0b10  Fixed a bug with sending both an HTML and a plaintext body [bb-imarc, 2009-06-18]"/>
        <tag line="2" name="changes" description="1.0.0b9   Fixed a bug where the MIME headers were not being set for all emails [wb, 2009-06-12]"/>
        <tag line="2" name="changes" description="1.0.0b8   Added the method ::clearRecipients() [wb, 2009-05-29]"/>
        <tag line="2" name="changes" description="1.0.0b7   Email names with UTF-8 characters are now properly encoded [wb, 2009-05-08]"/>
        <tag line="2" name="changes" description="1.0.0b6   Fixed a bug where &lt;&gt; quoted email addresses in validation messages were not showing [wb, 2009-03-27]"/>
        <tag line="2" name="changes" description="1.0.0b5   Updated for new fCore API [wb, 2009-02-16]"/>
        <tag line="2" name="changes" description="1.0.0b4   The recipient error message in ::validate() no longer contains a typo [wb, 2009-02-09]"/>
        <tag line="2" name="changes" description="1.0.0b3   Fixed a bug with missing content in the fValidationException thrown by ::validate() [wb, 2009-01-14]"/>
        <tag line="2" name="changes" description="1.0.0b2   Fixed a few bugs with sending S/MIME encrypted/signed emails [wb, 2009-01-10]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2008-06-23]"/>
      </docblock>
      <constant namespace="global" line="56" package="Flourish">
        <name>combineNameEmail</name>
        <full_name>combineNameEmail</full_name>
        <value><![CDATA['fEmail::combineNameEmail']]></value>
      </constant>
      <constant namespace="global" line="57" package="Flourish">
        <name>fixQmail</name>
        <full_name>fixQmail</full_name>
        <value><![CDATA['fEmail::fixQmail']]></value>
      </constant>
      <constant namespace="global" line="58" package="Flourish">
        <name>getFQDN</name>
        <full_name>getFQDN</full_name>
        <value><![CDATA['fEmail::getFQDN']]></value>
      </constant>
      <constant namespace="global" line="59" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <value><![CDATA['fEmail::reset']]></value>
      </constant>
      <constant namespace="global" line="60" package="Flourish">
        <name>unindentExpand</name>
        <full_name>unindentExpand</full_name>
        <value><![CDATA['fEmail::unindentExpand']]></value>
      </constant>
      <constant namespace="global" line="74" package="Flourish">
        <name>EMAIL_REGEX</name>
        <full_name>EMAIL_REGEX</full_name>
        <value><![CDATA['~^[ \t]*(                                                                      # Allow leading whitespace
						   (?:[^\x00-\x20\(\)<>@,;:\\\\"\.\[\]]+|"[^"\\\\\n\r]+")                       # An "atom" or a quoted string
						   (?:\.[ \t]*(?:[^\x00-\x20\(\)<>@,;:\\\\"\.\[\]]+|"[^"\\\\\n\r]+"[ \t]*))*    # A . plus another "atom" or a quoted string, any number of times
						 )@(                                                                            # The @ symbol
						   (?:[a-z0-9\\-]+\.)+[a-z]{2,}|                                                # Domain name
						   \[(?:(?:[01]?\d?\d|2[0-4]\d|25[0-5])\.){3}(?:[01]?\d?\d|2[0-4]\d|25[0-5])\]  # (or) IP addresses
						 )[ \t]*$~ixD']]></value>
        <docblock line="63">
          <description><![CDATA[A regular expression to match an email address, exluding those with comments and folding whitespace]]></description>
          <long-description><![CDATA[<p>The matches will be:</p>

<ul>
<li><code>[0]</code>: The whole email address</li>
<li><code>[1]</code>: The name before the <code>@</code></li>
<li><code>[2]</code>: The domain/ip after the <code>@</code></li>
</ul>]]></long-description>
          <tag line="63" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="95" package="Flourish">
        <name>NAME_EMAIL_REGEX</name>
        <full_name>NAME_EMAIL_REGEX</full_name>
        <value><![CDATA['~^[ \t]*(                                                                            # Allow leading whitespace
								(?:[^\x00-\x20\(\)<>@,;:\\\\"\.\[\]]+[ \t]*|"[^"\\\\\n\r]+"[ \t]*)                 # An "atom" or a quoted string
								(?:\.?[ \t]*(?:[^\x00-\x20\(\)<>@,;:\\\\"\.\[\]]+[ \t]*|"[^"\\\\\n\r]+"[ \t]*))*)  # Another "atom" or a quoted string or a . followed by one of those, any number of times
							  [ \t]*<[ \t]*((                                                                      # The < encapsulating the email address
								(?:[^\x00-\x20\(\)<>@,;:\\\\"\.\[\]]+|"[^"\\\\\n\r]+")                             # An "atom" or a quoted string
								(?:\.[ \t]*(?:[^\x00-\x20\(\)<>@,;:\\\\"\.\[\]]+|"[^"\\\\\n\r]+"[ \t]*))*          # A . plus another "atom" or a quoted string, any number of times
							  )@(                                                                                  # The @ symbol
								(?:[a-z0-9\\-]+\.)+[a-z]{2,}|                                                      # Domain nam
								\[(?:(?:[01]?\d?\d|2[0-4]\d|25[0-5])\.){3}(?:[01]?\d?\d|2[0-4]\d|25[0-5])\]        # (or) IP addresses
							  ))[ \t]*>[ \t]*$~ixD']]></value>
        <docblock line="82">
          <description><![CDATA[A regular expression to match a `name <email>` string, exluding those with comments and folding whitespace]]></description>
          <long-description><![CDATA[<p>The matches will be:</p>

<ul>
<li><code>[0]</code>: The whole name and email address</li>
<li><code>[1]</code>: The name</li>
<li><code>[2]</code>: The whole email address</li>
<li><code>[3]</code>: The email username before the <code>@</code></li>
<li><code>[4]</code>: The email domain/ip after the <code>@</code></li>
</ul>]]></long-description>
          <tag line="82" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="true" visibility="private" line="112" namespace="global" package="Sutra">
        <name>$convert_crlf</name>
        <default><![CDATA[FALSE]]></default>
        <docblock line="107">
          <description><![CDATA[Flags if the class should convert `\r\n` to `\n` for qmail.]]></description>
          <long-description><![CDATA[<p>This makes invalid email headers that may work.</p>]]></long-description>
          <tag line="107" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="117" namespace="global" package="Sutra">
        <name>$fqdn</name>
        <default><![CDATA[]]></default>
        <docblock line="114">
          <description><![CDATA[The local fully-qualified domain name]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="124" namespace="global" package="Sutra">
        <name>$popen_sendmail</name>
        <default><![CDATA[FALSE]]></default>
        <docblock line="119">
          <description><![CDATA[Flags if the class should use [http://php.net/popen popen()] to send mail via sendmail]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="119" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="483" namespace="global" package="Sutra">
        <name>$attachments</name>
        <default><![CDATA[array()]]></default>
        <docblock line="478">
          <description><![CDATA[The file contents to attach]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="478" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="490" namespace="global" package="Sutra">
        <name>$bcc_emails</name>
        <default><![CDATA[array()]]></default>
        <docblock line="485">
          <description><![CDATA[The email address(es) to BCC to]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="485" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="497" namespace="global" package="Sutra">
        <name>$bounce_to_email</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="492">
          <description><![CDATA[The email address to bounce to]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="492" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="504" namespace="global" package="Sutra">
        <name>$cc_emails</name>
        <default><![CDATA[array()]]></default>
        <docblock line="499">
          <description><![CDATA[The email address(es) to CC to]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="499" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="511" namespace="global" package="Sutra">
        <name>$custom_headers</name>
        <default><![CDATA[array()]]></default>
        <docblock line="506">
          <description><![CDATA[Custom headers]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="506" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="518" namespace="global" package="Sutra">
        <name>$from_email</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="513">
          <description><![CDATA[The email address being sent from]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="513" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="525" namespace="global" package="Sutra">
        <name>$html_body</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="520">
          <description><![CDATA[The HTML body of the email]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="520" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="532" namespace="global" package="Sutra">
        <name>$message_id</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="527">
          <description><![CDATA[The Message-ID header for the email]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="527" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="539" namespace="global" package="Sutra">
        <name>$plaintext_body</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="534">
          <description><![CDATA[The plaintext body of the email]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="534" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="546" namespace="global" package="Sutra">
        <name>$recipients_smime_cert_file</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="541">
          <description><![CDATA[The recipient's S/MIME PEM certificate filename, used for encryption of the message]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="541" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="553" namespace="global" package="Sutra">
        <name>$related_files</name>
        <default><![CDATA[array()]]></default>
        <docblock line="548">
          <description><![CDATA[The files to include as multipart/related]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="548" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="560" namespace="global" package="Sutra">
        <name>$reply_to_email</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="555">
          <description><![CDATA[The email address to reply to]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="555" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="567" namespace="global" package="Sutra">
        <name>$sender_email</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="562">
          <description><![CDATA[The email address actually sending the email]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="562" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="574" namespace="global" package="Sutra">
        <name>$senders_smime_cert_file</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="569">
          <description><![CDATA[The senders's S/MIME PEM certificate filename, used for singing the message]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="569" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="581" namespace="global" package="Sutra">
        <name>$senders_smime_pk_file</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="576">
          <description><![CDATA[The senders's S/MIME private key filename, used for singing the message]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="576" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="588" namespace="global" package="Sutra">
        <name>$senders_smime_pk_password</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="583">
          <description><![CDATA[The senders's S/MIME private key password, used for singing the message]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="583" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="595" namespace="global" package="Sutra">
        <name>$smime_encrypt</name>
        <default><![CDATA[FALSE]]></default>
        <docblock line="590">
          <description><![CDATA[If the message should be encrypted using the recipient's S/MIME certificate]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="590" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="602" namespace="global" package="Sutra">
        <name>$smime_sign</name>
        <default><![CDATA[FALSE]]></default>
        <docblock line="597">
          <description><![CDATA[If the message should be signed using the senders's S/MIME private key]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="597" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="609" namespace="global" package="Sutra">
        <name>$subject</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="604">
          <description><![CDATA[The subject of the email]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="604" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="616" namespace="global" package="Sutra">
        <name>$to_emails</name>
        <default><![CDATA[array()]]></default>
        <docblock line="611">
          <description><![CDATA[The email address(es) to send to]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="611" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="140" package="Flourish">
        <name>combineNameEmail</name>
        <full_name>combineNameEmail</full_name>
        <docblock line="127">
          <description><![CDATA[Turns a name and email into a `"name" <email>` string, or just `email` if no name is provided]]></description>
          <long-description><![CDATA[<p>This method will remove newline characters from the name and email, and
will remove any backslash (<code>\</code>) and double quote (<code>"</code>) characters from
the name.</p>]]></long-description>
          <tag line="127" name="internal" description=""/>
          <tag line="127" name="param" description="The name associated with the email address" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="127" name="param" description="The email address" type="string" variable="$email">
            <type by_reference="false">string</type>
          </tag>
          <tag line="127" name="return" description="The '&quot;name&quot; &lt;email&gt;' or 'email' string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="140">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="140">
          <name>$email</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="172" package="Flourish">
        <name>compose</name>
        <full_name>compose</full_name>
        <docblock line="164">
          <description><![CDATA[Composes text using fText if loaded]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="164" name="param" description="The message to compose" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="164" name="param" description="A string or number to insert into the message" type="mixed" variable="$component">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="164" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="164" name="return" description="The composed and possible translated message" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="172">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="195" package="Flourish">
        <name>fixQmail</name>
        <full_name>fixQmail</full_name>
        <docblock line="187">
          <description><![CDATA[Sets the class to try and fix broken qmail implementations that add `\r` to `\r\n`]]></description>
          <long-description><![CDATA[<p>Before trying to fix qmail with this method, please try using fSMTP
to connect to <code>localhost</code> and pass the fSMTP object to ::send().</p>]]></long-description>
          <tag line="187" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="277" package="Flourish">
        <name>getFQDN</name>
        <full_name>getFQDN</full_name>
        <docblock line="270">
          <description><![CDATA[Returns the fully-qualified domain name of the server]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="270" name="internal" description=""/>
          <tag line="270" name="return" description="The fully-qualified domain name of the server" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="346" package="Flourish">
        <name>makeEncodedWord</name>
        <full_name>makeEncodedWord</full_name>
        <docblock line="339">
          <description><![CDATA[Encodes a string to UTF-8 encoded-word]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="339" name="param" description="The content to encode" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="339" name="param" description="The length of any prefix applied to the first line of the encoded word - this allows properly accounting for a header name" type="integer" variable="$first_line_prefix_length">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="339" name="return" description="The encoded string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="346">
          <name>$content</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="346">
          <name>$first_line_prefix_length</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="430" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="423">
          <description><![CDATA[Resets the configuration of the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="423" name="internal" description=""/>
          <tag line="423" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="444" package="Flourish">
        <name>stringlike</name>
        <full_name>stringlike</full_name>
        <docblock line="438">
          <description><![CDATA[Returns `TRUE` for non-empty strings, numbers, objects, empty numbers and string-like numbers (such as `0`, `0.0`, `'0'`)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="438" name="param" description="The value to check" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="438" name="return" description="If the value is string-like" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="444">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="460" package="Flourish">
        <name>unindentExpand</name>
        <full_name>unindentExpand</full_name>
        <docblock line="454">
          <description><![CDATA[Takes a block of text, unindents it and replaces {CONSTANT} tokens with the constant's value]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="454" name="param" description="The text to unindent and replace constants in" type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="454" name="return" description="The unindented text" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="460">
          <name>$text</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="624" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="619">
          <description><![CDATA[Initializes fEmail for creating message ids]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="619" name="return" description="" type="\fEmail">
            <type by_reference="false">\fEmail</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="638" package="Flourish">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="630">
          <description><![CDATA[All requests that hit this method should be requests for callbacks]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="630" name="internal" description=""/>
          <tag line="630" name="param" description="The method to create a callback for" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="630" name="return" description="The callback for the method requested" type="callback">
            <type by_reference="false">callback</type>
          </tag>
        </docblock>
        <argument line="638">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="654" package="Flourish">
        <name>addAttachment</name>
        <full_name>addAttachment</full_name>
        <docblock line="644">
          <description><![CDATA[Adds an attachment to the email]]></description>
          <long-description><![CDATA[<p>If a duplicate filename is detected, it will be changed to be unique.</p>]]></long-description>
          <tag line="644" name="param" description="The contents of the file" type="string|\fFile" variable="$contents">
            <type by_reference="false">string</type>
            <type by_reference="false">\fFile</type>
          </tag>
          <tag line="644" name="param" description="The name to give the attachement - optional if `$contents` is an fFile object" type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="644" name="param" description="The mime type of the file - this allows overriding the mime type of the file if incorrectly detected" type="string" variable="$mime_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="644" name="return" description="The email object, to allow for method chaining" type="\fEmail">
            <type by_reference="false">\fEmail</type>
          </tag>
        </docblock>
        <argument line="654">
          <name>$contents</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="654">
          <name>$filename</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="654">
          <name>$mime_type</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="685" package="Flourish">
        <name>addRelatedFile</name>
        <full_name>addRelatedFile</full_name>
        <docblock line="671">
          <description><![CDATA[Adds a “related” file to the email, returning the `Content-ID` for use in HTML]]></description>
          <long-description><![CDATA[<p>The purpose of a related file is to be able to reference it in part of
the HTML body. Image <code>src</code> URLs can reference a related file by starting
the URL with <code>cid:</code> and then inserting the <code>Content-ID</code>.</p>

<p>If a duplicate filename is detected, it will be changed to be unique.</p>]]></long-description>
          <tag line="671" name="param" description="The contents of the file" type="string|\fFile" variable="$contents">
            <type by_reference="false">string</type>
            <type by_reference="false">\fFile</type>
          </tag>
          <tag line="671" name="param" description="The name to give the attachement - optional if `$contents` is an fFile object" type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="671" name="param" description="The mime type of the file - this allows overriding the mime type of the file if incorrectly detected" type="string" variable="$mime_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="671" name="return" description="The fully-formed `cid:` URL for use in HTML `src` attributes" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="685">
          <name>$contents</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="685">
          <name>$filename</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="685">
          <name>$mime_type</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="712" package="Flourish">
        <name>addBCCRecipient</name>
        <full_name>addBCCRecipient</full_name>
        <docblock line="705">
          <description><![CDATA[Adds a blind carbon copy (BCC) email recipient]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="705" name="param" description="The email address to BCC" type="string" variable="$email">
            <type by_reference="false">string</type>
          </tag>
          <tag line="705" name="param" description="The recipient's name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="705" name="return" description="The email object, to allow for method chaining" type="\fEmail">
            <type by_reference="false">\fEmail</type>
          </tag>
        </docblock>
        <argument line="712">
          <name>$email</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="712">
          <name>$name</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="731" package="Flourish">
        <name>addCCRecipient</name>
        <full_name>addCCRecipient</full_name>
        <docblock line="724">
          <description><![CDATA[Adds a carbon copy (CC) email recipient]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="724" name="param" description="The email address to BCC" type="string" variable="$email">
            <type by_reference="false">string</type>
          </tag>
          <tag line="724" name="param" description="The recipient's name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="724" name="return" description="The email object, to allow for method chaining" type="\fEmail">
            <type by_reference="false">\fEmail</type>
          </tag>
        </docblock>
        <argument line="731">
          <name>$email</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="731">
          <name>$name</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="758" package="Flourish">
        <name>addCustomHeader</name>
        <full_name>addCustomHeader</full_name>
        <docblock line="743">
          <description><![CDATA[Allows adding a custom header to the email]]></description>
          <long-description><![CDATA[<p>If the method is called multiple times with the same name, the last
value will be used.</p>

<p>Please note that this class will properly format the header, including
adding the <code>:</code> between the name and value and wrapping values that are
too long for a single line.</p>]]></long-description>
          <tag line="743" name="param" description="The name of the header" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="743" name="param" description="The value of the header" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="743" name="param" description=":$headers An associative array of `{name} =&gt; {value}`" type="array" variable="">
            <type by_reference="false">array</type>
          </tag>
          <tag line="743" name="return" description="The email object, to allow for method chaining" type="\fEmail">
            <type by_reference="false">\fEmail</type>
          </tag>
        </docblock>
        <argument line="758">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="758">
          <name>$value</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="781" package="Flourish">
        <name>addRecipient</name>
        <full_name>addRecipient</full_name>
        <docblock line="774">
          <description><![CDATA[Adds an email recipient]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="774" name="param" description="The email address to send to" type="string" variable="$email">
            <type by_reference="false">string</type>
          </tag>
          <tag line="774" name="param" description="The recipient's name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="774" name="return" description="The email object, to allow for method chaining" type="\fEmail">
            <type by_reference="false">\fEmail</type>
          </tag>
        </docblock>
        <argument line="781">
          <name>$email</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="781">
          <name>$name</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="800" package="Flourish">
        <name>buildMultiAddressHeader</name>
        <full_name>buildMultiAddressHeader</full_name>
        <docblock line="793">
          <description><![CDATA[Takes a multi-address email header and builds it out using an array of emails]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="793" name="param" description="The header name without `': '`, the header is non-blank, `': '` will be added" type="string" variable="$header">
            <type by_reference="false">string</type>
          </tag>
          <tag line="793" name="param" description="The email addresses for the header" type="array" variable="$emails">
            <type by_reference="false">array</type>
          </tag>
          <tag line="793" name="return" description="The email header with a trailing `\r\n`" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="800">
          <name>$header</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="800">
          <name>$emails</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="828" package="Flourish">
        <name>clearRecipients</name>
        <full_name>clearRecipients</full_name>
        <docblock line="823">
          <description><![CDATA[Removes all To, CC and BCC recipients from the email]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="823" name="return" description="The email object, to allow for method chaining" type="\fEmail">
            <type by_reference="false">\fEmail</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="843" package="Flourish">
        <name>createBoundary</name>
        <full_name>createBoundary</full_name>
        <docblock line="838">
          <description><![CDATA[Creates a 32-character boundary for a multipart message]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="838" name="return" description="A multipart boundary" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="862" package="Flourish">
        <name>createBody</name>
        <full_name>createBody</full_name>
        <docblock line="856">
          <description><![CDATA[Builds the body of the email]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="856" name="param" description="The boundary to use for the top level mime block" type="string" variable="$boundary">
            <type by_reference="false">string</type>
          </tag>
          <tag line="856" name="return" description="The message body to be sent to the mail() function" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="862">
          <name>$boundary</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="948" package="Flourish">
        <name>createHeaders</name>
        <full_name>createHeaders</full_name>
        <docblock line="941">
          <description><![CDATA[Builds the headers for the email]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="941" name="param" description="The boundary to use for the top level mime block" type="string" variable="$boundary">
            <type by_reference="false">string</type>
          </tag>
          <tag line="941" name="param" description="The message id for the message" type="string" variable="$message_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="941" name="return" description="The headers to be sent to the [http://php.net/function.mail mail()] function" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="948">
          <name>$boundary</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="948">
          <name>$message_id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1006" package="Flourish">
        <name>createSMIMEBody</name>
        <full_name>createSMIMEBody</full_name>
        <docblock line="997">
          <description><![CDATA[Takes the body of the message and processes it with S/MIME]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="997" name="param" description="The recipients being sent to" type="string" variable="$to">
            <type by_reference="false">string</type>
          </tag>
          <tag line="997" name="param" description="The subject of the email" type="string" variable="$subject">
            <type by_reference="false">string</type>
          </tag>
          <tag line="997" name="param" description="The headers for the message" type="string" variable="$headers">
            <type by_reference="false">string</type>
          </tag>
          <tag line="997" name="param" description="The message body" type="string" variable="$body">
            <type by_reference="false">string</type>
          </tag>
          <tag line="997" name="return" description="`0` =&gt; The message headers, `1` =&gt; The message body" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1006">
          <name>$to</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1006">
          <name>$subject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1006">
          <name>$headers</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1006">
          <name>$body</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1104" package="Flourish">
        <name>encrypt</name>
        <full_name>encrypt</full_name>
        <docblock line="1098">
          <description><![CDATA[Sets the email to be encrypted with S/MIME]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1098" name="param" description="The file path to the PEM-encoded S/MIME certificate for the recipient" type="string" variable="$recipients_smime_cert_file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1098" name="return" description="The email object, to allow for method chaining" type="\fEmail">
            <type by_reference="false">\fEmail</type>
          </tag>
        </docblock>
        <argument line="1104">
          <name>$recipients_smime_cert_file</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1134" package="Flourish">
        <name>extractEmails</name>
        <full_name>extractEmails</full_name>
        <docblock line="1127">
          <description><![CDATA[Extracts just the email addresses from an array of strings containing an
<email@address.com> or "Name" <email@address.com> combination.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1127" name="param" description="The list of email or name/email to extract from" type="array" variable="$list">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1127" name="return" description="The email addresses" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1134">
          <name>$list</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1157" package="Flourish">
        <name>extrapolateFileInfo</name>
        <full_name>extrapolateFileInfo</full_name>
        <docblock line="1149">
          <description><![CDATA[Extracts the filename and mime-type from an fFile object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1149" name="param" description="&amp;$contents The file to extrapolate the info from" type="string|\fFile" variable="$contents">
            <type by_reference="false">string</type>
            <type by_reference="false">\fFile</type>
          </tag>
          <tag line="1149" name="param" description="&amp;$filename The filename to use for the file" type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1149" name="param" description="&amp;$mime_type The mime type of the file" type="string" variable="$mime_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1149" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1157">
          <name>$contents</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1157">
          <name>$filename</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1157">
          <name>$mime_type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1191" package="Flourish">
        <name>generateNewFilename</name>
        <full_name>generateNewFilename</full_name>
        <docblock line="1185">
          <description><![CDATA[Generates a new filename in an attempt to create a unique name]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1185" name="param" description="The filename to generate another name for" type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1185" name="return" description="The newly generated filename" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1191">
          <name>$filename</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1216" package="Flourish">
        <name>loadBody</name>
        <full_name>loadBody</full_name>
        <docblock line="1204">
          <description><![CDATA[Loads the plaintext version of the email body from a file and applies replacements]]></description>
          <long-description><![CDATA[<p>The should contain either ASCII or UTF-8 encoded text. Please see
http://flourishlib.com/docs/UTF-8 for more information.</p>]]></long-description>
          <tag line="1204" name="throws" description="When no file was specified, the file does not exist or the path specified is not a file" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="1204" name="param" description="The plaintext version of the email body" type="string|\fFile" variable="$file">
            <type by_reference="false">string</type>
            <type by_reference="false">\fFile</type>
          </tag>
          <tag line="1204" name="param" description="The method will search the contents of the file for each key and replace it with the corresponding value" type="array" variable="$replacements">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1204" name="return" description="The email object, to allow for method chaining" type="\fEmail">
            <type by_reference="false">\fEmail</type>
          </tag>
        </docblock>
        <argument line="1216">
          <name>$file</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1216">
          <name>$replacements</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1245" package="Flourish">
        <name>loadHTMLBody</name>
        <full_name>loadHTMLBody</full_name>
        <docblock line="1233">
          <description><![CDATA[Loads the plaintext version of the email body from a file and applies replacements]]></description>
          <long-description><![CDATA[<p>The should contain either ASCII or UTF-8 encoded text. Please see
http://flourishlib.com/docs/UTF-8 for more information.</p>]]></long-description>
          <tag line="1233" name="throws" description="When no file was specified, the file does not exist or the path specified is not a file" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="1233" name="param" description="The plaintext version of the email body" type="string|\fFile" variable="$file">
            <type by_reference="false">string</type>
            <type by_reference="false">\fFile</type>
          </tag>
          <tag line="1233" name="param" description="The method will search the contents of the file for each key and replace it with the corresponding value" type="array" variable="$replacements">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1233" name="return" description="The email object, to allow for method chaining" type="\fEmail">
            <type by_reference="false">\fEmail</type>
          </tag>
        </docblock>
        <argument line="1245">
          <name>$file</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1245">
          <name>$replacements</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1268" package="Flourish">
        <name>makeBase64</name>
        <full_name>makeBase64</full_name>
        <docblock line="1262">
          <description><![CDATA[Encodes a string to base64]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1262" name="param" description="The content to encode" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1262" name="return" description="The encoded string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1268">
          <name>$content</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1280" package="Flourish">
        <name>makeQuotedPrintable</name>
        <full_name>makeQuotedPrintable</full_name>
        <docblock line="1274">
          <description><![CDATA[Encodes a string to quoted-printable, properly handles UTF-8]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1274" name="param" description="The content to encode" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1274" name="return" description="The encoded string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1280">
          <name>$content</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1368" package="Flourish">
        <name>send</name>
        <full_name>send</full_name>
        <docblock line="1355">
          <description><![CDATA[Sends the email]]></description>
          <long-description><![CDATA[<p>The return value is the message id, which should be included as the
<code>Message-ID</code> header of the email. While almost all SMTP servers will not
modify this value, testing has indicated at least one (smtp.live.com
for Windows Live Mail) does.</p>]]></long-description>
          <tag line="1355" name="throws" description="When ::validate() throws an exception" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="1355" name="param" description="The SMTP connection to send the message over" type="\fSMTP" variable="$connection">
            <type by_reference="false">\fSMTP</type>
          </tag>
          <tag line="1355" name="return" description="The message id for the message - see method description for details" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1368">
          <name>$connection</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1498" package="Flourish">
        <name>setBody</name>
        <full_name>setBody</full_name>
        <docblock line="1488">
          <description><![CDATA[Sets the plaintext version of the email body]]></description>
          <long-description><![CDATA[<p>This method accepts either ASCII or UTF-8 encoded text. Please see
http://flourishlib.com/docs/UTF-8 for more information.</p>]]></long-description>
          <tag line="1488" name="param" description="The plaintext version of the email body" type="string" variable="$plaintext">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1488" name="param" description="If this is `TRUE`, the body will be unindented as much as possible and {CONSTANT_NAME} will be replaced with the value of the constant" type="boolean" variable="$unindent_expand_constants">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1488" name="return" description="The email object, to allow for method chaining" type="\fEmail">
            <type by_reference="false">\fEmail</type>
          </tag>
        </docblock>
        <argument line="1498">
          <name>$plaintext</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1498">
          <name>$unindent_expand_constants</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1518" package="Flourish">
        <name>setBounceToEmail</name>
        <full_name>setBounceToEmail</full_name>
        <docblock line="1510">
          <description><![CDATA[Adds the email address the email will be bounced to]]></description>
          <long-description><![CDATA[<p>This email address will be set to the <code>Return-Path</code> header.</p>]]></long-description>
          <tag line="1510" name="param" description="The email address to bounce to" type="string" variable="$email">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1510" name="return" description="The email object, to allow for method chaining" type="\fEmail">
            <type by_reference="false">\fEmail</type>
          </tag>
        </docblock>
        <argument line="1518">
          <name>$email</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1540" package="Flourish">
        <name>setFromEmail</name>
        <full_name>setFromEmail</full_name>
        <docblock line="1533">
          <description><![CDATA[Adds the `From:` email address to the email]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1533" name="param" description="The email address being sent from" type="string" variable="$email">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1533" name="param" description="The from email user's name - unfortunately on windows this is ignored" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1533" name="return" description="The email object, to allow for method chaining" type="\fEmail">
            <type by_reference="false">\fEmail</type>
          </tag>
        </docblock>
        <argument line="1540">
          <name>$email</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1540">
          <name>$name</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1561" package="Flourish">
        <name>setHTMLBody</name>
        <full_name>setHTMLBody</full_name>
        <docblock line="1552">
          <description><![CDATA[Sets the HTML version of the email body]]></description>
          <long-description><![CDATA[<p>This method accepts either ASCII or UTF-8 encoded text. Please see
http://flourishlib.com/docs/UTF-8 for more information.</p>]]></long-description>
          <tag line="1552" name="param" description="The HTML version of the email body" type="string" variable="$html">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1552" name="return" description="The email object, to allow for method chaining" type="\fEmail">
            <type by_reference="false">\fEmail</type>
          </tag>
        </docblock>
        <argument line="1561">
          <name>$html</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1576" package="Flourish">
        <name>setReplyToEmail</name>
        <full_name>setReplyToEmail</full_name>
        <docblock line="1569">
          <description><![CDATA[Adds the `Reply-To:` email address to the email]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1569" name="param" description="The email address to reply to" type="string" variable="$email">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1569" name="param" description="The reply-to email user's name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1569" name="return" description="The email object, to allow for method chaining" type="\fEmail">
            <type by_reference="false">\fEmail</type>
          </tag>
        </docblock>
        <argument line="1576">
          <name>$email</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1576">
          <name>$name</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1598" package="Flourish">
        <name>setSenderEmail</name>
        <full_name>setSenderEmail</full_name>
        <docblock line="1588">
          <description><![CDATA[Adds the `Sender:` email address to the email]]></description>
          <long-description><![CDATA[<p>The <code>Sender:</code> header is used to indicate someone other than the <code>From:</code>
address is actually submitting the message to the network.</p>]]></long-description>
          <tag line="1588" name="param" description="The email address the message is actually being sent from" type="string" variable="$email">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1588" name="param" description="The sender email user's name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1588" name="return" description="The email object, to allow for method chaining" type="\fEmail">
            <type by_reference="false">\fEmail</type>
          </tag>
        </docblock>
        <argument line="1598">
          <name>$email</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1598">
          <name>$name</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1619" package="Flourish">
        <name>setSubject</name>
        <full_name>setSubject</full_name>
        <docblock line="1610">
          <description><![CDATA[Sets the subject of the email]]></description>
          <long-description><![CDATA[<p>This method accepts either ASCII or UTF-8 encoded text. Please see
http://flourishlib.com/docs/UTF-8 for more information.</p>]]></long-description>
          <tag line="1610" name="param" description="The subject of the email" type="string" variable="$subject">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1610" name="return" description="The email object, to allow for method chaining" type="\fEmail">
            <type by_reference="false">\fEmail</type>
          </tag>
        </docblock>
        <argument line="1619">
          <name>$subject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1635" package="Flourish">
        <name>sign</name>
        <full_name>sign</full_name>
        <docblock line="1627">
          <description><![CDATA[Sets the email to be signed with S/MIME]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1627" name="param" description="The file path to the sender's PEM-encoded S/MIME certificate" type="string" variable="$senders_smime_cert_file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1627" name="param" description="The file path to the sender's S/MIME private key" type="string" variable="$senders_smime_pk_file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1627" name="param" description="The password for the sender's S/MIME private key" type="string" variable="$senders_smime_pk_password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1627" name="return" description="The email object, to allow for method chaining" type="\fEmail">
            <type by_reference="false">\fEmail</type>
          </tag>
        </docblock>
        <argument line="1635">
          <name>$senders_smime_cert_file</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1635">
          <name>$senders_smime_pk_file</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1635">
          <name>$senders_smime_pk_password</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1686" package="Flourish">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="1679">
          <description><![CDATA[Validates that all of the parts of the email are valid]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1679" name="throws" description="When part of the email is missing or formatted incorrectly" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="1679" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fEmail.php</error>
      <notice line="164" code="50013">Parameter $component could not be found in compose()</notice>
      <notice line="164" code="50013">Parameter  could not be found in compose()</notice>
      <notice line="743" code="50013">Parameter  could not be found in addCustomHeader()</notice>
    </parse_markers>
  </file>
  <file path="php/flourish/fORMValidation.php" hash="9daca3631c12bec10338cf0ac6aeab04" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="47" package="Flourish">
      <extends/>
      <name>fORMValidation</name>
      <full_name>\fORMValidation</full_name>
      <docblock line="2">
        <description><![CDATA[Handles validation for fActiveRecord classes]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2012 Will Bond, others"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="author" description="Jeff Turcotte [jt] &lt;jeff.turcotte@gmail.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fORMValidation" link="http://flourishlib.com/fORMValidation"/>
        <tag line="2" name="version" description="1.0.0b32"/>
        <tag line="2" name="changes" description="1.0.0b32  Fixed an array to string conversion notice [wb, 2012-09-21]"/>
        <tag line="2" name="changes" description="1.0.0b31  Fixed ::checkConditionalRule() to require columns that default to an empty string and are currently set to that value [wb, 2011-06-14]"/>
        <tag line="2" name="changes" description="1.0.0b30  Fixed a bug with ::setMessageOrder() not accepting a variable number of parameters like fValidation::setMessageOrder() does [wb, 2011-03-07]"/>
        <tag line="2" name="changes" description="1.0.0b29  Updated ::addManyToManyRule() and ::addOneToManyRule() to prefix any namespace from `$class` to `$related_class` if not already present [wb, 2010-11-24]"/>
        <tag line="2" name="changes" description="1.0.0b28  Updated the class to work with the new nested array structure for validation messages [wb, 2010-10-03]"/>
        <tag line="2" name="changes" description="1.0.0b27  Fixed ::hasValue() to properly detect zero-value floats, made ::hasValue() internal public [wb, 2010-07-26]"/>
        <tag line="2" name="changes" description="1.0.0b26  Improved the error message for integers to say `whole number` instead of just `number` [wb, 2010-05-29]"/>
        <tag line="2" name="changes" description="1.0.0b25  Added ::addRegexRule(), changed validation messages array to use column name keys [wb, 2010-05-26]"/>
        <tag line="2" name="changes" description="1.0.0b24  Added ::addRequiredRule() for required columns that aren't automatically handled via schema detection [wb, 2010-04-06]"/>
        <tag line="2" name="changes" description="1.0.0b23  Added support for checking integers and floats to ensure they fit within the range imposed by the database schema [wb, 2010-03-17]"/>
        <tag line="2" name="changes" description="1.0.0b22  Made the value checking for one-or-more and only-one rules more robust when detecting the absence of a value [wb, 2009-12-17]"/>
        <tag line="2" name="changes" description="1.0.0b21  Fixed a bug affecting where conditions with columns that are not null but have a default value [wb, 2009-11-03]"/>
        <tag line="2" name="changes" description="1.0.0b20  Updated code for the new fORMDatabase and fORMSchema APIs [wb, 2009-10-28]"/>
        <tag line="2" name="changes" description="1.0.0b19  Changed SQL statements to use value placeholders, identifier escaping and schema support [wb, 2009-10-22]"/>
        <tag line="2" name="changes" description="1.0.0b18  Fixed ::checkOnlyOneRule() and ::checkOneOrMoreRule() to consider blank strings as NULL [wb, 2009-08-21]"/>
        <tag line="2" name="changes" description="1.0.0b17  Added @internal methods ::removeStringReplacement() and ::removeRegexReplacement() [wb, 2009-07-29]"/>
        <tag line="2" name="changes" description="1.0.0b16  Backwards Compatibility Break - renamed ::addConditionalValidationRule() to ::addConditionalRule(), ::addManyToManyValidationRule() to ::addManyToManyRule(), ::addOneOrMoreValidationRule() to ::addOneOrMoreRule(), ::addOneToManyValidationRule() to ::addOneToManyRule(), ::addOnlyOneValidationRule() to ::addOnlyOneRule(), ::addValidValuesValidationRule() to ::addValidValuesRule() [wb, 2009-07-13]"/>
        <tag line="2" name="changes" description="1.0.0b15  Added ::addValidValuesValidationRule() [wb/jt, 2009-07-13]"/>
        <tag line="2" name="changes" description="1.0.0b14  Added ::addStringReplacement() and ::addRegexReplacement() for simple validation message modification [wb, 2009-07-01]"/>
        <tag line="2" name="changes" description="1.0.0b13  Changed ::reorderMessages() to compare string in a case-insensitive manner [wb, 2009-06-30]"/>
        <tag line="2" name="changes" description="1.0.0b12  Updated ::addConditionalValidationRule() to allow any number of `$main_columns`, and if any of those have a matching value, the condtional columns will be required [wb, 2009-06-30]"/>
        <tag line="2" name="changes" description="1.0.0b11  Fixed a couple of bugs with validating related records [wb, 2009-06-26]"/>
        <tag line="2" name="changes" description="1.0.0b10  Fixed UNIQUE constraint checking so it is only done once per constraint, fixed some UTF-8 case sensitivity issues [wb, 2009-06-17]"/>
        <tag line="2" name="changes" description="1.0.0b9   Updated code for new fORM API [wb, 2009-06-15]"/>
        <tag line="2" name="changes" description="1.0.0b8   Updated code to use new fValidationException::formatField() method [wb, 2009-06-04]"/>
        <tag line="2" name="changes" description="1.0.0b7   Updated ::validateRelated() to use new fORMRelated::validate() method and ::checkRelatedOneOrMoreRule() to use new `$related_records` structure [wb, 2009-06-02]"/>
        <tag line="2" name="changes" description="1.0.0b6   Changed date/time/timestamp checking from `strtotime()` to fDate/fTime/fTimestamp for better localization support [wb, 2009-06-01]"/>
        <tag line="2" name="changes" description="1.0.0b5   Fixed a bug in ::checkOnlyOneRule() where no values would not be flagged as an error [wb, 2009-04-23]"/>
        <tag line="2" name="changes" description="1.0.0b4   Fixed a bug in ::checkUniqueConstraints() related to case-insensitive columns [wb, 2009-02-15]"/>
        <tag line="2" name="changes" description="1.0.0b3   Implemented proper fix for ::addManyToManyValidationRule() [wb, 2008-12-12]"/>
        <tag line="2" name="changes" description="1.0.0b2   Fixed a bug with ::addManyToManyValidationRule() [wb, 2008-12-08]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2007-08-04]"/>
      </docblock>
      <constant namespace="global" line="50" package="Flourish">
        <name>addConditionalRule</name>
        <full_name>addConditionalRule</full_name>
        <value><![CDATA['fORMValidation::addConditionalRule']]></value>
      </constant>
      <constant namespace="global" line="51" package="Flourish">
        <name>addManyToManyRule</name>
        <full_name>addManyToManyRule</full_name>
        <value><![CDATA['fORMValidation::addManyToManyRule']]></value>
      </constant>
      <constant namespace="global" line="52" package="Flourish">
        <name>addOneOrMoreRule</name>
        <full_name>addOneOrMoreRule</full_name>
        <value><![CDATA['fORMValidation::addOneOrMoreRule']]></value>
      </constant>
      <constant namespace="global" line="53" package="Flourish">
        <name>addOneToManyRule</name>
        <full_name>addOneToManyRule</full_name>
        <value><![CDATA['fORMValidation::addOneToManyRule']]></value>
      </constant>
      <constant namespace="global" line="54" package="Flourish">
        <name>addOnlyOneRule</name>
        <full_name>addOnlyOneRule</full_name>
        <value><![CDATA['fORMValidation::addOnlyOneRule']]></value>
      </constant>
      <constant namespace="global" line="55" package="Flourish">
        <name>addRegexReplacement</name>
        <full_name>addRegexReplacement</full_name>
        <value><![CDATA['fORMValidation::addRegexReplacement']]></value>
      </constant>
      <constant namespace="global" line="56" package="Flourish">
        <name>addRegexRule</name>
        <full_name>addRegexRule</full_name>
        <value><![CDATA['fORMValidation::addRegexRule']]></value>
      </constant>
      <constant namespace="global" line="57" package="Flourish">
        <name>addRequiredRule</name>
        <full_name>addRequiredRule</full_name>
        <value><![CDATA['fORMValidation::addRequiredRule']]></value>
      </constant>
      <constant namespace="global" line="58" package="Flourish">
        <name>addStringReplacement</name>
        <full_name>addStringReplacement</full_name>
        <value><![CDATA['fORMValidation::addStringReplacement']]></value>
      </constant>
      <constant namespace="global" line="59" package="Flourish">
        <name>addValidValuesRule</name>
        <full_name>addValidValuesRule</full_name>
        <value><![CDATA['fORMValidation::addValidValuesRule']]></value>
      </constant>
      <constant namespace="global" line="60" package="Flourish">
        <name>hasValue</name>
        <full_name>hasValue</full_name>
        <value><![CDATA['fORMValidation::hasValue']]></value>
      </constant>
      <constant namespace="global" line="61" package="Flourish">
        <name>inspect</name>
        <full_name>inspect</full_name>
        <value><![CDATA['fORMValidation::inspect']]></value>
      </constant>
      <constant namespace="global" line="62" package="Flourish">
        <name>removeStringReplacement</name>
        <full_name>removeStringReplacement</full_name>
        <value><![CDATA['fORMValidation::removeStringReplacement']]></value>
      </constant>
      <constant namespace="global" line="63" package="Flourish">
        <name>removeRegexReplacement</name>
        <full_name>removeRegexReplacement</full_name>
        <value><![CDATA['fORMValidation::removeRegexReplacement']]></value>
      </constant>
      <constant namespace="global" line="64" package="Flourish">
        <name>reorderMessages</name>
        <full_name>reorderMessages</full_name>
        <value><![CDATA['fORMValidation::reorderMessages']]></value>
      </constant>
      <constant namespace="global" line="65" package="Flourish">
        <name>replaceMessages</name>
        <full_name>replaceMessages</full_name>
        <value><![CDATA['fORMValidation::replaceMessages']]></value>
      </constant>
      <constant namespace="global" line="66" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <value><![CDATA['fORMValidation::reset']]></value>
      </constant>
      <constant namespace="global" line="67" package="Flourish">
        <name>setColumnCaseInsensitive</name>
        <full_name>setColumnCaseInsensitive</full_name>
        <value><![CDATA['fORMValidation::setColumnCaseInsensitive']]></value>
      </constant>
      <constant namespace="global" line="68" package="Flourish">
        <name>setMessageOrder</name>
        <full_name>setMessageOrder</full_name>
        <value><![CDATA['fORMValidation::setMessageOrder']]></value>
      </constant>
      <constant namespace="global" line="69" package="Flourish">
        <name>validate</name>
        <full_name>validate</full_name>
        <value><![CDATA['fORMValidation::validate']]></value>
      </constant>
      <constant namespace="global" line="70" package="Flourish">
        <name>validateRelated</name>
        <full_name>validateRelated</full_name>
        <value><![CDATA['fORMValidation::validateRelated']]></value>
      </constant>
      <property final="false" static="true" visibility="private" line="78" namespace="global" package="Sutra">
        <name>$case_insensitive_columns</name>
        <default><![CDATA[array()]]></default>
        <docblock line="73">
          <description><![CDATA[Columns that should be treated as case insensitive when checking uniqueness]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="73" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="85" namespace="global" package="Sutra">
        <name>$conditional_rules</name>
        <default><![CDATA[array()]]></default>
        <docblock line="80">
          <description><![CDATA[Conditional rules]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="80" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="92" namespace="global" package="Sutra">
        <name>$message_orders</name>
        <default><![CDATA[array()]]></default>
        <docblock line="87">
          <description><![CDATA[Ordering rules for messages]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="87" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="99" namespace="global" package="Sutra">
        <name>$one_or_more_rules</name>
        <default><![CDATA[array()]]></default>
        <docblock line="94">
          <description><![CDATA[One or more rules]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="94" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="106" namespace="global" package="Sutra">
        <name>$only_one_rules</name>
        <default><![CDATA[array()]]></default>
        <docblock line="101">
          <description><![CDATA[Only one rules]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="101" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="113" namespace="global" package="Sutra">
        <name>$regex_replacements</name>
        <default><![CDATA[array()]]></default>
        <docblock line="108">
          <description><![CDATA[Regular expression replacements performed on each message]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="108" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="120" namespace="global" package="Sutra">
        <name>$related_one_or_more_rules</name>
        <default><![CDATA[array()]]></default>
        <docblock line="115">
          <description><![CDATA[Rules that require at least one or more *-to-many related records to be associated]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="115" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="127" namespace="global" package="Sutra">
        <name>$regex_rules</name>
        <default><![CDATA[array()]]></default>
        <docblock line="122">
          <description><![CDATA[Rules that require a value to match a regular expression]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="122" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="134" namespace="global" package="Sutra">
        <name>$required_rules</name>
        <default><![CDATA[array()]]></default>
        <docblock line="129">
          <description><![CDATA[Rules that require a value be present in a column even if the database schema doesn't require it]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="129" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="141" namespace="global" package="Sutra">
        <name>$string_replacements</name>
        <default><![CDATA[array()]]></default>
        <docblock line="136">
          <description><![CDATA[String replacements performed on each message]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="136" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="148" namespace="global" package="Sutra">
        <name>$valid_values_rules</name>
        <default><![CDATA[array()]]></default>
        <docblock line="143">
          <description><![CDATA[Valid values rules]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="143" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="164" package="Flourish">
        <name>addConditionalRule</name>
        <full_name>addConditionalRule</full_name>
        <docblock line="151">
          <description><![CDATA[Adds a conditional rule]]></description>
          <long-description><![CDATA[<p>If a non-empty value is found in one of the <code>$main_columns</code>, or if
specified, a value from the <code>$conditional_values</code> array, all of the
<code>$conditional_columns</code> will also be required to have a value.</p>]]></long-description>
          <tag line="151" name="param" description="The class name or instance of the class this rule applies to" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="151" name="param" description="The column(s) to check for a value" type="string|array" variable="$main_columns">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="151" name="param" description="If `NULL`, any value in the main column will trigger the conditional column(s), otherwise the value must match this scalar value or be present in the array of values" type="mixed" variable="$conditional_values">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="151" name="param" description="The column(s) that are to be required" type="string|array" variable="$conditional_columns">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="151" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="164">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="164">
          <name>$main_columns</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="164">
          <name>$conditional_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="164">
          <name>$conditional_columns</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="195" package="Flourish">
        <name>addManyToManyRule</name>
        <full_name>addManyToManyRule</full_name>
        <docblock line="187">
          <description><![CDATA[Add a many-to-many rule that requires at least one related record is associated with the current record]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="187" name="param" description="The class name or instance of the class to add the rule for" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="187" name="param" description="The name of the related class" type="string" variable="$related_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="187" name="param" description="The route to the related class" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="187" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="195">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="195">
          <name>$related_class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="195">
          <name>$route</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="227" package="Flourish">
        <name>addOneOrMoreRule</name>
        <full_name>addOneOrMoreRule</full_name>
        <docblock line="220">
          <description><![CDATA[Adds a one-or-more rule that requires at least one of the columns specified has a value]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="220" name="param" description="The class name or instance of the class the columns exists in" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="220" name="param" description="The columns to check" type="array" variable="$columns">
            <type by_reference="false">array</type>
          </tag>
          <tag line="220" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="227">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="227">
          <name>$columns</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="252" package="Flourish">
        <name>addOneToManyRule</name>
        <full_name>addOneToManyRule</full_name>
        <docblock line="244">
          <description><![CDATA[Add a one-to-many rule that requires at least one related record is associated with the current record]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="244" name="param" description="The class name or instance of the class to add the rule for" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="244" name="param" description="The name of the related class" type="string" variable="$related_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="244" name="param" description="The route to the related class" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="244" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="252">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="252">
          <name>$related_class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="252">
          <name>$route</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="284" package="Flourish">
        <name>addOnlyOneRule</name>
        <full_name>addOnlyOneRule</full_name>
        <docblock line="277">
          <description><![CDATA[Add an only-one rule that requires exactly one of the columns must have a value]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="277" name="param" description="The class name or instance of the class the columns exists in" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="277" name="param" description="The columns to check" type="array" variable="$columns">
            <type by_reference="false">array</type>
          </tag>
          <tag line="277" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="284">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="284">
          <name>$columns</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="315" package="Flourish">
        <name>addRegexReplacement</name>
        <full_name>addRegexReplacement</full_name>
        <docblock line="301">
          <description><![CDATA[Adds a call to [http://php.net/preg_replace `preg_replace()`] for each message]]></description>
          <long-description><![CDATA[<p>Regex replacement is done after the <code>post::validate()</code> hook, and right
before the messages are reordered.</p>

<p>If a message is an empty string after replacement, it will be
removed from the list of messages.</p>]]></long-description>
          <tag line="301" name="param" description="The class name or instance of the class the columns exists in" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="301" name="param" description="The PCRE regex to search for - see http://php.net/pcre for details" type="string" variable="$search">
            <type by_reference="false">string</type>
          </tag>
          <tag line="301" name="param" description="The string to replace with - all $ and \ are used in back references and must be escaped with a \ when meant literally" type="string" variable="$replace">
            <type by_reference="false">string</type>
          </tag>
          <tag line="301" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="315">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="315">
          <name>$search</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="315">
          <name>$replace</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="340" package="Flourish">
        <name>addRegexRule</name>
        <full_name>addRegexRule</full_name>
        <docblock line="331">
          <description><![CDATA[Adds a rule to validate a column against a PCRE regular expression - the rule is not run if the value is `NULL`]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="331" name="param" description="The class name or instance of the class the columns exists in" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="331" name="param" description="The column to match with the regex" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="331" name="param" description="The PCRE regex to match against - see http://php.net/pcre for details" type="string" variable="$regex">
            <type by_reference="false">string</type>
          </tag>
          <tag line="331" name="param" description="The message to use if the value does not match the regular expression" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="331" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="340">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="340">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="340">
          <name>$regex</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="340">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="367" package="Flourish">
        <name>addRequiredRule</name>
        <full_name>addRequiredRule</full_name>
        <docblock line="355">
          <description><![CDATA[Requires that a column have a non-`NULL` value]]></description>
          <long-description><![CDATA[<p>Before using this method, try setting the database column to <code>NOT NULL</code>
and remove any default value. Such a configuration will trigger the same
functionality as this method, and will enforce the rule on the database
level for any other code that queries it.</p>]]></long-description>
          <tag line="355" name="param" description="The class name or instance of the class the column(s) exists in" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="355" name="param" description="The column or columns to check - each column will require a value" type="array" variable="$columns">
            <type by_reference="false">array</type>
          </tag>
          <tag line="355" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="367">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="367">
          <name>$columns</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="397" package="Flourish">
        <name>addStringReplacement</name>
        <full_name>addStringReplacement</full_name>
        <docblock line="383">
          <description><![CDATA[Adds a call to [http://php.net/str_replace `str_replace()`] for each message]]></description>
          <long-description><![CDATA[<p>String replacement is done after the <code>post::validate()</code> hook, and right
before the messages are reordered.</p>

<p>If a message is an empty string after replacement, it will be
removed from the list of messages.</p>]]></long-description>
          <tag line="383" name="param" description="The class name or instance of the class the columns exists in" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="383" name="param" description="The string to search for" type="string" variable="$search">
            <type by_reference="false">string</type>
          </tag>
          <tag line="383" name="param" description="The string to replace with" type="string" variable="$replace">
            <type by_reference="false">string</type>
          </tag>
          <tag line="383" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="397">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="397">
          <name>$search</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="397">
          <name>$replace</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="427" package="Flourish">
        <name>addValidValuesRule</name>
        <full_name>addValidValuesRule</full_name>
        <docblock line="413">
          <description><![CDATA[Restricts a column to having only a value from the list of valid values]]></description>
          <long-description><![CDATA[<p>Please note that <code>NULL</code> values are always allowed, even if not listed in
the <code>$valid_values</code> array, if the column is not set as <code>NOT NULL</code>.</p>

<p>This functionality can also be accomplished by added a <code>CHECK</code> constraint
on the column in the database, or using a MySQL <code>ENUM</code> data type.</p>]]></long-description>
          <tag line="413" name="param" description="The class name or instance of the class this rule applies to" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="413" name="param" description="The column to validate" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="413" name="param" description="The valid values to check - `NULL` values are always allows if the column is not set to `NOT NULL`" type="array" variable="$valid_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="413" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="427">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="427">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="427">
          <name>$valid_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="453" package="Flourish">
        <name>checkAgainstSchema</name>
        <full_name>checkAgainstSchema</full_name>
        <docblock line="443">
          <description><![CDATA[Validates a value against the database schema]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="443" name="param" description="The schema object for the object" type="\fSchema" variable="$schema">
            <type by_reference="false">\fSchema</type>
          </tag>
          <tag line="443" name="param" description="The instance of the class the column is part of" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="443" name="param" description="The column to check" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="443" name="param" description="&amp;$values An associative array of all values going into the row (needs all for multi-field unique constraint checking)" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="443" name="param" description="&amp;$old_values The old values from the record" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="443" name="return" description="An error message for the column specified" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="453">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="453">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="453">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="453">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="453">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="525" package="Flourish">
        <name>checkConditionalRule</name>
        <full_name>checkConditionalRule</full_name>
        <docblock line="514">
          <description><![CDATA[Validates against a conditional rule]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="514" name="param" description="The schema object for the class specified" type="\fSchema" variable="$schema">
            <type by_reference="false">\fSchema</type>
          </tag>
          <tag line="514" name="param" description="The class this rule applies to" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="514" name="param" description="&amp;$values An associative array of all values for the record" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="514" name="param" description="The columns to check for a value" type="array" variable="$main_columns">
            <type by_reference="false">array</type>
          </tag>
          <tag line="514" name="param" description="If `NULL`, any value in the main column will trigger the conditional columns, otherwise the value must match one of these" type="array" variable="$conditional_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="514" name="param" description="The columns that are to be required" type="array" variable="$conditional_columns">
            <type by_reference="false">array</type>
          </tag>
          <tag line="514" name="return" description="The error messages for the rule specified" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="525">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="525">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="525">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="525">
          <name>$main_columns</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="525">
          <name>$conditional_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="525">
          <name>$conditional_columns</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="567" package="Flourish">
        <name>checkDataType</name>
        <full_name>checkDataType</full_name>
        <docblock line="558">
          <description><![CDATA[Validates a value against the database data type]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="558" name="param" description="The schema object for the class" type="\fSchema" variable="$schema">
            <type by_reference="false">\fSchema</type>
          </tag>
          <tag line="558" name="param" description="The class the column is part of" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="558" name="param" description="The column to check" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="558" name="param" description="The value to check" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="558" name="return" description="An error message for the column specified" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="567">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="567">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="567">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="567">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="646" package="Flourish">
        <name>checkForeignKeyConstraints</name>
        <full_name>checkForeignKeyConstraints</full_name>
        <docblock line="637">
          <description><![CDATA[Validates values against foreign key constraints]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="637" name="param" description="The schema object for the class" type="\fSchema" variable="$schema">
            <type by_reference="false">\fSchema</type>
          </tag>
          <tag line="637" name="param" description="The class to check the foreign keys for" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="637" name="param" description="The column to check" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="637" name="param" description="&amp;$values The values to check" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="637" name="return" description="An error message for the column specified" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="646">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="646">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="646">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="646">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="690" package="Flourish">
        <name>checkOneOrMoreRule</name>
        <full_name>checkOneOrMoreRule</full_name>
        <docblock line="681">
          <description><![CDATA[Validates against a one-or-more rule]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="681" name="param" description="The schema object for the table" type="\fSchema" variable="$schema">
            <type by_reference="false">\fSchema</type>
          </tag>
          <tag line="681" name="param" description="The class the columns are part of" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="681" name="param" description="&amp;$values An associative array of all values for the record" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="681" name="param" description="The columns to check" type="array" variable="$columns">
            <type by_reference="false">array</type>
          </tag>
          <tag line="681" name="return" description="An error message for the rule" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="690">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="690">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="690">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="690">
          <name>$columns</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="723" package="Flourish">
        <name>checkOnlyOneRule</name>
        <full_name>checkOnlyOneRule</full_name>
        <docblock line="714">
          <description><![CDATA[Validates against an only-one rule]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="714" name="param" description="The schema object for the table" type="\fSchema" variable="$schema">
            <type by_reference="false">\fSchema</type>
          </tag>
          <tag line="714" name="param" description="The class the columns are part of" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="714" name="param" description="&amp;$values An associative array of all values for the record" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="714" name="param" description="The columns to check" type="array" variable="$columns">
            <type by_reference="false">array</type>
          </tag>
          <tag line="714" name="return" description="An error message for the rule" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="723">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="723">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="723">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="723">
          <name>$columns</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="763" package="Flourish">
        <name>checkPrimaryKeys</name>
        <full_name>checkPrimaryKeys</full_name>
        <docblock line="754">
          <description><![CDATA[Makes sure a record with the same primary keys is not already in the database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="754" name="param" description="The schema object for the object" type="\fSchema" variable="$schema">
            <type by_reference="false">\fSchema</type>
          </tag>
          <tag line="754" name="param" description="The instance of the class to check" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="754" name="param" description="&amp;$values An associative array of all values going into the row (needs all for multi-field unique constraint checking)" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="754" name="param" description="&amp;$old_values The old values for the record" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="754" name="return" description="A single element associative array with the key being the primary keys joined by ,s and the value being the error message" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="763">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="763">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="763">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="763">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="860" package="Flourish">
        <name>checkRegexRule</name>
        <full_name>checkRegexRule</full_name>
        <docblock line="850">
          <description><![CDATA[Validates against a regex rule]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="850" name="param" description="The class the column is part of" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="850" name="param" description="&amp;$values An associative array of all values for the record" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="850" name="param" description="The column to check" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="850" name="param" description="The PCRE regular expression" type="string" variable="$regex">
            <type by_reference="false">string</type>
          </tag>
          <tag line="850" name="param" description="The message to use if the value does not match the regular expression" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="850" name="return" description="An error message for the rule" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="860">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="860">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="860">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="860">
          <name>$regex</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="860">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="887" package="Flourish">
        <name>checkRelatedOneOrMoreRule</name>
        <full_name>checkRelatedOneOrMoreRule</full_name>
        <docblock line="877">
          <description><![CDATA[Validates against a *-to-many one or more rule]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="877" name="param" description="The object being checked" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="877" name="param" description="&amp;$values The values for the object" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="877" name="param" description="&amp;$related_records The related records for the object" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="877" name="param" description="The name of the related class" type="string" variable="$related_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="877" name="param" description="The name of the route from the class to the related class" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="877" name="return" description="An error message for the rule" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="887">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="887">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="887">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="887">
          <name>$related_class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="887">
          <name>$route</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="920" package="Flourish">
        <name>checkUniqueConstraints</name>
        <full_name>checkUniqueConstraints</full_name>
        <docblock line="911">
          <description><![CDATA[Validates values against unique constraints]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="911" name="param" description="The schema object for the object" type="\fSchema" variable="$schema">
            <type by_reference="false">\fSchema</type>
          </tag>
          <tag line="911" name="param" description="The instance of the class to check" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="911" name="param" description="&amp;$values The values to check" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="911" name="param" description="&amp;$old_values The old values for the record" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="911" name="return" description="An aray of error messages for the unique constraints" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="920">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="920">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="920">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="920">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="1024" package="Flourish">
        <name>checkValidValuesRule</name>
        <full_name>checkValidValuesRule</full_name>
        <docblock line="1015">
          <description><![CDATA[Validates against a valid values rule]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1015" name="param" description="The class this rule applies to" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1015" name="param" description="&amp;$values An associative array of all values for the record" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1015" name="param" description="The column the rule applies to" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1015" name="param" description="An array of valid values to check the column against" type="array" variable="$valid_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1015" name="return" description="The error message for the rule specified" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1024">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1024">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1024">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1024">
          <name>$valid_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="1048" package="Flourish">
        <name>compose</name>
        <full_name>compose</full_name>
        <docblock line="1040">
          <description><![CDATA[Composes text using fText if loaded]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1040" name="param" description="The message to compose" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1040" name="param" description="A string or number to insert into the message" type="mixed" variable="$component">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1040" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1040" name="return" description="The composed and possible translated message" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1048">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="1071" package="Flourish">
        <name>initializeRuleArrays</name>
        <full_name>initializeRuleArrays</full_name>
        <docblock line="1063">
          <description><![CDATA[Makes sure each rule array is set to at least an empty array]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1063" name="internal" description=""/>
          <tag line="1063" name="param" description="The class to initilize the arrays for" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1063" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1071">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1092" package="Flourish">
        <name>inspect</name>
        <full_name>inspect</full_name>
        <docblock line="1082">
          <description><![CDATA[Adds metadata about features added by this class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1082" name="internal" description=""/>
          <tag line="1082" name="param" description="The class being inspected" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1082" name="param" description="The column being inspected" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1082" name="param" description="&amp;$metadata The array of metadata about a column" type="array" variable="$metadata">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1082" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1092">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1092">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1092">
          <name>$metadata</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1126" package="Flourish">
        <name>hasValue</name>
        <full_name>hasValue</full_name>
        <docblock line="1100">
          <description><![CDATA[Checks to see if a columns has a value, but based on the schema and if the column allows NULL]]></description>
          <long-description><![CDATA[<p>If the columns allows NULL values, than anything other than NULL
will be returned as TRUE. If the column does not allow NULL and
the value is anything other than the "empty" value for that data type,
then TRUE will be returned.</p>

<p>The values that are considered "empty" for each data type are as follows.
Please note that there is no "empty" value for dates, times or
timestamps.</p>

<ul>
<li>Blob: ''</li>
<li>Boolean: FALSE</li>
<li>Float: 0.0</li>
<li>Integer: 0</li>
<li>String: ''</li>
</ul>]]></long-description>
          <tag line="1100" name="internal" description=""/>
          <tag line="1100" name="param" description="The schema object for the table" type="\fSchema" variable="$schema">
            <type by_reference="false">\fSchema</type>
          </tag>
          <tag line="1100" name="param" description="The class the column is part of" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1100" name="param" description="&amp;$values An associative array of all values for the record" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1100" name="param" description="The column to check" type="array" variable="$columns">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1100" name="return" description="An error message for the rule" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1126">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1126">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1126">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1126">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="1184" package="Flourish">
        <name>isCaseInsensitive</name>
        <full_name>isCaseInsensitive</full_name>
        <docblock line="1175">
          <description><![CDATA[Checks to see if a column has been set as case insensitive]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1175" name="internal" description=""/>
          <tag line="1175" name="param" description="The class to check" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1175" name="param" description="The column to check" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1175" name="return" description="If the column is set to be case insensitive" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="1184">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1184">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="1196" package="Flourish">
        <name>isNonBlankString</name>
        <full_name>isNonBlankString</full_name>
        <docblock line="1190">
          <description><![CDATA[Returns FALSE if the string is empty - used for array filtering]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1190" name="param" description="The string to check" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1190" name="return" description="If the string is not blank" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="1196">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1215" package="Flourish">
        <name>removeRegexReplacement</name>
        <full_name>removeRegexReplacement</full_name>
        <docblock line="1205">
          <description><![CDATA[Removes a regex replacement]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1205" name="internal" description=""/>
          <tag line="1205" name="param" description="The class name or instance of the class the columns exists in" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1205" name="param" description="The string to search for" type="string" variable="$search">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1205" name="param" description="The string to replace with" type="string" variable="$replace">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1205" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1215">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1215">
          <name>$search</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1215">
          <name>$replace</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1253" package="Flourish">
        <name>removeStringReplacement</name>
        <full_name>removeStringReplacement</full_name>
        <docblock line="1243">
          <description><![CDATA[Removes a string replacement]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1243" name="internal" description=""/>
          <tag line="1243" name="param" description="The class name or instance of the class the columns exists in" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1243" name="param" description="The string to search for" type="string" variable="$search">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1243" name="param" description="The string to replace with" type="string" variable="$replace">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1243" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1253">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1253">
          <name>$search</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1253">
          <name>$replace</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1290" package="Flourish">
        <name>reorderMessages</name>
        <full_name>reorderMessages</full_name>
        <docblock line="1281">
          <description><![CDATA[Reorders list items in an html string based on their contents]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1281" name="internal" description=""/>
          <tag line="1281" name="param" description="The class to reorder messages for" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1281" name="param" description="An array of the messages" type="array" variable="$messages">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1281" name="return" description="The reordered messages" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1290">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1290">
          <name>$messages</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1330" package="Flourish">
        <name>replaceMessages</name>
        <full_name>replaceMessages</full_name>
        <docblock line="1321">
          <description><![CDATA[Takes a list of messages and performs string and regex replacements on them]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1321" name="internal" description=""/>
          <tag line="1321" name="param" description="The class to reorder messages for" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1321" name="param" description="The array of messages" type="array" variable="$messages">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1321" name="return" description="The new array of messages" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1330">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1330">
          <name>$messages</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1369" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="1362">
          <description><![CDATA[Resets the configuration of the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1362" name="internal" description=""/>
          <tag line="1362" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1392" package="Flourish">
        <name>setColumnCaseInsensitive</name>
        <full_name>setColumnCaseInsensitive</full_name>
        <docblock line="1385">
          <description><![CDATA[Sets a column to be compared in a case-insensitive manner when checking `UNIQUE` and `PRIMARY KEY` constraints]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1385" name="param" description="The class name or instance of the class the column is located in" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1385" name="param" description="The column to set as case-insensitive" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1385" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1392">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1392">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1427" package="Flourish">
        <name>setMessageOrder</name>
        <full_name>setMessageOrder</full_name>
        <docblock line="1417">
          <description><![CDATA[Allows setting the order that the list items in a message will be displayed]]></description>
          <long-description><![CDATA[<p>All string comparisons during the reordering process are done in a
case-insensitive manner.</p>]]></long-description>
          <tag line="1417" name="param" description="The class name or an instance of the class to set the message order for" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1417" name="param" description="This should be an ordered array of strings. If a line contains the string it will be displayed in the relative order it occurs in this array." type="array" variable="$matches">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1417" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1427">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1427">
          <name>$matches</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="1450" package="Flourish">
        <name>sortMessageMatches</name>
        <full_name>sortMessageMatches</full_name>
        <docblock line="1443">
          <description><![CDATA[Compares the message matching strings by longest first so that the longest matches are made first]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1443" name="param" description="The first string to compare" type="string" variable="$a">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1443" name="param" description="The second string to compare" type="string" variable="$b">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1443" name="return" description="`-1` if `$a` is longer than `$b`, `0` if they are equal length, `1` if `$a` is shorter than `$b`" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="1450">
          <name>$a</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1450">
          <name>$b</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="1468" package="Flourish">
        <name>stringlike</name>
        <full_name>stringlike</full_name>
        <docblock line="1462">
          <description><![CDATA[Returns `TRUE` for non-empty strings, numbers, objects, empty numbers and string-like numbers (such as `0`, `0.0`, `'0'`)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1462" name="param" description="The value to check" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1462" name="return" description="If the value is string-like" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="1468">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1488" package="Flourish">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="1478">
          <description><![CDATA[Validates values for an fActiveRecord object against the database schema and any additional rules that have been added]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1478" name="internal" description=""/>
          <tag line="1478" name="param" description="The instance of the class to validate" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="1478" name="param" description="The values to validate" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1478" name="param" description="The old values for the record" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1478" name="return" description="An array of messages" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1488">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1488">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1488">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1559" package="Flourish">
        <name>validateRelated</name>
        <full_name>validateRelated</full_name>
        <docblock line="1549">
          <description><![CDATA[Validates related records for an fActiveRecord object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1549" name="internal" description=""/>
          <tag line="1549" name="param" description="The object to validate" type="\fActiveRecord" variable="$object">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="1549" name="param" description="&amp;$values The values for the object" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1549" name="param" description="&amp;$related_records The related records for the object" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1549" name="return" description="An array of messages" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1559">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1559">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1559">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fORMValidation.php</error>
      <notice line="1040" code="50013">Parameter $component could not be found in compose()</notice>
      <notice line="1040" code="50013">Parameter  could not be found in compose()</notice>
      <error line="1100" code="50014">Name of argument $column does not match with the DocBlock's name $columns in hasValue()</error>
      <notice line="1100" code="50013">Parameter $columns could not be found in hasValue()</notice>
    </parse_markers>
  </file>
  <file path="php/flourish/fTemplating.php" hash="df3558c1e82c94eac0ca37cab671ba5c" package="Sutra">
    <include line="1268" type="Include" package="Sutra">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="40" package="Flourish">
      <extends/>
      <name>fTemplating</name>
      <full_name>\fTemplating</full_name>
      <docblock line="2">
        <description><![CDATA[Allows for quick and flexible HTML templating]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2011 Will Bond, others"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="author" description="Matt Nowack [mn] &lt;mdnowack@gmail.com&gt;"/>
        <tag line="2" name="author" description="Jeff Turcotte [jt] &lt;jeff@imarc.net&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fTemplating" link="http://flourishlib.com/fTemplating"/>
        <tag line="2" name="version" description="1.0.0b24"/>
        <tag line="2" name="changes" description="1.0.0b24  Added getRootPath() to retrieve the path fTemplating was instantiated with [jt, 2012-10-24]"/>
        <tag line="2" name="changes" description="1.0.0b23  Added a default `$name` for ::retrieve() to mirror ::attach() [wb, 2011-08-31]"/>
        <tag line="2" name="changes" description="1.0.0b22  Backwards Compatibility Break - removed the static method ::create(), added the static method ::attach() to fill its place [wb, 2011-08-31]"/>
        <tag line="2" name="changes" description="1.0.0b21  Fixed a bug in ::enableMinification() where the minification cache directory was sometimes not properly converted to a web path [wb, 2011-08-31]"/>
        <tag line="2" name="changes" description="1.0.0b20  Fixed a bug in CSS minification that would reduce multiple zeros that are part of a hex color code, fixed minification of `+ ++` and similar constructs in JS [wb, 2011-08-31]"/>
        <tag line="2" name="changes" description="1.0.0b19  Corrected a bug in ::enablePHPShortTags() that would prevent proper translation inside of HTML tag attributes [wb, 2011-01-09]"/>
        <tag line="2" name="changes" description="1.0.0b18  Fixed a bug with CSS minification and black hex codes [wb, 2010-10-10]"/>
        <tag line="2" name="changes" description="1.0.0b17  Backwards Compatibility Break - ::delete() now returns the values of the element or elements that were deleted instead of returning the fTemplating instance [wb, 2010-09-19]"/>
        <tag line="2" name="changes" description="1.0.0b16  Fixed another bug with minifying JS regex literals [wb, 2010-09-13]"/>
        <tag line="2" name="changes" description="1.0.0b15  Fixed a bug with minifying JS regex literals that occur after a reserved word [wb, 2010-09-12]"/>
        <tag line="2" name="changes" description="1.0.0b14  Added documentation about `[sub-key]` syntax [wb, 2010-09-12]"/>
        <tag line="2" name="changes" description="1.0.0b13  Backwards Compatibility Break - ::add(), ::delete(), ::get() and ::set() now interpret `[` and `]` as array shorthand and thus they can not be used in element names, renamed ::remove() to ::filter() - added `$beginning` parameter to ::add() and added ::remove() method [wb, 2010-09-12]"/>
        <tag line="2" name="changes" description="1.0.0b12  Added ::enableMinification(), ::enablePHPShortTags(), the ability to be able to place child fTemplating objects via a new magic element `__main__` and the `$main_element` parameter for ::__construct() [wb, 2010-08-31]"/>
        <tag line="2" name="changes" description="1.0.0b11  Fixed a bug with the elements not being initialized to a blank array [wb, 2010-08-12]"/>
        <tag line="2" name="changes" description="1.0.0b10  Updated ::place() to ignore URL query strings when detecting an element type [wb, 2010-07-26]"/>
        <tag line="2" name="changes" description="1.0.0b9   Added the methods ::delete() and ::remove() [wb+mn, 2010-07-15]"/>
        <tag line="2" name="changes" description="1.0.0b8   Fixed a bug with placing absolute file paths on Windows [wb, 2010-07-09]"/>
        <tag line="2" name="changes" description="1.0.0b7   Removed `e` flag from preg_replace() calls [wb, 2010-06-08]"/>
        <tag line="2" name="changes" description="1.0.0b6   Changed ::set() and ::add() to return the object for method chaining, changed ::set() and ::get() to accept arrays of elements [wb, 2010-06-02]"/>
        <tag line="2" name="changes" description="1.0.0b5   Added ::encode() [wb, 2010-05-20]"/>
        <tag line="2" name="changes" description="1.0.0b4   Added ::create() and ::retrieve() for named fTemplating instances [wb, 2010-05-11]"/>
        <tag line="2" name="changes" description="1.0.0b3   Fixed an issue with placing relative file path [wb, 2010-04-23]"/>
        <tag line="2" name="changes" description="1.0.0b2   Added the ::inject() method [wb, 2009-01-09]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2007-06-14]"/>
      </docblock>
      <constant namespace="global" line="42" package="Flourish">
        <name>attach</name>
        <full_name>attach</full_name>
        <value><![CDATA['fTemplating::attach']]></value>
      </constant>
      <constant namespace="global" line="43" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <value><![CDATA['fTemplating::reset']]></value>
      </constant>
      <constant namespace="global" line="44" package="Flourish">
        <name>retrieve</name>
        <full_name>retrieve</full_name>
        <value><![CDATA['fTemplating::retrieve']]></value>
      </constant>
      <property final="false" static="true" visibility="public" line="52" namespace="global" package="Sutra">
        <name>$instances</name>
        <default><![CDATA[array()]]></default>
        <docblock line="47">
          <description><![CDATA[Named fTemplating instances]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="47" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="104" namespace="global" package="Sutra">
        <name>$buffered_id</name>
        <default><![CDATA[]]></default>
        <docblock line="99">
          <description><![CDATA[The buffered object id, used for differentiating different instances when doing replacements]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="99" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="111" namespace="global" package="Sutra">
        <name>$elements</name>
        <default><![CDATA[]]></default>
        <docblock line="106">
          <description><![CDATA[A data store for templating]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="106" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="118" namespace="global" package="Sutra">
        <name>$minification_directory</name>
        <default><![CDATA[]]></default>
        <docblock line="113">
          <description><![CDATA[The directory to store minified code in]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="113" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="125" namespace="global" package="Sutra">
        <name>$minification_prefix</name>
        <default><![CDATA[]]></default>
        <docblock line="120">
          <description><![CDATA[The path prefix to prepend to CSS and JS paths to find them on the filesystem]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="120" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="132" namespace="global" package="Sutra">
        <name>$minification_mode</name>
        <default><![CDATA[]]></default>
        <docblock line="127">
          <description><![CDATA[The minification mode: development or production]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="127" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="139" namespace="global" package="Sutra">
        <name>$root</name>
        <default><![CDATA[]]></default>
        <docblock line="134">
          <description><![CDATA[The directory to look for files]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="134" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="146" namespace="global" package="Sutra">
        <name>$short_tag_directory</name>
        <default><![CDATA[]]></default>
        <docblock line="141">
          <description><![CDATA[The directory to store PHP files with short tags fixed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="141" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="153" namespace="global" package="Sutra">
        <name>$short_tag_mode</name>
        <default><![CDATA[]]></default>
        <docblock line="148">
          <description><![CDATA[The short tag mode: development or production]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="148" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="62" package="Flourish">
        <name>attach</name>
        <full_name>attach</full_name>
        <docblock line="55">
          <description><![CDATA[Attaches a named template that can be accessed from any scope via ::retrieve()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="55" name="param" description="The fTemplating object to attach" type="\fTemplating" variable="$templating">
            <type by_reference="false">\fTemplating</type>
          </tag>
          <tag line="55" name="param" description="The name for this templating instance" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="55" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="62">
          <name>$templating</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="62">
          <name>$name</name>
          <default><![CDATA['default']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="75" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="68">
          <description><![CDATA[Resets the configuration of the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="68" name="internal" description=""/>
          <tag line="68" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="87" package="Flourish">
        <name>retrieve</name>
        <full_name>retrieve</full_name>
        <docblock line="81">
          <description><![CDATA[Retrieves a named template]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="81" name="param" description="The name of the template to retrieve" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="81" name="return" description="The specified fTemplating instance" type="\fTemplating">
            <type by_reference="false">\fTemplating</type>
          </tag>
        </docblock>
        <argument line="87">
          <name>$name</name>
          <default><![CDATA['default']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="163" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="156">
          <description><![CDATA[Initializes this templating engine]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="156" name="param" description="The filesystem path to use when accessing relative files, defaults to `$_SERVER['DOCUMENT_ROOT']`" type="string" variable="$root">
            <type by_reference="false">string</type>
          </tag>
          <tag line="156" name="param" description="The value for the `__main__` element - this is used when calling ::place() without an element, or when placing fTemplating objects as children" type="string" variable="$main_element">
            <type by_reference="false">string</type>
          </tag>
          <tag line="156" name="return" description="" type="\fTemplating">
            <type by_reference="false">\fTemplating</type>
          </tag>
        </docblock>
        <argument line="163">
          <name>$root</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="163">
          <name>$main_element</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="204" package="Flourish">
        <name>__destruct</name>
        <full_name>__destruct</full_name>
        <docblock line="197">
          <description><![CDATA[Finishing placing elements if buffering was used]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="197" name="internal" description=""/>
          <tag line="197" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="223" package="Flourish">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="215">
          <description><![CDATA[All requests that hit this method should be requests for callbacks]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="215" name="internal" description=""/>
          <tag line="215" name="param" description="The method to create a callback for" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="215" name="return" description="The callback for the method requested" type="callback">
            <type by_reference="false">callback</type>
          </tag>
        </docblock>
        <argument line="223">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="237" package="Flourish">
        <name>add</name>
        <full_name>add</full_name>
        <docblock line="229">
          <description><![CDATA[Adds a value to an array element]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="229" name="param" description="The element to add to - array elements can be modified via `[sub-key]` syntax, and thus `[` and `]` can not be used in element names" type="string" variable="$element">
            <type by_reference="false">string</type>
          </tag>
          <tag line="229" name="param" description="The value to add" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="229" name="param" description="If the value should be added to the beginning of the element" type="boolean" variable="$beginning">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="229" name="return" description="The template object, to allow for method chaining" type="\fTemplating">
            <type by_reference="false">\fTemplating</type>
          </tag>
        </docblock>
        <argument line="237">
          <name>$element</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="237">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="237">
          <name>$beginning</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="298" package="Flourish">
        <name>buffer</name>
        <full_name>buffer</full_name>
        <docblock line="286">
          <description><![CDATA[Enables buffered output, allowing ::set() and ::add() to happen after a ::place() but act as if they were done before]]></description>
          <long-description><![CDATA[<p>Please note that using buffered output will affect the order in which
code is executed since the elements are not actually ::place()'ed until
the destructor is called.</p>

<p>If the non-template code depends on template code being executed
sequentially before it, you may not want to use output buffering.</p>]]></long-description>
          <tag line="286" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="324" package="Flourish">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="316">
          <description><![CDATA[Deletes an element from the template]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="316" name="param" description="The element to delete - array elements can be modified via `[sub-key]` syntax, and thus `[` and `]` can not be used in element names" type="string" variable="$element">
            <type by_reference="false">string</type>
          </tag>
          <tag line="316" name="param" description="The value to return if the `$element` is not set" type="mixed" variable="$default_value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="316" name="param" description="|$elements The elements to delete - an array of element names or an associative array of keys being element names and the values being the default values" type="array" variable="">
            <type by_reference="false">array</type>
          </tag>
          <tag line="316" name="return" description="The value of the `$element` that was deleted - an associative array of deleted elements will be returned if an array of `$elements` was specified" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="324">
          <name>$element</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="324">
          <name>$default_value</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="385" package="Flourish">
        <name>destroy</name>
        <full_name>destroy</full_name>
        <docblock line="380">
          <description><![CDATA[Erases all output since the invocation of the template - only works if buffering is on]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="380" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="422" package="Flourish">
        <name>enableMinification</name>
        <full_name>enableMinification</full_name>
        <docblock line="402">
          <description><![CDATA[Enables minified output for CSS and JS elements]]></description>
          <long-description><![CDATA[<p>For CSS and JS, compilation means that the file will be minified and
cached. The filename will change whenever the content change, allowing
for far-futures expire headers.</p>

<p>Please note that this option requires that all CSS and JS paths be
relative to the $_SERVER['DOCUMENT_ROOT'] and start with a <code>/</code>. Also
this class will not clean up old cached files out of the cache
directory.</p>

<p>This functionality will be inherited by all child fTemplating objects
that do not have their own explicit minification settings.</p>]]></long-description>
          <tag line="402" name="param" description="The compilation mode - `'development'` means that file modification times will be checked on each load, `'production'` means that the cache files will only be regenerated when missing" type="string" variable="$mode">
            <type by_reference="false">string</type>
          </tag>
          <tag line="402" name="param" description="The directory to cache the compiled files into - this needs to be inside the document root or a path added to fFilesystem::addWebPathTranslation()" type="\fDirectory|string" variable="$cache_directory">
            <type by_reference="false">\fDirectory</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="402" name="param" description="The directory to prepend to all CSS and JS paths to load the files from the filesystem - this defaults to `$_SERVER['DOCUMENT_ROOT']`" type="\fDirectory|string" variable="$path_prefix">
            <type by_reference="false">\fDirectory</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="402" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="422">
          <name>$mode</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="422">
          <name>$cache_directory</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="422">
          <name>$path_prefix</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="467" package="Flourish">
        <name>enablePHPShortTags</name>
        <full_name>enablePHPShortTags</full_name>
        <docblock line="452">
          <description><![CDATA[Converts PHP short tags to long tags when short tags are turned off]]></description>
          <long-description><![CDATA[<p>Please note that this only affects PHP files that are <strong>directly</strong>
evaluated with ::place() or ::inject(). It will not affect PHP files that
have been evaluated via <code>include</code> or <code>require</code> statements inside of the
directly evaluated PHP files.</p>

<p>This functionality will be inherited by all child fTemplating objects
that do not have their own explicit short tag settings.</p>]]></long-description>
          <tag line="452" name="param" description="The compilation mode - `'development'` means that file modification times will be checked on each load, `'production'` means that the cache files will only be regenerated when missing" type="string" variable="$mode">
            <type by_reference="false">string</type>
          </tag>
          <tag line="452" name="param" description="The directory to cache the compiled files into - this directory should not be accessible from the web" type="\fDirectory|string" variable="$cache_directory">
            <type by_reference="false">\fDirectory</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="452" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="467">
          <name>$mode</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="467">
          <name>$cache_directory</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="503" package="Flourish">
        <name>encode</name>
        <full_name>encode</full_name>
        <docblock line="496">
          <description><![CDATA[Gets the value of an element and runs it through fHTML::encode()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="496" name="param" description="The element to get - array elements can be accessed via `[sub-key]` syntax, and thus `[` and `]` can not be used in element names" type="string" variable="$element">
            <type by_reference="false">string</type>
          </tag>
          <tag line="496" name="param" description="The value to return if the element has not been set" type="mixed" variable="$default_value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="496" name="return" description="The value of the element specified run through fHTML::encode(), or the default value if it has not been set" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="503">
          <name>$element</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="503">
          <name>$default_value</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="516" package="Flourish">
        <name>filter</name>
        <full_name>filter</full_name>
        <docblock line="509">
          <description><![CDATA[Removes a value from an array element]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="509" name="param" description="The element to remove from - array elements can be modified via `[sub-key]` syntax, and thus `[` and `]` can not be used in element names" type="string" variable="$element">
            <type by_reference="false">string</type>
          </tag>
          <tag line="509" name="param" description="The value to remove - compared in a non-strict manner, such that removing `0` will remove a blank string and false also" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="509" name="return" description="The template object, to allow for method chaining" type="\fTemplating">
            <type by_reference="false">\fTemplating</type>
          </tag>
        </docblock>
        <argument line="516">
          <name>$element</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="516">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="572" package="Flourish">
        <name>fixShortTags</name>
        <full_name>fixShortTags</full_name>
        <docblock line="566">
          <description><![CDATA[Takes an array of PHP files and caches a version with all short tags converted to regular tags]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="566" name="param" description="The file paths to the PHP files" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="566" name="return" description="An array of file paths to the corresponding converted PHP files" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="572">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="673" package="Flourish">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="665">
          <description><![CDATA[Gets the value of an element]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="665" name="param" description="The element to get - array elements can be accessed via `[sub-key]` syntax, and thus `[` and `]` can not be used in element names" type="string" variable="$element">
            <type by_reference="false">string</type>
          </tag>
          <tag line="665" name="param" description="The value to return if the element has not been set" type="mixed" variable="$default_value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="665" name="param" description="|$elements An array of elements to get, or an associative array where a string key is the element to get and the value is the default value" type="array" variable="">
            <type by_reference="false">array</type>
          </tag>
          <tag line="665" name="return" description="The value of the element(s) specified, or the default value(s) if it has not been set" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="673">
          <name>$element</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="673">
          <name>$default_value</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="721" package="Flourish">
        <name>getRootPath</name>
        <full_name>getRootPath</full_name>
        <docblock line="716">
          <description><![CDATA[Gets the root path]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="716" name="return" description="The root path for the instance" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="734" package="Flourish">
        <name>handleMinified</name>
        <full_name>handleMinified</full_name>
        <docblock line="726">
          <description><![CDATA[Combines an array of CSS or JS files and places them as a single file]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="726" name="param" description="The type of compilation, 'css' or 'js'" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="726" name="param" description="The element name" type="string" variable="$element">
            <type by_reference="false">string</type>
          </tag>
          <tag line="726" name="param" description="An array of file paths" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="726" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="734">
          <name>$type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="734">
          <name>$element</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="734">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="825" package="Flourish">
        <name>inject</name>
        <full_name>inject</full_name>
        <docblock line="816">
          <description><![CDATA[Includes the file specified - this is identical to ::place() except a filename is specified instead of an element]]></description>
          <long-description><![CDATA[<p>Please see the ::place() method for more details about functionality.</p>]]></long-description>
          <tag line="816" name="param" description="The file to place" type="string" variable="$file_path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="816" name="param" description="Will force the file to be placed as this type of file instead of auto-detecting the file type. Valid types include: `'css'`, `'js'`, `'php'` and `'rss'`." type="string" variable="$file_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="816" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="825">
          <name>$file_path</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="825">
          <name>$file_type</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="852" package="Flourish">
        <name>minify</name>
        <full_name>minify</full_name>
        <docblock line="839">
          <description><![CDATA[Minifies JS or CSS]]></description>
          <long-description><![CDATA[<p>For JS, this function is based on the JSMin algorithm (not the code) from
http://www.crockford.com/javascript/jsmin.html with the addition of
preserving /*! comment blocks for things like licenses. Some other
versions of JSMin change the contents of special comment blocks, but
this version does not.</p>]]></long-description>
          <tag line="839" name="param" description="The code to minify" type="string" variable="$code">
            <type by_reference="false">string</type>
          </tag>
          <tag line="839" name="param" description="The type of code, 'css' or 'js'" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="839" name="return" description="The minified code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="852">
          <name>$code</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="852">
          <name>$type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="932" package="Flourish">
        <name>minifyCode</name>
        <full_name>minifyCode</full_name>
        <docblock line="923">
          <description><![CDATA[Takes a block of CSS or JS and reduces the number of characters]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="923" name="param" description="&amp;$part The part of code to minify" type="string" variable="$part">
            <type by_reference="false">string</type>
          </tag>
          <tag line="923" name="param" description="&amp;$buffer A buffer containing the last code or literal encountered" type="string" variable="$buffer">
            <type by_reference="false">string</type>
          </tag>
          <tag line="923" name="param" description="A stack used to keep track of the nesting level of CSS" type="array" variable="$stack">
            <type by_reference="false">array</type>
          </tag>
          <tag line="923" name="param" description="The type of code, `'css'` or `'js'`" type="mixed" variable="$type">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="923" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="932">
          <name>$part</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="932">
          <name>$buffer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="932">
          <name>$stack</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="932">
          <name>$type</name>
          <default><![CDATA['js']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1043" package="Flourish">
        <name>minifyLiteral</name>
        <full_name>minifyLiteral</full_name>
        <docblock line="1035">
          <description><![CDATA[Takes a literal and either discards or keeps it]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1035" name="param" description="&amp;$part The literal to process" type="mixed" variable="$part">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1035" name="param" description="&amp;$buffer The last literal or code processed" type="mixed" variable="$buffer">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1035" name="param" description="The language the literal is in, `'css'` or `'js'`" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1035" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1043">
          <name>$part</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1043">
          <name>$buffer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1043">
          <name>$type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1088" package="Flourish">
        <name>place</name>
        <full_name>place</full_name>
        <docblock line="1057">
          <description><![CDATA[Includes the element specified - element must be set through ::set() first]]></description>
          <long-description><![CDATA[<p>If the element is a file path ending in <code>.css</code>, <code>.js</code>, <code>.rss</code> or <code>.xml</code>
an appropriate HTML tag will be printed (files ending in <code>.xml</code> will be
treated as an RSS feed). If the element is a file path ending in <code>.inc</code>,
<code>.php</code> or <code>.php5</code> it will be included.</p>

<p>Paths that start with <code>./</code> will be loaded relative to the current script.
Paths that start with a file or directory name will be loaded relative
to the <code>$root</code> passed in the constructor. Paths that start with <code>/</code> will
be loaded from the root of the filesystem.</p>

<p>You can pass the <code>media</code> attribute of a CSS file or the <code>title</code> attribute
of an RSS feed by adding an associative array with the following formats:</p>

<p>{{{
array(
    'path'  => (string) {css file path},
    'media' => (string) {media type}
);
array(
    'path'  => (string) {rss file path},
    'title' => (string) {feed title}
);
}}}</p>]]></long-description>
          <tag line="1057" name="param" description="The element to place" type="string" variable="$element">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1057" name="param" description="Will force the element to be placed as this type of file instead of auto-detecting the file type. Valid types include: `'css'`, `'js'`, `'php'` and `'rss'`." type="string" variable="$file_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1057" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1088">
          <name>$element</name>
          <default><![CDATA['__main__']]></default>
          <type/>
        </argument>
        <argument line="1088">
          <name>$file_type</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1110" package="Flourish">
        <name>placeCSS</name>
        <full_name>placeCSS</full_name>
        <docblock line="1104">
          <description><![CDATA[Prints a CSS `link` HTML tag to the output]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1104" name="param" description="The path or array containing the `'path'` to the CSS file. Array can also contain a key `'media'`." type="mixed" variable="$info">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1104" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1110">
          <name>$info</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1131" package="Flourish">
        <name>placeElement</name>
        <full_name>placeElement</full_name>
        <docblock line="1124">
          <description><![CDATA[Performs the action of actually placing an element]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1124" name="param" description="The element that is being placed" type="string" variable="$element">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1124" name="param" description="The file type to treat all values as" type="string" variable="$file_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1124" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1131">
          <name>$element</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1131">
          <name>$file_type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1228" package="Flourish">
        <name>placeJS</name>
        <full_name>placeJS</full_name>
        <docblock line="1222">
          <description><![CDATA[Prints a java`script` HTML tag to the output]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1222" name="param" description="The path or array containing the `'path'` to the javascript file" type="mixed" variable="$info">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1222" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1228">
          <name>$info</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1245" package="Flourish">
        <name>placePHP</name>
        <full_name>placePHP</full_name>
        <docblock line="1238">
          <description><![CDATA[Includes a PHP file]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1238" name="param" description="The element being placed" type="string" variable="$element">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1238" name="param" description="The path to the PHP file" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1238" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1245">
          <name>$element</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1245">
          <name>$path</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1278" package="Flourish">
        <name>placeRSS</name>
        <full_name>placeRSS</full_name>
        <docblock line="1272">
          <description><![CDATA[Prints an RSS `link` HTML tag to the output]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1272" name="param" description="The path or array containing the `'path'` to the RSS xml file. May also contain a `'title'` key for the title of the RSS feed." type="mixed" variable="$info">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1272" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1278">
          <name>$info</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1305" package="Flourish">
        <name>placeBuffered</name>
        <full_name>placeBuffered</full_name>
        <docblock line="1300">
          <description><![CDATA[Performs buffered replacements using a breadth-first technique]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1300" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1330" package="Flourish">
        <name>placeBufferedCallback</name>
        <full_name>placeBufferedCallback</full_name>
        <docblock line="1324">
          <description><![CDATA[Performs a captured place of an element to use with buffer placing]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1324" name="param" description="A regex match from ::placeBuffered()" type="array" variable="$match">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1324" name="return" description="The output of placing the element" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1330">
          <name>$match</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1345" package="Flourish">
        <name>prepare</name>
        <full_name>prepare</full_name>
        <docblock line="1338">
          <description><![CDATA[Gets the value of an element and runs it through fHTML::prepare()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1338" name="param" description="The element to get - array elements can be access via `[sub-key]` syntax, and thus `[` and `]` can not be used in element names" type="string" variable="$element">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1338" name="param" description="The value to return if the element has not been set" type="mixed" variable="$default_value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1338" name="return" description="The value of the element specified run through fHTML::prepare(), or the default value if it has not been set" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="1345">
          <name>$element</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1345">
          <name>$default_value</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1358" package="Flourish">
        <name>remove</name>
        <full_name>remove</full_name>
        <docblock line="1351">
          <description><![CDATA[Removes and returns the value from the end of an array element]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1351" name="param" description="The element to remove from to - array elements can be modified via `[sub-key]` syntax, and thus `[` and `]` can not be used in element names" type="string" variable="$element">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1351" name="param" description="If the value should be removed from the beginning of the element" type="boolean" variable="$beginning">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1351" name="return" description="The value that was removed" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="1358">
          <name>$element</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1358">
          <name>$beginning</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1413" package="Flourish">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="1405">
          <description><![CDATA[Sets the value for an element]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1405" name="param" description="The element to set - the magic element `__main__` is used for placing the current fTemplating object as a child of another fTemplating object - array elements can be modified via `[sub-key]` syntax, and thus `[` and `]` can not be used in element names" type="string" variable="$element">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1405" name="param" description="The value for the element" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1405" name="param" description=":$elements An associative array with the key being the `$element` to set and the value being the `$value` for that element" type="array" variable="">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1405" name="return" description="The template object, to allow for method chaining" type="\fTemplating">
            <type by_reference="false">\fTemplating</type>
          </tag>
        </docblock>
        <argument line="1413">
          <name>$element</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1413">
          <name>$value</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1455" package="Flourish">
        <name>verifyValue</name>
        <full_name>verifyValue</full_name>
        <docblock line="1447">
          <description><![CDATA[Ensures the value is valid]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1447" name="param" description="The element that is being placed" type="string" variable="$element">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1447" name="param" description="A value to be placed" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1447" name="param" description="The file type that this element will be displayed as - skips checking file extension" type="string" variable="$file_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1447" name="return" description="The file type of the value being placed" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1455">
          <name>$element</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1455">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1455">
          <name>$file_type</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fTemplating.php</error>
      <notice line="316" code="50013">Parameter  could not be found in delete()</notice>
      <notice line="665" code="50013">Parameter  could not be found in get()</notice>
      <notice line="1405" code="50013">Parameter  could not be found in set()</notice>
    </parse_markers>
  </file>
  <file path="php/flourish/fActiveRecord.php" hash="be617fc66eb0f49f860f6120af03672a" package="Sutra">
    <class final="true" abstract="true" namespace="global" line="103" package="Flourish">
      <extends/>
      <name>fActiveRecord</name>
      <full_name>\fActiveRecord</full_name>
      <docblock line="2">
        <description><![CDATA[An [http://en.wikipedia.org/wiki/Active_record_pattern active record pattern] base class]]></description>
        <long-description><![CDATA[<p>This class uses fORMSchema to inspect your database and provides an
OO interface to a single database table. The class dynamically handles
method calls for getting, setting and other operations on columns. It also
dynamically handles retrieving and storing related records.</p>]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2011 Will Bond, others"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="author" description="Will Bond, iMarc LLC [wb-imarc] &lt;will@imarc.net&gt;"/>
        <tag line="2" name="author" description="Jeff Turcotte [jt] &lt;jeff.turcotte@gmail.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fActiveRecord" link="http://flourishlib.com/fActiveRecord"/>
        <tag line="2" name="version" description="1.0.0b82"/>
        <tag line="2" name="changes" description="1.0.0b82  Added support for registering methods for __callStatic() [jt, 2011-07-25]"/>
        <tag line="2" name="changes" description="1.0.0b81  Fixed a bug with updating a record that contains only an auto-incrementing primary key [wb, 2011-09-06]"/>
        <tag line="2" name="changes" description="1.0.0b80  Added support to ::checkCondition() for the `^~` and `$~` operators [wb, 2011-06-20]"/>
        <tag line="2" name="changes" description="1.0.0b79  Fixed some bugs in handling relationships between PHP 5.3 namespaced classes [wb, 2011-05-26]"/>
        <tag line="2" name="changes" description="1.0.0b78  Backwards Compatibility Break - ::reflect() now returns an associative array instead of a string [wb, 2011-05-10]"/>
        <tag line="2" name="changes" description="1.0.0b77  Fixed ::inspect() to not throw an fProgrammerException when a valid element has a `NULL` value [wb, 2011-05-10]"/>
        <tag line="2" name="changes" description="1.0.0b76  Added ::clearIdentityMap() [wb, 2011-05-09]"/>
        <tag line="2" name="changes" description="1.0.0b75  Fixed a bug where child records of a record with a non-auto-incrementing primary key would not be saved properly for a new record [wb, 2010-12-06]"/>
        <tag line="2" name="changes" description="1.0.0b74  Updated ::populate() to use the `binary` type for fRequest::get() [wb, 2010-11-30]"/>
        <tag line="2" name="changes" description="1.0.0b73  Backwards Compatibility Break - changed column set methods to treat strings of all whitespace the same as empty string and convert them to `NULL` [wb, 2010-11-29]"/>
        <tag line="2" name="changes" description="1.0.0b72  Added the new `comment` element to the reflection signature for `inspect` methods [wb, 2010-11-28]"/>
        <tag line="2" name="changes" description="1.0.0b71  Updated class to use fORM::getRelatedClass() [wb, 2010-11-24]"/>
        <tag line="2" name="changes" description="1.0.0b70  Added support for PHP 5.3 namespaced fActiveRecord classes [wb, 2010-11-11]"/>
        <tag line="2" name="changes" description="1.0.0b69  Backwards Compatibility Break - changed ::validate() to return a nested array of validation messages when there are validation errors on child records [wb-imarc+wb, 2010-10-03]"/>
        <tag line="2" name="changes" description="1.0.0b68  Added hooks to ::replicate() [wb, 2010-09-07]"/>
        <tag line="2" name="changes" description="1.0.0b67  Updated code to work with the new fORM API [wb, 2010-08-06]"/>
        <tag line="2" name="changes" description="1.0.0b66  Fixed a bug with ::store() and non-primary key auto-incrementing columns [wb, 2010-07-05]"/>
        <tag line="2" name="changes" description="1.0.0b65  Fixed bugs with ::inspect() making some `min_value` and `max_value` elements available for non-numeric types, fixed ::reflect() to list the `min_value` and `max_value` elements [wb, 2010-06-08]"/>
        <tag line="2" name="changes" description="1.0.0b64  BackwardsCompatibilityBreak - changed ::validate()'s returned messages array to have field name keys - added the option to ::validate() to remove field names from messages [wb, 2010-05-26]"/>
        <tag line="2" name="changes" description="1.0.0b63  Changed how is_subclass_of() is used to work around a bug in 5.2.x [wb, 2010-04-06]"/>
        <tag line="2" name="changes" description="1.0.0b62  Fixed a bug that could cause infinite recursion starting in v1.0.0b60 [wb, 2010-04-02]"/>
        <tag line="2" name="changes" description="1.0.0b61  Fixed issues with handling `populate` actions when working with mapped classes [wb, 2010-03-31]"/>
        <tag line="2" name="changes" description="1.0.0b60  Fixed issues with handling `associate` and `has` actions when working with mapped classes, added ::validateClass() [wb, 2010-03-30]"/>
        <tag line="2" name="changes" description="1.0.0b59  Changed an extended UTF-8 arrow character into the correct `-&gt;` [wb, 2010-03-29]"/>
        <tag line="2" name="changes" description="1.0.0b58  Fixed ::reflect() to specify the value returned from `set` methods [wb, 2010-03-15]"/>
        <tag line="2" name="changes" description="1.0.0b57  Added the `post::loadFromIdentityMap()` hook and fixed ::__construct() to always call the `post::__construct()` hook [wb, 2010-03-14]"/>
        <tag line="2" name="changes" description="1.0.0b56  Fixed `$force_cascade` in ::delete() to work even when the restricted relationship is once-removed through an unrestricted relationship [wb, 2010-03-09]"/>
        <tag line="2" name="changes" description="1.0.0b55  Fixed ::load() to that related records are cleared, requiring them to be loaded from the database [wb, 2010-03-04]"/>
        <tag line="2" name="changes" description="1.0.0b54  Fixed detection of route name for one-to-one relationships in ::delete() [wb, 2010-03-03]"/>
        <tag line="2" name="changes" description="1.0.0b53  Fixed a bug where related records with a primary key that contained a foreign key with an on update cascade clause would be deleted when changing the value of the column referenced by the foreign key [wb, 2009-12-17]"/>
        <tag line="2" name="changes" description="1.0.0b52  Backwards Compatibility Break - Added the $force_cascade parameter to ::delete() and ::store() - enabled calling ::prepare() and ::encode() for non-column get methods, added `::has{RelatedRecords}()` methods [wb, 2009-12-16]"/>
        <tag line="2" name="changes" description="1.0.0b51  Made ::changed() properly recognize that a blank string and NULL are equivalent due to the way that ::set() casts values [wb, 2009-11-14]"/>
        <tag line="2" name="changes" description="1.0.0b50  Fixed a bug with trying to load by a multi-column primary key where one of the columns was not specified [wb, 2009-11-13]"/>
        <tag line="2" name="changes" description="1.0.0b49  Fixed a bug affecting where conditions with columns that are not null but have a default value [wb, 2009-11-03]"/>
        <tag line="2" name="changes" description="1.0.0b48  Updated code for the new fORMDatabase and fORMSchema APIs [wb, 2009-10-28]"/>
        <tag line="2" name="changes" description="1.0.0b47  Changed `::associate{RelatedRecords}()`, `::link{RelatedRecords}()` and `::populate{RelatedRecords}()` to allow for method chaining [wb, 2009-10-22]"/>
        <tag line="2" name="changes" description="1.0.0b46  Changed SQL statements to use value placeholders and identifier escaping [wb, 2009-10-22]"/>
        <tag line="2" name="changes" description="1.0.0b45  Added support for `!~`, `&amp;~`, `&gt;&lt;` and OR comparisons to ::checkConditions(), made object handling in ::checkConditions() more robust [wb, 2009-09-21]"/>
        <tag line="2" name="changes" description="1.0.0b44  Updated code for new fValidationException API [wb, 2009-09-18]"/>
        <tag line="2" name="changes" description="1.0.0b43  Updated code for new fRecordSet API [wb, 2009-09-16]"/>
        <tag line="2" name="changes" description="1.0.0b42  Corrected a grammar bug in ::hash() [wb, 2009-09-09]"/>
        <tag line="2" name="changes" description="1.0.0b41  Fixed a bug in the last version that would cause issues with classes containing a custom class to table mapping [wb, 2009-09-01]"/>
        <tag line="2" name="changes" description="1.0.0b40  Added a check to the configuration part of ::__construct() to ensure modelled tables have primary keys [wb, 2009-08-26]"/>
        <tag line="2" name="changes" description="1.0.0b39  Changed `set{ColumnName}()` methods to return the record for method chaining, fixed a bug with loading by multi-column unique constraints, fixed a bug with ::load() [wb, 2009-08-26]"/>
        <tag line="2" name="changes" description="1.0.0b38  Updated ::changed() to do a strict comparison when at least one value is NULL [wb, 2009-08-17]"/>
        <tag line="2" name="changes" description="1.0.0b37  Changed ::__construct() to allow any Iterator object instead of just fResult [wb, 2009-08-12]"/>
        <tag line="2" name="changes" description="1.0.0b36  Fixed a bug with setting NULL values from v1.0.0b33 [wb, 2009-08-10]"/>
        <tag line="2" name="changes" description="1.0.0b35  Fixed a bug with unescaping data in ::loadFromResult() from v1.0.0b33 [wb, 2009-08-10]"/>
        <tag line="2" name="changes" description="1.0.0b34  Added the ability to compare fActiveRecord objects in ::checkConditions() [wb, 2009-08-07]"/>
        <tag line="2" name="changes" description="1.0.0b33  Performance enhancements to ::__call() and ::__construct() [wb, 2009-08-07]"/>
        <tag line="2" name="changes" description="1.0.0b32  Changed ::delete() to remove auto-incrementing primary keys after the post::delete() hook [wb, 2009-07-29]"/>
        <tag line="2" name="changes" description="1.0.0b31  Fixed a bug with loading a record by a multi-column primary key, fixed one-to-one relationship API [wb, 2009-07-21]"/>
        <tag line="2" name="changes" description="1.0.0b30  Updated ::reflect() for new fORM::callReflectCallbacks() API [wb, 2009-07-13]"/>
        <tag line="2" name="changes" description="1.0.0b29  Updated to use new fORM::callInspectCallbacks() method [wb, 2009-07-13]"/>
        <tag line="2" name="changes" description="1.0.0b28  Fixed a bug where records would break the identity map at the end of ::store() [wb, 2009-07-09]"/>
        <tag line="2" name="changes" description="1.0.0b27  Changed ::hash() from a protected method to a static public/internal method that requires the class name for non-fActiveRecord values [wb, 2009-07-09]"/>
        <tag line="2" name="changes" description="1.0.0b26  Added ::checkConditions() from fRecordSet [wb, 2009-07-08]"/>
        <tag line="2" name="changes" description="1.0.0b25  Updated ::validate() to use new fORMValidation API, including new message search/replace functionality [wb, 2009-07-01]"/>
        <tag line="2" name="changes" description="1.0.0b24  Changed ::validate() to remove duplicate validation messages [wb, 2009-06-30]"/>
        <tag line="2" name="changes" description="1.0.0b23  Updated code for new fORMValidation::validateRelated() API [wb, 2009-06-26]"/>
        <tag line="2" name="changes" description="1.0.0b22  Added support for the $formatting parameter to encode methods on char, text and varchar columns [wb, 2009-06-19]"/>
        <tag line="2" name="changes" description="1.0.0b21  Performance tweaks and updates for fORM and fORMRelated API changes [wb, 2009-06-15]"/>
        <tag line="2" name="changes" description="1.0.0b20  Changed replacement values in preg_replace() calls to be properly escaped [wb, 2009-06-11]"/>
        <tag line="2" name="changes" description="1.0.0b19  Added `list{RelatedRecords}()` methods, updated code for new fORMRelated API [wb, 2009-06-02]"/>
        <tag line="2" name="changes" description="1.0.0b18  Changed ::store() to use new fORMRelated::store() method [wb, 2009-06-02]"/>
        <tag line="2" name="changes" description="1.0.0b17  Added some missing parameter information to ::reflect() [wb, 2009-06-01]"/>
        <tag line="2" name="changes" description="1.0.0b16  Fixed bugs in ::__clone() and ::replicate() related to recursive relationships [wb-imarc, 2009-05-20]"/>
        <tag line="2" name="changes" description="1.0.0b15  Fixed an incorrect variable reference in ::store() [wb, 2009-05-06]"/>
        <tag line="2" name="changes" description="1.0.0b14  ::store() no longer tries to get an auto-incrementing ID from the database if a value was set [wb, 2009-05-02]"/>
        <tag line="2" name="changes" description="1.0.0b13  ::delete(), ::load(), ::populate() and ::store() now return the record to allow for method chaining [wb, 2009-03-23]"/>
        <tag line="2" name="changes" description="1.0.0b12  ::set() now removes commas from integers and floats to prevent validation issues [wb, 2009-03-22]"/>
        <tag line="2" name="changes" description="1.0.0b11  ::encode() no longer adds commas to floats [wb, 2009-03-22]"/>
        <tag line="2" name="changes" description="1.0.0b10  ::__wakeup() no longer registers the record as the definitive copy in the identity map [wb, 2009-03-22]"/>
        <tag line="2" name="changes" description="1.0.0b9   Changed ::__construct() to populate database default values when a non-existing record is instantiated [wb, 2009-01-12]"/>
        <tag line="2" name="changes" description="1.0.0b8   Fixed ::exists() to properly detect cases when an existing record has one or more NULL values in the primary key [wb, 2009-01-11]"/>
        <tag line="2" name="changes" description="1.0.0b7   Fixed ::__construct() to not trigger the post::__construct() hook when force-configured [wb, 2008-12-30]"/>
        <tag line="2" name="changes" description="1.0.0b6   ::__construct() now accepts an associative array matching any unique key or primary key, fixed the post::__construct() hook to be called once for each record [wb, 2008-12-26]"/>
        <tag line="2" name="changes" description="1.0.0b5   Fixed ::replicate() to use plural record names for related records [wb, 2008-12-12]"/>
        <tag line="2" name="changes" description="1.0.0b4   Added ::replicate() to allow cloning along with related records [wb, 2008-12-12]"/>
        <tag line="2" name="changes" description="1.0.0b3   Changed ::__clone() to clone objects contains in the values and cache arrays [wb, 2008-12-11]"/>
        <tag line="2" name="changes" description="1.0.0b2   Added the ::__clone() method to properly duplicate a record [wb, 2008-12-04]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2007-08-04]"/>
      </docblock>
      <constant namespace="global" line="106" package="Flourish">
        <name>assign</name>
        <full_name>assign</full_name>
        <value><![CDATA['fActiveRecord::assign']]></value>
      </constant>
      <constant namespace="global" line="107" package="Flourish">
        <name>changed</name>
        <full_name>changed</full_name>
        <value><![CDATA['fActiveRecord::changed']]></value>
      </constant>
      <constant namespace="global" line="108" package="Flourish">
        <name>checkConditions</name>
        <full_name>checkConditions</full_name>
        <value><![CDATA['fActiveRecord::checkConditions']]></value>
      </constant>
      <constant namespace="global" line="109" package="Flourish">
        <name>forceConfigure</name>
        <full_name>forceConfigure</full_name>
        <value><![CDATA['fActiveRecord::forceConfigure']]></value>
      </constant>
      <constant namespace="global" line="110" package="Flourish">
        <name>hasOld</name>
        <full_name>hasOld</full_name>
        <value><![CDATA['fActiveRecord::hasOld']]></value>
      </constant>
      <constant namespace="global" line="111" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <value><![CDATA['fActiveRecord::reset']]></value>
      </constant>
      <constant namespace="global" line="112" package="Flourish">
        <name>retrieveOld</name>
        <full_name>retrieveOld</full_name>
        <value><![CDATA['fActiveRecord::retrieveOld']]></value>
      </constant>
      <constant namespace="global" line="113" package="Flourish">
        <name>validateClass</name>
        <full_name>validateClass</full_name>
        <value><![CDATA['fActiveRecord::validateClass']]></value>
      </constant>
      <property final="false" static="true" visibility="protected" line="121" namespace="global" package="Sutra">
        <name>$callback_cache</name>
        <default><![CDATA[array()]]></default>
        <docblock line="116">
          <description><![CDATA[Caches callbacks for methods]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="116" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="128" namespace="global" package="Sutra">
        <name>$configured</name>
        <default><![CDATA[array()]]></default>
        <docblock line="123">
          <description><![CDATA[An array of flags indicating a class has been configured]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="123" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="136" namespace="global" package="Sutra">
        <name>$identity_map</name>
        <default><![CDATA[array()]]></default>
        <docblock line="131">
          <description><![CDATA[Maps objects via their primary key]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="131" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="144" namespace="global" package="Sutra">
        <name>$method_name_cache</name>
        <default><![CDATA[array()]]></default>
        <docblock line="139">
          <description><![CDATA[Caches method name parsings]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="139" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="152" namespace="global" package="Sutra">
        <name>$replicate_level</name>
        <default><![CDATA[0]]></default>
        <docblock line="147">
          <description><![CDATA[Keeps track of the recursive call level of replication so we can clear the map]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="147" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="160" namespace="global" package="Sutra">
        <name>$replicate_map</name>
        <default><![CDATA[array()]]></default>
        <docblock line="155">
          <description><![CDATA[Keeps a list of records that have been replicated]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="155" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="168" namespace="global" package="Sutra">
        <name>$static_callback_cache</name>
        <default><![CDATA[array()]]></default>
        <docblock line="163">
          <description><![CDATA[Caches callbacks for static methods]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="163" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="175" namespace="global" package="Sutra">
        <name>$unescape_map</name>
        <default><![CDATA[array()]]></default>
        <docblock line="170">
          <description><![CDATA[Contains a list of what columns in each class need to be unescaped and what data type they are]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="170" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="853" namespace="global" package="Sutra">
        <name>$cache</name>
        <default><![CDATA[array()]]></default>
        <docblock line="848">
          <description><![CDATA[A data store for caching data related to a record, the structure of this is completely up to the developer using it]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="848" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="866" namespace="global" package="Sutra">
        <name>$old_values</name>
        <default><![CDATA[array()]]></default>
        <docblock line="855">
          <description><![CDATA[The old values for this record]]></description>
          <long-description><![CDATA[<p>Column names are the keys, but a column key will only be present if a
value has changed. The value associated with each key is an array of
old values with the first entry being the oldest value. The static
methods ::assign(), ::changed(), ::hasOld() and ::retrieveOld() are the
best way to interact with this array.</p>]]></long-description>
          <tag line="855" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="877" namespace="global" package="Sutra">
        <name>$related_records</name>
        <default><![CDATA[array()]]></default>
        <docblock line="868">
          <description><![CDATA[Records that are related to the current record via some relationship]]></description>
          <long-description><![CDATA[<p>This array is used to cache related records so that a database query
is not required each time related records are accessed. The fORMRelated
class handles most of the interaction with this array.</p>]]></long-description>
          <tag line="868" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="887" namespace="global" package="Sutra">
        <name>$values</name>
        <default><![CDATA[array()]]></default>
        <docblock line="879">
          <description><![CDATA[The values for this record]]></description>
          <long-description><![CDATA[<p>This array always contains every column in the database table as a key
with the value being the current value.</p>]]></long-description>
          <tag line="879" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="190" package="Flourish">
        <name>__callStatic</name>
        <full_name>__callStatic</full_name>
        <docblock line="178">
          <description><![CDATA[Handles dynamically registered static method callbacks]]></description>
          <long-description><![CDATA[<p>Static method callbacks registered through fORM::registerActiveRecordStaticMethod()
will be delegated via this method. Both this and fORM::registerActiveRecordStaticMethod
are available to PHP 5.3+ only.</p>]]></long-description>
          <tag line="178" name="throws" description="When the method cannot be found" type="\fProgrammerException">
            <type by_reference="false">\fProgrammerException</type>
          </tag>
          <tag line="178" name="param" description="The name of the method called" type="string" variable="$method_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="178" name="param" description="The parameters passed" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="178" name="return" description="The value returned by the method called" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="190">
          <name>$method_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="190">
          <name>$parameters</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="234" package="Flourish">
        <name>assign</name>
        <full_name>assign</full_name>
        <docblock line="223">
          <description><![CDATA[Sets a value to the `$values` array, preserving the old value in `$old_values`]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="223" name="internal" description=""/>
          <tag line="223" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="223" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="223" name="param" description="The column to set" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="223" name="param" description="The value to set" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="223" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="234">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="234">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="234">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="234">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="255" package="Flourish">
        <name>changed</name>
        <full_name>changed</full_name>
        <docblock line="245">
          <description><![CDATA[Checks to see if a value has changed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="245" name="internal" description=""/>
          <tag line="245" name="param" description="&amp;$values The current values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="245" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="245" name="param" description="The column to check" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="245" name="return" description="If the value for the column specified has changed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="255">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="255">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="255">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="285" package="Flourish">
        <name>checkClass</name>
        <full_name>checkClass</full_name>
        <docblock line="277">
          <description><![CDATA[Ensures a class extends fActiveRecord]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="277" name="internal" description=""/>
          <tag line="277" name="param" description="The class to check" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="277" name="return" description="If the class is an fActiveRecord descendant" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="285">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="308" package="Flourish">
        <name>checkCondition</name>
        <full_name>checkCondition</full_name>
        <docblock line="298">
          <description><![CDATA[Checks to see if a record matches a condition]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="298" name="internal" description=""/>
          <tag line="298" name="param" description="The record to check" type="string" variable="$operator">
            <type by_reference="false">string</type>
          </tag>
          <tag line="298" name="param" description="The value to compare to" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="298" name="param" description="The result of the method call(s)" type="mixed" variable="$result">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="298" name="return" description="If the comparison was successful" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="308">
          <name>$operator</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="308">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="308">
          <name>$result</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="466" package="Flourish">
        <name>checkConditions</name>
        <full_name>checkConditions</full_name>
        <docblock line="457">
          <description><![CDATA[Checks to see if a record matches all of the conditions]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="457" name="internal" description=""/>
          <tag line="457" name="param" description="The record to check" type="\fActiveRecord" variable="$record">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="457" name="param" description="The conditions to check - see fRecordSet::filter() for format details" type="array" variable="$conditions">
            <type by_reference="false">array</type>
          </tag>
          <tag line="457" name="return" description="If the record meets all conditions" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="466">
          <name>$record</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="466">
          <name>$conditions</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="619" package="Flourish">
        <name>clearIdentityMap</name>
        <full_name>clearIdentityMap</full_name>
        <docblock line="614">
          <description><![CDATA[Clears the identity map]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="614" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="633" package="Flourish">
        <name>compose</name>
        <full_name>compose</full_name>
        <docblock line="625">
          <description><![CDATA[Composes text using fText if loaded]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="625" name="param" description="The message to compose" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="625" name="param" description="A string or number to insert into the message" type="mixed" variable="$component">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="625" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="625" name="return" description="The composed and possible translated message" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="633">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="656" package="Flourish">
        <name>determineSubject</name>
        <full_name>determineSubject</full_name>
        <docblock line="648">
          <description><![CDATA[Takes information from a method call and determines the subject, route and if subject was plural]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="648" name="param" description="The class the method was called on" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="648" name="param" description="An underscore_notation subject - either a singular or plural class name" type="string" variable="$subject">
            <type by_reference="false">string</type>
          </tag>
          <tag line="648" name="param" description="The route to the subject" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="648" name="return" description="An array with the structure: array(0 =&gt; $subject, 1 =&gt; $route, 2 =&gt; $plural)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="656">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="656">
          <name>$subject</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="656">
          <name>$route</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="702" package="Flourish">
        <name>forceConfigure</name>
        <full_name>forceConfigure</full_name>
        <docblock line="694">
          <description><![CDATA[Ensures that ::configure() has been called for the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="694" name="internal" description=""/>
          <tag line="694" name="param" description="The class to configure" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="694" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="702">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="720" package="Flourish">
        <name>hash</name>
        <full_name>hash</full_name>
        <docblock line="711">
          <description><![CDATA[Takes a row of data or a primary key and makes a hash from the primary key]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="711" name="internal" description=""/>
          <tag line="711" name="param" description="An fActiveRecord object, an array of the records data, an array of primary key data or a scalar primary key value" type="\fActiveRecord|array|string|int" variable="$record">
            <type by_reference="false">\fActiveRecord</type>
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
            <type by_reference="false">int</type>
          </tag>
          <tag line="711" name="param" description="The class name, if $record isn't an fActiveRecord" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="711" name="return" description="A hash of the record's primary key value or NULL if the record doesn't exist yet" type="string|NULL">
            <type by_reference="false">string</type>
            <type by_reference="false">NULL</type>
          </tag>
        </docblock>
        <argument line="720">
          <name>$record</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="720">
          <name>$class</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="776" package="Flourish">
        <name>hasOld</name>
        <full_name>hasOld</full_name>
        <docblock line="767">
          <description><![CDATA[Checks to see if an old value exists for a column]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="767" name="internal" description=""/>
          <tag line="767" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="767" name="param" description="The column to set" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="767" name="return" description="If an old value for that column exists" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="776">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="776">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="789" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="782">
          <description><![CDATA[Resets the configuration of the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="782" name="internal" description=""/>
          <tag line="782" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="810" package="Flourish">
        <name>retrieveOld</name>
        <full_name>retrieveOld</full_name>
        <docblock line="799">
          <description><![CDATA[Retrieves the oldest value for a column or all old values]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="799" name="internal" description=""/>
          <tag line="799" name="param" description="&amp;$old_values The old values" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="799" name="param" description="The column to get" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="799" name="param" description="The default value to return if no value exists" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="799" name="param" description="Return the array of all old values for this column instead of just the oldest" type="boolean" variable="$return_all">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="799" name="return" description="The old value for the column" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="810">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="810">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="810">
          <name>$default</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="810">
          <name>$return_all</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="832" package="Flourish">
        <name>validateClass</name>
        <full_name>validateClass</full_name>
        <docblock line="824">
          <description><![CDATA[Ensures a class extends fActiveRecord]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="824" name="internal" description=""/>
          <tag line="824" name="param" description="The class to verify" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="824" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="832">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="911" package="Flourish">
        <name>__call</name>
        <full_name>__call</full_name>
        <docblock line="890">
          <description><![CDATA[Handles all method calls for columns, related records and hook callbacks]]></description>
          <long-description><![CDATA[<p>Dynamically handles <code>get</code>, <code>set</code>, <code>prepare</code>, <code>encode</code> and <code>inspect</code>
methods for each column in this record. Method names are in the form
<code>verbColumName()</code>.</p>

<p>This method also handles <code>associate</code>, <code>build</code>, <code>count</code>, <code>has</code>, and <code>link</code>
verbs for records in many-to-many relationships; <code>build</code>, <code>count</code>, <code>has</code>
and <code>populate</code> verbs for all related records in one-to-many relationships
and <code>create</code>, <code>has</code> and <code>populate</code> verbs for all related records in
one-to-one relationships, and the <code>create</code> verb for all related records
in many-to-one relationships.</p>

<p>Method callbacks registered through fORM::registerActiveRecordMethod()
will be delegated via this method.</p>]]></long-description>
          <tag line="890" name="param" description="The name of the method called" type="string" variable="$method_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="890" name="param" description="The parameters passed" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="890" name="return" description="The value returned by the method called" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="911">
          <name>$method_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="911">
          <name>$parameters</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1107" package="Flourish">
        <name>__clone</name>
        <full_name>__clone</full_name>
        <docblock line="1094">
          <description><![CDATA[Creates a clone of a record]]></description>
          <long-description><![CDATA[<p>If the record has an auto incrementing primary key, the primary key will
be erased in the clone. If the primary key is not auto incrementing,
the primary key will be left as-is in the clone. In either situation the
clone will return <code>FALSE</code> from the ::exists() method until ::store() is
called.</p>]]></long-description>
          <tag line="1094" name="internal" description=""/>
          <tag line="1094" name="return" description="" type="\fActiveRecord">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1162" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="1154">
          <description><![CDATA[Creates a new record or loads one from the database - if a primary key or unique key is provided the record will be loaded]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1154" name="throws" description="When the record specified by `$key` can not be found in the database" type="\fNotFoundException">
            <type by_reference="false">\fNotFoundException</type>
          </tag>
          <tag line="1154" name="param" description="The primary key or unique key value(s) - single column primary keys will accept a scalar value, all others must be an associative array of `(string) {column} =&gt; (mixed) {value}`" type="mixed" variable="$key">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1154" name="return" description="" type="\fActiveRecord">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
        </docblock>
        <argument line="1162">
          <name>$key</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1300" package="Flourish">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="1292">
          <description><![CDATA[All requests that hit this method should be requests for callbacks]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1292" name="internal" description=""/>
          <tag line="1292" name="param" description="The method to create a callback for" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1292" name="return" description="The callback for the method requested" type="callback">
            <type by_reference="false">callback</type>
          </tag>
        </docblock>
        <argument line="1300">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1313" package="Flourish">
        <name>__wakeup</name>
        <full_name>__wakeup</full_name>
        <docblock line="1306">
          <description><![CDATA[Configure itself when coming out of the session.]]></description>
          <long-description><![CDATA[<p>Records from the session are NOT hooked into the identity map.</p>]]></long-description>
          <tag line="1306" name="internal" description=""/>
          <tag line="1306" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1331" package="Flourish">
        <name>configure</name>
        <full_name>configure</full_name>
        <docblock line="1324">
          <description><![CDATA[Allows the programmer to set features for the class]]></description>
          <long-description><![CDATA[<p>This method is only called once per page load for each class.</p>]]></long-description>
          <tag line="1324" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1341" package="Flourish">
        <name>constructInsertParams</name>
        <full_name>constructInsertParams</full_name>
        <docblock line="1336">
          <description><![CDATA[Creates the fDatabase::translatedQuery() insert statement params]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1336" name="return" description="The parameters for an fDatabase::translatedQuery() SQL insert statement" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1384" package="Flourish">
        <name>constructUpdateParams</name>
        <full_name>constructUpdateParams</full_name>
        <docblock line="1379">
          <description><![CDATA[Creates the fDatabase::translatedQuery() update statement params]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1379" name="return" description="The parameters for an fDatabase::translatedQuery() SQL update statement" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1426" package="Flourish">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="1418">
          <description><![CDATA[Deletes a record from the database, but does not destroy the object]]></description>
          <long-description><![CDATA[<p>This method will start a database transaction if one is not already active.</p>]]></long-description>
          <tag line="1418" name="param" description="When TRUE, this will cause all child objects to be deleted, even if the ON DELETE clause is RESTRICT or NO ACTION" type="boolean" variable="$force_cascade">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1418" name="return" description="The record object, to allow for method chaining" type="\fActiveRecord">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
        </docblock>
        <argument line="1426">
          <name>$force_cascade</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1692" package="Flourish">
        <name>encode</name>
        <full_name>encode</full_name>
        <docblock line="1677">
          <description><![CDATA[Retrieves a value from the record and prepares it for output into an HTML form element.]]></description>
          <long-description><![CDATA[<p>Below are the transformations performed:</p>

<ul>
<li><strong>varchar, char, text</strong>: will run through fHTML::encode(), if <code>TRUE</code> is passed the text will be run through fHTML::convertNewLinks() and fHTML::makeLinks()</li>
<li><strong>float</strong>: takes 1 parameter to specify the number of decimal places</li>
<li><strong>date, time, timestamp</strong>: <code>format()</code> will be called on the fDate/fTime/fTimestamp object with the 1 parameter specified</li>
<li><strong>objects</strong>: the object will be converted to a string by <code>__toString()</code> or a <code>(string)</code> cast and then will be run through fHTML::encode()</li>
<li><strong>all other data types</strong>: the value will be run through fHTML::encode()</li>
</ul>]]></long-description>
          <tag line="1677" name="param" description="The name of the column to retrieve" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1677" name="param" description="The formatting string" type="string" variable="$formatting">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1677" name="return" description="The encoded value for the column specified" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1692">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1692">
          <name>$formatting</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1789" package="Flourish">
        <name>exists</name>
        <full_name>exists</full_name>
        <docblock line="1784">
          <description><![CDATA[Checks to see if the record exists in the database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1784" name="return" description="If the record exists in the database" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1821" package="Flourish">
        <name>fetchResultFromUniqueKey</name>
        <full_name>fetchResultFromUniqueKey</full_name>
        <docblock line="1813">
          <description><![CDATA[Loads a record from the database based on a UNIQUE key]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1813" name="throws" description="" type="\fNotFoundException">
            <type by_reference="false">\fNotFoundException</type>
          </tag>
          <tag line="1813" name="param" description="The UNIQUE key values to try and load with" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1813" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1821">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1873" package="Flourish">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="1867">
          <description><![CDATA[Retrieves a value from the record]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1867" name="param" description="The name of the column to retrieve" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1867" name="return" description="The value for the column specified" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="1873">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1892" package="Flourish">
        <name>inspect</name>
        <full_name>inspect</full_name>
        <docblock line="1885">
          <description><![CDATA[Retrieves information about a column]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1885" name="param" description="The name of the column to inspect" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1885" name="param" description="The metadata element to retrieve" type="string" variable="$element">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1885" name="return" description="The metadata array for the column, or the metadata element specified" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="1892">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1892">
          <name>$element</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1950" package="Flourish">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="1943">
          <description><![CDATA[Loads a record from the database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1943" name="throws" description="When the record could not be found in the database" type="\fNotFoundException">
            <type by_reference="false">\fNotFoundException</type>
          </tag>
          <tag line="1943" name="return" description="The record object, to allow for method chaining" type="\fActiveRecord">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1991" package="Flourish">
        <name>loadFromResult</name>
        <full_name>loadFromResult</full_name>
        <docblock line="1984">
          <description><![CDATA[Loads a record from the database directly from a result object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1984" name="param" description="The result object to use for loading the current object" type="\Iterator" variable="$result">
            <type by_reference="false">\Iterator</type>
          </tag>
          <tag line="1984" name="param" description="If the identity map should be ignored and the values loaded no matter what" type="boolean" variable="$ignore_identity_map">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1984" name="return" description="If the record was loaded from the identity map" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="1991">
          <name>$result</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1991">
          <name>$ignore_identity_map</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="2061" package="Flourish">
        <name>loadFromIdentityMap</name>
        <full_name>loadFromIdentityMap</full_name>
        <docblock line="2054">
          <description><![CDATA[Tries to load the object (via references to class vars) from the fORM identity map]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2054" name="param" description="The data source for the primary key values" type="array" variable="$row">
            <type by_reference="false">array</type>
          </tag>
          <tag line="2054" name="param" description="The unique hash for this record" type="string" variable="$hash">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2054" name="return" description="If the load was successful" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="2061">
          <name>$row</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2061">
          <name>$hash</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2099" package="Flourish">
        <name>populate</name>
        <full_name>populate</full_name>
        <docblock line="2094">
          <description><![CDATA[Sets the values for this record by getting values from the request through the fRequest class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2094" name="return" description="The record object, to allow for method chaining" type="\fActiveRecord">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="2157" package="Flourish">
        <name>prepare</name>
        <full_name>prepare</full_name>
        <docblock line="2141">
          <description><![CDATA[Retrieves a value from the record and prepares it for output into html.]]></description>
          <long-description><![CDATA[<p>Below are the transformations performed:</p>

<ul>
<li><strong>varchar, char, text</strong>: will run through fHTML::prepare(), if <code>TRUE</code> is passed the text will be run through fHTML::convertNewLinks() and fHTML::makeLinks()</li>
<li><strong>boolean</strong>: will return <code>'Yes'</code> or <code>'No'</code></li>
<li><strong>integer</strong>: will add thousands/millions/etc. separators</li>
<li><strong>float</strong>: will add thousands/millions/etc. separators and takes 1 parameter to specify the number of decimal places</li>
<li><strong>date, time, timestamp</strong>: <code>format()</code> will be called on the fDate/fTime/fTimestamp object with the 1 parameter specified</li>
<li><strong>objects</strong>: the object will be converted to a string by <code>__toString()</code> or a <code>(string)</code> cast and then will be run through fHTML::prepare()</li>
</ul>]]></long-description>
          <tag line="2141" name="param" description="The name of the column to retrieve" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2141" name="param" description="The formatting parameter, if applicable" type="mixed" variable="$formatting">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="2141" name="return" description="The formatted value for the column specified" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="2157">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2157">
          <name>$formatting</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2265" package="Flourish">
        <name>reflect</name>
        <full_name>reflect</full_name>
        <docblock line="2259">
          <description><![CDATA[Generates the method signatures for all methods (including dynamic ones)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2259" name="param" description="If the doc block comments for each method should be included" type="boolean" variable="$include_doc_comments">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="2259" name="return" description="An associative array of method name =&gt; method signature" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="2265">
          <name>$include_doc_comments</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2534" package="Flourish">
        <name>replicate</name>
        <full_name>replicate</full_name>
        <docblock line="2516">
          <description><![CDATA[Generates a clone of the current record, removing any auto incremented primary key value and allowing for replicating related records]]></description>
          <long-description><![CDATA[<p>This method will accept three different sets of parameters:</p>

<ul>
<li>No parameters: this object will be cloned</li>
<li>A single <code>TRUE</code> value: this object plus all many-to-many associations and all child records (recursively) will be cloned</li>
<li>Any number of plural related record class names: the many-to-many associations or child records that correspond to the classes specified will be cloned</li>
</ul>

<p>The class names specified can be a simple class name if there is only a
single route between the two corresponding database tables. If there is
more than one route between the two tables, the class name should be
substituted with a string in the format <code>'RelatedClass{route}'</code>.</p>]]></long-description>
          <tag line="2516" name="param" description="The plural related class to replicate - see method description for details" type="string" variable="$related_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2516" name="param" description="..." type="string" variable="">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2516" name="return" description="The cloned record" type="\fActiveRecord">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
        </docblock>
        <argument line="2534">
          <name>$related_class</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="2701" package="Flourish">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="2694">
          <description><![CDATA[Sets a value to the record]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2694" name="param" description="The column to set the value to" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2694" name="param" description="The value to set" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="2694" name="return" description="This record, to allow for method chaining" type="\fActiveRecord">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
        </docblock>
        <argument line="2701">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2701">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2745" package="Flourish">
        <name>store</name>
        <full_name>store</full_name>
        <docblock line="2734">
          <description><![CDATA[Stores a record in the database, whether existing or new]]></description>
          <long-description><![CDATA[<p>This method will start database and filesystem transactions if they have
not already been started.</p>]]></long-description>
          <tag line="2734" name="throws" description="When ::validate() throws an exception" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="2734" name="param" description="When storing related records, this will force deleting child records even if they have their own children in a relationship with an RESTRICT or NO ACTION for the ON DELETE clause" type="boolean" variable="$force_cascade">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="2734" name="return" description="The record object, to allow for method chaining" type="\fActiveRecord">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
        </docblock>
        <argument line="2745">
          <name>$force_cascade</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2960" package="Flourish">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="2951">
          <description><![CDATA[Validates the values of the record against the database and any additional validation rules]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2951" name="throws" description="When the record, or one of the associated records, violates one of the validation rules for the class or can not be properly stored in the database" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="2951" name="param" description="If an array of validation messages should be returned instead of an exception being thrown" type="boolean" variable="$return_messages">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="2951" name="param" description="If column names should be removed from the returned messages, leaving just the message itself" type="boolean" variable="$remove_column_names">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="2951" name="return" description="If $return_messages is TRUE, an array of validation messages will be returned" type="void|array">
            <type by_reference="false">void</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="2960">
          <name>$return_messages</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
        <argument line="2960">
          <name>$remove_column_names</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fActiveRecord.php</error>
      <notice line="625" code="50013">Parameter $component could not be found in compose()</notice>
      <notice line="625" code="50013">Parameter  could not be found in compose()</notice>
      <notice line="2516" code="50013">Parameter  could not be found in replicate()</notice>
    </parse_markers>
  </file>
  <file path="php/flourish/fSQLTranslation.php" hash="068fd613148026eaae99a53317a3ce27" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="34" package="Flourish">
      <extends/>
      <name>fSQLTranslation</name>
      <full_name>\fSQLTranslation</full_name>
      <docblock line="2">
        <description><![CDATA[Takes a subset of SQL from IBM DB2, MySQL, PostgreSQL, Oracle, SQLite and MSSQL and translates into the various dialects allowing for cross-database code]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2011 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fSQLTranslation" link="http://flourishlib.com/fSQLTranslation"/>
        <tag line="2" name="version" description="1.0.0b20"/>
        <tag line="2" name="changes" description="1.0.0b20  Added fix for PostgreSQL to handle `INSERT` statements that don't specify any columns or values [wb, 2011-09-06]"/>
        <tag line="2" name="changes" description="1.0.0b19  Removed the stray method ::removeSQLiteIndexes() that was left over from moving code into fSQLSchemaTranslation [wb, 2011-05-17]"/>
        <tag line="2" name="changes" description="1.0.0b18  Fixed `LENGTH()` and `SUBSTR()` functions for non-ascii characters being stored in MySQL, SQLite and DB2, moved `CREATE TABLE` support to fSQLSchemaTranslation [wb, 2011-05-09]"/>
        <tag line="2" name="changes" description="1.0.0b17  Internal Backwards Compatiblity Break - changed the array keys for translated queries returned from ::translate() to include a number plus `:` before the original SQL, preventing duplicate keys [wb, 2010-07-14]"/>
        <tag line="2" name="changes" description="1.0.0b16  Added IBM DB2 support [wb, 2010-04-13]"/>
        <tag line="2" name="changes" description="1.0.0b15  Fixed a bug with MSSQL national character conversion when running a SQL statement with a sub-select containing joins [wb, 2009-12-18]"/>
        <tag line="2" name="changes" description="1.0.0b14  Changed PostgreSQL to cast columns in LOWER() calls to VARCHAR to allow UUID columns (which are treated as a VARCHAR by fSchema) to work with default primary key ordering in fRecordSet [wb, 2009-12-16]"/>
        <tag line="2" name="changes" description="1.0.0b13  Added a parameter to ::enableCaching() to provide a key token that will allow cached values to be shared between multiple databases with the same schema [wb, 2009-10-28]"/>
        <tag line="2" name="changes" description="1.0.0b12  Backwards Compatibility Break - Removed date translation functionality, changed the signature of ::translate(), updated to support quoted identifiers, added support for PostgreSQL, MSSQL and Oracle schemas [wb, 2009-10-22]"/>
        <tag line="2" name="changes" description="1.0.0b11  Fixed a bug with translating MSSQL national columns over an ODBC connection [wb, 2009-09-18]"/>
        <tag line="2" name="changes" description="1.0.0b10  Changed last bug fix to support PHP 5.1.6 [wb, 2009-09-18]"/>
        <tag line="2" name="changes" description="1.0.0b9   Fixed another bug with parsing table aliases for MSSQL national columns [wb, 2009-09-18]"/>
        <tag line="2" name="changes" description="1.0.0b8   Fixed a bug with parsing table aliases that occurs when handling MSSQL national columns [wb, 2009-09-09]"/>
        <tag line="2" name="changes" description="1.0.0b7   Fixed a bug with translating `NOT LIKE` operators in PostgreSQL [wb, 2009-07-15]"/>
        <tag line="2" name="changes" description="1.0.0b6   Changed replacement values in preg_replace() calls to be properly escaped [wb, 2009-06-11]"/>
        <tag line="2" name="changes" description="1.0.0b5   Update code to only translate data types inside of `CREATE TABLE` queries [wb, 2009-05-22]"/>
        <tag line="2" name="changes" description="1.0.0b4   Added the missing ::__get() method for callback support [wb, 2009-05-06]"/>
        <tag line="2" name="changes" description="1.0.0b3   Added Oracle and caching support, various bug fixes [wb, 2009-05-04]"/>
        <tag line="2" name="changes" description="1.0.0b2   Fixed a notice with SQLite foreign key constraints having no `ON` clauses [wb, 2009-02-21]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2007-09-25]"/>
      </docblock>
      <constant namespace="global" line="37" package="Flourish">
        <name>sqliteCotangent</name>
        <full_name>sqliteCotangent</full_name>
        <value><![CDATA['fSQLTranslation::sqliteCotangent']]></value>
      </constant>
      <constant namespace="global" line="38" package="Flourish">
        <name>sqliteLogBaseFirst</name>
        <full_name>sqliteLogBaseFirst</full_name>
        <value><![CDATA['fSQLTranslation::sqliteLogBaseFirst']]></value>
      </constant>
      <constant namespace="global" line="39" package="Flourish">
        <name>sqliteSign</name>
        <full_name>sqliteSign</full_name>
        <value><![CDATA['fSQLTranslation::sqliteSign']]></value>
      </constant>
      <property final="false" static="false" visibility="private" line="222" namespace="global" package="Sutra">
        <name>$cache</name>
        <default><![CDATA[]]></default>
        <docblock line="217">
          <description><![CDATA[The fCache object to cache schema info and, optionally, translated queries to]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="217" name="var" description="" type="\fCache">
            <type by_reference="false">\fCache</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="229" namespace="global" package="Sutra">
        <name>$cache_prefix</name>
        <default><![CDATA[]]></default>
        <docblock line="224">
          <description><![CDATA[The cache prefix to use for cache entries]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="224" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="236" namespace="global" package="Sutra">
        <name>$database</name>
        <default><![CDATA[]]></default>
        <docblock line="231">
          <description><![CDATA[The fDatabase instance]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="231" name="var" description="" type="\fDatabase">
            <type by_reference="false">\fDatabase</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="243" namespace="global" package="Sutra">
        <name>$debug</name>
        <default><![CDATA[]]></default>
        <docblock line="238">
          <description><![CDATA[If debugging is enabled]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="238" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="250" namespace="global" package="Sutra">
        <name>$schema_info</name>
        <default><![CDATA[]]></default>
        <docblock line="245">
          <description><![CDATA[Database-specific schema information needed for translation]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="245" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="259" namespace="global" package="Sutra">
        <name>$schema_translation</name>
        <default><![CDATA[]]></default>
        <docblock line="252">
          <description><![CDATA[An instance of fSQLSchemaTranslation for when DDL statements are run]]></description>
          <long-description><![CDATA[<p>This object is only loaded when needed since it is so large.</p>]]></long-description>
          <tag line="252" name="var" description="" type="\fSQLSchemaTranslation">
            <type by_reference="false">\fSQLSchemaTranslation</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="50" package="Flourish">
        <name>compose</name>
        <full_name>compose</full_name>
        <docblock line="42">
          <description><![CDATA[Composes text using fText if loaded]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="42" name="param" description="The message to compose" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="42" name="param" description="A string or number to insert into the message" type="mixed" variable="$component">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="42" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="42" name="return" description="The composed and possible translated message" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="71" package="Flourish">
        <name>parseTableAliases</name>
        <full_name>parseTableAliases</full_name>
        <docblock line="65">
          <description><![CDATA[Takes the `FROM` clause from ::parseSelectSQL() and returns all of the tables and each one's alias]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="65" name="param" description="The SQL `FROM` clause to parse" type="string" variable="$clause">
            <type by_reference="false">string</type>
          </tag>
          <tag line="65" name="return" description="The tables in the `FROM` clause, in the format `{table_alias} =&gt; {table_name}`" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="71">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="107" package="Flourish">
        <name>sqliteCotangent</name>
        <full_name>sqliteCotangent</full_name>
        <docblock line="99">
          <description><![CDATA[Callback for custom SQLite function; calculates the cotangent of a number]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="99" name="internal" description=""/>
          <tag line="99" name="param" description="The number to calculate the cotangent of" type="\numeric" variable="$x">
            <type by_reference="false">\numeric</type>
          </tag>
          <tag line="99" name="return" description="The contangent of `$x`" type="\numeric">
            <type by_reference="false">\numeric</type>
          </tag>
        </docblock>
        <argument line="107">
          <name>$x</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="120" package="Flourish">
        <name>sqliteDate</name>
        <full_name>sqliteDate</full_name>
        <docblock line="113">
          <description><![CDATA[Callback for custom SQLite function; returns the current date]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="113" name="internal" description=""/>
          <tag line="113" name="return" description="The current date" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="134" package="Flourish">
        <name>sqliteLength</name>
        <full_name>sqliteLength</full_name>
        <docblock line="126">
          <description><![CDATA[Callback for custom SQLite length function; returns the number of UTF-8 characters in a string]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="126" name="internal" description=""/>
          <tag line="126" name="param" description="The string to measure" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="126" name="return" description="The current date" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="134">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="149" package="Flourish">
        <name>sqliteLogBaseFirst</name>
        <full_name>sqliteLogBaseFirst</full_name>
        <docblock line="140">
          <description><![CDATA[Callback for custom SQLite function; calculates the log to a specific base of a number]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="140" name="internal" description=""/>
          <tag line="140" name="param" description="The base for the log calculation" type="integer" variable="$base">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="140" name="param" description="The number to calculate the logarithm of" type="\numeric" variable="$num">
            <type by_reference="false">\numeric</type>
          </tag>
          <tag line="140" name="return" description="The logarithm of `$num` to `$base`" type="\numeric">
            <type by_reference="false">\numeric</type>
          </tag>
        </docblock>
        <argument line="149">
          <name>$base</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="149">
          <name>$num</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="163" package="Flourish">
        <name>sqliteSign</name>
        <full_name>sqliteSign</full_name>
        <docblock line="155">
          <description><![CDATA[Callback for custom SQLite function; returns the sign of the number]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="155" name="internal" description=""/>
          <tag line="155" name="param" description="The number to change the sign of" type="\numeric" variable="$x">
            <type by_reference="false">\numeric</type>
          </tag>
          <tag line="155" name="return" description="`-1` if a negative sign, `0` if zero, `1` if positive sign" type="\numeric">
            <type by_reference="false">\numeric</type>
          </tag>
        </docblock>
        <argument line="163">
          <name>$x</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="185" package="Flourish">
        <name>sqliteSubstr</name>
        <full_name>sqliteSubstr</full_name>
        <docblock line="175">
          <description><![CDATA[Callback for custom SQLite function; creates a substring]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="175" name="internal" description=""/>
          <tag line="175" name="param" description="The string to take a substring of" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="175" name="param" description="The one-based position to start the substring at" type="integer" variable="$start">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="175" name="param" description="The length of the substring to take" type="integer" variable="$length">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="175" name="return" description="The substring" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="185">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="185">
          <name>$start</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="185">
          <name>$length</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="198" package="Flourish">
        <name>sqliteTime</name>
        <full_name>sqliteTime</full_name>
        <docblock line="191">
          <description><![CDATA[Callback for custom SQLite function; returns the current time]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="191" name="internal" description=""/>
          <tag line="191" name="return" description="The current time" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="211" package="Flourish">
        <name>sqliteTimestamp</name>
        <full_name>sqliteTimestamp</full_name>
        <docblock line="204">
          <description><![CDATA[Callback for custom SQLite function; returns the current timestamp]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="204" name="internal" description=""/>
          <tag line="204" name="return" description="The current date" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="268" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="262">
          <description><![CDATA[Sets up the class and creates functions for SQLite databases]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="262" name="param" description="The database being translated for" type="\fDatabase" variable="$database">
            <type by_reference="false">\fDatabase</type>
          </tag>
          <tag line="262" name="return" description="" type="\fSQLTranslation">
            <type by_reference="false">\fSQLTranslation</type>
          </tag>
        </docblock>
        <argument line="268">
          <name>$database</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="291" package="Flourish">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="283">
          <description><![CDATA[All requests that hit this method should be requests for callbacks]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="283" name="internal" description=""/>
          <tag line="283" name="param" description="The method to create a callback for" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="283" name="return" description="The callback for the method requested" type="callback">
            <type by_reference="false">callback</type>
          </tag>
        </docblock>
        <argument line="291">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="302" package="Flourish">
        <name>clearCache</name>
        <full_name>clearCache</full_name>
        <docblock line="297">
          <description><![CDATA[Clears all of the schema info out of the object and, if set, the fCache object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="297" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="317" package="Flourish">
        <name>createSQLiteFunctions</name>
        <full_name>createSQLiteFunctions</full_name>
        <docblock line="312">
          <description><![CDATA[Adds a number of math functions to SQLite that MSSQL, MySQL and PostgreSQL have by default]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="312" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="373" package="Flourish">
        <name>enableCaching</name>
        <full_name>enableCaching</full_name>
        <docblock line="367">
          <description><![CDATA[Sets the schema info to be cached to the fCache object specified]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="367" name="param" description="The cache to cache to" type="\fCache" variable="$cache">
            <type by_reference="false">\fCache</type>
          </tag>
          <tag line="367" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="373">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="373">
          <name>$key_token</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="391" package="Flourish">
        <name>enableDebugging</name>
        <full_name>enableDebugging</full_name>
        <docblock line="385">
          <description><![CDATA[Sets if debug messages should be shown]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="385" name="param" description="If debugging messages should be shown" type="boolean" variable="$flag">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="385" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="391">
          <name>$flag</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="403" package="Flourish">
        <name>fixMSSQLNationalColumns</name>
        <full_name>fixMSSQLNationalColumns</full_name>
        <docblock line="397">
          <description><![CDATA[Fixes pulling unicode data out of national data type MSSQL columns]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="397" name="param" description="The SQL to fix" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="397" name="return" description="The fixed SQL" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="403">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="635" package="Flourish">
        <name>fixOracleEmptyStrings</name>
        <full_name>fixOracleEmptyStrings</full_name>
        <docblock line="629">
          <description><![CDATA[Fixes empty string comparisons in Oracle]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="629" name="param" description="The SQL to fix" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="629" name="return" description="The fixed SQL" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="635">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="660" package="Flourish">
        <name>makeCachePrefix</name>
        <full_name>makeCachePrefix</full_name>
        <docblock line="655">
          <description><![CDATA[Creates a unique cache prefix to help prevent cache conflicts]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="655" name="return" description="The cache prefix to use" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="690" package="Flourish">
        <name>translate</name>
        <full_name>translate</full_name>
        <docblock line="681">
          <description><![CDATA[Translates Flourish SQL into the dialect for the current database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="681" name="internal" description=""/>
          <tag line="681" name="param" description="The SQL statements to translate" type="array" variable="$statements">
            <type by_reference="false">array</type>
          </tag>
          <tag line="681" name="param" description="&amp;$rollback_statements SQL statements to rollback the returned SQL statements if something goes wrong - only applicable for MySQL `ALTER TABLE` statements" type="array" variable="$rollback_statements">
            <type by_reference="false">array</type>
          </tag>
          <tag line="681" name="return" description="The translated SQL statements all ready for execution. Statements that have been translated will have string key of the number, `:` and the original SQL, all other will have a numeric key." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="690">
          <name>$statements</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="690">
          <name>$rollback_statements</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="760" package="Flourish">
        <name>translateBasicSyntax</name>
        <full_name>translateBasicSyntax</full_name>
        <docblock line="754">
          <description><![CDATA[Translates basic syntax differences of the current database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="754" name="param" description="The SQL to translate" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="754" name="return" description="The translated SQL" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="760">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="861" package="Flourish">
        <name>translateCastClauses</name>
        <full_name>translateCastClauses</full_name>
        <docblock line="855">
          <description><![CDATA[Translates simple CAST() clauses]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="855" name="param" description="The SQL to translate" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="855" name="return" description="The translated SQL" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="861">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="937" package="Flourish">
        <name>translateLimitOffsetToRowNumber</name>
        <full_name>translateLimitOffsetToRowNumber</full_name>
        <docblock line="931">
          <description><![CDATA[Translates `LIMIT x OFFSET x` to `ROW_NUMBER() OVER (ORDER BY)` syntax]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="931" name="param" description="The SQL to translate" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="931" name="return" description="The translated SQL" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="937">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1030" package="Flourish">
        <name>uppercaseIdentifiers</name>
        <full_name>uppercaseIdentifiers</full_name>
        <docblock line="1024">
          <description><![CDATA[Oracle and DB2 require that all double-quoted identifiers be upper-case]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1024" name="param" description="The SQL to fix" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1024" name="return" description="The fixed SQL" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1030">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fSQLTranslation.php</error>
      <notice line="42" code="50013">Parameter $component could not be found in compose()</notice>
      <notice line="42" code="50013">Parameter  could not be found in compose()</notice>
      <error line="65" code="50014">Name of argument $sql does not match with the DocBlock's name $clause in parseTableAliases()</error>
      <notice line="65" code="50013">Parameter $clause could not be found in parseTableAliases()</notice>
      <error line="367" code="50015">Argument $key_token is missing from the Docblock of enableCaching()</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fRequest.php" hash="b5e41e7e285a3e7a12bd398d4dadcc12" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="43" package="Flourish">
      <extends/>
      <name>fRequest</name>
      <full_name>\fRequest</full_name>
      <docblock line="2">
        <description><![CDATA[Provides request-related methods]]></description>
        <long-description><![CDATA[<p>This class is implemented to use the UTF-8 character encoding. Please see
http://flourishlib.com/docs/UTF-8 for more information.</p>

<p>Please also note that using this class in a PUT or DELETE request will
cause the php://input stream to be consumed, and thus no longer available.</p>]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2011 Will Bond, others"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="author" description="Will Bond, iMarc LLC [wb-imarc] &lt;will@imarc.net&gt;"/>
        <tag line="2" name="author" description="Alex Leeds [al] &lt;alex@kingleeds.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fRequest" link="http://flourishlib.com/fRequest"/>
        <tag line="2" name="version" description="1.0.0b21"/>
        <tag line="2" name="changes" description="1.0.0b21  Added ::isHead(), fixed ability to call ::set() on `HEAD` requests [wb-imarc, 2011-11-23]"/>
        <tag line="2" name="changes" description="1.0.0b20  Fixed problem where Accept headers are spaced out and mime-types won't match (mainly from IE)"/>
        <tag line="2" name="changes" description="1.0.0b19  Added the `$use_default_for_blank` parameter to ::get() [wb, 2011-06-03]"/>
        <tag line="2" name="changes" description="1.0.0b18  Backwards Compatibility Break - ::getBestAcceptType() and ::getBestAcceptLanguage() now return either `NULL`, `FALSE` or a string instead of `NULL` or a string, both methods are more robust in handling edge cases [wb, 2011-02-06]"/>
        <tag line="2" name="changes" description="1.0.0b17  Fixed support for 3+ dimensional input arrays, added a fixed for the PHP DoS float bug #53632, added support for type-casted arrays in ::get() [wb, 2011-01-09]"/>
        <tag line="2" name="changes" description="1.0.0b16  Backwards Compatibility Break - changed ::get() to remove binary characters when casting to a `string`, changed `int` and `integer` to cast to a real integer when possible, added new types of `binary` and `integer!` [wb, 2010-11-30]"/>
        <tag line="2" name="changes" description="1.0.0b15  Added documentation about `[sub-key]` syntax, added `[sub-key]` support to ::check() [wb, 2010-09-12]"/>
        <tag line="2" name="changes" description="1.0.0b14  Rewrote ::set() to not require recursion for array syntax [wb, 2010-09-12]"/>
        <tag line="2" name="changes" description="1.0.0b13  Fixed ::set() to work with `PUT` requests [wb, 2010-06-30]"/>
        <tag line="2" name="changes" description="1.0.0b12  Fixed a bug with ::getBestAcceptLanguage() returning the second-best language [wb, 2010-05-27]"/>
        <tag line="2" name="changes" description="1.0.0b11  Added ::isAjax() [al, 2010-03-15]"/>
        <tag line="2" name="changes" description="1.0.0b10  Fixed ::get() to not truncate integers to the 32bit integer limit [wb, 2010-03-05]"/>
        <tag line="2" name="changes" description="1.0.0b9   Updated class to use new fSession API [wb, 2009-10-23]"/>
        <tag line="2" name="changes" description="1.0.0b8   Casting to an integer or string in ::get() now properly casts when the `$key` isn't present in the request, added support for date, time, timestamp and `?` casts [wb, 2009-08-25]"/>
        <tag line="2" name="changes" description="1.0.0b7   Fixed a bug with ::filter() not properly creating new `$_FILES` entries [wb, 2009-07-02]"/>
        <tag line="2" name="changes" description="1.0.0b6   ::filter() now works with empty prefixes and filtering the `$_FILES` superglobal has been fixed [wb, 2009-07-02]"/>
        <tag line="2" name="changes" description="1.0.0b5   Changed ::filter() so that it can be called multiple times for multi-level filtering [wb, 2009-06-02]"/>
        <tag line="2" name="changes" description="1.0.0b4   Added the HTML escaping functions ::encode() and ::prepare() [wb, 2009-05-27]"/>
        <tag line="2" name="changes" description="1.0.0b3   Updated class to use new fSession API [wb, 2009-05-08]"/>
        <tag line="2" name="changes" description="1.0.0b2   Added ::generateCSRFToken() from fCRUD::generateRequestToken() and ::validateCSRFToken() from fCRUD::validateRequestToken() [wb, 2009-05-08]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2007-06-14]"/>
      </docblock>
      <constant namespace="global" line="46" package="Flourish">
        <name>check</name>
        <full_name>check</full_name>
        <value><![CDATA['fRequest::check']]></value>
      </constant>
      <constant namespace="global" line="47" package="Flourish">
        <name>encode</name>
        <full_name>encode</full_name>
        <value><![CDATA['fRequest::encode']]></value>
      </constant>
      <constant namespace="global" line="48" package="Flourish">
        <name>filter</name>
        <full_name>filter</full_name>
        <value><![CDATA['fRequest::filter']]></value>
      </constant>
      <constant namespace="global" line="49" package="Flourish">
        <name>generateCSRFToken</name>
        <full_name>generateCSRFToken</full_name>
        <value><![CDATA['fRequest::generateCSRFToken']]></value>
      </constant>
      <constant namespace="global" line="50" package="Flourish">
        <name>get</name>
        <full_name>get</full_name>
        <value><![CDATA['fRequest::get']]></value>
      </constant>
      <constant namespace="global" line="51" package="Flourish">
        <name>getAcceptLanguages</name>
        <full_name>getAcceptLanguages</full_name>
        <value><![CDATA['fRequest::getAcceptLanguages']]></value>
      </constant>
      <constant namespace="global" line="52" package="Flourish">
        <name>getAcceptTypes</name>
        <full_name>getAcceptTypes</full_name>
        <value><![CDATA['fRequest::getAcceptTypes']]></value>
      </constant>
      <constant namespace="global" line="53" package="Flourish">
        <name>getBestAcceptLanguage</name>
        <full_name>getBestAcceptLanguage</full_name>
        <value><![CDATA['fRequest::getBestAcceptLanguage']]></value>
      </constant>
      <constant namespace="global" line="54" package="Flourish">
        <name>getBestAcceptType</name>
        <full_name>getBestAcceptType</full_name>
        <value><![CDATA['fRequest::getBestAcceptType']]></value>
      </constant>
      <constant namespace="global" line="55" package="Flourish">
        <name>getValid</name>
        <full_name>getValid</full_name>
        <value><![CDATA['fRequest::getValid']]></value>
      </constant>
      <constant namespace="global" line="56" package="Flourish">
        <name>isAjax</name>
        <full_name>isAjax</full_name>
        <value><![CDATA['fRequest::isAjax']]></value>
      </constant>
      <constant namespace="global" line="57" package="Flourish">
        <name>isDelete</name>
        <full_name>isDelete</full_name>
        <value><![CDATA['fRequest::isDelete']]></value>
      </constant>
      <constant namespace="global" line="58" package="Flourish">
        <name>isGet</name>
        <full_name>isGet</full_name>
        <value><![CDATA['fRequest::isGet']]></value>
      </constant>
      <constant namespace="global" line="59" package="Flourish">
        <name>isHead</name>
        <full_name>isHead</full_name>
        <value><![CDATA['fRequest::isHead']]></value>
      </constant>
      <constant namespace="global" line="60" package="Flourish">
        <name>isPost</name>
        <full_name>isPost</full_name>
        <value><![CDATA['fRequest::isPost']]></value>
      </constant>
      <constant namespace="global" line="61" package="Flourish">
        <name>isPut</name>
        <full_name>isPut</full_name>
        <value><![CDATA['fRequest::isPut']]></value>
      </constant>
      <constant namespace="global" line="62" package="Flourish">
        <name>overrideAction</name>
        <full_name>overrideAction</full_name>
        <value><![CDATA['fRequest::overrideAction']]></value>
      </constant>
      <constant namespace="global" line="63" package="Flourish">
        <name>prepare</name>
        <full_name>prepare</full_name>
        <value><![CDATA['fRequest::prepare']]></value>
      </constant>
      <constant namespace="global" line="64" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <value><![CDATA['fRequest::reset']]></value>
      </constant>
      <constant namespace="global" line="65" package="Flourish">
        <name>set</name>
        <full_name>set</full_name>
        <value><![CDATA['fRequest::set']]></value>
      </constant>
      <constant namespace="global" line="66" package="Flourish">
        <name>unfilter</name>
        <full_name>unfilter</full_name>
        <value><![CDATA['fRequest::unfilter']]></value>
      </constant>
      <constant namespace="global" line="67" package="Flourish">
        <name>validateCSRFToken</name>
        <full_name>validateCSRFToken</full_name>
        <value><![CDATA['fRequest::validateCSRFToken']]></value>
      </constant>
      <property final="false" static="true" visibility="private" line="75" namespace="global" package="Sutra">
        <name>$backup_files</name>
        <default><![CDATA[array()]]></default>
        <docblock line="70">
          <description><![CDATA[A backup copy of `$_FILES` for ::unfilter()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="70" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="82" namespace="global" package="Sutra">
        <name>$backup_get</name>
        <default><![CDATA[array()]]></default>
        <docblock line="77">
          <description><![CDATA[A backup copy of `$_GET` for ::unfilter()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="77" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="89" namespace="global" package="Sutra">
        <name>$backup_post</name>
        <default><![CDATA[array()]]></default>
        <docblock line="84">
          <description><![CDATA[A backup copy of `$_POST` for unfilter()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="84" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="96" namespace="global" package="Sutra">
        <name>$backup_put_delete</name>
        <default><![CDATA[array()]]></default>
        <docblock line="91">
          <description><![CDATA[A backup copy of the local `PUT`/`DELETE` post data for ::unfilter()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="91" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="103" namespace="global" package="Sutra">
        <name>$put_delete</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="98">
          <description><![CDATA[The key/value pairs from the post data of a `PUT`/`DELETE` request]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="98" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="114" package="Flourish">
        <name>cast</name>
        <full_name>cast</full_name>
        <docblock line="106">
          <description><![CDATA[Recursively handles casting values]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="106" name="param" description="The value to be casted" type="string|array" variable="$value">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="106" name="param" description="The data type to cast to" type="string" variable="$cast_to">
            <type by_reference="false">string</type>
          </tag>
          <tag line="106" name="param" description="The nesting level of the call" type="integer" variable="$level">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="106" name="return" description="The casted `$value`" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="114">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="114">
          <name>$cast_to</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="114">
          <name>$level</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="233" package="Flourish">
        <name>check</name>
        <full_name>check</full_name>
        <docblock line="227">
          <description><![CDATA[Indicated if the parameter specified is set in the `$_GET` or `$_POST` superglobals or in the post data of a `PUT` or `DELETE` request]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="227" name="param" description="The key to check - array elements can be checked via `[sub-key]` syntax" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="227" name="return" description="If the parameter is set" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="233">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="278" package="Flourish">
        <name>encode</name>
        <full_name>encode</full_name>
        <docblock line="270">
          <description><![CDATA[Gets a value from ::get() and passes it through fHTML::encode()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="270" name="param" description="The key to get the value of - array elements can be accessed via `[sub-key]` syntax" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="270" name="param" description="Cast the value to this data type" type="string" variable="$cast_to">
            <type by_reference="false">string</type>
          </tag>
          <tag line="270" name="param" description="If the parameter is not set in the `DELETE`/`PUT` post data, `$_POST` or `$_GET`, use this value instead" type="mixed" variable="$default_value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="270" name="return" description="The encoded value" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="278">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="278">
          <name>$cast_to</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="278">
          <name>$default_value</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="293" package="Flourish">
        <name>filter</name>
        <full_name>filter</full_name>
        <docblock line="284">
          <description><![CDATA[Parses through `$_FILES`, `$_GET`, `$_POST` and the `PUT`/`DELETE` post data and filters out everything that doesn't match the prefix and key, also removes the prefix from the field name]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="284" name="internal" description=""/>
          <tag line="284" name="param" description="The prefix to filter by" type="string" variable="$prefix">
            <type by_reference="false">string</type>
          </tag>
          <tag line="284" name="param" description="If the field is an array, get the value corresponding to this key" type="mixed" variable="$key">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="284" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="293">
          <name>$prefix</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="293">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="355" package="Flourish">
        <name>generateCSRFToken</name>
        <full_name>generateCSRFToken</full_name>
        <docblock line="337">
          <description><![CDATA[Returns a request token that should be placed in each HTML form to prevent [http://en.wikipedia.org/wiki/Cross-site_request_forgery cross-site request forgery]]]></description>
          <long-description><![CDATA[<p>This method will return a random 15 character string that should be
placed in a hidden <code>input</code> element on every HTML form. When the form
contents are being processed, the token should be retrieved and passed
into ::validateCSRFToken().</p>

<p>The value returned by this method is stored in the session and then
checked by the validate method, which helps prevent cross site request
forgeries and (naive) automated form submissions.</p>

<p>Tokens generated by this method are single use, so a user must request
the page that generates the token at least once per submission.</p>]]></long-description>
          <tag line="337" name="param" description="The URL to generate a token for, default to the current page" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="337" name="return" description="The token to be submitted with the form" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="355">
          <name>$url</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="418" package="Flourish">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="369">
          <description><![CDATA[Gets a value from the `DELETE`/`PUT` post data, `$_POST` or `$_GET` superglobals (in that order)]]></description>
          <long-description><![CDATA[<p>A value that exactly equals <code>''</code> and is not cast to a specific type will
become <code>NULL</code>.</p>

<p>Valid <code>$cast_to</code> types include:
 - <code>'string'</code>
 - <code>'binary'</code>
 - <code>'int'</code>
 - <code>'integer'</code>
 - <code>'bool'</code>
 - <code>'boolean'</code>
 - <code>'array'</code>
 - <code>'date'</code>
 - <code>'time'</code>
 - <code>'timestamp'</code></p>

<p>It is possible to append a <code>?</code> to a data type to return <code>NULL</code>
whenever the <code>$key</code> was not specified in the request, or if the value
was a blank string.</p>

<p>The <code>array</code> and unspecified <code>$cast_to</code> types allow for multi-dimensional
arrays of string data. It is possible to cast an input value as a
single-dimensional array of a specific type by appending <code>[]</code> to the
<code>$cast_to</code>.</p>

<p>All <code>string</code>, <code>array</code> or unspecified <code>$cast_to</code> will result in the value(s)
being interpreted as UTF-8 string and appropriately cleaned of invalid
byte sequences. Also, all low-byte, non-printable characters will be
stripped from the value. This includes all bytes less than the value of
32 (Space) other than Tab (<code>\t</code>), Newline (<code>\n</code>) and Cariage Return
(<code>\r</code>).</p>

<p>To preserve low-byte, non-printable characters, or get the raw value
without cleaning invalid UTF-8 byte sequences, plase use the value of
<code>binary</code> for the <code>$cast_to</code> parameter.</p>

<p>Any integers that are beyond the range of 32bit storage will be returned
as a string. The returned value can be forced to always be a real
integer, which may cause truncation of the value, by passing <code>integer!</code>
as the <code>$cast_to</code>.</p>]]></long-description>
          <tag line="369" name="param" description="The key to get the value of - array elements can be accessed via `[sub-key]` syntax" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="369" name="param" description="Cast the value to this data type - see method description for details" type="string" variable="$cast_to">
            <type by_reference="false">string</type>
          </tag>
          <tag line="369" name="param" description="If the parameter is not set in the `DELETE`/`PUT` post data, `$_POST` or `$_GET`, use this value instead. This value will get cast if a `$cast_to` is specified." type="mixed" variable="$default_value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="369" name="param" description="If the request value is a blank string and `$default_value` is specified, this flag will cause the `$default_value` to be returned" type="boolean" variable="$use_default_for_blank">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="369" name="return" description="The value" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="418">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="418">
          <name>$cast_to</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="418">
          <name>$default_value</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="418">
          <name>$use_default_for_blank</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="472" package="Flourish">
        <name>getAcceptLanguages</name>
        <full_name>getAcceptLanguages</full_name>
        <docblock line="467">
          <description><![CDATA[Returns the HTTP `Accept-Language`s sorted by their `q` values (from high to low)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="467" name="return" description="An associative array of `{language} =&gt; {q value}` sorted (in a stable-fashion) from highest to lowest `q` - if no header was sent, an empty array will be returned" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="483" package="Flourish">
        <name>getAcceptTypes</name>
        <full_name>getAcceptTypes</full_name>
        <docblock line="478">
          <description><![CDATA[Returns the HTTP `Accept` types sorted by their `q` values (from high to low)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="478" name="return" description="An associative array of `{type} =&gt; {q value}` sorted (in a stable-fashion) from highest to lowest `q` - if no header was sent, an empty array will be returned" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="504" package="Flourish">
        <name>getBestAcceptLanguage</name>
        <full_name>getBestAcceptLanguage</full_name>
        <docblock line="489">
          <description><![CDATA[Returns the best HTTP `Accept-Language` (based on `q` value) - can be filtered to only allow certain languages]]></description>
          <long-description><![CDATA[<p>Special conditions affecting the return value:
 - If no <code>$filter</code> is provided and the client does not send the <code>Accept-Language</code> header, <code>NULL</code> will be returned
 - If no <code>$filter</code> is provided and the client specifies <code>*</code> with the highest <code>q</code>, <code>NULL</code> will be returned
 - If <code>$filter</code> contains one or more values, but the <code>Accept-Language</code> header does not match any, <code>FALSE</code> will be returned
 - If <code>$filter</code> contains one or more values, but the client does not send the <code>Accept-Language</code> header, the first entry from <code>$filter</code> will be returned
 - If <code>$filter</code> contains two or more values, and two of the values have the same <code>q</code> value, the one listed first in <code>$filter</code> will be returned</p>]]></long-description>
          <tag line="489" name="param" description="An array of languages that are valid to return - these should be in the form `{language}-{territory}`, e.g. `en-us`" type="array" variable="$filter">
            <type by_reference="false">array</type>
          </tag>
          <tag line="489" name="param" description="|$language A language that is valid to return" type="string" variable="">
            <type by_reference="false">string</type>
          </tag>
          <tag line="489" name="param" description="|..." type="string" variable="">
            <type by_reference="false">string</type>
          </tag>
          <tag line="489" name="return" description="The best language listed in the `Accept-Language` header - see method description for edge cases" type="string|NULL|FALSE">
            <type by_reference="false">string</type>
            <type by_reference="false">NULL</type>
            <type by_reference="false">FALSE</type>
          </tag>
        </docblock>
        <argument line="504">
          <name>$filter</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="528" package="Flourish">
        <name>getBestAcceptType</name>
        <full_name>getBestAcceptType</full_name>
        <argument line="528">
          <name>$filter</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="544" package="Flourish">
        <name>getValid</name>
        <full_name>getValid</full_name>
        <docblock line="537">
          <description><![CDATA[Gets a value from the `DELETE`/`PUT` post data, `$_POST` or `$_GET` superglobals (in that order), restricting to a specific set of values]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="537" name="param" description="The key to get the value of - array elements can be accessed via `[sub-key]` syntax" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="537" name="param" description="The array of values that are permissible, if one is not selected, picks first" type="array" variable="$valid_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="537" name="return" description="The value" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="544">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="544">
          <name>$valid_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="561" package="Flourish">
        <name>initPutDelete</name>
        <full_name>initPutDelete</full_name>
        <docblock line="556">
          <description><![CDATA[Parses post data for `PUT` and `DELETE` HTTP methods]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="556" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="580" package="Flourish">
        <name>isAjax</name>
        <full_name>isAjax</full_name>
        <docblock line="575">
          <description><![CDATA[Indicates if the URL was accessed via an XMLHttpRequest]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="575" name="return" description="If the URL was accessed via an XMLHttpRequest" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="591" package="Flourish">
        <name>isDelete</name>
        <full_name>isDelete</full_name>
        <docblock line="586">
          <description><![CDATA[Indicates if the URL was accessed via the `DELETE` HTTP method]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="586" name="return" description="If the URL was accessed via the `DELETE` HTTP method" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="602" package="Flourish">
        <name>isGet</name>
        <full_name>isGet</full_name>
        <docblock line="597">
          <description><![CDATA[Indicates if the URL was accessed via the `GET` HTTP method]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="597" name="return" description="If the URL was accessed via the `GET` HTTP method" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="613" package="Flourish">
        <name>isHead</name>
        <full_name>isHead</full_name>
        <docblock line="608">
          <description><![CDATA[Indicates if the URL was accessed via the `HEAD` HTTP method]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="608" name="return" description="If the URL was accessed via the `HEAD` HTTP method" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="624" package="Flourish">
        <name>isPost</name>
        <full_name>isPost</full_name>
        <docblock line="619">
          <description><![CDATA[Indicates if the URL was accessed via the `POST` HTTP method]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="619" name="return" description="If the URL was accessed via the `POST` HTTP method" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="635" package="Flourish">
        <name>isPut</name>
        <full_name>isPut</full_name>
        <docblock line="630">
          <description><![CDATA[Indicates if the URL was accessed via the `PUT` HTTP method]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="630" name="return" description="If the URL was accessed via the `PUT` HTTP method" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="650" package="Flourish">
        <name>overrideAction</name>
        <full_name>overrideAction</full_name>
        <docblock line="641">
          <description><![CDATA[Overrides the value of `'action'` in the `DELETE`/`PUT` post data, `$_POST` or `$_GET` superglobals based on the `'action::{action_name}'` value]]></description>
          <long-description><![CDATA[<p>This method is primarily intended to be used for hanlding multiple
submit buttons.</p>]]></long-description>
          <tag line="641" name="param" description="The url to redirect to if the action is overriden. `%action%` will be replaced with the overridden action." type="string" variable="$redirect">
            <type by_reference="false">string</type>
          </tag>
          <tag line="641" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="650">
          <name>$redirect</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="680" package="Flourish">
        <name>pickBestAcceptItem</name>
        <full_name>pickBestAcceptItem</full_name>
        <docblock line="673">
          <description><![CDATA[Returns the best HTTP `Accept-*` header item match (based on `q` value), optionally filtered by an array of options]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="673" name="param" description="The key in `$_SERVER` that contains the `Accept-*` header to pick the best item from" type="string" variable="$header_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="673" name="param" description="A list of supported options to pick the best from" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="673" name="return" description="The best accept item, `FALSE` if an options array is specified and none are valid, `NULL` if anything is accepted" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="680">
          <name>$header_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="680">
          <name>$options</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="744" package="Flourish">
        <name>prepare</name>
        <full_name>prepare</full_name>
        <docblock line="736">
          <description><![CDATA[Gets a value from ::get() and passes it through fHTML::prepare()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="736" name="param" description="The key to get the value of - array elements can be accessed via `[sub-key]` syntax" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="736" name="param" description="Cast the value to this data type" type="string" variable="$cast_to">
            <type by_reference="false">string</type>
          </tag>
          <tag line="736" name="param" description="If the parameter is not set in the `DELETE`/`PUT` post data, `$_POST` or `$_GET`, use this value instead" type="mixed" variable="$default_value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="736" name="return" description="The prepared value" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="744">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="744">
          <name>$cast_to</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="744">
          <name>$default_value</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="756" package="Flourish">
        <name>processAcceptHeader</name>
        <full_name>processAcceptHeader</full_name>
        <docblock line="750">
          <description><![CDATA[Returns an array of values from one of the HTTP `Accept-*` headers]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="750" name="param" description="The key in `$_SERVER` to get the header value from" type="string" variable="$header_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="750" name="return" description="An associative array of `{value} =&gt; {quality}` sorted (in a stable-fashion) from highest to lowest `q` - an empty array is returned if the header is empty" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="756">
          <name>$header_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="798" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="791">
          <description><![CDATA[Resets the configuration and data of the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="791" name="internal" description=""/>
          <tag line="791" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="817" package="Flourish">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="810">
          <description><![CDATA[Sets a value into the appropriate `$_GET` or `$_POST` superglobal, or the local `PUT`/`DELETE` post data based on what HTTP method was used for the request]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="810" name="param" description="The key to set the value to - array elements can be modified via `[sub-key]` syntax" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="810" name="param" description="The value to set" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="810" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="817">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="817">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="856" package="Flourish">
        <name>stripLowOrderBytes</name>
        <full_name>stripLowOrderBytes</full_name>
        <docblock line="850">
          <description><![CDATA[Removes low-order bytes from a value]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="850" name="param" description="The value to strip" type="string|array" variable="$value">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="850" name="return" description="The `$value` with low-order bytes stripped" type="string|array">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="856">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="874" package="Flourish">
        <name>stripSlashes</name>
        <full_name>stripSlashes</full_name>
        <docblock line="868">
          <description><![CDATA[Removes slashes from a value]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="868" name="param" description="The value to strip" type="string|array" variable="$value">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="868" name="return" description="The `$value` with slashes stripped" type="string|array">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="874">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="893" package="Flourish">
        <name>unfilter</name>
        <full_name>unfilter</full_name>
        <docblock line="886">
          <description><![CDATA[Returns `$_GET`, `$_POST` and `$_FILES` and the `PUT`/`DELTE` post data to the state they were at before ::filter() was called]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="886" name="internal" description=""/>
          <tag line="886" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="922" package="Flourish">
        <name>validateCSRFToken</name>
        <full_name>validateCSRFToken</full_name>
        <docblock line="910">
          <description><![CDATA[Validates a request token generated by ::generateCSRFToken()]]></description>
          <long-description><![CDATA[<p>This method takes a request token and ensures it is valid, otherwise
it will throw an fValidationException.</p>]]></long-description>
          <tag line="910" name="throws" description="When the CSRF token specified is invalid" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="910" name="param" description="The request token to validate" type="string" variable="$token">
            <type by_reference="false">string</type>
          </tag>
          <tag line="910" name="param" description="The URL to validate the token for, default to the current page" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="910" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="922">
          <name>$token</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="922">
          <name>$url</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="947" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="942">
          <description><![CDATA[Forces use as a static class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="942" name="return" description="" type="\fRequest">
            <type by_reference="false">\fRequest</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fRequest.php</error>
      <notice line="489" code="50013">Parameter  could not be found in getBestAcceptLanguage()</notice>
      <notice line="489" code="50013">Parameter  could not be found in getBestAcceptLanguage()</notice>
      <error line="528" code="50010">No DocBlock was found for method getBestAcceptType()</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fStatement.php" hash="e503e7f4808aaf4aa85ad7990e6decae" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="21" package="Flourish">
      <extends/>
      <name>fStatement</name>
      <full_name>\fStatement</full_name>
      <docblock line="2">
        <description><![CDATA[Representation of a prepared statement for use with the fDatabase class]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2010-2011 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fStatement" link="http://flourishlib.com/fStatement"/>
        <tag line="2" name="version" description="1.0.0b7"/>
        <tag line="2" name="changes" description="1.0.0b7  Fixed handling of arrays of values for ::execute(), ::executeQuery() and ::executeUnbufferedQuery(), fixed escaping of values that become `NULL` [wb, 2011-05-09]"/>
        <tag line="2" name="changes" description="1.0.0b6  Added ::getUntranslatedSQL() [wb, 2011-01-09]"/>
        <tag line="2" name="changes" description="1.0.0b5  Fixed an edge case where the mysqli extension would leak memory when fetching a `TEXT` or `BLOB` column [wb, 2010-08-28]"/>
        <tag line="2" name="changes" description="1.0.0b4  Updated class to use fCore::startErrorCapture() instead of `error_reporting()` [wb, 2010-08-09]"/>
        <tag line="2" name="changes" description="1.0.0b3  Backwards Compatibility Break - removed ODBC support. Fixed UTF-8 support for the `pdo_dblib` extension. [wb, 2010-07-31]"/>
        <tag line="2" name="changes" description="1.0.0b2  Added IBM DB2 support [wb, 2010-04-13]"/>
        <tag line="2" name="changes" description="1.0.0b   The initial implementation [wb, 2010-03-02]"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="28" namespace="global" package="Sutra">
        <name>$bound_params</name>
        <default><![CDATA[array()]]></default>
        <docblock line="23">
          <description><![CDATA[This holds references for params in sqlsrv prepared statements]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="23" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="35" namespace="global" package="Sutra">
        <name>$database</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="30">
          <description><![CDATA[The database the statement was created from]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="30" name="var" description="" type="\fDatabase">
            <type by_reference="false">\fDatabase</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="42" namespace="global" package="Sutra">
        <name>$identifier</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="37">
          <description><![CDATA[The identifier for this statement - only used by the pgsql extension]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="37" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="49" namespace="global" package="Sutra">
        <name>$placeholders</name>
        <default><![CDATA[array()]]></default>
        <docblock line="44">
          <description><![CDATA[The data type placeholders]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="44" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="56" namespace="global" package="Sutra">
        <name>$statement</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="51">
          <description><![CDATA[The statement object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="51" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="63" namespace="global" package="Sutra">
        <name>$sql</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="58">
          <description><![CDATA[The SQL the statement was created from]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="58" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="70" namespace="global" package="Sutra">
        <name>$untranslated_sql</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="65">
          <description><![CDATA[The original SQL, if it was translated]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="65" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="77" namespace="global" package="Sutra">
        <name>$used</name>
        <default><![CDATA[FALSE]]></default>
        <docblock line="72">
          <description><![CDATA[If the statement has been used yet]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="72" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="91" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="80">
          <description><![CDATA[Sets up a prepared statement]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="80" name="internal" description=""/>
          <tag line="80" name="param" description="The database object this result set was created from" type="\fDatabase" variable="$database">
            <type by_reference="false">\fDatabase</type>
          </tag>
          <tag line="80" name="param" description="The SQL statement to prepare" type="string" variable="$query">
            <type by_reference="false">string</type>
          </tag>
          <tag line="80" name="param" description="The data type placeholders" type="array" variable="$placeholders">
            <type by_reference="false">array</type>
          </tag>
          <tag line="80" name="param" description="The original untranslated SQL, if applicable" type="string" variable="$untranslated_query">
            <type by_reference="false">string</type>
          </tag>
          <tag line="80" name="return" description="" type="\fStatement">
            <type by_reference="false">\fStatement</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$database</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="91">
          <name>$query</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="91">
          <name>$placeholders</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="91">
          <name>$untranslated_sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="260" package="Flourish">
        <name>__destruct</name>
        <full_name>__destruct</full_name>
        <docblock line="253">
          <description><![CDATA[Frees up the result object to save memory]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="253" name="internal" description=""/>
          <tag line="253" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="301" package="Flourish">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="293">
          <description><![CDATA[All requests that hit this method should be requests for callbacks]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="293" name="internal" description=""/>
          <tag line="293" name="param" description="The method to create a callback for" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="293" name="return" description="The callback for the method requested" type="callback">
            <type by_reference="false">callback</type>
          </tag>
        </docblock>
        <argument line="301">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="317" package="Flourish">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="307">
          <description><![CDATA[Executes the statement without returning a result]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="307" name="internal" description=""/>
          <tag line="307" name="param" description="The parameters for the statement" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="307" name="param" description="&amp;$extra A variable to place extra information needed by some database extensions" type="mixed" variable="$extra">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="307" name="param" description="If this statement is different than the last statement run on the fDatabase instance" type="boolean" variable="$different">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="307" name="return" description="The (usually boolean) result of the extension function/method call" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="317">
          <name>$params</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="317">
          <name>$extra</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="317">
          <name>$different</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="410" package="Flourish">
        <name>executeQuery</name>
        <full_name>executeQuery</full_name>
        <docblock line="399">
          <description><![CDATA[Executes the statement in buffered mode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="399" name="internal" description=""/>
          <tag line="399" name="param" description="The object to place the result into" type="\fResult" variable="$result">
            <type by_reference="false">\fResult</type>
          </tag>
          <tag line="399" name="param" description="The parameters for the statement" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="399" name="param" description="&amp;$extra A variable to place extra information needed by some database extensions" type="mixed" variable="$extra">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="399" name="param" description="If this statement is different than the last statement run on the fDatabase instance" type="boolean" variable="$different">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="399" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="410">
          <name>$result</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="410">
          <name>$params</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="410">
          <name>$extra</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="410">
          <name>$different</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="588" package="Flourish">
        <name>executeUnbufferedQuery</name>
        <full_name>executeUnbufferedQuery</full_name>
        <docblock line="577">
          <description><![CDATA[Executes the statement in unbuffered mode (if possible)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="577" name="internal" description=""/>
          <tag line="577" name="param" description="The object to place the result into" type="\fUnbufferedResult" variable="$result">
            <type by_reference="false">\fUnbufferedResult</type>
          </tag>
          <tag line="577" name="param" description="The parameters for the statement" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="577" name="param" description="&amp;$extra A variable to place extra information needed by some database extensions" type="mixed" variable="$extra">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="577" name="param" description="If this statement is different than the last statement run on the fDatabase instance" type="boolean" variable="$different">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="577" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="588">
          <name>$result</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="588">
          <name>$params</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="588">
          <name>$extra</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="588">
          <name>$different</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="691" package="Flourish">
        <name>getSQL</name>
        <full_name>getSQL</full_name>
        <docblock line="686">
          <description><![CDATA[Returns the SQL for the prepared statement]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="686" name="return" description="The SQL statement" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="702" package="Flourish">
        <name>getUntranslatedSQL</name>
        <full_name>getUntranslatedSQL</full_name>
        <docblock line="697">
          <description><![CDATA[Returns the untranslated SQL for the prepared statement]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="697" name="return" description="The untranslated SQL statement" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="714" package="Flourish">
        <name>prepareParams</name>
        <full_name>prepareParams</full_name>
        <docblock line="708">
          <description><![CDATA[Takes an array of parameters and prepares them for use in a prepared statement]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="708" name="param" description="The parameters" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="708" name="return" description="The prepared parameters" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="714">
          <name>$params</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="875" package="Flourish">
        <name>regenerateStatement</name>
        <full_name>regenerateStatement</full_name>
        <docblock line="869">
          <description><![CDATA[The MySQL PDO driver has issues if you try to reuse a prepared statement
without any placeholders.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="869" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fStatement.php</error>
      <error line="80" code="50014">Name of argument $untranslated_sql does not match with the DocBlock's name $untranslated_query in __construct()</error>
      <notice line="80" code="50013">Parameter $untranslated_query could not be found in __construct()</notice>
    </parse_markers>
  </file>
  <file path="php/flourish/fORMDatabase.php" hash="ac1f3c093b0e725e85e08cda93dbc19c" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="47" package="Flourish">
      <extends/>
      <name>fORMDatabase</name>
      <full_name>\fORMDatabase</full_name>
      <docblock line="2">
        <description><![CDATA[Holds a single instance of the fDatabase class and provides database manipulation functionality for ORM code]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2011 Will Bond, others"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="author" description="Craig Ruksznis, iMarc LLC [cr-imarc] &lt;craigruk@imarc.net&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fORMDatabase" link="http://flourishlib.com/fORMDatabase"/>
        <tag line="2" name="version" description="1.0.0b32"/>
        <tag line="2" name="changes" description="1.0.0b32  Added support to ::addWhereClause() for the `^~` and `$~` operators [wb, 2011-06-20]"/>
        <tag line="2" name="changes" description="1.0.0b31  Fixed a bug with ::addWhereClause() generating invalid SQL [wb, 2011-05-10]"/>
        <tag line="2" name="changes" description="1.0.0b30  Fixed ::insertFromAndGroupByClauses() to insert `MAX()` around columns in related tables in the `ORDER BY` clause when a `GROUP BY` is used [wb, 2011-02-03]"/>
        <tag line="2" name="changes" description="1.0.0b29  Added code to handle old PCRE engines that don't support unicode character properties [wb, 2010-12-06]"/>
        <tag line="2" name="changes" description="1.0.0b28  Fixed a bug in the fProgrammerException that is thrown when an improperly formatted OR condition is provided [wb, 2010-11-24]"/>
        <tag line="2" name="changes" description="1.0.0b27  Fixed ::addWhereClause() to ignore fuzzy search clauses with no values to match [wb, 2010-10-19]"/>
        <tag line="2" name="changes" description="1.0.0b26  Fixed ::insertFromAndGroupByClauses() to handle SQL where a table is references in more than one capitalization [wb, 2010-07-26]"/>
        <tag line="2" name="changes" description="1.0.0b25  Fixed ::insertFromAndGroupByClauses() to properly handle recursive relationships [wb, 2010-07-22]"/>
        <tag line="2" name="changes" description="1.0.0b24  Fixed ::parseSearchTerms() to work with non-ascii terms [wb, 2010-06-30]"/>
        <tag line="2" name="changes" description="1.0.0b23  Fixed error messages in ::retrieve() [wb, 2010-04-23]"/>
        <tag line="2" name="changes" description="1.0.0b22  Added support for IBM DB2, fixed an issue with building record sets or records that have recursive relationships [wb, 2010-04-13]"/>
        <tag line="2" name="changes" description="1.0.0b21  Changed ::injectFromAndGroupByClauses() to be able to handle table aliases that contain other aliases inside of them [wb, 2010-03-03]"/>
        <tag line="2" name="changes" description="1.0.0b20  Fixed a bug where joining to a table two separate ways could cause table alias issues and incorrect SQL to be generated [wb, 2009-12-16]"/>
        <tag line="2" name="changes" description="1.0.0b19  Added the ability to compare columns with the `=:`, `!:`, `&lt;:`, `&lt;=:`, `&gt;:` and `&gt;=:` operators [wb, 2009-12-08]"/>
        <tag line="2" name="changes" description="1.0.0b18  Fixed a bug affecting where conditions with columns that are not null but have a default value [wb, 2009-11-03]"/>
        <tag line="2" name="changes" description="1.0.0b17  Added support for multiple databases [wb, 2009-10-28]"/>
        <tag line="2" name="changes" description="1.0.0b16  Internal Backwards Compatibility Break - Renamed methods and significantly changed parameters and functionality for SQL statements to use value placeholders, identifier escaping and to handle schemas [wb, 2009-10-22]"/>
        <tag line="2" name="changes" description="1.0.0b15  Streamlined intersection operator SQL and added support for the second value being NULL [wb, 2009-09-21]"/>
        <tag line="2" name="changes" description="1.0.0b14  Added support for the intersection operator `&gt;&lt;` to ::createWhereClause() [wb, 2009-07-13]"/>
        <tag line="2" name="changes" description="1.0.0b13  Added support for the `AND LIKE` operator `&amp;~` to ::createWhereClause() [wb, 2009-07-09]"/>
        <tag line="2" name="changes" description="1.0.0b12  Added support for the `NOT LIKE` operator `!~` to ::createWhereClause() [wb, 2009-07-08]"/>
        <tag line="2" name="changes" description="1.0.0b11  Added support for concatenated columns to ::escapeBySchema() [cr-imarc, 2009-06-19]"/>
        <tag line="2" name="changes" description="1.0.0b10  Updated ::createWhereClause() to properly handle NULLs for arrays of values when doing = and != comparisons [wb, 2009-06-17]"/>
        <tag line="2" name="changes" description="1.0.0b9   Changed replacement values in preg_replace() calls to be properly escaped [wb, 2009-06-11]"/>
        <tag line="2" name="changes" description="1.0.0b8   Fixed a bug with ::creatingWhereClause() where a null value would not be escaped property [wb, 2009-05-12]"/>
        <tag line="2" name="changes" description="1.0.0b7   Fixed a bug where an OR condition in ::createWhereClause() could not have one of the values be an array [wb, 2009-04-22]"/>
        <tag line="2" name="changes" description="1.0.0b6   ::insertFromAndGroupByClauses() will no longer wrap ungrouped columns if in a CAST or CASE statement for ORDER BY clauses of queries with a GROUP BY clause [wb, 2009-03-23]"/>
        <tag line="2" name="changes" description="1.0.0b5   Fixed ::parseSearchTerms() to include stop words when they are the only thing in the search string [wb, 2008-12-31]"/>
        <tag line="2" name="changes" description="1.0.0b4   Fixed a bug where loading a related record in the same table through a one-to-many relationship caused recursion [wb, 2008-12-24]"/>
        <tag line="2" name="changes" description="1.0.0b3   Fixed a bug from 1.0.0b2 [wb, 2008-12-05]"/>
        <tag line="2" name="changes" description="1.0.0b2   Added support for != and &lt;&gt; to ::createWhereClause() and ::createHavingClause() [wb, 2008-12-04]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2007-08-04]"/>
      </docblock>
      <constant namespace="global" line="50" package="Flourish">
        <name>addHavingClause</name>
        <full_name>addHavingClause</full_name>
        <value><![CDATA['fORMDatabase::addHavingClause']]></value>
      </constant>
      <constant namespace="global" line="51" package="Flourish">
        <name>addOrderByClause</name>
        <full_name>addOrderByClause</full_name>
        <value><![CDATA['fORMDatabase::addOrderByClause']]></value>
      </constant>
      <constant namespace="global" line="52" package="Flourish">
        <name>addPrimaryKeyWhereParams</name>
        <full_name>addPrimaryKeyWhereParams</full_name>
        <value><![CDATA['fORMDatabase::addPrimaryKeyWhereParams']]></value>
      </constant>
      <constant namespace="global" line="53" package="Flourish">
        <name>addWhereClause</name>
        <full_name>addWhereClause</full_name>
        <value><![CDATA['fORMDatabase::addWhereClause']]></value>
      </constant>
      <constant namespace="global" line="54" package="Flourish">
        <name>attach</name>
        <full_name>attach</full_name>
        <value><![CDATA['fORMDatabase::attach']]></value>
      </constant>
      <constant namespace="global" line="55" package="Flourish">
        <name>injectFromAndGroupByClauses</name>
        <full_name>injectFromAndGroupByClauses</full_name>
        <value><![CDATA['fORMDatabase::injectFromAndGroupByClauses']]></value>
      </constant>
      <constant namespace="global" line="56" package="Flourish">
        <name>makeCondition</name>
        <full_name>makeCondition</full_name>
        <value><![CDATA['fORMDatabase::makeCondition']]></value>
      </constant>
      <constant namespace="global" line="57" package="Flourish">
        <name>parseSearchTerms</name>
        <full_name>parseSearchTerms</full_name>
        <value><![CDATA['fORMDatabase::parseSearchTerms']]></value>
      </constant>
      <constant namespace="global" line="58" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <value><![CDATA['fORMDatabase::reset']]></value>
      </constant>
      <constant namespace="global" line="59" package="Flourish">
        <name>retrieve</name>
        <full_name>retrieve</full_name>
        <value><![CDATA['fORMDatabase::retrieve']]></value>
      </constant>
      <constant namespace="global" line="60" package="Flourish">
        <name>splitHavingConditions</name>
        <full_name>splitHavingConditions</full_name>
        <value><![CDATA['fORMDatabase::splitHavingConditions']]></value>
      </constant>
      <property final="false" static="true" visibility="private" line="68" namespace="global" package="Sutra">
        <name>$database_objects</name>
        <default><![CDATA[array()]]></default>
        <docblock line="63">
          <description><![CDATA[An array of fDatabase objects]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="63" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="75" namespace="global" package="Sutra">
        <name>$pcre_supports_unicode_character_properties</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="70">
          <description><![CDATA[If the PCRE engine supports unicode character properties]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="70" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="98" package="Flourish">
        <name>attach</name>
        <full_name>attach</full_name>
        <docblock line="78">
          <description><![CDATA[Allows attaching an fDatabase-compatible objects for by ORM code]]></description>
          <long-description><![CDATA[<p>If a <code>$name</code> other than <code>default</code> is used, any fActiveRecord classes
that should use it will need to be configured by passing the class name
and <code>$name</code> to ::mapClassToDatabase(). The <code>$name</code> parameter should be
unique per database or database master/slave setup.</p>

<p>The <code>$role</code> is used by code to allow for master/slave database setups.
There can only be one database object attached for either of the roles,
<code>'read'</code> or <code>'write'</code>. If the role <code>'both'</code> is specified, it will
be applied to both the <code>'read'</code> and <code>'write'</code> roles. Any sort of logic
for picking one out of multiple databases should be done before this
method is called.</p>]]></long-description>
          <tag line="78" name="param" description="An object that is compatible with fDatabase" type="\fDatabase" variable="$database">
            <type by_reference="false">\fDatabase</type>
          </tag>
          <tag line="78" name="param" description="The name for the database instance" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="78" name="param" description="If the database should be used for `'read'`, `'write'` or `'both'` operations" type="string" variable="$role">
            <type by_reference="false">string</type>
          </tag>
          <tag line="78" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="98">
          <name>$database</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="98">
          <name>$name</name>
          <default><![CDATA['default']]></default>
          <type/>
        </argument>
        <argument line="98">
          <name>$role</name>
          <default><![CDATA['both']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="138" package="Flourish">
        <name>addColumnCondition</name>
        <full_name>addColumnCondition</full_name>
        <docblock line="124">
          <description><![CDATA[Translated the where condition for a single column into a SQL clause]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="124" name="param" description="The database the query will be run on" type="\fDatabase" variable="$db">
            <type by_reference="false">\fDatabase</type>
          </tag>
          <tag line="124" name="param" description="The schema for the database" type="\fSchema" variable="$schema">
            <type by_reference="false">\fSchema</type>
          </tag>
          <tag line="124" name="param" description="The parameters for the fDatabase::query() call" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="124" name="param" description="The table to create the condition for" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="124" name="param" description="The column to store the value in, may also be shorthand column name like `table.column` or `table=&gt;related_table.column`" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="124" name="param" description="Should be `'='`, `'!='`, `'!'`, `'&lt;&gt;'`, `'&lt;'`, `'&lt;='`, `'&gt;'`, `'&gt;='`, `'IN'`, `'NOT IN'`" type="string" variable="$operator">
            <type by_reference="false">string</type>
          </tag>
          <tag line="124" name="param" description="The value(s) to escape" type="mixed" variable="$values">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="124" name="param" description="The escaped column to use in the SQL" type="string" variable="$escaped_column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="124" name="param" description="This allows overriding the placeholder" type="string" variable="$placeholder">
            <type by_reference="false">string</type>
          </tag>
          <tag line="124" name="return" description="The modified parameters" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="138">
          <name>$db</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="138">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="138">
          <name>$params</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="138">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="138">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="138">
          <name>$operator</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="138">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="138">
          <name>$escaped_column</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="138">
          <name>$placeholder</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="365" package="Flourish">
        <name>addHavingClause</name>
        <full_name>addHavingClause</full_name>
        <docblock line="353">
          <description><![CDATA[Creates a `HAVING` clause from an array of conditions]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="353" name="internal" description=""/>
          <tag line="353" name="param" description="The database the query will be executed on" type="\fDatabase" variable="$db">
            <type by_reference="false">\fDatabase</type>
          </tag>
          <tag line="353" name="param" description="The schema for the database" type="\fSchema" variable="$schema">
            <type by_reference="false">\fSchema</type>
          </tag>
          <tag line="353" name="param" description="The params for the fDatabase::query() call" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="353" name="param" description="The table the query is being executed on" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="353" name="param" description="The array of conditions - see fRecordSet::build() for format" type="array" variable="$conditions">
            <type by_reference="false">array</type>
          </tag>
          <tag line="353" name="return" description="The params with the `HAVING` clause added" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="365">
          <name>$db</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="365">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="365">
          <name>$params</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="365">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="365">
          <name>$conditions</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="423" package="Flourish">
        <name>addOrderByClause</name>
        <full_name>addOrderByClause</full_name>
        <docblock line="411">
          <description><![CDATA[Adds an `ORDER BY` clause to an array of params for an fDatabase::query() call]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="411" name="internal" description=""/>
          <tag line="411" name="param" description="The database the query will be executed on" type="\fDatabase" variable="$db">
            <type by_reference="false">\fDatabase</type>
          </tag>
          <tag line="411" name="param" description="The schema object for the database the query will be executed on" type="\fSchema" variable="$schema">
            <type by_reference="false">\fSchema</type>
          </tag>
          <tag line="411" name="param" description="The parameters for the fDatabase::query() call" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="411" name="param" description="The table any ambigious column references will refer to" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="411" name="param" description="The array of order bys to use - see fRecordSet::build() for format" type="array" variable="$order_bys">
            <type by_reference="false">array</type>
          </tag>
          <tag line="411" name="return" description="The params with a SQL `ORDER BY` clause added" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="423">
          <name>$db</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="423">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="423">
          <name>$params</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="423">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="423">
          <name>$order_bys</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="494" package="Flourish">
        <name>addPrimaryKeyWhereParams</name>
        <full_name>addPrimaryKeyWhereParams</full_name>
        <docblock line="481">
          <description><![CDATA[Add the appropriate SQL and params for a `WHERE` clause condition for primary keys of the table specified]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="481" name="internal" description=""/>
          <tag line="481" name="param" description="The schema for the database the query will be run on" type="\fSchema" variable="$schema">
            <type by_reference="false">\fSchema</type>
          </tag>
          <tag line="481" name="param" description="The currently constructed params for fDatabase::query() - the first param should be a SQL statement" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="481" name="param" description="The table to build the where clause for" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="481" name="param" description="The alias for the table" type="string" variable="$table_alias">
            <type by_reference="false">string</type>
          </tag>
          <tag line="481" name="param" description="&amp;$values The values array for the fActiveRecord object" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="481" name="param" description="&amp;$old_values The old values array for the fActiveRecord object" type="array" variable="$old_values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="481" name="return" description="The params to pass to fDatabase::query(), including the new primary key where condition" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="494">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="494">
          <name>$params</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="494">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="494">
          <name>$table_alias</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="494">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="494">
          <name>$old_values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="533" package="Flourish">
        <name>addWhereClause</name>
        <full_name>addWhereClause</full_name>
        <docblock line="521">
          <description><![CDATA[Adds a `WHERE` clause, from an array of conditions, to the parameters for an fDatabase::query() call]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="521" name="internal" description=""/>
          <tag line="521" name="param" description="The database the query will be executed on" type="\fDatabase" variable="$db">
            <type by_reference="false">\fDatabase</type>
          </tag>
          <tag line="521" name="param" description="The schema for the database" type="\fSchema" variable="$schema">
            <type by_reference="false">\fSchema</type>
          </tag>
          <tag line="521" name="param" description="The parameters for the fDatabase::query() call" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="521" name="param" description="The table any ambigious column references will refer to" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="521" name="param" description="The array of conditions - see fRecordSet::build() for format" type="array" variable="$conditions">
            <type by_reference="false">array</type>
          </tag>
          <tag line="521" name="return" description="The params with the SQL `WHERE` clause added" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="533">
          <name>$db</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="533">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="533">
          <name>$params</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="533">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="533">
          <name>$conditions</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="753" package="Flourish">
        <name>cleanTableName</name>
        <full_name>cleanTableName</full_name>
        <docblock line="746">
          <description><![CDATA[Takes a table name, cleans off quoting and removes the schema name if unambiguous]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="746" name="param" description="The schema object for the database being inspected" type="\fSchema" variable="$schema">
            <type by_reference="false">\fSchema</type>
          </tag>
          <tag line="746" name="param" description="The table name to be made cleaned" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="746" name="return" description="The cleaned table name" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="753">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="753">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="776" package="Flourish">
        <name>createFromClauseFromJoins</name>
        <full_name>createFromClauseFromJoins</full_name>
        <docblock line="767">
          <description><![CDATA[Creates a `FROM` clause from a join array]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="767" name="internal" description=""/>
          <tag line="767" name="param" description="The database the query will be run on" type="\fDatabase" variable="$db">
            <type by_reference="false">\fDatabase</type>
          </tag>
          <tag line="767" name="param" description="The joins to create the `FROM` clause out of" type="array" variable="$joins">
            <type by_reference="false">array</type>
          </tag>
          <tag line="767" name="return" description="The from clause (does not include the word `FROM`)" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="776">
          <name>$db</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="776">
          <name>$joins</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="818" package="Flourish">
        <name>createJoin</name>
        <full_name>createJoin</full_name>
        <docblock line="804">
          <description><![CDATA[Creates join information for the table shortcut provided]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="804" name="internal" description=""/>
          <tag line="804" name="param" description="The schema object for the tables/joins" type="\fSchema" variable="$schema">
            <type by_reference="false">\fSchema</type>
          </tag>
          <tag line="804" name="param" description="The primary table" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="804" name="param" description="The primary table alias" type="string" variable="$table_alias">
            <type by_reference="false">string</type>
          </tag>
          <tag line="804" name="param" description="The related table" type="string" variable="$related_table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="804" name="param" description="The route to the related table" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="804" name="param" description="&amp;$joins The names of the joins that have been created" type="array" variable="$joins">
            <type by_reference="false">array</type>
          </tag>
          <tag line="804" name="param" description="&amp;$used_aliases The aliases that have been used" type="array" variable="$used_aliases">
            <type by_reference="false">array</type>
          </tag>
          <tag line="804" name="return" description="The name of the significant join created" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="818">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="818">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="818">
          <name>$table_alias</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="818">
          <name>$related_table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="818">
          <name>$route</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="818">
          <name>$joins</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="818">
          <name>$used_aliases</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="901" package="Flourish">
        <name>createNewAlias</name>
        <full_name>createNewAlias</full_name>
        <docblock line="892">
          <description><![CDATA[Creates a new table alias]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="892" name="internal" description=""/>
          <tag line="892" name="param" description="The table to create an alias for" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="892" name="param" description="&amp;$used_aliases The aliases that have been used" type="array" variable="$used_aliases">
            <type by_reference="false">array</type>
          </tag>
          <tag line="892" name="return" description="The alias to use for the table" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="901">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="901">
          <name>$used_aliases</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="928" package="Flourish">
        <name>getTableAndColumn</name>
        <full_name>getTableAndColumn</full_name>
        <docblock line="920">
          <description><![CDATA[Gets the table and column name from a shorthand column name]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="920" name="param" description="The schema for the database" type="\fSchema" variable="$schema">
            <type by_reference="false">\fSchema</type>
          </tag>
          <tag line="920" name="param" description="The table to use when no table is specified in the shorthand" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="920" name="param" description="The shorthand column definition - see fRecordSet::build() for possible syntaxes" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="920" name="return" description="The $table and $column, suitable for use with fSchema" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="928">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="928">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="928">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="964" package="Flourish">
        <name>injectFromAndGroupByClauses</name>
        <full_name>injectFromAndGroupByClauses</full_name>
        <docblock line="942">
          <description><![CDATA[Finds all of the table names in the SQL and creates the appropriate `FROM` and `GROUP BY` clauses with all necessary joins]]></description>
          <long-description><![CDATA[<p>The SQL string should contain two placeholders, <code>:from_clause</code> and
<code>:group_by_clause</code>, although the later may be omitted if necessary. All
columns should be qualified with their full table name.</p>

<p>Here is an example SQL string to pass in presumming that the tables
users and groups are in a relationship:</p>

<p>{{{
SELECT users.* FROM :from_clause WHERE groups.group_id = 5 :group_by_clause ORDER BY lower(users.first_name) ASC
}}}</p>]]></long-description>
          <tag line="942" name="internal" description=""/>
          <tag line="942" name="param" description="The database the query is to be executed on" type="\fDatabase" variable="$db">
            <type by_reference="false">\fDatabase</type>
          </tag>
          <tag line="942" name="param" description="The schema for the database" type="\fSchema" variable="$schema">
            <type by_reference="false">\fSchema</type>
          </tag>
          <tag line="942" name="param" description="The parameters for the fDatabase::query() call" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="942" name="param" description="The main table to be queried" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="942" name="return" description="The params with the SQL `FROM` and `GROUP BY` clauses injected" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="964">
          <name>$db</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="964">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="964">
          <name>$params</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="964">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1161" package="Flourish">
        <name>makeCondition</name>
        <full_name>makeCondition</full_name>
        <docblock line="1149">
          <description><![CDATA[Makes a condition for a SQL statement out of fDatabase::escape() placeholders]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1149" name="internal" description=""/>
          <tag line="1149" name="param" description="The schema object for the database the query will be executed on" type="\fSchema" variable="$schema">
            <type by_reference="false">\fSchema</type>
          </tag>
          <tag line="1149" name="param" description="The table to create the condition for" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1149" name="param" description="The column to make the condition for" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1149" name="param" description="The comparison operator for the condition" type="string" variable="$comparison_operator">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1149" name="param" description="The value for the condition, which allows the $comparison_operator to be tweaked for NULL values" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1149" name="return" description="A SQL condition using fDatabase::escape() placeholders" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1161">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1161">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1161">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1161">
          <name>$comparison_operator</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1161">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1188" package="Flourish">
        <name>parseSearchTerms</name>
        <full_name>parseSearchTerms</full_name>
        <docblock line="1179">
          <description><![CDATA[Parses a search string into search terms, supports quoted phrases and removes extra punctuation]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1179" name="internal" description=""/>
          <tag line="1179" name="param" description="A text string from a form input to parse into search terms" type="string" variable="$terms">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1179" name="param" description="If stop words should be ignored, this setting will be ignored if all words are stop words" type="boolean" variable="$ignore_stop_words">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1179" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1188">
          <name>$terms</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1188">
          <name>$ignore_stop_words</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1245" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="1238">
          <description><![CDATA[Resets the configuration of the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1238" name="internal" description=""/>
          <tag line="1238" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1258" package="Flourish">
        <name>retrieve</name>
        <full_name>retrieve</full_name>
        <docblock line="1251">
          <description><![CDATA[Return the instance of the fDatabase class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1251" name="param" description="The class to retrieve the database for - if not specified, the default database will be returned" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1251" name="param" description="If the database will be used for `'write'`, `'read'` or `'either'` operations" type="string" variable="$role">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1251" name="return" description="The database instance" type="\fDatabase">
            <type by_reference="false">\fDatabase</type>
          </tag>
        </docblock>
        <argument line="1258">
          <name>$class</name>
          <default><![CDATA['fActiveRecord']]></default>
          <type/>
        </argument>
        <argument line="1258">
          <name>$role</name>
          <default><![CDATA['either']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1310" package="Flourish">
        <name>splitHavingConditions</name>
        <full_name>splitHavingConditions</full_name>
        <docblock line="1302">
          <description><![CDATA[Removed aggregate function calls from where conditions array and puts them in a having conditions array]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1302" name="internal" description=""/>
          <tag line="1302" name="param" description="&amp;$where_conditions The where conditions to look through for aggregate functions" type="array" variable="$where_conditions">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1302" name="return" description="The conditions to be put in a `HAVING` clause" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1310">
          <name>$where_conditions</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1332" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="1327">
          <description><![CDATA[Forces use as a static class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1327" name="return" description="" type="\fORMDatabase">
            <type by_reference="false">\fORMDatabase</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fORMDatabase.php</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fNoRowsException.php" hash="bfa3aed2fb5a6f946c8674abe4c50795" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="15" package="Flourish">
      <extends>\fExpectedException</extends>
      <name>fNoRowsException</name>
      <full_name>\fNoRowsException</full_name>
      <docblock line="2">
        <description><![CDATA[An exception when no rows are returned from a SQL query]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2008 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fNoRowsException" link="http://flourishlib.com/fNoRowsException"/>
        <tag line="2" name="version" description="1.0.0b"/>
        <tag line="2" name="changes" description="1.0.0b  The initial implementation [wb, 2007-06-14]"/>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fNoRowsException.php</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fCache.php" hash="6978afa6a029727459657f342830615f" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="20" package="Flourish">
      <extends/>
      <name>fCache</name>
      <full_name>\fCache</full_name>
      <docblock line="2">
        <description><![CDATA[A simple interface to cache data using different backends]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2009-2012 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fCache" link="http://flourishlib.com/fCache"/>
        <tag line="2" name="version" description="1.0.0b6"/>
        <tag line="2" name="changes" description="1.0.0b6  Fixed a bug with ::add() setting a value when it shouldn't if no ttl was given for the file backend [wb, 2012-01-12]"/>
        <tag line="2" name="changes" description="1.0.0b5  Added missing documentation for using Redis as a backend [wb, 2011-08-25]"/>
        <tag line="2" name="changes" description="1.0.0b4  Added the `database`, `directory` and `redis` types, added support for the memcached extention and support for custom serialization callbacks [wb, 2011-06-21]"/>
        <tag line="2" name="changes" description="1.0.0b3  Added `0` to the memcache delete method call since otherwise the method triggers notices on some installs [wb, 2011-05-10]"/>
        <tag line="2" name="changes" description="1.0.0b2  Fixed API calls to the memcache extension to pass the TTL as the correct parameter [wb, 2011-02-01]"/>
        <tag line="2" name="changes" description="1.0.0b   The initial implementation [wb, 2009-04-28]"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="52" namespace="global" package="Sutra">
        <name>$config</name>
        <default><![CDATA[]]></default>
        <docblock line="22">
          <description><![CDATA[The cache configuration, used for database, directory and file caches]]></description>
          <long-description><![CDATA[<p>The array structure for database caches is:
{{{
array(
    'table'        => (string) {the database table to use},
    'key_column'   => (string) {the varchar column to store the key in, should be able to handle at least 250 characters},
    'value_column' => (string) {the text/varchar column to store the value in},
    'ttl_column'   => (string) {the integer column to store the expiration time in}
)
}}}</p>

<p>The array structure for directory caches:
{{{
array(
    'path' => (string) {the directory path with trailing slash}
)
}}}</p>

<p>The array structure for file caches:
{{{
array(
    'path'  => (string) {the file path},
    'state' => (string) {clean or dirty, used to appropriately save}
)
}}}</p>]]></long-description>
          <tag line="22" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="67" namespace="global" package="Sutra">
        <name>$data_store</name>
        <default><![CDATA[]]></default>
        <docblock line="54">
          <description><![CDATA[The data store to use]]></description>
          <long-description><![CDATA[<p>Either the:
 - array structure for file cache
 - Memcache or Memcached object for memcache
 - fDatabase object for database
 - Redis object for redis</p>

<p>Not used for apc, directory or xcache</p>]]></long-description>
          <tag line="54" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="83" namespace="global" package="Sutra">
        <name>$type</name>
        <default><![CDATA[]]></default>
        <docblock line="69">
          <description><![CDATA[The type of cache]]></description>
          <long-description><![CDATA[<p>The valid values are:
 - <code>'apc'</code>
 - <code>'database'</code>
 - <code>'directory'</code>
 - <code>'file'</code>
 - <code>'memcache'</code>
 - <code>'redis'</code>
 - <code>'xcache'</code></p>]]></long-description>
          <tag line="69" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="129" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="85">
          <description><![CDATA[Set the type and master key for the cache]]></description>
          <long-description><![CDATA[<p>A <code>file</code> cache uses a single file to store values in an associative
array and is probably not suitable for a large number of keys.</p>

<p>Using an <code>apc</code> or <code>xcache</code> cache will have far better performance
than a file or directory, however please remember that keys are shared
server-wide.</p>

<p><code>$config</code> is an associative array of configuration options for the various
backends. Some backend require additional configuration, while others
provide provide optional settings.</p>

<p>The following <code>$config</code> options must be set for the <code>database</code> backend:</p>

<ul>
<li><code>table</code>: The database table to use for caching</li>
<li><code>key_column</code>: The column to store the cache key in - must support at least 250 character strings</li>
<li><code>value_column</code>: The column to store the serialized value in - this should probably be a <code>TEXT</code> column to support large values, or <code>BLOB</code> if binary serialization is used</li>
<li><code>value_data_type</code>: If a <code>BLOB</code> column is being used for the <code>value_column</code>, this should be set to 'blob', otherwise <code>string</code></li>
<li><code>ttl_column</code>: The column to store the expiration timestamp of the cached entry - this should be an integer</li>
</ul>

<p>The following <code>$config</code> for the following items can be set for all backends:</p>

<ul>
<li><code>serializer</code>: A callback to serialize data with, defaults to the PHP function <code>serialize()</code></li>
<li><code>unserializer</code>: A callback to unserialize data with, defaults to the PHP function <code>unserialize()</code></li>
</ul>

<p>Common serialization callbacks include:</p>

<ul>
<li><code>json_encode</code>/<code>json_decode</code></li>
<li><code>igbinary_serialize</code>/<code>igbinary_unserialize</code></li>
</ul>

<p>Please note that using JSON for serialization will exclude all non-public
properties of objects from being serialized.</p>

<p>A custom <code>serialize</code> and <code>unserialze</code> option is <code>string</code>, which will cast
all values to a string when storing, instead of serializing them. If a
<code>__toString()</code> method is provided for objects, it will be called.</p>]]></long-description>
          <tag line="85" name="param" description="The type of caching to use: `'apc'`, `'database'`, `'directory'`, `'file'`, `'memcache'`, `'redis'`, `'xcache'`" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="85" name="param" description="The path for a `file` or `directory` cache, an `Memcache` or `Memcached` object for a `memcache` cache, an fDatabase object for a `database` cache or a `Redis` object for a `redis` cache - not used for `apc` or `xcache`" type="mixed" variable="$data_store">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="85" name="param" description="Configuration options - see method description for details" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="85" name="return" description="" type="\fCache">
            <type by_reference="false">\fCache</type>
          </tag>
        </docblock>
        <argument line="129">
          <name>$type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="129">
          <name>$data_store</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="129">
          <name>$config</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="253" package="Flourish">
        <name>__destruct</name>
        <full_name>__destruct</full_name>
        <docblock line="246">
          <description><![CDATA[Cleans up after the cache object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="246" name="internal" description=""/>
          <tag line="246" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="272" package="Flourish">
        <name>add</name>
        <full_name>add</full_name>
        <docblock line="264">
          <description><![CDATA[Tries to set a value to the cache, but stops if a value already exists]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="264" name="param" description="The key to store as, this should not exceed 250 characters" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="264" name="param" description="The value to store, this will be serialized" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="264" name="param" description="The number of seconds to keep the cache valid for, 0 for no limit" type="integer" variable="$ttl">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="264" name="return" description="If the key/value pair were added successfully" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="272">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="272">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="272">
          <name>$ttl</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="364" package="Flourish">
        <name>clean</name>
        <full_name>clean</full_name>
        <docblock line="359">
          <description><![CDATA[Removes all cache entries that have expired]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="359" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="413" package="Flourish">
        <name>clear</name>
        <full_name>clear</full_name>
        <docblock line="406">
          <description><![CDATA[Clears the WHOLE cache of every key, use with caution!]]></description>
          <long-description><![CDATA[<p>xcache may require a login or password depending on your ini settings.</p>]]></long-description>
          <tag line="406" name="return" description="If the cache was successfully cleared" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="459" package="Flourish">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="453">
          <description><![CDATA[Deletes a value from the cache]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="453" name="param" description="The key to delete" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="453" name="return" description="If the delete succeeded" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="459">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="502" package="Flourish">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="495">
          <description><![CDATA[Returns a value from the cache]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="495" name="param" description="The key to return the value for" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="495" name="param" description="The value to return if the key did not exist" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="495" name="return" description="The cached value or the default value if no cached value was found" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="502">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="502">
          <name>$default</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="580" package="Flourish">
        <name>save</name>
        <full_name>save</full_name>
        <docblock line="575">
          <description><![CDATA[Only valid for `file` caches, saves the file to disk]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="575" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="597" package="Flourish">
        <name>serialize</name>
        <full_name>serialize</full_name>
        <docblock line="591">
          <description><![CDATA[Serializes a value before storing it in the cache]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="591" name="param" description="The value to serialize" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="591" name="return" description="The serialized value" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="597">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="618" package="Flourish">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="610">
          <description><![CDATA[Sets a value to the cache, overriding any previous value]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="610" name="param" description="The key to store as, this should not exceed 250 characters" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="610" name="param" description="The value to store, this will be serialized" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="610" name="param" description="The number of seconds to keep the cache valid for, 0 for no limit" type="integer" variable="$ttl">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="610" name="return" description="If the value was successfully saved" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="618">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="618">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="618">
          <name>$ttl</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="713" package="Flourish">
        <name>unserialize</name>
        <full_name>unserialize</full_name>
        <docblock line="707">
          <description><![CDATA[Unserializes a value before returning it]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="707" name="param" description="The serialized value" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="707" name="return" description="The PHP value" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="713">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fCache.php</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fExpectedException.php" hash="d3befc0a1b38cf417beac226f6e83d63" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="15" package="Flourish">
      <extends>\fException</extends>
      <name>fExpectedException</name>
      <full_name>\fExpectedException</full_name>
      <docblock line="2">
        <description><![CDATA[An exception that should be handled by the display code]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2008 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fExpectedException" link="http://flourishlib.com/fExpectedException"/>
        <tag line="2" name="version" description="1.0.0b"/>
        <tag line="2" name="changes" description="1.0.0b  The initial implementation [wb, 2007-06-14]"/>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fExpectedException.php</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fSQLException.php" hash="4221432beb58c92212355059942d1d82" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="15" package="Flourish">
      <extends>\fUnexpectedException</extends>
      <name>fSQLException</name>
      <full_name>\fSQLException</full_name>
      <docblock line="2">
        <description><![CDATA[An exception occurred while executing a SQL statement]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2008 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fSQLException" link="http://flourishlib.com/fSQLException"/>
        <tag line="2" name="version" description="1.0.0b"/>
        <tag line="2" name="changes" description="1.0.0b  The initial implementation [wb, 2007-06-14]"/>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fSQLException.php</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fCore.php" hash="a40c380ee1dba4e69551158d791a6608" package="Sutra">
    <constant namespace="global" line="836" package="Sutra">
      <name>$matches[1]</name>
      <full_name>\$matches[1]</full_name>
      <value><![CDATA[$matches[1]]]></value>
    </constant>
    <constant namespace="global" line="860" package="Sutra">
      <name>E_RECOVERABLE_ERROR</name>
      <full_name>\E_RECOVERABLE_ERROR</full_name>
      <value><![CDATA[4096]]></value>
    </constant>
    <constant namespace="global" line="865" package="Sutra">
      <name>E_DEPRECATED</name>
      <full_name>\E_DEPRECATED</full_name>
      <value><![CDATA[8192]]></value>
    </constant>
    <constant namespace="global" line="869" package="Sutra">
      <name>E_USER_DEPRECATED</name>
      <full_name>\E_USER_DEPRECATED</full_name>
      <value><![CDATA[16384]]></value>
    </constant>
    <class final="false" abstract="false" namespace="global" line="40" package="Flourish">
      <extends/>
      <name>fCore</name>
      <full_name>\fCore</full_name>
      <docblock line="2">
        <description><![CDATA[Provides low-level debugging, error and exception functionality]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2011 Will Bond, others"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="author" description="Will Bond, iMarc LLC [wb-imarc] &lt;will@imarc.net&gt;"/>
        <tag line="2" name="author" description="Nick Trew [nt]"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fCore" link="http://flourishlib.com/fCore"/>
        <tag line="2" name="version" description="1.0.0b24"/>
        <tag line="2" name="changes" description="1.0.0b24  Backwards Compatibility Break - moved ::detectOpcodeCache() to fLoader::hasOpcodeCache() [wb, 2011-08-26]"/>
        <tag line="2" name="changes" description="1.0.0b23  Backwards Compatibility Break - changed the email subject of error/exception emails to include relevant file info, instead of the timestamp, for better email message threading [wb, 2011-06-20]"/>
        <tag line="2" name="changes" description="1.0.0b22  Fixed a bug with dumping arrays containing integers [wb, 2011-05-26]"/>
        <tag line="2" name="changes" description="1.0.0b21  Changed ::startErrorCapture() to allow &quot;stacking&quot; it via multiple calls, fixed a couple of bugs with ::dump() mangling strings in the form `int(1)`, fixed mispelling of `occurred` [wb, 2011-05-09]"/>
        <tag line="2" name="changes" description="1.0.0b20  Backwards Compatibility Break - Updated ::expose() to not wrap the data in HTML when running via CLI, and instead just append a newline [wb, 2011-02-24]"/>
        <tag line="2" name="changes" description="1.0.0b19  Added detection of AIX to ::checkOS() [wb, 2011-01-19]"/>
        <tag line="2" name="changes" description="1.0.0b18  Updated ::expose() to be able to accept multiple parameters [wb, 2011-01-10]"/>
        <tag line="2" name="changes" description="1.0.0b17  Fixed a bug with ::backtrace() triggering notices when an argument is not UTF-8 [wb, 2010-08-17]"/>
        <tag line="2" name="changes" description="1.0.0b16  Added the `$types` and `$regex` parameters to ::startErrorCapture() and the `$regex` parameter to ::stopErrorCapture() [wb, 2010-08-09]"/>
        <tag line="2" name="changes" description="1.0.0b15  Added ::startErrorCapture() and ::stopErrorCapture() [wb, 2010-07-05]"/>
        <tag line="2" name="changes" description="1.0.0b14  Changed ::enableExceptionHandling() to only call fException::printMessage() when the destination is not `html` and no callback has been defined, added ::configureSMTP() to allow using fSMTP for error and exception emails [wb, 2010-06-04]"/>
        <tag line="2" name="changes" description="1.0.0b13  Added the `$backtrace` parameter to ::backtrace() [wb, 2010-03-05]"/>
        <tag line="2" name="changes" description="1.0.0b12  Added ::getDebug() to check for the global debugging flag, added more specific BSD checks to ::checkOS() [wb, 2010-03-02]"/>
        <tag line="2" name="changes" description="1.0.0b11  Added ::detectOpcodeCache() [nt+wb, 2009-10-06]"/>
        <tag line="2" name="changes" description="1.0.0b10  Fixed ::expose() to properly display when output includes non-UTF-8 binary data [wb, 2009-06-29]"/>
        <tag line="2" name="changes" description="1.0.0b9   Added ::disableContext() to remove context info for exception/error handling, tweaked output for exceptions/errors [wb, 2009-06-28]"/>
        <tag line="2" name="changes" description="1.0.0b8   ::enableErrorHandling() and ::enableExceptionHandling() now accept multiple email addresses, and a much wider range of emails [wb-imarc, 2009-06-01]"/>
        <tag line="2" name="changes" description="1.0.0b7   ::backtrace() now properly replaces document root with {doc_root} on Windows [wb, 2009-05-02]"/>
        <tag line="2" name="changes" description="1.0.0b6   Fixed a bug with getting the server name for error messages when running on the command line [wb, 2009-03-11]"/>
        <tag line="2" name="changes" description="1.0.0b5   Fixed a bug with checking the error/exception destination when a log file is specified [wb, 2009-03-07]"/>
        <tag line="2" name="changes" description="1.0.0b4   Backwards compatibility break - ::getOS() and ::getPHPVersion() removed, replaced with ::checkOS() and ::checkVersion() [wb, 2009-02-16]"/>
        <tag line="2" name="changes" description="1.0.0b3   ::handleError() now displays what kind of error occurred as the heading [wb, 2009-02-15]"/>
        <tag line="2" name="changes" description="1.0.0b2   Added ::registerDebugCallback() [wb, 2009-02-07]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2007-09-25]"/>
      </docblock>
      <constant namespace="global" line="43" package="Flourish">
        <name>backtrace</name>
        <full_name>backtrace</full_name>
        <value><![CDATA['fCore::backtrace']]></value>
      </constant>
      <constant namespace="global" line="44" package="Flourish">
        <name>call</name>
        <full_name>call</full_name>
        <value><![CDATA['fCore::call']]></value>
      </constant>
      <constant namespace="global" line="45" package="Flourish">
        <name>callback</name>
        <full_name>callback</full_name>
        <value><![CDATA['fCore::callback']]></value>
      </constant>
      <constant namespace="global" line="46" package="Flourish">
        <name>checkOS</name>
        <full_name>checkOS</full_name>
        <value><![CDATA['fCore::checkOS']]></value>
      </constant>
      <constant namespace="global" line="47" package="Flourish">
        <name>checkVersion</name>
        <full_name>checkVersion</full_name>
        <value><![CDATA['fCore::checkVersion']]></value>
      </constant>
      <constant namespace="global" line="48" package="Flourish">
        <name>configureSMTP</name>
        <full_name>configureSMTP</full_name>
        <value><![CDATA['fCore::configureSMTP']]></value>
      </constant>
      <constant namespace="global" line="49" package="Flourish">
        <name>debug</name>
        <full_name>debug</full_name>
        <value><![CDATA['fCore::debug']]></value>
      </constant>
      <constant namespace="global" line="50" package="Flourish">
        <name>disableContext</name>
        <full_name>disableContext</full_name>
        <value><![CDATA['fCore::disableContext']]></value>
      </constant>
      <constant namespace="global" line="51" package="Flourish">
        <name>dump</name>
        <full_name>dump</full_name>
        <value><![CDATA['fCore::dump']]></value>
      </constant>
      <constant namespace="global" line="52" package="Flourish">
        <name>enableDebugging</name>
        <full_name>enableDebugging</full_name>
        <value><![CDATA['fCore::enableDebugging']]></value>
      </constant>
      <constant namespace="global" line="53" package="Flourish">
        <name>enableDynamicConstants</name>
        <full_name>enableDynamicConstants</full_name>
        <value><![CDATA['fCore::enableDynamicConstants']]></value>
      </constant>
      <constant namespace="global" line="54" package="Flourish">
        <name>enableErrorHandling</name>
        <full_name>enableErrorHandling</full_name>
        <value><![CDATA['fCore::enableErrorHandling']]></value>
      </constant>
      <constant namespace="global" line="55" package="Flourish">
        <name>enableExceptionHandling</name>
        <full_name>enableExceptionHandling</full_name>
        <value><![CDATA['fCore::enableExceptionHandling']]></value>
      </constant>
      <constant namespace="global" line="56" package="Flourish">
        <name>expose</name>
        <full_name>expose</full_name>
        <value><![CDATA['fCore::expose']]></value>
      </constant>
      <constant namespace="global" line="57" package="Flourish">
        <name>getDebug</name>
        <full_name>getDebug</full_name>
        <value><![CDATA['fCore::getDebug']]></value>
      </constant>
      <constant namespace="global" line="58" package="Flourish">
        <name>handleError</name>
        <full_name>handleError</full_name>
        <value><![CDATA['fCore::handleError']]></value>
      </constant>
      <constant namespace="global" line="59" package="Flourish">
        <name>handleException</name>
        <full_name>handleException</full_name>
        <value><![CDATA['fCore::handleException']]></value>
      </constant>
      <constant namespace="global" line="60" package="Flourish">
        <name>registerDebugCallback</name>
        <full_name>registerDebugCallback</full_name>
        <value><![CDATA['fCore::registerDebugCallback']]></value>
      </constant>
      <constant namespace="global" line="61" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <value><![CDATA['fCore::reset']]></value>
      </constant>
      <constant namespace="global" line="62" package="Flourish">
        <name>sendMessagesOnShutdown</name>
        <full_name>sendMessagesOnShutdown</full_name>
        <value><![CDATA['fCore::sendMessagesOnShutdown']]></value>
      </constant>
      <constant namespace="global" line="63" package="Flourish">
        <name>startErrorCapture</name>
        <full_name>startErrorCapture</full_name>
        <value><![CDATA['fCore::startErrorCapture']]></value>
      </constant>
      <constant namespace="global" line="64" package="Flourish">
        <name>stopErrorCapture</name>
        <full_name>stopErrorCapture</full_name>
        <value><![CDATA['fCore::stopErrorCapture']]></value>
      </constant>
      <property final="false" static="true" visibility="private" line="72" namespace="global" package="Sutra">
        <name>$captured_error_level</name>
        <default><![CDATA[0]]></default>
        <docblock line="67">
          <description><![CDATA[The nesting level of error capturing]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="67" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="79" namespace="global" package="Sutra">
        <name>$captured_error_regex</name>
        <default><![CDATA[array()]]></default>
        <docblock line="74">
          <description><![CDATA[A stack of regex to match errors to capture, one string per level]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="74" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="86" namespace="global" package="Sutra">
        <name>$captured_error_types</name>
        <default><![CDATA[array()]]></default>
        <docblock line="81">
          <description><![CDATA[A stack of the types of errors to capture, one integer per level]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="81" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="93" namespace="global" package="Sutra">
        <name>$captured_errors</name>
        <default><![CDATA[array()]]></default>
        <docblock line="88">
          <description><![CDATA[A stack of arrays of errors that have been captured, one array per level]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="88" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="100" namespace="global" package="Sutra">
        <name>$captured_errors_previous_handler</name>
        <default><![CDATA[array()]]></default>
        <docblock line="95">
          <description><![CDATA[A stack of the previous error handler, one callback per level]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="95" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="107" namespace="global" package="Sutra">
        <name>$context_shown</name>
        <default><![CDATA[FALSE]]></default>
        <docblock line="102">
          <description><![CDATA[If the context info has been shown]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="102" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="114" namespace="global" package="Sutra">
        <name>$debug</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="109">
          <description><![CDATA[If global debugging is enabled]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="109" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="121" namespace="global" package="Sutra">
        <name>$debug_callback</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="116">
          <description><![CDATA[A callback to pass debug messages to]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="116" name="var" description="" type="callback">
            <type by_reference="false">callback</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="128" namespace="global" package="Sutra">
        <name>$dynamic_constants</name>
        <default><![CDATA[FALSE]]></default>
        <docblock line="123">
          <description><![CDATA[If dynamic constants should be created]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="123" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="135" namespace="global" package="Sutra">
        <name>$error_destination</name>
        <default><![CDATA['html']]></default>
        <docblock line="130">
          <description><![CDATA[Error destination]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="130" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="142" namespace="global" package="Sutra">
        <name>$error_message_queue</name>
        <default><![CDATA[array()]]></default>
        <docblock line="137">
          <description><![CDATA[An array of errors to be send to the destination upon page completion]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="137" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="149" namespace="global" package="Sutra">
        <name>$exception_destination</name>
        <default><![CDATA['html']]></default>
        <docblock line="144">
          <description><![CDATA[Exception destination]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="144" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="156" namespace="global" package="Sutra">
        <name>$exception_handler_callback</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="151">
          <description><![CDATA[Exception handler callback]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="151" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="163" namespace="global" package="Sutra">
        <name>$exception_handler_parameters</name>
        <default><![CDATA[array()]]></default>
        <docblock line="158">
          <description><![CDATA[Exception handler callback parameters]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="158" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="170" namespace="global" package="Sutra">
        <name>$exception_message</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="165">
          <description><![CDATA[The message generated by the uncaught exception]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="165" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="177" namespace="global" package="Sutra">
        <name>$handles_errors</name>
        <default><![CDATA[FALSE]]></default>
        <docblock line="172">
          <description><![CDATA[If this class is handling errors]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="172" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="184" namespace="global" package="Sutra">
        <name>$handles_exceptions</name>
        <default><![CDATA[FALSE]]></default>
        <docblock line="179">
          <description><![CDATA[If this class is handling exceptions]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="179" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="191" namespace="global" package="Sutra">
        <name>$show_context</name>
        <default><![CDATA[TRUE]]></default>
        <docblock line="186">
          <description><![CDATA[If the context info should be shown with errors/exceptions]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="186" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="198" namespace="global" package="Sutra">
        <name>$significant_error_lines</name>
        <default><![CDATA[array()]]></default>
        <docblock line="193">
          <description><![CDATA[An array of the most significant lines from error and exception backtraces]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="193" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="205" namespace="global" package="Sutra">
        <name>$smtp_connection</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="200">
          <description><![CDATA[An SMTP connection for sending error and exception emails]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="200" name="var" description="" type="\fSMTP">
            <type by_reference="false">\fSMTP</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="212" namespace="global" package="Sutra">
        <name>$smtp_from_email</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="207">
          <description><![CDATA[The email address to send error emails from]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="207" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="222" package="Flourish">
        <name>backtrace</name>
        <full_name>backtrace</full_name>
        <docblock line="215">
          <description><![CDATA[Creates a nicely formatted backtrace to the the point where this method is called]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="215" name="param" description="The number of trailing lines to remove from the backtrace" type="integer" variable="$remove_lines">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="215" name="param" description="A backtrace from [http://php.net/backtrace `debug_backtrace()`] to format - this is not usually required or desired" type="array" variable="$backtrace">
            <type by_reference="false">array</type>
          </tag>
          <tag line="215" name="return" description="The formatted backtrace" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="222">
          <name>$remove_lines</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
        <argument line="222">
          <name>$backtrace</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="330" package="Flourish">
        <name>call</name>
        <full_name>call</full_name>
        <docblock line="300">
          <description><![CDATA[Performs a [http://php.net/call_user_func call_user_func()], while translating PHP 5.2 static callback syntax for PHP 5.1 and 5.0]]></description>
          <long-description><![CDATA[<p>Parameters can be passed either as a single array of parameters or as
multiple parameters.</p>

<p>{{{</p>

<h1>!php</h1>

<p>// Passing multiple parameters in a normal fashion
fCore::call('Class::method', TRUE, 0, 'test');</p>

<p>// Passing multiple parameters in a parameters array
fCore::call('Class::method', array(TRUE, 0, 'test'));
}}}</p>

<p>To pass parameters by reference they must be assigned to an
array by reference and the function/method being called must accept those
parameters by reference. If either condition is not met, the parameter
will be passed by value.</p>

<p>{{{</p>

<h1>!php</h1>

<p>// Passing parameters by reference
fCore::call('Class::method', array(&amp;$var1, &amp;$var2));
}}}</p>]]></long-description>
          <tag line="300" name="param" description="The function or method to call" type="callback" variable="$callback">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="300" name="param" description="The parameters to pass to the function/method" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="300" name="return" description="The return value of the called function/method" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="330">
          <name>$callback</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="330">
          <name>$parameters</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="352" package="Flourish">
        <name>callback</name>
        <full_name>callback</full_name>
        <docblock line="346">
          <description><![CDATA[Translates a Class::method style static method callback to array style for compatibility with PHP 5.0 and 5.1 and built-in PHP functions]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="346" name="param" description="The callback to translate" type="callback" variable="$callback">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="346" name="return" description="The translated callback" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="352">
          <name>$callback</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="368" package="Flourish">
        <name>checkDestination</name>
        <full_name>checkDestination</full_name>
        <docblock line="362">
          <description><![CDATA[Checks an error/exception destination to make sure it is valid]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="362" name="param" description="The destination for the exception. An email, file or the string `'html'`." type="string" variable="$destination">
            <type by_reference="false">string</type>
          </tag>
          <tag line="362" name="return" description="`'email'`, `'file'`, `'html'` or `FALSE`" type="string|boolean">
            <type by_reference="false">string</type>
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="368">
          <name>$destination</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="425" package="Flourish">
        <name>checkOS</name>
        <full_name>checkOS</full_name>
        <docblock line="407">
          <description><![CDATA[Returns is the current OS is one of the OSes passed as a parameter]]></description>
          <long-description><![CDATA[<p>Valid OS strings are:
 - <code>'linux'</code>
 - <code>'aix'</code>
 - <code>'bsd'</code>
 - <code>'freebsd'</code>
 - <code>'netbsd'</code>
 - <code>'openbsd'</code>
 - <code>'osx'</code>
 - <code>'solaris'</code>
 - <code>'windows'</code></p>]]></long-description>
          <tag line="407" name="param" description="The operating system to check - see method description for valid OSes" type="string" variable="$os">
            <type by_reference="false">string</type>
          </tag>
          <tag line="407" name="param" description="..." type="string" variable="">
            <type by_reference="false">string</type>
          </tag>
          <tag line="407" name="return" description="If the current OS is included in the list of OSes passed as parameters" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="425">
          <name>$os</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="475" package="Flourish">
        <name>checkVersion</name>
        <full_name>checkVersion</full_name>
        <docblock line="470">
          <description><![CDATA[Checks to see if the running version of PHP is greater or equal to the version passed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="470" name="return" description="If the running version of PHP is greater or equal to the version passed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="475">
          <name>$version</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="499" package="Flourish">
        <name>compose</name>
        <full_name>compose</full_name>
        <docblock line="491">
          <description><![CDATA[Composes text using fText if loaded]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="491" name="param" description="The message to compose" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="491" name="param" description="A string or number to insert into the message" type="mixed" variable="$component">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="491" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="491" name="return" description="The composed and possible translated message" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="499">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="521" package="Flourish">
        <name>configureSMTP</name>
        <full_name>configureSMTP</full_name>
        <docblock line="514">
          <description><![CDATA[Sets an fSMTP object to be used for sending error and exception emails]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="514" name="param" description="The SMTP connection to send emails over" type="\fSMTP" variable="$smtp">
            <type by_reference="false">\fSMTP</type>
          </tag>
          <tag line="514" name="param" description="The email address to use in the `From:` header" type="string" variable="$from_email">
            <type by_reference="false">string</type>
          </tag>
          <tag line="514" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="521">
          <name>$smtp</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="521">
          <name>$from_email</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="535" package="Flourish">
        <name>debug</name>
        <full_name>debug</full_name>
        <docblock line="528">
          <description><![CDATA[Prints a debugging message if global or code-specific debugging is enabled]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="528" name="param" description="The debug message" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="528" name="param" description="If debugging should be forced even when global debugging is off" type="boolean" variable="$force">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="528" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="535">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="535">
          <name>$force</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="562" package="Flourish">
        <name>dump</name>
        <full_name>dump</full_name>
        <docblock line="547">
          <description><![CDATA[Creates a string representation of any variable using predefined strings for booleans, `NULL` and empty strings]]></description>
          <long-description><![CDATA[<p>The string output format of this method is very similar to the output of
[http://php.net/print_r print_r()] except that the following values
are represented as special strings:</p>

<ul>
<li><code>TRUE</code>: <code>'{true}'</code></li>
<li><code>FALSE</code>: <code>'{false}'</code></li>
<li><code>NULL</code>: <code>'{null}'</code></li>
<li><code>''</code>: <code>'{empty_string}'</code></li>
</ul>]]></long-description>
          <tag line="547" name="param" description="The value to dump" type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="547" name="return" description="The string representation of the value" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="562">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="635" package="Flourish">
        <name>disableContext</name>
        <full_name>disableContext</full_name>
        <docblock line="621">
          <description><![CDATA[Disables including the context information with exception and error messages]]></description>
          <long-description><![CDATA[<p>The context information includes the following superglobals:</p>

<ul>
<li><code>$_SERVER</code></li>
<li><code>$_POST</code></li>
<li><code>$_GET</code></li>
<li><code>$_SESSION</code></li>
<li><code>$_FILES</code></li>
<li><code>$_COOKIE</code></li>
</ul>]]></long-description>
          <tag line="621" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="647" package="Flourish">
        <name>enableDebugging</name>
        <full_name>enableDebugging</full_name>
        <docblock line="641">
          <description><![CDATA[Enables debug messages globally, i.e.]]></description>
          <long-description><![CDATA[<p>they will be shown for any call to ::debug()</p>]]></long-description>
          <tag line="641" name="param" description="If debugging messages should be shown" type="boolean" variable="$flag">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="641" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="647">
          <name>$flag</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="663" package="Flourish">
        <name>enableDynamicConstants</name>
        <full_name>enableDynamicConstants</full_name>
        <docblock line="653">
          <description><![CDATA[Turns on a feature where undefined constants are automatically created with the string value equivalent to the name]]></description>
          <long-description><![CDATA[<p>This functionality only works if ::enableErrorHandling() has been
called first. This functionality may have a very slight performance
impact since a <code>E_STRICT</code> error message must be captured and then a
call to [http://php.net/define define()] is made.</p>]]></long-description>
          <tag line="653" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="702" package="Flourish">
        <name>enableErrorHandling</name>
        <full_name>enableErrorHandling</full_name>
        <docblock line="675">
          <description><![CDATA[Turns on developer-friendly error handling that includes context information including a backtrace and superglobal dumps]]></description>
          <long-description><![CDATA[<p>All errors that match the current
[http://php.net/error_reporting error_reporting()] level will be
redirected to the destination and will include a full backtrace. In
addition, dumps of the following superglobals will be made to aid in
debugging:</p>

<ul>
<li><code>$_SERVER</code></li>
<li><code>$_POST</code></li>
<li><code>$_GET</code></li>
<li><code>$_SESSION</code></li>
<li><code>$_FILES</code></li>
<li><code>$_COOKIE</code></li>
</ul>

<p>The superglobal dumps are only done once per page, however a backtrace
in included for each error.</p>

<p>If an email address is specified for the destination, only one email
will be sent per script execution. If both error and
[enableExceptionHandling() exception handling] are set to the same
email address, the email will contain both errors and exceptions.</p>]]></long-description>
          <tag line="675" name="param" description="The destination for the errors and context information - an email address, a file path or the string `'html'`" type="string" variable="$destination">
            <type by_reference="false">string</type>
          </tag>
          <tag line="675" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="702">
          <name>$destination</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="745" package="Flourish">
        <name>enableExceptionHandling</name>
        <full_name>enableExceptionHandling</full_name>
        <docblock line="713">
          <description><![CDATA[Turns on developer-friendly uncaught exception handling that includes context information including a backtrace and superglobal dumps]]></description>
          <long-description><![CDATA[<p>Any uncaught exception will be redirected to the destination specified,
and the page will execute the <code>$closing_code</code> callback before exiting.
The destination will receive a message with the exception messaage, a
full backtrace and dumps of the following superglobals to aid in
debugging:</p>

<ul>
<li><code>$_SERVER</code></li>
<li><code>$_POST</code></li>
<li><code>$_GET</code></li>
<li><code>$_SESSION</code></li>
<li><code>$_FILES</code></li>
<li><code>$_COOKIE</code></li>
</ul>

<p>The superglobal dumps are only done once per page, however a backtrace
in included for each error.</p>

<p>If an email address is specified for the destination, only one email
will be sent per script execution.</p>

<p>If an email address is specified for the destination, only one email
will be sent per script execution. If both exception and
[enableErrorHandling() error handling] are set to the same
email address, the email will contain both exceptions and errors.</p>]]></long-description>
          <tag line="713" name="param" description="The destination for the exception and context information - an email address, a file path or the string `'html'`" type="string" variable="$destination">
            <type by_reference="false">string</type>
          </tag>
          <tag line="713" name="param" description="This callback will happen after the exception is handled and before page execution stops. Good for printing a footer. If no callback is provided and the exception extends fException, fException::printMessage() will be called." type="callback" variable="$closing_code">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="713" name="param" description="The parameters to send to `$closing_code`" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="713" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="745">
          <name>$destination</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="745">
          <name>$closing_code</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="745">
          <name>$parameters</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="777" package="Flourish">
        <name>expose</name>
        <full_name>expose</full_name>
        <docblock line="763">
          <description><![CDATA[Prints the ::dump() of a value]]></description>
          <long-description><![CDATA[<p>The dump will be printed in a <code>&lt;pre&gt;</code> tag with the class <code>exposed</code> if
PHP is running anywhere but via the command line (cli). If PHP is
running via the cli, the data will be printed, followed by a single
line break (<code>\n</code>).</p>

<p>If multiple parameters are passed, they are exposed as an array.</p>]]></long-description>
          <tag line="763" name="param" description="The value to show" type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="763" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="763" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="777">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="796" package="Flourish">
        <name>generateContext</name>
        <full_name>generateContext</full_name>
        <docblock line="791">
          <description><![CDATA[Generates some information about the context of an error or exception]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="791" name="return" description="A string containing `$_SERVER`, `$_GET`, `$_POST`, `$_FILES`, `$_SESSION` and `$_COOKIE`" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="814" package="Flourish">
        <name>getDebug</name>
        <full_name>getDebug</full_name>
        <docblock line="808">
          <description><![CDATA[If debugging is enabled]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="808" name="param" description="If debugging is forced" type="boolean" variable="$force">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="808" name="return" description="If debugging is enabled" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="814">
          <name>$force</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="832" package="Flourish">
        <name>handleError</name>
        <full_name>handleError</full_name>
        <docblock line="820">
          <description><![CDATA[Handles an error, creating the necessary context information and sending it to the specified destination]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="820" name="internal" description=""/>
          <tag line="820" name="param" description="The error type" type="integer" variable="$error_number">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="820" name="param" description="The message for the error" type="string" variable="$error_string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="820" name="param" description="The file the error occurred in" type="string" variable="$error_file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="820" name="param" description="The line the error occurred on" type="integer" variable="$error_line">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="820" name="param" description="A references to all variables in scope at the occurence of the error" type="array" variable="$error_context">
            <type by_reference="false">array</type>
          </tag>
          <tag line="820" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="832">
          <name>$error_number</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="832">
          <name>$error_string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="832">
          <name>$error_file</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="832">
          <name>$error_line</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="832">
          <name>$error_context</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="930" package="Flourish">
        <name>handleException</name>
        <full_name>handleException</full_name>
        <docblock line="922">
          <description><![CDATA[Handles an uncaught exception, creating the necessary context information, sending it to the specified destination and finally executing the closing callback]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="922" name="internal" description=""/>
          <tag line="922" name="param" description="The uncaught exception to handle" type="object" variable="$exception">
            <type by_reference="false">object</type>
          </tag>
          <tag line="922" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="930">
          <name>$exception</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="975" package="Flourish">
        <name>registerDebugCallback</name>
        <full_name>registerDebugCallback</full_name>
        <docblock line="969">
          <description><![CDATA[Registers a callback to handle debug messages instead of the default action of calling ::expose() on the message]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="969" name="param" description="A callback that accepts a single parameter, the string debug message to handle" type="callback" variable="$callback">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="969" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="975">
          <name>$callback</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="988" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="981">
          <description><![CDATA[Resets the configuration of the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="981" name="internal" description=""/>
          <tag line="981" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1035" package="Flourish">
        <name>sendMessagesOnShutdown</name>
        <full_name>sendMessagesOnShutdown</full_name>
        <docblock line="1025">
          <description><![CDATA[Sends an email or writes a file with messages generated during the page execution]]></description>
          <long-description><![CDATA[<p>This method prevents multiple emails from being sent or a log file from
being written multiple times for one script execution.</p>]]></long-description>
          <tag line="1025" name="internal" description=""/>
          <tag line="1025" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="1112" package="Flourish">
        <name>sendMessageToDestination</name>
        <full_name>sendMessageToDestination</full_name>
        <docblock line="1100">
          <description><![CDATA[Handles sending a message to a destination]]></description>
          <long-description><![CDATA[<p>If the destination is an email address or file, the messages will be
spooled up until the end of the script execution to prevent multiple
emails from being sent or a log file being written to multiple times.</p>]]></long-description>
          <tag line="1100" name="param" description="If the message is an error or an exception" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1100" name="param" description="The message to send to the destination" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1100" name="param" description="The most significant line from an error or exception backtrace" type="string" variable="$significant_line">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1100" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1112">
          <name>$type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1112">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1112">
          <name>$significant_line</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1148" package="Flourish">
        <name>startErrorCapture</name>
        <full_name>startErrorCapture</full_name>
        <docblock line="1141">
          <description><![CDATA[Temporarily enables capturing error messages]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1141" name="param" description="The error types to capture - this should be as specific as possible - defaults to all (E_ALL | E_STRICT)" type="integer" variable="$types">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1141" name="param" description="A PCRE regex to match against the error message" type="string" variable="$regex">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1141" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1148">
          <name>$types</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="1148">
          <name>$regex</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1169" package="Flourish">
        <name>stopErrorCapture</name>
        <full_name>stopErrorCapture</full_name>
        <docblock line="1163">
          <description><![CDATA[Stops capturing error messages, returning all that have been captured]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1163" name="param" description="A PCRE regex to filter messages by" type="string" variable="$regex">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1163" name="return" description="The captured error messages" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1169">
          <name>$regex</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1200" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="1195">
          <description><![CDATA[Forces use as a static class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1195" name="return" description="" type="\fCore">
            <type by_reference="false">\fCore</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fCore.php</error>
      <notice line="407" code="50013">Parameter  could not be found in checkOS()</notice>
      <error line="470" code="50015">Argument $version is missing from the Docblock of checkVersion()</error>
      <notice line="491" code="50013">Parameter $component could not be found in compose()</notice>
      <notice line="491" code="50013">Parameter  could not be found in compose()</notice>
      <notice line="763" code="50013">Parameter  could not be found in expose()</notice>
    </parse_markers>
  </file>
  <file path="php/flourish/fImage.php" hash="2e95a53683458dffd6d47deeea0c6702" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="50" package="Flourish">
      <extends>\fFile</extends>
      <name>fImage</name>
      <full_name>\fImage</full_name>
      <docblock line="2">
        <description><![CDATA[Represents an image on the filesystem, also provides image manipulation functionality]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2011 Will Bond, others"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="author" description="Will Bond, iMarc LLC [wb-imarc] &lt;will@imarc.net&gt;"/>
        <tag line="2" name="author" description="Jeff Turcotte, iMarc LLC [jt] &lt;jeff@imarc.net&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fImage" link="http://flourishlib.com/fImage"/>
        <tag line="2" name="version" description="1.0.0b34"/>
        <tag line="2" name="changes" description="1.0.0b34  Fixed a bug in getImageType() where the fread was not reading enough bytes [jt, 2012-06-05]"/>
        <tag line="2" name="changes" description="1.0.0b33  Fixed a method signature [wb, 2011-08-24]"/>
        <tag line="2" name="changes" description="1.0.0b32  Added a call to clearstatcache() to ::saveChanges() to solve a bug when fFile::output() is called in the same script execution [wb, 2011-05-23]"/>
        <tag line="2" name="changes" description="1.0.0b31  Fixed a bug in using ImageMagick to convert files with a colon in the filename [wb, 2011-03-20]"/>
        <tag line="2" name="changes" description="1.0.0b30  Added a check for systems using the GD extension and no memory limit, plus a check for ImageMagick's convert command failing [wb, 2011-03-20]"/>
        <tag line="2" name="changes" description="1.0.0b29  Added checks for AIX [wb, 2011-01-19]"/>
        <tag line="2" name="changes" description="1.0.0b28  Added the ::rotate() method, added code to try and prevent fatal errors due to hitting the memory limit when using GD [wb, 2010-11-29]"/>
        <tag line="2" name="changes" description="1.0.0b27  Backwards Compatibility Break - changed the parameter order in ::crop() from `$crop_from_x`, `$crop_from_y`, `$new_width`, `$new_height` to `$new_width`, `$new_height`, `$crop_from_x`, `$crop_from_y` - added `$horizontal_position` and `$vertical_position` parameters to ::cropToRatio() [wb-imarc, 2010-11-09]"/>
        <tag line="2" name="changes" description="1.0.0b26  Fixed a bug where processing via ImageMagick was not properly setting the default RGB colorspace [wb, 2010-10-19]"/>
        <tag line="2" name="changes" description="1.0.0b25  Fixed the class to not generate multiple files when saving a JPG from an animated GIF or a TIF with a thumbnail [wb, 2010-09-12]"/>
        <tag line="2" name="changes" description="1.0.0b24  Updated class to use fCore::startErrorCapture() instead of `error_reporting()` [wb, 2010-08-09]"/>
        <tag line="2" name="changes" description="1.0.0b23  Fixed the class to detect when exec() is disabled and the function has a space before or after in the list [wb, 2010-07-21]"/>
        <tag line="2" name="changes" description="1.0.0b22  Fixed ::isImageCompatible() to handle certain JPGs created with Photoshop [wb, 2010-04-03]"/>
        <tag line="2" name="changes" description="1.0.0b21  Fixed ::resize() to allow dimensions to be numeric strings instead of just integers [wb, 2010-04-09]"/>
        <tag line="2" name="changes" description="1.0.0b20  Added ::append() [wb, 2010-03-15]"/>
        <tag line="2" name="changes" description="1.0.0b19  Updated for the new fFile API [wb-imarc, 2010-03-05]"/>
        <tag line="2" name="changes" description="1.0.0b18  Fixed a bug in ::saveChanges() that would incorrectly cause new filenames to be created, added the $overwrite parameter to ::saveChanges(), added the $allow_upsizing parameter to ::resize() [wb, 2010-03-03]"/>
        <tag line="2" name="changes" description="1.0.0b17  Fixed a couple of bug with using ImageMagick on Windows and BSD machines [wb, 2010-03-02]"/>
        <tag line="2" name="changes" description="1.0.0b16  Fixed some bugs with GD not properly handling transparent backgrounds and desaturation of .gif files [wb, 2009-10-27]"/>
        <tag line="2" name="changes" description="1.0.0b15  Added ::getDimensions() [wb, 2009-08-07]"/>
        <tag line="2" name="changes" description="1.0.0b14  Performance updates for checking image type and compatiblity [wb, 2009-07-31]"/>
        <tag line="2" name="changes" description="1.0.0b13  Updated class to work even if the file extension is wrong or not present, ::saveChanges() detects files that aren't writable [wb, 2009-07-29]"/>
        <tag line="2" name="changes" description="1.0.0b12  Fixed a bug where calling ::saveChanges() after unserializing would throw an exception related to the image processor [wb, 2009-05-27]"/>
        <tag line="2" name="changes" description="1.0.0b11  Added a ::crop() method [wb, 2009-05-27]"/>
        <tag line="2" name="changes" description="1.0.0b10  Fixed a bug with GD not saving changes to files ending in .jpeg [wb, 2009-03-18]"/>
        <tag line="2" name="changes" description="1.0.0b9   Changed ::processWithGD() to explicitly free the image resource [wb, 2009-03-18]"/>
        <tag line="2" name="changes" description="1.0.0b8   Updated for new fCore API [wb, 2009-02-16]"/>
        <tag line="2" name="changes" description="1.0.0b7   Changed @ error suppression operator to `error_reporting()` calls [wb, 2009-01-26]"/>
        <tag line="2" name="changes" description="1.0.0b6   Fixed ::cropToRatio() and ::resize() to always return the object even if nothing is to be done [wb, 2009-01-05]"/>
        <tag line="2" name="changes" description="1.0.0b5   Added check to see if exec() is disabled, which causes ImageMagick to not work [wb, 2009-01-03]"/>
        <tag line="2" name="changes" description="1.0.0b4   Fixed ::saveChanges() to not delete the image if no changes have been made [wb, 2008-12-18]"/>
        <tag line="2" name="changes" description="1.0.0b3   Fixed a bug with $jpeg_quality in ::saveChanges() from 1.0.0b2 [wb, 2008-12-16]"/>
        <tag line="2" name="changes" description="1.0.0b2   Changed some int casts to round() to fix ::resize() dimension issues [wb, 2008-12-11]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2007-12-19]"/>
      </docblock>
      <constant namespace="global" line="53" package="Flourish">
        <name>create</name>
        <full_name>create</full_name>
        <value><![CDATA['fImage::create']]></value>
      </constant>
      <constant namespace="global" line="54" package="Flourish">
        <name>getCompatibleMimetypes</name>
        <full_name>getCompatibleMimetypes</full_name>
        <value><![CDATA['fImage::getCompatibleMimetypes']]></value>
      </constant>
      <constant namespace="global" line="55" package="Flourish">
        <name>isImageCompatible</name>
        <full_name>isImageCompatible</full_name>
        <value><![CDATA['fImage::isImageCompatible']]></value>
      </constant>
      <constant namespace="global" line="56" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <value><![CDATA['fImage::reset']]></value>
      </constant>
      <constant namespace="global" line="57" package="Flourish">
        <name>setImageMagickDirectory</name>
        <full_name>setImageMagickDirectory</full_name>
        <value><![CDATA['fImage::setImageMagickDirectory']]></value>
      </constant>
      <constant namespace="global" line="58" package="Flourish">
        <name>setImageMagickTempDir</name>
        <full_name>setImageMagickTempDir</full_name>
        <value><![CDATA['fImage::setImageMagickTempDir']]></value>
      </constant>
      <property final="false" static="true" visibility="private" line="66" namespace="global" package="Sutra">
        <name>$imagemagick_dir</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="61">
          <description><![CDATA[If we are using the ImageMagick processor, this stores the path to the binaries]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="61" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="73" namespace="global" package="Sutra">
        <name>$imagemagick_temp_dir</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="68">
          <description><![CDATA[A custom tmp path to use for ImageMagick]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="68" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="80" namespace="global" package="Sutra">
        <name>$processor</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="75">
          <description><![CDATA[The processor to use for the image manipulation]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="75" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="542" namespace="global" package="Sutra">
        <name>$pending_modifications</name>
        <default><![CDATA[array()]]></default>
        <docblock line="537">
          <description><![CDATA[The modifications to perform on the image when it is saved]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="537" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="89" package="Flourish">
        <name>checkImageMagickBinary</name>
        <full_name>checkImageMagickBinary</full_name>
        <docblock line="83">
          <description><![CDATA[Checks to make sure we can get to and execute the ImageMagick convert binary]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="83" name="param" description="The path to ImageMagick on the filesystem" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="83" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="89">
          <name>$path</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="126" package="Flourish">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="114">
          <description><![CDATA[Creates an image on the filesystem and returns an object representing it]]></description>
          <long-description><![CDATA[<p>This operation will be reverted by a filesystem transaction being rolled
back.</p>]]></long-description>
          <tag line="114" name="throws" description="When no image was specified or when the image already exists" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="114" name="param" description="The path to the new image" type="string" variable="$file_path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="114" name="param" description="The contents to write to the image" type="string" variable="$contents">
            <type by_reference="false">string</type>
          </tag>
          <tag line="114" name="return" description="" type="\fImage">
            <type by_reference="false">\fImage</type>
          </tag>
        </docblock>
        <argument line="126">
          <name>$file_path</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="126">
          <name>$contents</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="162" package="Flourish">
        <name>determineProcessor</name>
        <full_name>determineProcessor</full_name>
        <docblock line="157">
          <description><![CDATA[Determines what processor to use for image manipulation]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="157" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="286" package="Flourish">
        <name>getCompatibleMimetypes</name>
        <full_name>getCompatibleMimetypes</full_name>
        <docblock line="279">
          <description><![CDATA[Returns an array of acceptable mime types for the processor that was detected]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="279" name="internal" description=""/>
          <tag line="279" name="return" description="The mime types that the detected image processor can manipulate" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="317" package="Flourish">
        <name>getInfo</name>
        <full_name>getInfo</full_name>
        <docblock line="300">
          <description><![CDATA[Gets the dimensions and type of an image stored on the filesystem]]></description>
          <long-description><![CDATA[<p>The <code>'type'</code> key will have one of the following values:</p>

<ul>
<li><code>{null}</code> (File type is not supported)</li>
<li><code>'jpg'</code></li>
<li><code>'gif'</code></li>
<li><code>'png'</code></li>
<li><code>'tif'</code></li>
</ul>]]></long-description>
          <tag line="300" name="throws" description="When the file specified is not an image" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="300" name="param" description="The path to the image to get stats for" type="string" variable="$image_path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="300" name="param" description="The element to retrieve: `'type'`, `'width'`, `'height'`" type="string" variable="$element">
            <type by_reference="false">string</type>
          </tag>
          <tag line="300" name="return" description="An associative array: `'type' =&gt; {mixed}, 'width' =&gt; {integer}, 'height' =&gt; {integer}`, or the element specified" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="317">
          <name>$image_path</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="317">
          <name>$element</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="379" package="Flourish">
        <name>getImageType</name>
        <full_name>getImageType</full_name>
        <docblock line="373">
          <description><![CDATA[Gets the image type from a file by looking at the file contents]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="373" name="param" description="The image path to get the type for" type="string" variable="$image">
            <type by_reference="false">string</type>
          </tag>
          <tag line="373" name="return" description="The type of the image - `'jpg'`, `'gif'`, `'png'` or `'tif'` - NULL if not one of those" type="string|NULL">
            <type by_reference="false">string</type>
            <type by_reference="false">NULL</type>
          </tag>
        </docblock>
        <argument line="379">
          <name>$image</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="420" package="Flourish">
        <name>isImageCompatible</name>
        <full_name>isImageCompatible</full_name>
        <docblock line="410">
          <description><![CDATA[Checks to make sure the class can handle the image file specified]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="410" name="internal" description=""/>
          <tag line="410" name="throws" description="When the image specified does not exist" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="410" name="param" description="The image to check for incompatibility" type="string" variable="$image">
            <type by_reference="false">string</type>
          </tag>
          <tag line="410" name="return" description="If the image is compatible with the detected image processor" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="420">
          <name>$image</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="447" package="Flourish">
        <name>isOpenBaseDirRestricted</name>
        <full_name>isOpenBaseDirRestricted</full_name>
        <docblock line="441">
          <description><![CDATA[Checks if the path specified is restricted by open basedir]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="441" name="param" description="The path to check" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="441" name="return" description="If the path is restricted by the `open_basedir` ini setting" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="447">
          <name>$path</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="474" package="Flourish">
        <name>isSafeModeExecDirRestricted</name>
        <full_name>isSafeModeExecDirRestricted</full_name>
        <docblock line="468">
          <description><![CDATA[Checks if the path specified is restricted by the safe mode exec dir restriction]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="468" name="param" description="The path to check" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="468" name="return" description="If the path is restricted by the `safe_mode_exec_dir` ini setting" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="474">
          <name>$path</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="493" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="486">
          <description><![CDATA[Resets the configuration of the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="486" name="internal" description=""/>
          <tag line="486" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="507" package="Flourish">
        <name>setImageMagickDirectory</name>
        <full_name>setImageMagickDirectory</full_name>
        <docblock line="501">
          <description><![CDATA[Sets the directory the ImageMagick binary is installed in and tells the class to use ImageMagick even if GD is installed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="501" name="param" description="The directory ImageMagick is installed in" type="string" variable="$directory">
            <type by_reference="false">string</type>
          </tag>
          <tag line="501" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="507">
          <name>$directory</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="524" package="Flourish">
        <name>setImageMagickTempDir</name>
        <full_name>setImageMagickTempDir</full_name>
        <docblock line="518">
          <description><![CDATA[Sets a custom directory to use for the ImageMagick temporary files]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="518" name="param" description="The directory to use for the ImageMagick temp dir" type="string" variable="$temp_dir">
            <type by_reference="false">string</type>
          </tag>
          <tag line="518" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="524">
          <name>$temp_dir</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="554" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="545">
          <description><![CDATA[Creates an object to represent an image on the filesystem]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="545" name="throws" description="When no image was specified, when the image does not exist or when the path specified is not an image" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="545" name="param" description="The path to the image" type="string" variable="$file_path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="545" name="param" description="If file checks should be skipped, which improves performance, but may cause undefined behavior - only skip these if they are duplicated elsewhere" type="boolean" variable="$skip_checks">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="545" name="return" description="" type="\fImage">
            <type by_reference="false">\fImage</type>
          </tag>
        </docblock>
        <argument line="554">
          <name>$file_path</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="554">
          <name>$skip_checks</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="580" package="Flourish">
        <name>append</name>
        <full_name>append</full_name>
        <docblock line="574">
          <description><![CDATA[Prevents a programmer from trying to append an image]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="574" name="param" description="The data to append to the image" type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="574" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="580">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="597" package="Flourish">
        <name>crop</name>
        <full_name>crop</full_name>
        <docblock line="586">
          <description><![CDATA[Crops the image by the exact pixel dimensions specified]]></description>
          <long-description><![CDATA[<p>The crop does not occur until ::saveChanges() is called.</p>]]></long-description>
          <tag line="586" name="param" description="The width in pixels to crop the image to" type="\numeric" variable="$new_width">
            <type by_reference="false">\numeric</type>
          </tag>
          <tag line="586" name="param" description="The height in pixels to crop the image to" type="\numeric" variable="$new_height">
            <type by_reference="false">\numeric</type>
          </tag>
          <tag line="586" name="param" description="The number of pixels from the left of the image to start the crop from, or a horizontal position of `'left'`, `'center'` or `'right'`" type="\numeric|string" variable="$crop_from_x">
            <type by_reference="false">\numeric</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="586" name="param" description="The number of pixels from the top of the image to start the crop from, or a vertical position of `'top'`, `'center'` or `'bottom'`" type="\numeric|string" variable="$crop_from_y">
            <type by_reference="false">\numeric</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="586" name="return" description="The image object, to allow for method chaining" type="\fImage">
            <type by_reference="false">\fImage</type>
          </tag>
        </docblock>
        <argument line="597">
          <name>$new_width</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="597">
          <name>$new_height</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="597">
          <name>$crop_from_x</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="597">
          <name>$crop_from_y</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="706" package="Flourish">
        <name>cropToRatio</name>
        <full_name>cropToRatio</full_name>
        <docblock line="695">
          <description><![CDATA[Crops the biggest area possible from the center of the image that matches the ratio provided]]></description>
          <long-description><![CDATA[<p>The crop does not occur until ::saveChanges() is called.</p>]]></long-description>
          <tag line="695" name="param" description="The width ratio to crop the image to" type="\numeric" variable="$ratio_width">
            <type by_reference="false">\numeric</type>
          </tag>
          <tag line="695" name="param" description="The height ratio to crop the image to" type="\numeric" variable="$ratio_height">
            <type by_reference="false">\numeric</type>
          </tag>
          <tag line="695" name="param" description="A horizontal position of `'left'`, `'center'` or `'right'`" type="string" variable="$horizontal_position">
            <type by_reference="false">string</type>
          </tag>
          <tag line="695" name="param" description="A vertical position of `'top'`, `'center'` or `'bottom'`" type="string" variable="$vertical_position">
            <type by_reference="false">string</type>
          </tag>
          <tag line="695" name="return" description="The image object, to allow for method chaining" type="\fImage">
            <type by_reference="false">\fImage</type>
          </tag>
        </docblock>
        <argument line="706">
          <name>$ratio_width</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="706">
          <name>$ratio_height</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="706">
          <name>$horizontal_position</name>
          <default><![CDATA['center']]></default>
          <type/>
        </argument>
        <argument line="706">
          <name>$vertical_position</name>
          <default><![CDATA['center']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="771" package="Flourish">
        <name>desaturate</name>
        <full_name>desaturate</full_name>
        <docblock line="764">
          <description><![CDATA[Converts the image to grayscale]]></description>
          <long-description><![CDATA[<p>Desaturation does not occur until ::saveChanges() is called.</p>]]></long-description>
          <tag line="764" name="return" description="The image object, to allow for method chaining" type="\fImage">
            <type by_reference="false">\fImage</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="795" package="Flourish">
        <name>getCurrentDimensions</name>
        <full_name>getCurrentDimensions</full_name>
        <docblock line="790">
          <description><![CDATA[Gets the dimensions of the image as of the last modification]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="790" name="return" description="An associative array: `'width' =&gt; {integer}, 'height' =&gt; {integer}`" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="816" package="Flourish">
        <name>getDimensions</name>
        <full_name>getDimensions</full_name>
        <docblock line="811">
          <description><![CDATA[Returns the width and height of the image as a two element array]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="811" name="return" description="In the format `0 =&gt; (integer) {width}, 1 =&gt; (integer) {height}`" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="828" package="Flourish">
        <name>getHeight</name>
        <full_name>getHeight</full_name>
        <docblock line="823">
          <description><![CDATA[Returns the height of the image]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="823" name="return" description="The height of the image in pixels" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="839" package="Flourish">
        <name>getType</name>
        <full_name>getType</full_name>
        <docblock line="834">
          <description><![CDATA[Returns the type of the image]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="834" name="return" description="The type of the image: `'jpg'`, `'gif'`, `'png'`, `'tif'`" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="850" package="Flourish">
        <name>getWidth</name>
        <full_name>getWidth</full_name>
        <docblock line="845">
          <description><![CDATA[Returns the width of the image]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="845" name="return" description="The width of the image in pixels" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="861" package="Flourish">
        <name>isAnimatedGif</name>
        <full_name>isAnimatedGif</full_name>
        <docblock line="856">
          <description><![CDATA[Checks if the current image is an animated gif]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="856" name="return" description="If the image is an animated gif" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="880" package="Flourish">
        <name>processWithGD</name>
        <full_name>processWithGD</full_name>
        <docblock line="873">
          <description><![CDATA[Processes the current image using GD]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="873" name="param" description="The file to save the image to" type="string" variable="$output_file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="873" name="param" description="The JPEG quality to use" type="integer" variable="$jpeg_quality">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="873" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="880">
          <name>$output_file</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="880">
          <name>$jpeg_quality</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="1115" package="Flourish">
        <name>isOldImageMagickVersion</name>
        <full_name>isOldImageMagickVersion</full_name>
        <docblock line="1110">
          <description><![CDATA[Determines if ImageMagick is of version less than 6.7.5.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1110" name="return" description="`TRUE` if the version is less than 6.7.5, `FALSE` otherwise." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1154" package="Flourish">
        <name>processWithImageMagick</name>
        <full_name>processWithImageMagick</full_name>
        <docblock line="1147">
          <description><![CDATA[Processes the current image using ImageMagick]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1147" name="param" description="The file to save the image to" type="string" variable="$output_file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1147" name="param" description="The JPEG quality to use" type="integer" variable="$jpeg_quality">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1147" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1154">
          <name>$output_file</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1154">
          <name>$jpeg_quality</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1301" package="Flourish">
        <name>resize</name>
        <full_name>resize</full_name>
        <docblock line="1289">
          <description><![CDATA[Sets the image to be resized proportionally to a specific size canvas]]></description>
          <long-description><![CDATA[<p>Will only size down an image. This method uses resampling to ensure the
resized image is smooth in appearance. Resizing does not occur until
::saveChanges() is called.</p>]]></long-description>
          <tag line="1289" name="param" description="The width of the canvas to fit the image on, `0` for no constraint" type="integer" variable="$canvas_width">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1289" name="param" description="The height of the canvas to fit the image on, `0` for no constraint" type="integer" variable="$canvas_height">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1289" name="param" description="If the image is smaller than the desired canvas, the image will be increased in size" type="boolean" variable="$allow_upsizing">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1289" name="return" description="The image object, to allow for method chaining" type="\fImage">
            <type by_reference="false">\fImage</type>
          </tag>
        </docblock>
        <argument line="1301">
          <name>$canvas_width</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1301">
          <name>$canvas_height</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1301">
          <name>$allow_upsizing</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1377" package="Flourish">
        <name>rotate</name>
        <full_name>rotate</full_name>
        <docblock line="1370">
          <description><![CDATA[Sets the image to be rotated]]></description>
          <long-description><![CDATA[<p>Rotation does not occur until ::saveChanges() is called.</p>]]></long-description>
          <tag line="1370" name="param" description="The number of degrees to rotate - 90, 180, or 270" type="integer" variable="$degrees">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="1377">
          <name>$degrees</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1436" package="Flourish">
        <name>saveChanges</name>
        <full_name>saveChanges</full_name>
        <docblock line="1418">
          <description><![CDATA[Saves any changes to the image]]></description>
          <long-description><![CDATA[<p>If the file type is different than the current one, removes the current
file once the new one is created.</p>

<p>This operation will be reverted by a filesystem transaction being rolled
back. If a transaction is in progress and the new image type causes a
new file to be created, the old file will not be deleted until the
transaction is committed.</p>]]></long-description>
          <tag line="1418" name="param" description="The new file format for the image: 'NULL` (no change), `'jpg'`, `'gif'`, `'png'`" type="string" variable="$new_image_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1418" name="param" description="The quality setting to use for JPEG images - this may be ommitted" type="integer" variable="$jpeg_quality">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1418" name="param" description="If an existing file with the same name and extension should be overwritten" type="boolean" variable="$overwrite">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1418" name="param" description="|$new_image_type" type="string" variable="">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1418" name="param" description="|$overwrite" type="boolean" variable="">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1418" name="return" description="The image object, to allow for method chaining" type="\fImage">
            <type by_reference="false">\fImage</type>
          </tag>
        </docblock>
        <argument line="1436">
          <name>$new_image_type</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="1436">
          <name>$jpeg_quality</name>
          <default><![CDATA[90]]></default>
          <type/>
        </argument>
        <argument line="1436">
          <name>$overwrite</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fImage.php</error>
      <notice line="1418" code="50013">Parameter  could not be found in saveChanges()</notice>
      <notice line="1418" code="50013">Parameter  could not be found in saveChanges()</notice>
    </parse_markers>
  </file>
  <file path="php/flourish/fValidationException.php" hash="f5c02ce70d0cd962e40b2760d4bb5bd1" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="19" package="Flourish">
      <extends>\fExpectedException</extends>
      <name>fValidationException</name>
      <full_name>\fValidationException</full_name>
      <docblock line="2">
        <description><![CDATA[An exception caused by a data not matching a rule or set of rules]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2010 Will Bond, others"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="author" description="Will Bond, iMarc LLC [wb-imarc] &lt;will@imarc.net&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fValidationException" link="http://flourishlib.com/fValidationException"/>
        <tag line="2" name="version" description="1.0.0b4"/>
        <tag line="2" name="changes" description="1.0.0b4  Added support for nested error arrays [wb-imarc, 2010-10-03]"/>
        <tag line="2" name="changes" description="1.0.0b3  Added ::removeFieldNames() [wb, 2010-05-26]"/>
        <tag line="2" name="changes" description="1.0.0b2  Added a custom ::__construct() to handle arrays of messages [wb, 2009-09-17]"/>
        <tag line="2" name="changes" description="1.0.0b   The initial implementation [wb, 2007-06-14]"/>
      </docblock>
      <constant namespace="global" line="21" package="Flourish">
        <name>formatField</name>
        <full_name>formatField</full_name>
        <value><![CDATA['fValidationException::formatField']]></value>
      </constant>
      <constant namespace="global" line="22" package="Flourish">
        <name>removeFieldNames</name>
        <full_name>removeFieldNames</full_name>
        <value><![CDATA['fValidationException::removeFieldNames']]></value>
      </constant>
      <constant namespace="global" line="23" package="Flourish">
        <name>setFieldFormat</name>
        <full_name>setFieldFormat</full_name>
        <value><![CDATA['fValidationException::setFieldFormat']]></value>
      </constant>
      <property final="false" static="true" visibility="protected" line="30" namespace="global" package="Sutra">
        <name>$field_format</name>
        <default><![CDATA['%s: ']]></default>
        <docblock line="25">
          <description><![CDATA[The formatting string to use for field names]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="25" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="39" package="Flourish">
        <name>formatField</name>
        <full_name>formatField</full_name>
        <docblock line="33">
          <description><![CDATA[Accepts a field name and formats it based on the formatting string set via ::setFieldFormat()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="33" name="param" description="The name of the field to format" type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="33" name="return" description="The formatted field name" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="39">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="51" package="Flourish">
        <name>removeFieldNames</name>
        <full_name>removeFieldNames</full_name>
        <docblock line="45">
          <description><![CDATA[Removes the field names from normal validation messages, leaving just the message part]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="45" name="param" description="The messages to remove the field names from" type="array" variable="$messages">
            <type by_reference="false">array</type>
          </tag>
          <tag line="45" name="return" description="The messages without field names" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$messages</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="84" package="Flourish">
        <name>setFieldFormat</name>
        <full_name>setFieldFormat</full_name>
        <docblock line="70">
          <description><![CDATA[Set the format to be applied to all field names used in fValidationExceptions]]></description>
          <long-description><![CDATA[<p>The format should contain exactly one <code>%s</code>
[http://php.net/sprintf sprintf()] conversion specification, which will
be replaced with the field name. Any literal <code>%</code> characters should be
written as <code>%%</code>.</p>

<p>The default format is just <code>%s:</code>, which simply inserts a <code>:</code> and space
after the field name.</p>]]></long-description>
          <tag line="70" name="param" description="A string to format the field name with - `%s` will be replaced with the field name" type="string" variable="$format">
            <type by_reference="false">string</type>
          </tag>
          <tag line="70" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="84">
          <name>$format</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="137" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="96">
          <description><![CDATA[Sets the message for the exception, allowing for custom formatting beyond fException]]></description>
          <long-description><![CDATA[<p>If this method receives exactly two parameters, a string and an array,
the string will be used as a message in a HTML <code>&lt;p&gt;</code> tag and the array
will be turned into an unorder list <code>&lt;ul&gt;</code> tag with each element in the
array being an <code>&lt;li&gt;</code> tag. It is possible to pass an optional exception
code as a third parameter.</p>

<p>The following PHP:</p>

<p>{{{</p>

<h1>!php</h1>

<p>throw new fValidationException(
    'The following problems were found:',
    array(
        'Please provide your name',
        'Please provide your email address'
    )
);
}}}</p>

<p>Would create the message:</p>

<p>{{{</p>

<h1>!text/html</h1>

<p>The following problems were found:</p>

<ul>
    <li>Please provide your name</li>
    <li>Please provide your email address</li>
</ul>

<p>}}}</p>

<p>If the parameters are anything else, they will be passed to
fException::__construct().</p>]]></long-description>
          <tag line="96" name="param" description="The beginning message for the exception. This will be placed in a `&lt;p&gt;` tag." type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="96" name="param" description="An array of strings to place in a `&lt;ul&gt;` tag" type="array" variable="$sub_messages">
            <type by_reference="false">array</type>
          </tag>
          <tag line="96" name="param" description="The optional exception code" type="mixed" variable="$code">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="96" name="return" description="" type="\fException">
            <type by_reference="false">\fException</type>
          </tag>
        </docblock>
        <argument line="137">
          <name>$message</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="171" package="Flourish">
        <name>formatErrorArray</name>
        <full_name>formatErrorArray</full_name>
        <docblock line="165">
          <description><![CDATA[Takes an error array that may or may not be nested and returns a HTML string representation]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="165" name="param" description="An array of (possibly nested) child record errors" type="array" variable="$errors">
            <type by_reference="false">array</type>
          </tag>
          <tag line="165" name="return" description="An array of string error messages" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="171">
          <name>$errors</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fValidationException.php</error>
      <notice line="96" code="50013">Parameter $sub_messages could not be found in __construct()</notice>
      <notice line="96" code="50013">Parameter $code could not be found in __construct()</notice>
    </parse_markers>
  </file>
  <file path="php/flourish/fNotFoundException.php" hash="0ea22c66ed7848fa46c590fd43784a3a" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="15" package="Flourish">
      <extends>\fExpectedException</extends>
      <name>fNotFoundException</name>
      <full_name>\fNotFoundException</full_name>
      <docblock line="2">
        <description><![CDATA[An exception when an fActiveRecord is not found in the database]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2008 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fNotFoundException" link="http://flourishlib.com/fNotFoundException"/>
        <tag line="2" name="version" description="1.0.0b"/>
        <tag line="2" name="changes" description="1.0.0b  The initial implementation [wb, 2007-06-14]"/>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fNotFoundException.php</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fDatabase.php" hash="c24050da0b722eb028dc1ac0c724cfd3" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="94" package="Flourish">
      <extends/>
      <name>fDatabase</name>
      <full_name>\fDatabase</full_name>
      <docblock line="2">
        <description><![CDATA[Provides a common API for different databases - will automatically use any installed extension]]></description>
        <long-description><![CDATA[<p>This class is implemented to use the UTF-8 character encoding. Please see
http://flourishlib.com/docs/UTF-8 for more information.</p>

<p>The following databases are supported:</p>

<ul>
<li>[http://ibm.com/db2 DB2]</li>
<li>[http://microsoft.com/sql/ MSSQL]</li>
<li>[http://mysql.com MySQL]</li>
<li>[http://oracle.com Oracle]</li>
<li>[http://postgresql.org PostgreSQL]</li>
<li>[http://sqlite.org SQLite]</li>
</ul>

<p>The class will automatically use the first of the following extensions it finds:</p>

<ul>
<li>DB2

<ul>
<li>[http://php.net/ibm_db2 ibm_db2]</li>
<li>[http://php.net/pdo_ibm pdo_ibm]</li>
</ul></li>
<li>MSSQL

<ul>
<li>[http://msdn.microsoft.com/en-us/library/cc296221.aspx sqlsrv]</li>
<li>[http://php.net/pdo_dblib pdo_dblib]</li>
<li>[http://php.net/mssql mssql] (or [http://php.net/sybase sybase])</li>
</ul></li>
<li>MySQL

<ul>
<li>[http://php.net/mysql mysql]</li>
<li>[http://php.net/mysqli mysqli]</li>
<li>[http://php.net/pdo_mysql pdo_mysql]</li>
</ul></li>
<li>Oracle

<ul>
<li>[http://php.net/oci8 oci8]</li>
<li>[http://php.net/pdo_oci pdo_oci]</li>
</ul></li>
<li>PostgreSQL

<ul>
<li>[http://php.net/pgsql pgsql]</li>
<li>[http://php.net/pdo_pgsql pdo_pgsql]</li>
</ul></li>
<li>SQLite

<ul>
<li>[http://php.net/pdo_sqlite pdo_sqlite] (for v3.x)</li>
<li>[http://php.net/sqlite sqlite] (for v2.x)</li>
</ul></li>
</ul>

<p>The <code>odbc</code> and <code>pdo_odbc</code> extensions are not supported due to character
encoding and stability issues on Windows, and functionality on non-Windows
operating systems.</p>]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2012 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fDatabase" link="http://flourishlib.com/fDatabase"/>
        <tag line="2" name="version" description="1.0.0b41"/>
        <tag line="2" name="changes" description="1.0.0b41  Fixed an array to string conversion notice [wb, 2012-09-21]"/>
        <tag line="2" name="changes" description="1.0.0b40  Fixed a bug with notices being triggered when failing to connect to a SQLite database [wb, 2011-06-20]"/>
        <tag line="2" name="changes" description="1.0.0b39  Fixed a bug with detecting some MySQL database version numbers [wb, 2011-05-24]"/>
        <tag line="2" name="changes" description="1.0.0b38  Backwards Compatibility Break - callbacks registered to the `extracted` hook via ::registerHookCallback() no longer receive the `$strings` parameter, instead all strings are added into the `$values` parameter - added ::getVersion(), fixed a bug with SQLite messaging, fixed a bug with ::__destruct(), improved handling of transactional queries, added ::close(), enhanced class to throw four different exceptions for different connection errors, silenced PHP warnings upon connection error [wb, 2011-05-09]"/>
        <tag line="2" name="changes" description="1.0.0b37  Fixed usage of the mysqli extension to only call mysqli_set_charset() if it exists [wb, 2011-03-04]"/>
        <tag line="2" name="changes" description="1.0.0b36  Updated ::escape() and methods that use ::escape() to handle float values that don't contain a digit before or after the . [wb, 2011-02-01]"/>
        <tag line="2" name="changes" description="1.0.0b35  Updated the class to replace `LIMIT` and `OFFSET` value placeholders in the SQL with their values before translating since most databases that translate `LIMIT` statements need to move or add values together [wb, 2011-01-11]"/>
        <tag line="2" name="changes" description="1.0.0b34  Fixed a bug with creating translated prepared statements [wb, 2011-01-09]"/>
        <tag line="2" name="changes" description="1.0.0b33  Added code to explicitly set the connection encoding for the mysql and mysqli extensions since some PHP installs don't see to fully respect `SET NAMES` [wb, 2010-12-06]"/>
        <tag line="2" name="changes" description="1.0.0b32  Fixed handling auto-incrementing values for Oracle when the trigger was on `INSERT OR UPDATE` instead of just `INSERT` [wb, 2010-12-04]"/>
        <tag line="2" name="changes" description="1.0.0b31  Fixed handling auto-incrementing values for MySQL when the `INTO` keyword is left out of an `INSERT` statement [wb, 2010-11-04]"/>
        <tag line="2" name="changes" description="1.0.0b30  Fixed the pgsql, mssql and mysql extensions to force a new connection instead of reusing an existing one [wb, 2010-08-17]"/>
        <tag line="2" name="changes" description="1.0.0b29  Backwards Compatibility Break - removed ::enableSlowQueryWarnings(), added ability to replicate via ::registerHookCallback() [wb, 2010-08-10]"/>
        <tag line="2" name="changes" description="1.0.0b28  Backwards Compatibility Break - removed ODBC support. Added support for the `pdo_ibm` extension. [wb, 2010-07-31]"/>
        <tag line="2" name="changes" description="1.0.0b27  Fixed a bug with running multiple copies of a SQL statement with string values through a single ::translatedQuery() call [wb, 2010-07-14]"/>
        <tag line="2" name="changes" description="1.0.0b26  Updated the class to use new fCore functionality [wb, 2010-07-05]"/>
        <tag line="2" name="changes" description="1.0.0b25  Added IBM DB2 support [wb, 2010-04-13]"/>
        <tag line="2" name="changes" description="1.0.0b24  Fixed an auto-incrementing transaction bug with Oracle and debugging issues with all databases [wb, 2010-03-17]"/>
        <tag line="2" name="changes" description="1.0.0b23  Resolved another bug with capturing auto-incrementing values for PostgreSQL and Oracle [wb, 2010-03-15]"/>
        <tag line="2" name="changes" description="1.0.0b22  Changed ::clearCache() to also clear the cache on the fSQLTranslation [wb, 2010-03-09]"/>
        <tag line="2" name="changes" description="1.0.0b21  Added ::execute() for result-less SQL queries, ::prepare() and ::translatedPrepare() to create fStatement objects for prepared statements, support for prepared statements in ::query() and ::unbufferedQuery(), fixed default caching key for ::enableCaching() [wb, 2010-03-02]"/>
        <tag line="2" name="changes" description="1.0.0b20  Added a parameter to ::enableCaching() to provide a key token that will allow cached values to be shared between multiple databases with the same schema [wb, 2009-10-28]"/>
        <tag line="2" name="changes" description="1.0.0b19  Added support for escaping identifiers (column and table names) to ::escape(), added support for database schemas, rewrote internal SQL string spliting [wb, 2009-10-22]"/>
        <tag line="2" name="changes" description="1.0.0b18  Updated the class for the new fResult and fUnbufferedResult APIs, fixed ::unescape() to not touch NULLs [wb, 2009-08-12]"/>
        <tag line="2" name="changes" description="1.0.0b17  Added the ability to pass an array of all values as a single parameter to ::escape() instead of one value per parameter [wb, 2009-08-11]"/>
        <tag line="2" name="changes" description="1.0.0b16  Fixed PostgreSQL and Oracle from trying to get auto-incrementing values on inserts when explicit values were given [wb, 2009-08-06]"/>
        <tag line="2" name="changes" description="1.0.0b15  Fixed a bug where auto-incremented values would not be detected when table names were quoted [wb, 2009-07-15]"/>
        <tag line="2" name="changes" description="1.0.0b14  Changed ::determineExtension() and ::determineCharacterSet() to be protected instead of private [wb, 2009-07-08]"/>
        <tag line="2" name="changes" description="1.0.0b13  Updated ::escape() to accept arrays of values for insertion into full SQL strings [wb, 2009-07-06]"/>
        <tag line="2" name="changes" description="1.0.0b12  Updates to ::unescape() to improve performance [wb, 2009-06-15]"/>
        <tag line="2" name="changes" description="1.0.0b11  Changed replacement values in preg_replace() calls to be properly escaped [wb, 2009-06-11]"/>
        <tag line="2" name="changes" description="1.0.0b10  Changed date/time/timestamp escaping from `strtotime()` to fDate/fTime/fTimestamp for better localization support [wb, 2009-06-01]"/>
        <tag line="2" name="changes" description="1.0.0b9   Fixed a bug with ::escape() where floats that start with a . were encoded as `NULL` [wb, 2009-05-09]"/>
        <tag line="2" name="changes" description="1.0.0b8   Added Oracle support, change PostgreSQL code to no longer cause lastval() warnings, added support for arrays of values to ::escape() [wb, 2009-05-03]"/>
        <tag line="2" name="changes" description="1.0.0b7   Updated for new fCore API [wb, 2009-02-16]"/>
        <tag line="2" name="changes" description="1.0.0b6   Fixed a bug with executing transaction queries when using the mysqli extension [wb, 2009-02-12]"/>
        <tag line="2" name="changes" description="1.0.0b5   Changed @ error suppression operator to `error_reporting()` calls [wb, 2009-01-26]"/>
        <tag line="2" name="changes" description="1.0.0b4   Added a few error suppression operators back in so that developers don't get errors and exceptions [wb, 2009-01-14]"/>
        <tag line="2" name="changes" description="1.0.0b3   Removed some unnecessary error suppresion operators [wb, 2008-12-11]"/>
        <tag line="2" name="changes" description="1.0.0b2   Fixed a bug with PostgreSQL when using the PDO extension and executing an INSERT statement [wb, 2008-12-11]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2007-09-25]"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="124" namespace="global" package="Sutra">
        <name>$cache</name>
        <default><![CDATA[]]></default>
        <docblock line="119">
          <description><![CDATA[An fCache object to cache the schema info to]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="119" name="var" description="" type="\fCache">
            <type by_reference="false">\fCache</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="131" namespace="global" package="Sutra">
        <name>$cache_prefix</name>
        <default><![CDATA[]]></default>
        <docblock line="126">
          <description><![CDATA[The cache prefix to use for cache entries]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="126" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="138" namespace="global" package="Sutra">
        <name>$connection</name>
        <default><![CDATA[]]></default>
        <docblock line="133">
          <description><![CDATA[Database connection resource or PDO object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="133" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="145" namespace="global" package="Sutra">
        <name>$database</name>
        <default><![CDATA[]]></default>
        <docblock line="140">
          <description><![CDATA[The database name]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="140" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="152" namespace="global" package="Sutra">
        <name>$debug</name>
        <default><![CDATA[]]></default>
        <docblock line="147">
          <description><![CDATA[If debugging is enabled]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="147" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="159" namespace="global" package="Sutra">
        <name>$error</name>
        <default><![CDATA[]]></default>
        <docblock line="154">
          <description><![CDATA[A temporary error holder for the mssql extension]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="154" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="178" namespace="global" package="Sutra">
        <name>$extension</name>
        <default><![CDATA[]]></default>
        <docblock line="161">
          <description><![CDATA[The extension to use for the database specified]]></description>
          <long-description><![CDATA[<p>Options include:</p>

<ul>
<li><code>'ibm_db2'</code></li>
<li><code>'mssql'</code></li>
<li><code>'mysql'</code></li>
<li><code>'mysqli'</code></li>
<li><code>'oci8'</code></li>
<li><code>'pgsql'</code></li>
<li><code>'sqlite'</code></li>
<li><code>'sqlsrv'</code></li>
<li><code>'pdo'</code></li>
</ul>]]></long-description>
          <tag line="161" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="195" namespace="global" package="Sutra">
        <name>$hook_callbacks</name>
        <default><![CDATA[]]></default>
        <docblock line="180">
          <description><![CDATA[Hooks callbacks to be used for accessing and modifying queries]]></description>
          <long-description><![CDATA[<p>This array will have the structure:</p>

<p>{{{
array(
    'unmodified' => array({callbacks}),
    'extracted'  => array({callbacks}),
    'run'        => array({callbacks})
)
}}}</p>]]></long-description>
          <tag line="180" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="202" namespace="global" package="Sutra">
        <name>$host</name>
        <default><![CDATA[]]></default>
        <docblock line="197">
          <description><![CDATA[The host the database server is located on]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="197" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="209" namespace="global" package="Sutra">
        <name>$inside_transaction</name>
        <default><![CDATA[]]></default>
        <docblock line="204">
          <description><![CDATA[If a transaction is in progress]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="204" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="216" namespace="global" package="Sutra">
        <name>$password</name>
        <default><![CDATA[]]></default>
        <docblock line="211">
          <description><![CDATA[The password for the user specified]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="211" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="223" namespace="global" package="Sutra">
        <name>$port</name>
        <default><![CDATA[]]></default>
        <docblock line="218">
          <description><![CDATA[The port number for the host]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="218" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="230" namespace="global" package="Sutra">
        <name>$query_time</name>
        <default><![CDATA[]]></default>
        <docblock line="225">
          <description><![CDATA[The total number of seconds spent executing queries]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="225" name="var" description="" type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="237" namespace="global" package="Sutra">
        <name>$schema_info</name>
        <default><![CDATA[]]></default>
        <docblock line="232">
          <description><![CDATA[A cache of database-specific code]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="232" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="244" namespace="global" package="Sutra">
        <name>$statement</name>
        <default><![CDATA[]]></default>
        <docblock line="239">
          <description><![CDATA[The last executed fStatement object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="239" name="var" description="" type="\fStatement">
            <type by_reference="false">\fStatement</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="251" namespace="global" package="Sutra">
        <name>$timeout</name>
        <default><![CDATA[]]></default>
        <docblock line="246">
          <description><![CDATA[The timeout for the database connection]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="246" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="258" namespace="global" package="Sutra">
        <name>$translation</name>
        <default><![CDATA[]]></default>
        <docblock line="253">
          <description><![CDATA[The fSQLTranslation object for this database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="253" name="var" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="265" namespace="global" package="Sutra">
        <name>$type</name>
        <default><![CDATA[]]></default>
        <docblock line="260">
          <description><![CDATA[The database type: `'db2'`, `'mssql'`, `'mysql'`, `'oracle'`, `'postgresql'`, or `'sqlite'`]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="260" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="272" namespace="global" package="Sutra">
        <name>$unbuffered_result</name>
        <default><![CDATA[]]></default>
        <docblock line="267">
          <description><![CDATA[The unbuffered query instance]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="267" name="var" description="" type="\fUnbufferedResult">
            <type by_reference="false">\fUnbufferedResult</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="279" namespace="global" package="Sutra">
        <name>$username</name>
        <default><![CDATA[]]></default>
        <docblock line="274">
          <description><![CDATA[The user to connect to the database as]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="274" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="104" package="Flourish">
        <name>compose</name>
        <full_name>compose</full_name>
        <docblock line="96">
          <description><![CDATA[Composes text using fText if loaded]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="96" name="param" description="The message to compose" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="96" name="param" description="A string or number to insert into the message" type="mixed" variable="$component">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="96" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="96" name="return" description="The composed and possible translated message" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="104">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="297" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="282">
          <description><![CDATA[Configures the connection to a database - connection is not made until the first query is executed]]></description>
          <long-description><![CDATA[<p>Passing <code>NULL</code> to any parameter other than <code>$type</code> and <code>$database</code> will
cause the default value to be used.</p>]]></long-description>
          <tag line="282" name="param" description="The type of the database: `'db2'`, `'mssql'`, `'mysql'`, `'oracle'`, `'postgresql'`, `'sqlite'`" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="282" name="param" description="Name of the database. If SQLite the path to the database file." type="string" variable="$database">
            <type by_reference="false">string</type>
          </tag>
          <tag line="282" name="param" description="Database username - not used for SQLite" type="string" variable="$username">
            <type by_reference="false">string</type>
          </tag>
          <tag line="282" name="param" description="The password for the username specified - not used for SQLite" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="282" name="param" description="Database server host or IP, defaults to localhost - not used for SQLite. MySQL socket connection can be made by entering `'sock:'` followed by the socket path. PostgreSQL socket connection can be made by passing just `'sock:'`." type="string" variable="$host">
            <type by_reference="false">string</type>
          </tag>
          <tag line="282" name="param" description="The port to connect to, defaults to the standard port for the database type specified - not used for SQLite" type="integer" variable="$port">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="282" name="param" description="The number of seconds to timeout after if a connection can not be made - not used for SQLite" type="integer" variable="$timeout">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="282" name="return" description="" type="\fDatabase">
            <type by_reference="false">\fDatabase</type>
          </tag>
        </docblock>
        <argument line="297">
          <name>$type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="297">
          <name>$database</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="297">
          <name>$username</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="297">
          <name>$password</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="297">
          <name>$host</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="297">
          <name>$port</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="297">
          <name>$timeout</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="343" package="Flourish">
        <name>__destruct</name>
        <full_name>__destruct</full_name>
        <docblock line="336">
          <description><![CDATA[Closes the open database connection]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="336" name="internal" description=""/>
          <tag line="336" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="384" package="Flourish">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="376">
          <description><![CDATA[All requests that hit this method should be requests for callbacks]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="376" name="internal" description=""/>
          <tag line="376" name="param" description="The method to create a callback for" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="376" name="return" description="The callback for the method requested" type="callback">
            <type by_reference="false">callback</type>
          </tag>
        </docblock>
        <argument line="384">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="398" package="Flourish">
        <name>checkForError</name>
        <full_name>checkForError</full_name>
        <docblock line="390">
          <description><![CDATA[Checks to see if an SQL error occured]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="390" name="param" description="The result object for the query" type="\fResult|\fUnbufferedResult|boolean" variable="$result">
            <type by_reference="false">\fResult</type>
            <type by_reference="false">\fUnbufferedResult</type>
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="390" name="param" description="The sqlite extension will pass a string error message, the oci8 extension will pass the statement resource" type="mixed" variable="$extra_info">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="390" name="param" description="The SQL that was executed" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="390" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="398">
          <name>$result</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="398">
          <name>$extra_info</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="398">
          <name>$sql</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="471" package="Flourish">
        <name>clearCache</name>
        <full_name>clearCache</full_name>
        <docblock line="466">
          <description><![CDATA[Clears all of the schema info out of the object and, if set, the fCache object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="466" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="491" package="Flourish">
        <name>close</name>
        <full_name>close</full_name>
        <docblock line="486">
          <description><![CDATA[Closes the database connection]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="486" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="507" package="Flourish">
        <name>connect</name>
        <full_name>connect</full_name>
        <docblock line="497">
          <description><![CDATA[Connects to the database specified, if no connection exists]]></description>
          <long-description><![CDATA[<p>This method is only intended to force a connection, all operations that
require a database connection will automatically call this method.</p>]]></long-description>
          <tag line="497" name="throws" description="When the username and password are not accepted" type="\fAuthorizationException">
            <type by_reference="false">\fAuthorizationException</type>
          </tag>
          <tag line="497" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="843" package="Flourish">
        <name>determineCharacterSet</name>
        <full_name>determineCharacterSet</full_name>
        <docblock line="838">
          <description><![CDATA[Determines the character set of a SQL Server database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="838" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="858" package="Flourish">
        <name>determineExtension</name>
        <full_name>determineExtension</full_name>
        <docblock line="853">
          <description><![CDATA[Figures out which extension to use for the database type selected]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="853" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1009" package="Flourish">
        <name>enableCaching</name>
        <full_name>enableCaching</full_name>
        <docblock line="1002">
          <description><![CDATA[Sets the schema info to be cached to the fCache object specified]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1002" name="param" description="The cache to cache to" type="\fCache" variable="$cache">
            <type by_reference="false">\fCache</type>
          </tag>
          <tag line="1002" name="param" description="Internal use only! (this will be used in the cache key to uniquely identify the cache for this fDatabase object)" type="string" variable="$key_token">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1002" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1009">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1009">
          <name>$key_token</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1027" package="Flourish">
        <name>enableDebugging</name>
        <full_name>enableDebugging</full_name>
        <docblock line="1021">
          <description><![CDATA[Sets if debug messages should be shown]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1021" name="param" description="If debugging messages should be shown" type="boolean" variable="$flag">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1021" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1027">
          <name>$flag</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1093" package="Flourish">
        <name>escape</name>
        <full_name>escape</full_name>
        <docblock line="1033">
          <description><![CDATA[Escapes a value for insertion into SQL]]></description>
          <long-description><![CDATA[<p>The valid data types are:</p>

<ul>
<li><code>'blob'</code></li>
<li><code>'boolean'</code></li>
<li><code>'date'</code></li>
<li><code>'float'</code></li>
<li><code>'identifier'</code></li>
<li><code>'integer'</code></li>
<li><code>'string'</code> (also varchar, char or text)</li>
<li><code>'varchar'</code></li>
<li><code>'char'</code></li>
<li><code>'text'</code></li>
<li><code>'time'</code></li>
<li><code>'timestamp'</code></li>
</ul>

<p>In addition to being able to specify the data type, you can also pass
in an SQL statement with data type placeholders in the following form:</p>

<ul>
<li><code>%l</code> for a blob</li>
<li><code>%b</code> for a boolean</li>
<li><code>%d</code> for a date</li>
<li><code>%f</code> for a float</li>
<li><code>%r</code> for an indentifier (table or column name)</li>
<li><code>%i</code> for an integer</li>
<li><code>%s</code> for a string</li>
<li><code>%t</code> for a time</li>
<li><code>%p</code> for a timestamp</li>
</ul>

<p>Depending on what <code>$sql_or_type</code> and <code>$value</code> are, the output will be
slightly different. If <code>$sql_or_type</code> is a data type or a single
placeholder and <code>$value</code> is:</p>

<ul>
<li>a scalar value - an escaped SQL string is returned</li>
<li>an array - an array of escaped SQL strings is returned</li>
</ul>

<p>If <code>$sql_or_type</code> is a SQL string and <code>$value</code> is:</p>

<ul>
<li>a scalar value - the escaped value is inserted into the SQL string</li>
<li>an array - the escaped values are inserted into the SQL string separated by commas</li>
</ul>

<p>If <code>$sql_or_type</code> is a SQL string, it is also possible to pass an array
of all values as a single parameter instead of one value per parameter.
An example would look like the following:</p>

<p>{{{</p>

<h1>!php</h1>

<p>$db->escape(
    "SELECT * FROM users WHERE status = %s AND authorization_level = %s",
    array('Active', 'Admin')
);
}}}</p>]]></long-description>
          <tag line="1033" name="param" description="This can either be the data type to escape or an SQL string with a data type placeholder - see method description" type="string" variable="$sql_or_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1033" name="param" description="The value to escape - both single values and arrays of values are supported, see method description for details" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1033" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1033" name="return" description="The escaped value/SQL or an array of the escaped values" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="1093">
          <name>$sql_or_type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1093">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1186" package="Flourish">
        <name>escapeBlob</name>
        <full_name>escapeBlob</full_name>
        <docblock line="1178">
          <description><![CDATA[Escapes a blob for use in SQL, includes surround quotes when appropriate]]></description>
          <long-description><![CDATA[<p>A <code>NULL</code> value will be returned as <code>'NULL'</code></p>]]></long-description>
          <tag line="1178" name="param" description="The blob to escape" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1178" name="return" description="The escaped blob" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1186">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1230" package="Flourish">
        <name>escapeBoolean</name>
        <full_name>escapeBoolean</full_name>
        <docblock line="1222">
          <description><![CDATA[Escapes a boolean for use in SQL, includes surround quotes when appropriate]]></description>
          <long-description><![CDATA[<p>A <code>NULL</code> value will be returned as <code>'NULL'</code></p>]]></long-description>
          <tag line="1222" name="param" description="The boolean to escape" type="boolean" variable="$value">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1222" name="return" description="The database equivalent of the boolean passed" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1230">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1254" package="Flourish">
        <name>escapeDate</name>
        <full_name>escapeDate</full_name>
        <docblock line="1246">
          <description><![CDATA[Escapes a date for use in SQL, includes surrounding quotes]]></description>
          <long-description><![CDATA[<p>A <code>NULL</code> or invalid value will be returned as <code>'NULL'</code></p>]]></long-description>
          <tag line="1246" name="param" description="The date to escape" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1246" name="return" description="The escaped date" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1254">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1278" package="Flourish">
        <name>escapeFloat</name>
        <full_name>escapeFloat</full_name>
        <docblock line="1270">
          <description><![CDATA[Escapes a float for use in SQL]]></description>
          <long-description><![CDATA[<p>A <code>NULL</code> value will be returned as <code>'NULL'</code></p>]]></long-description>
          <tag line="1270" name="param" description="The float to escape" type="float" variable="$value">
            <type by_reference="false">float</type>
          </tag>
          <tag line="1270" name="return" description="The escaped float" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1278">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1303" package="Flourish">
        <name>escapeIdentifier</name>
        <full_name>escapeIdentifier</full_name>
        <docblock line="1297">
          <description><![CDATA[Escapes an identifier for use in SQL, necessary for reserved words]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1297" name="param" description="The identifier to escape" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1297" name="return" description="The escaped identifier" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1303">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1325" package="Flourish">
        <name>escapeInteger</name>
        <full_name>escapeInteger</full_name>
        <docblock line="1317">
          <description><![CDATA[Escapes an integer for use in SQL]]></description>
          <long-description><![CDATA[<p>A <code>NULL</code> or invalid value will be returned as <code>'NULL'</code></p>]]></long-description>
          <tag line="1317" name="param" description="The integer to escape" type="integer" variable="$value">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1317" name="return" description="The escaped integer" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1325">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1348" package="Flourish">
        <name>escapeString</name>
        <full_name>escapeString</full_name>
        <docblock line="1340">
          <description><![CDATA[Escapes a string for use in SQL, includes surrounding quotes]]></description>
          <long-description><![CDATA[<p>A <code>NULL</code> value will be returned as <code>'NULL'</code>.</p>]]></long-description>
          <tag line="1340" name="param" description="The string to escape" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1340" name="return" description="The escaped string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1348">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1446" package="Flourish">
        <name>escapeSQL</name>
        <full_name>escapeSQL</full_name>
        <docblock line="1438">
          <description><![CDATA[Takes a SQL string and an array of values and replaces the placeholders with the value]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1438" name="param" description="The SQL string containing placeholders" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1438" name="param" description="An array of values to escape into the SQL" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1438" name="param" description="If %% should be translated to % - this should only be done once processing of the string is done" type="boolean" variable="$unescape_percent">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1438" name="return" description="The SQL with the values escaped into it" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1446">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1446">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1446">
          <name>$unescape_percent</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1535" package="Flourish">
        <name>escapeTime</name>
        <full_name>escapeTime</full_name>
        <docblock line="1527">
          <description><![CDATA[Escapes a time for use in SQL, includes surrounding quotes]]></description>
          <long-description><![CDATA[<p>A <code>NULL</code> or invalid value will be returned as <code>'NULL'</code></p>]]></long-description>
          <tag line="1527" name="param" description="The time to escape" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1527" name="return" description="The escaped time" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1535">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1564" package="Flourish">
        <name>escapeTimestamp</name>
        <full_name>escapeTimestamp</full_name>
        <docblock line="1556">
          <description><![CDATA[Escapes a timestamp for use in SQL, includes surrounding quotes]]></description>
          <long-description><![CDATA[<p>A <code>NULL</code> or invalid value will be returned as <code>'NULL'</code></p>]]></long-description>
          <tag line="1556" name="param" description="The timestamp to escape" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1556" name="return" description="The escaped timestamp" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1564">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1588" package="Flourish">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="1580">
          <description><![CDATA[Executes one or more SQL queries without returning any results]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1580" name="param" description="One or more SQL statements in a string or an fStatement prepared statement" type="string|\fStatement" variable="$statement">
            <type by_reference="false">string</type>
            <type by_reference="false">\fStatement</type>
          </tag>
          <tag line="1580" name="param" description="The optional value(s) to place into any placeholders in the SQL - see ::escape() for details" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1580" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1580" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1588">
          <name>$statement</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1613" package="Flourish">
        <name>extractStrings</name>
        <full_name>extractStrings</full_name>
        <docblock line="1606">
          <description><![CDATA[Pulls quoted strings out into the values array for simpler processing]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1606" name="param" description="The parts of the SQL - alternating SQL and quoted strings" type="array" variable="$parts">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1606" name="param" description="&amp;$values The value to be escaped into the SQL" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1606" name="return" description="The SQL with all quoted string values extracted into the `$values` array" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1613">
          <name>$parts</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1613">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1648" package="Flourish">
        <name>getConnection</name>
        <full_name>getConnection</full_name>
        <docblock line="1643">
          <description><![CDATA[Returns the database connection resource or object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1643" name="return" description="The database connection" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1660" package="Flourish">
        <name>getDatabase</name>
        <full_name>getDatabase</full_name>
        <docblock line="1655">
          <description><![CDATA[Gets the name of the database currently connected to]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1655" name="return" description="The name of the database currently connected to" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1673" package="Flourish">
        <name>getExtension</name>
        <full_name>getExtension</full_name>
        <docblock line="1666">
          <description><![CDATA[Gets the php extension being used]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1666" name="internal" description=""/>
          <tag line="1666" name="return" description="The php extension used for database interaction" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1684" package="Flourish">
        <name>getHost</name>
        <full_name>getHost</full_name>
        <docblock line="1679">
          <description><![CDATA[Gets the host for this database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1679" name="return" description="The host" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1695" package="Flourish">
        <name>getPort</name>
        <full_name>getPort</full_name>
        <docblock line="1690">
          <description><![CDATA[Gets the port for this database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1690" name="return" description="The port" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1706" package="Flourish">
        <name>getSQLTranslation</name>
        <full_name>getSQLTranslation</full_name>
        <docblock line="1701">
          <description><![CDATA[Gets the fSQLTranslation object used for translated queries]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1701" name="return" description="The SQL translation object" type="\fSQLTranslation">
            <type by_reference="false">\fSQLTranslation</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1718" package="Flourish">
        <name>getType</name>
        <full_name>getType</full_name>
        <docblock line="1713">
          <description><![CDATA[Gets the database type]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1713" name="return" description="The database type: `'mssql'`, `'mysql'`, `'postgresql'` or `'sqlite'`" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1729" package="Flourish">
        <name>getUsername</name>
        <full_name>getUsername</full_name>
        <docblock line="1724">
          <description><![CDATA[Gets the username for this database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1724" name="return" description="The username" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1740" package="Flourish">
        <name>getVersion</name>
        <full_name>getVersion</full_name>
        <docblock line="1735">
          <description><![CDATA[Gets the version of the database system]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1735" name="return" description="The database system version" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1784" package="Flourish">
        <name>handleAutoIncrementedValue</name>
        <full_name>handleAutoIncrementedValue</full_name>
        <docblock line="1777">
          <description><![CDATA[Will grab the auto incremented value from the last query (if one exists)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1777" name="param" description="The result object for the query" type="\fResult" variable="$result">
            <type by_reference="false">\fResult</type>
          </tag>
          <tag line="1777" name="param" description="Only applicable for `pdo`, `oci8` and `sqlsrv` extentions or `mysqli` prepared statements - this is either the `PDOStatement` object, `mysqli_stmt` object or the `oci8` or `sqlsrv` resource" type="mixed" variable="$resource">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1777" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1784">
          <name>$result</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1784">
          <name>$resource</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="2008" package="Flourish">
        <name>handleConnectionErrors</name>
        <full_name>handleConnectionErrors</full_name>
        <docblock line="2002">
          <description><![CDATA[Handles connection errors]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2002" name="param" description="An array or string of error information" type="array|string" variable="$errors">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="2002" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="2008">
          <name>$errors</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="2083" package="Flourish">
        <name>handleErrors</name>
        <full_name>handleErrors</full_name>
        <docblock line="2077">
          <description><![CDATA[Handles a PHP error to extract error information for the mssql extension]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2077" name="param" description="An array of error information from fCore::stopErrorCapture()" type="array" variable="$errors">
            <type by_reference="false">array</type>
          </tag>
          <tag line="2077" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="2083">
          <name>$errors</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="2107" package="Flourish">
        <name>handleTransactionQueries</name>
        <full_name>handleTransactionQueries</full_name>
        <docblock line="2100">
          <description><![CDATA[Makes sure each database and extension handles BEGIN, COMMIT and ROLLBACK]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2100" name="param" description="&amp;$statement The SQL to check for a transaction query" type="string|\fStatement" variable="$statement">
            <type by_reference="false">string</type>
            <type by_reference="false">\fStatement</type>
          </tag>
          <tag line="2100" name="param" description="The type of result object to create" type="string" variable="$result_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2100" name="return" description="`FALSE` if normal processing should continue, otherwise an object of the type $result_class" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="2107">
          <name>$statement</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2107">
          <name>$result_class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2314" package="Flourish">
        <name>inject</name>
        <full_name>inject</full_name>
        <docblock line="2306">
          <description><![CDATA[Injects an fSQLTranslation object to handle translation]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2306" name="internal" description=""/>
          <tag line="2306" name="param" description="The SQL translation object" type="\fSQLTranslation" variable="$sql_translation">
            <type by_reference="false">\fSQLTranslation</type>
          </tag>
          <tag line="2306" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="2314">
          <name>$sql_translation</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2325" package="Flourish">
        <name>isInsideTransaction</name>
        <full_name>isInsideTransaction</full_name>
        <docblock line="2320">
          <description><![CDATA[Will indicate if a transaction is currently in progress]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2320" name="return" description="If a transaction has been started and not yet rolled back or committed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="2336" package="Flourish">
        <name>makeCachePrefix</name>
        <full_name>makeCachePrefix</full_name>
        <docblock line="2331">
          <description><![CDATA[Creates a unique cache prefix to help prevent cache conflicts]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2331" name="return" description="The cache prefix to use" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="2364" package="Flourish">
        <name>perform</name>
        <full_name>perform</full_name>
        <docblock line="2357">
          <description><![CDATA[Executes a SQL statement]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2357" name="param" description="The statement to perform" type="string|\fStatement" variable="$statement">
            <type by_reference="false">string</type>
            <type by_reference="false">\fStatement</type>
          </tag>
          <tag line="2357" name="param" description="The parameters for prepared statements" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="2357" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="2364">
          <name>$statement</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2364">
          <name>$params</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="2453" package="Flourish">
        <name>performQuery</name>
        <full_name>performQuery</full_name>
        <docblock line="2445">
          <description><![CDATA[Executes an SQL query]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2445" name="param" description="The statement to perform" type="string|\fStatement" variable="$statement">
            <type by_reference="false">string</type>
            <type by_reference="false">\fStatement</type>
          </tag>
          <tag line="2445" name="param" description="The result object for the query" type="\fResult" variable="$result">
            <type by_reference="false">\fResult</type>
          </tag>
          <tag line="2445" name="param" description="The parameters for prepared statements" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="2445" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="2453">
          <name>$statement</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2453">
          <name>$result</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2453">
          <name>$params</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="2613" package="Flourish">
        <name>performUnbufferedQuery</name>
        <full_name>performUnbufferedQuery</full_name>
        <docblock line="2605">
          <description><![CDATA[Executes an unbuffered SQL query]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2605" name="param" description="The statement to perform" type="string|\fStatement" variable="$statement">
            <type by_reference="false">string</type>
            <type by_reference="false">\fStatement</type>
          </tag>
          <tag line="2605" name="param" description="The result object for the query" type="\fUnbufferedResult" variable="$result">
            <type by_reference="false">\fUnbufferedResult</type>
          </tag>
          <tag line="2605" name="param" description="The parameters for prepared statements" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="2605" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="2613">
          <name>$statement</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2613">
          <name>$result</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2613">
          <name>$params</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2662" package="Flourish">
        <name>prepare</name>
        <full_name>prepare</full_name>
        <docblock line="2652">
          <description><![CDATA[Prepares a single fStatement object to execute prepared statements]]></description>
          <long-description><![CDATA[<p>Identifier placeholders (%r) are not supported with prepared statements.
In addition, multiple values can not be escaped by a placeholder - only
a single value can be provided.</p>]]></long-description>
          <tag line="2652" name="param" description="The SQL to prepare" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2652" name="return" description="A prepared statement object that can be passed to ::query(), ::unbufferedQuery() or ::execute()" type="\fStatement">
            <type by_reference="false">\fStatement</type>
          </tag>
        </docblock>
        <argument line="2662">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="2679" package="Flourish">
        <name>prepareStatement</name>
        <full_name>prepareStatement</full_name>
        <docblock line="2668">
          <description><![CDATA[Prepares a single fStatement object to execute prepared statements]]></description>
          <long-description><![CDATA[<p>Identifier placeholders (%r) are not supported with prepared statements.
In addition, multiple values can not be escaped by a placeholder - only
a single value can be provided.</p>]]></long-description>
          <tag line="2668" name="param" description="The SQL to prepare" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2668" name="param" description="If the SQL should be translated using fSQLTranslation" type="boolean" variable="$translate">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="2668" name="return" description="A prepare statement object that can be passed to ::query(), ::unbufferedQuery() or ::execute()" type="\fStatement">
            <type by_reference="false">\fStatement</type>
          </tag>
        </docblock>
        <argument line="2679">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2679">
          <name>$translate</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2775" package="Flourish">
        <name>preprocess</name>
        <full_name>preprocess</full_name>
        <docblock line="2764">
          <description><![CDATA[Preprocesses SQL by escaping values, spliting queries, cleaning escaped semicolons, fixing backslashed single quotes and translating]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2764" name="internal" description=""/>
          <tag line="2764" name="param" description="The SQL to process" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2764" name="param" description="Literal values to escape into the SQL" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="2764" name="param" description="If the SQL should be translated" type="boolean" variable="$translate">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="2764" name="param" description="&amp;$rollback_queries MySQL doesn't allow transactions around `ALTER TABLE` statements, and some of those require multiple statements, so this is an array of &quot;undo&quot; SQL statements" type="array" variable="$rollback_queries">
            <type by_reference="false">array</type>
          </tag>
          <tag line="2764" name="return" description="The split out SQL queries, queries that have been translated will have a string key of a number, `:` and the original SQL, non-translated SQL will have a numeric key" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="2775">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2775">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2775">
          <name>$translate</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2775">
          <name>$rollback_queries</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2922" package="Flourish">
        <name>query</name>
        <full_name>query</full_name>
        <docblock line="2914">
          <description><![CDATA[Executes one or more SQL queries and returns the result(s)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2914" name="param" description="One or more SQL statements in a string or a single fStatement prepared statement" type="string|\fStatement" variable="$statement">
            <type by_reference="false">string</type>
            <type by_reference="false">\fStatement</type>
          </tag>
          <tag line="2914" name="param" description="The optional value(s) to place into any placeholders in the SQL - see ::escape() for details" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="2914" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="2914" name="return" description="The fResult object(s) for the query" type="\fResult|array">
            <type by_reference="false">\fResult</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="2922">
          <name>$statement</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2978" package="Flourish">
        <name>registerHookCallback</name>
        <full_name>registerHookCallback</full_name>
        <docblock line="2942">
          <description><![CDATA[Registers a callback for one of the various query hooks - multiple callbacks can be registered for each hook]]></description>
          <long-description><![CDATA[<p>The following hooks are available:
 - <code>'unmodified'</code>: The original SQL passed to fDatabase, for prepared statements this is called just once before the fStatement object is created
 - <code>'extracted'</code>: The SQL after all non-empty strings have been extracted and replaced with ordered sprintf-style placeholders
 - <code>'run'</code>: After the SQL has been run</p>

<p>Methods for the <code>'unmodified'</code> hook should have the following signature:</p>

<ul>
<li><strong><code>$database</code></strong>:  The fDatabase instance</li>
<li><strong><code>&amp;$sql</code></strong>:      The original, unedited SQL</li>
<li><strong><code>&amp;$values</code></strong>:   The values to be escaped into the placeholders in the SQL</li>
</ul>

<p>Methods for the <code>'extracted'</code> hook should have the following signature:</p>

<ul>
<li><strong><code>$database</code></strong>:  The fDatabase instance</li>
<li><strong><code>&amp;$sql</code></strong>:      The SQL with all strings removed and replaced with <code>%1$s</code>-style placeholders</li>
<li><strong><code>&amp;$values</code></strong>:   The values to be escaped into the placeholders in the SQL</li>
</ul>

<p>The <code>extracted</code> hook is the best place to modify the SQL since there is
no risk of breaking string literals. Please note that there may be empty
strings (<code>''</code>) present in the SQL since some databases treat those as
<code>NULL</code>.</p>

<p>Methods for the <code>'run'</code> hook should have the following signature:</p>

<ul>
<li><strong><code>$database</code></strong>:    The fDatabase instance</li>
<li><strong><code>$query</code></strong>:       The (string) SQL or <code>array(0 =&gt; {fStatement object}, 1 =&gt; {values array})</code></li>
<li><strong><code>$query_time</code></strong>:  The (float) number of seconds the query took</li>
<li><strong><code>$result</code></strong>       The fResult or fUnbufferedResult object, or <code>FALSE</code> if no result</li>
</ul>]]></long-description>
          <tag line="2942" name="param" description="The hook to register for" type="string" variable="$hook">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2942" name="param" description="The callback to register - see the method description for details about the method signature" type="callback" variable="$callback">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="2942" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="2978">
          <name>$hook</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2978">
          <name>$callback</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="3005" package="Flourish">
        <name>run</name>
        <full_name>run</full_name>
        <docblock line="2998">
          <description><![CDATA[Runs a single statement and times it, removes any old unbuffered queries before starting]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2998" name="param" description="The SQL statement or prepared statement to execute" type="string|\fStatement" variable="$statement">
            <type by_reference="false">string</type>
            <type by_reference="false">\fStatement</type>
          </tag>
          <tag line="2998" name="param" description="The type of result object to return, fResult or fUnbufferedResult" type="string" variable="$result_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2998" name="return" description="The result for the query" type="\fResult|\fUnbufferedResult">
            <type by_reference="false">\fResult</type>
            <type by_reference="false">\fUnbufferedResult</type>
          </tag>
        </docblock>
        <argument line="3005">
          <name>$statement</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="3005">
          <name>$result_type</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="3005">
          <name>$params</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="3085" package="Flourish">
        <name>runRollbackStatements</name>
        <full_name>runRollbackStatements</full_name>
        <docblock line="3074">
          <description><![CDATA[Takes an array of rollback statements to undo part of a set of queries which involve one that failed]]></description>
          <long-description><![CDATA[<p>This is only used for MySQL since it is the only database that does not
support transactions about <code>ALTER TABLE</code> statements, but that also
requires more than one query to accomplish many <code>ALTER TABLE</code> tasks.</p>]]></long-description>
          <tag line="3074" name="param" description="The SQL statements used to rollback `ALTER TABLE` statements" type="array" variable="$rollback_statements">
            <type by_reference="false">array</type>
          </tag>
          <tag line="3074" name="param" description="The number query that failed - this is used to determine which rollback statements to run" type="integer" variable="$start_number">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="3074" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="3085">
          <name>$rollback_statements</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="3085">
          <name>$start_number</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="3103" package="Flourish">
        <name>scalarize</name>
        <full_name>scalarize</full_name>
        <docblock line="3097">
          <description><![CDATA[Turns an array possibly containing objects into an array of all strings]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="3097" name="param" description="The array of values to scalarize" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="3097" name="return" description="The scalarized values" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="3103">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="3127" package="Flourish">
        <name>setAffectedRows</name>
        <full_name>setAffectedRows</full_name>
        <docblock line="3120">
          <description><![CDATA[Sets the number of rows affected by the query]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="3120" name="param" description="The result object for the query" type="\fResult" variable="$result">
            <type by_reference="false">\fResult</type>
          </tag>
          <tag line="3120" name="param" description="Only applicable for `ibm_db2`, `pdo`, `oci8` and `sqlsrv` extentions or `mysqli` prepared statements - this is either the `PDOStatement` object, `mysqli_stmt` object or the `oci8` or `sqlsrv` resource" type="mixed" variable="$resource">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="3120" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="3127">
          <name>$result</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="3127">
          <name>$resource</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="3178" package="Flourish">
        <name>setReturnedRows</name>
        <full_name>setReturnedRows</full_name>
        <docblock line="3172">
          <description><![CDATA[Sets the number of rows returned by the query]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="3172" name="param" description="The result object for the query" type="\fResult" variable="$result">
            <type by_reference="false">\fResult</type>
          </tag>
          <tag line="3172" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="3178">
          <name>$result</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="3205" package="Flourish">
        <name>splitSQL</name>
        <full_name>splitSQL</full_name>
        <docblock line="3198">
          <description><![CDATA[Splits SQL into pieces of SQL and quoted strings]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="3198" name="param" description="The SQL to split" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="3198" name="param" description="&amp;$placeholders The number of placeholders in the SQL" type="integer" variable="$placeholders">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="3198" name="return" description="The pieces" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="3205">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="3205">
          <name>$placeholders</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="3263" package="Flourish">
        <name>translatedExecute</name>
        <full_name>translatedExecute</full_name>
        <docblock line="3255">
          <description><![CDATA[Translates one or more SQL statements using fSQLTranslation and executes them without returning any results]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="3255" name="param" description="One or more SQL statements" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="3255" name="param" description="The optional value(s) to place into any placeholders in the SQL - see ::escape() for details" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="3255" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="3255" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="3263">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="3297" package="Flourish">
        <name>translatedPrepare</name>
        <full_name>translatedPrepare</full_name>
        <docblock line="3287">
          <description><![CDATA[Translates a SQL statement and creates an fStatement object from it]]></description>
          <long-description><![CDATA[<p>Identifier placeholders (%r) are not supported with prepared statements.
In addition, multiple values can not be escaped by a placeholder - only
a single value can be provided.</p>]]></long-description>
          <tag line="3287" name="param" description="The SQL to prepare" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="3287" name="return" description="A prepared statement object that can be passed to ::query(), ::unbufferedQuery() or ::execute()" type="\fStatement">
            <type by_reference="false">\fStatement</type>
          </tag>
        </docblock>
        <argument line="3297">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="3311" package="Flourish">
        <name>translatedQuery</name>
        <full_name>translatedQuery</full_name>
        <docblock line="3303">
          <description><![CDATA[Translates one or more SQL statements using fSQLTranslation and executes them]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="3303" name="param" description="One or more SQL statements" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="3303" name="param" description="The optional value(s) to place into any placeholders in the SQL - see ::escape() for details" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="3303" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="3303" name="return" description="The fResult object(s) for the query" type="\fResult|array">
            <type by_reference="false">\fResult</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="3311">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="3355" package="Flourish">
        <name>unbufferedQuery</name>
        <full_name>unbufferedQuery</full_name>
        <docblock line="3343">
          <description><![CDATA[Executes a single SQL statement in unbuffered mode.]]></description>
          <long-description><![CDATA[<p>This is optimal for
large results sets since it does not load the whole result set into
memory first. The gotcha is that only one unbuffered result can exist at
one time. If another unbuffered query is executed, the old result will
be deleted.</p>]]></long-description>
          <tag line="3343" name="param" description="A single SQL statement" type="string|\fStatement" variable="$statement">
            <type by_reference="false">string</type>
            <type by_reference="false">\fStatement</type>
          </tag>
          <tag line="3343" name="param" description="The optional value(s) to place into any placeholders in the SQL - see ::escape() for details" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="3343" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="3343" name="return" description="The result object for the unbuffered query" type="\fUnbufferedResult">
            <type by_reference="false">\fUnbufferedResult</type>
          </tag>
        </docblock>
        <argument line="3355">
          <name>$statement</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="3394" package="Flourish">
        <name>unbufferedTranslatedQuery</name>
        <full_name>unbufferedTranslatedQuery</full_name>
        <docblock line="3382">
          <description><![CDATA[Translates the SQL statement using fSQLTranslation and then executes it
in unbuffered mode.]]></description>
          <long-description><![CDATA[<p>This is optimal for large results sets since it does
not load the whole result set into memory first. The gotcha is that only
one unbuffered result can exist at one time. If another unbuffered query
is executed, the old result will be deleted.</p>]]></long-description>
          <tag line="3382" name="param" description="A single SQL statement" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="3382" name="param" description="The optional value(s) to place into any placeholders in the SQL - see ::escape() for details" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="3382" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="3382" name="return" description="The result object for the unbuffered query" type="\fUnbufferedResult">
            <type by_reference="false">\fUnbufferedResult</type>
          </tag>
        </docblock>
        <argument line="3394">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="3450" package="Flourish">
        <name>unescape</name>
        <full_name>unescape</full_name>
        <docblock line="3432">
          <description><![CDATA[Unescapes a value coming out of a database based on its data type]]></description>
          <long-description><![CDATA[<p>The valid data types are:</p>

<ul>
<li><code>'blob'</code> (or <code>'%l'</code>)</li>
<li><code>'boolean'</code> (or <code>'%b'</code>)</li>
<li><code>'date'</code> (or <code>'%d'</code>)</li>
<li><code>'float'</code> (or <code>'%f'</code>)</li>
<li><code>'integer'</code> (or <code>'%i'</code>)</li>
<li><code>'string'</code> (also <code>'%s'</code>, <code>'varchar'</code>, <code>'char'</code> or <code>'text'</code>)</li>
<li><code>'time'</code> (or <code>'%t'</code>)</li>
<li><code>'timestamp'</code> (or <code>'%p'</code>)</li>
</ul>]]></long-description>
          <tag line="3432" name="param" description="The data type being unescaped - see method description for valid values" type="string" variable="$data_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="3432" name="param" description="The value or array of values to unescape" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="3432" name="return" description="The unescaped value" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="3450">
          <name>$data_type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="3450">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="3524" package="Flourish">
        <name>unescapeBlob</name>
        <full_name>unescapeBlob</full_name>
        <docblock line="3518">
          <description><![CDATA[Unescapes a blob coming out of the database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="3518" name="param" description="The value to unescape" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="3518" name="return" description="The binary data" type="\binary">
            <type by_reference="false">\binary</type>
          </tag>
        </docblock>
        <argument line="3524">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="3546" package="Flourish">
        <name>unescapeBoolean</name>
        <full_name>unescapeBoolean</full_name>
        <docblock line="3540">
          <description><![CDATA[Unescapes a boolean coming out of the database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="3540" name="param" description="The value to unescape" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="3540" name="return" description="The boolean" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="3546">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="3558" package="Flourish">
        <name>unescapeDate</name>
        <full_name>unescapeDate</full_name>
        <docblock line="3552">
          <description><![CDATA[Unescapes a date coming out of the database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="3552" name="param" description="The value to unescape" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="3552" name="return" description="The date in YYYY-MM-DD format" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="3558">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="3575" package="Flourish">
        <name>unescapeTime</name>
        <full_name>unescapeTime</full_name>
        <docblock line="3569">
          <description><![CDATA[Unescapes a time coming out of the database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="3569" name="param" description="The value to unescape" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="3569" name="return" description="The time in `HH:MM:SS` format" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="3575">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="3592" package="Flourish">
        <name>unescapeTimestamp</name>
        <full_name>unescapeTimestamp</full_name>
        <docblock line="3586">
          <description><![CDATA[Unescapes a timestamp coming out of the database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="3586" name="param" description="The value to unescape" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="3586" name="return" description="The timestamp in `YYYY-MM-DD HH:MM:SS` format" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="3592">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fDatabase.php</error>
      <notice line="96" code="50013">Parameter $component could not be found in compose()</notice>
      <notice line="96" code="50013">Parameter  could not be found in compose()</notice>
      <notice line="1033" code="50013">Parameter  could not be found in escape()</notice>
      <notice line="1580" code="50013">Parameter $value could not be found in execute()</notice>
      <notice line="1580" code="50013">Parameter  could not be found in execute()</notice>
      <notice line="2914" code="50013">Parameter $value could not be found in query()</notice>
      <notice line="2914" code="50013">Parameter  could not be found in query()</notice>
      <error line="2998" code="50015">Argument $params is missing from the Docblock of run()</error>
      <notice line="3255" code="50013">Parameter $value could not be found in translatedExecute()</notice>
      <notice line="3255" code="50013">Parameter  could not be found in translatedExecute()</notice>
      <notice line="3303" code="50013">Parameter $value could not be found in translatedQuery()</notice>
      <notice line="3303" code="50013">Parameter  could not be found in translatedQuery()</notice>
      <notice line="3343" code="50013">Parameter $value could not be found in unbufferedQuery()</notice>
      <notice line="3343" code="50013">Parameter  could not be found in unbufferedQuery()</notice>
      <notice line="3382" code="50013">Parameter $value could not be found in unbufferedTranslatedQuery()</notice>
      <notice line="3382" code="50013">Parameter  could not be found in unbufferedTranslatedQuery()</notice>
    </parse_markers>
  </file>
  <file path="php/flourish/fUnbufferedResult.php" hash="0c8ba83e98437489711fcd26715fb4e4" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="27" package="Flourish">
      <extends/>
      <implements>\Iterator</implements>
      <name>fUnbufferedResult</name>
      <full_name>\fUnbufferedResult</full_name>
      <docblock line="2">
        <description><![CDATA[Representation of an unbuffered result from a query against the fDatabase class]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2011 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fUnbufferedResult" link="http://flourishlib.com/fUnbufferedResult"/>
        <tag line="2" name="version" description="1.0.0b13"/>
        <tag line="2" name="changes" description="1.0.0b13  Added a workaround for iconv having issues in MAMP 1.9.4+ [wb, 2011-07-26]"/>
        <tag line="2" name="changes" description="1.0.0b12  Fixed MSSQL to have a properly reset row array, added ::silenceNotices(), fixed pdo_dblib on Windows when using the Microsoft DBLib driver [wb, 2011-05-09]"/>
        <tag line="2" name="changes" description="1.0.0b11  Fixed some bugs with the mysqli extension and prepared statements [wb, 2010-08-28]"/>
        <tag line="2" name="changes" description="1.0.0b10  Backwards Compatibility Break - removed ODBC support [wb, 2010-07-31]"/>
        <tag line="2" name="changes" description="1.0.0b9   Added IBM DB2 support [wb, 2010-04-13]"/>
        <tag line="2" name="changes" description="1.0.0b8   Added support for prepared statements [wb, 2010-03-02]"/>
        <tag line="2" name="changes" description="1.0.0b7   Fixed a bug with decoding MSSQL national column when using an ODBC connection [wb, 2009-09-18]"/>
        <tag line="2" name="changes" description="1.0.0b6   Added the method ::unescape(), changed ::tossIfNoRows() to return the object for chaining [wb, 2009-08-12]"/>
        <tag line="2" name="changes" description="1.0.0b5   Added the method ::asObjects() to allow for returning objects instead of associative arrays [wb, 2009-06-23]"/>
        <tag line="2" name="changes" description="1.0.0b4   Fixed a bug with not properly converting SQL Server text to UTF-8 [wb, 2009-06-18]"/>
        <tag line="2" name="changes" description="1.0.0b3   Added support for Oracle, various bug fixes [wb, 2009-05-04]"/>
        <tag line="2" name="changes" description="1.0.0b2   Updated for new fCore API [wb, 2009-02-16]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2008-05-07]"/>
      </docblock>
      <property final="false" static="true" visibility="private" line="34" namespace="global" package="Sutra">
        <name>$silence_notices</name>
        <default><![CDATA[FALSE]]></default>
        <docblock line="29">
          <description><![CDATA[If notices should be hidden for broken database drivers]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="29" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="92" namespace="global" package="Sutra">
        <name>$character_set</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="87">
          <description><![CDATA[The character set to transcode from for MSSQL queries]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="87" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="99" namespace="global" package="Sutra">
        <name>$current_row</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="94">
          <description><![CDATA[The current row of the result set]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="94" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="106" namespace="global" package="Sutra">
        <name>$database</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="101">
          <description><![CDATA[The database object the result was created from]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="101" name="var" description="" type="\fDatabase">
            <type by_reference="false">\fDatabase</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="113" namespace="global" package="Sutra">
        <name>$extension</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="108">
          <description><![CDATA[The database extension]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="108" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="120" namespace="global" package="Sutra">
        <name>$output_objects</name>
        <default><![CDATA[FALSE]]></default>
        <docblock line="115">
          <description><![CDATA[If rows should be converted to objects]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="115" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="127" namespace="global" package="Sutra">
        <name>$pointer</name>
        <default><![CDATA[]]></default>
        <docblock line="122">
          <description><![CDATA[The position of the pointer in the result set]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="122" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="134" namespace="global" package="Sutra">
        <name>$result</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="129">
          <description><![CDATA[The result resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="129" name="var" description="" type="resource">
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="141" namespace="global" package="Sutra">
        <name>$sql</name>
        <default><![CDATA['']]></default>
        <docblock line="136">
          <description><![CDATA[The SQL query]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="136" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="148" namespace="global" package="Sutra">
        <name>$unescape_map</name>
        <default><![CDATA[array()]]></default>
        <docblock line="143">
          <description><![CDATA[Holds the data types for each column to allow for on-the-fly unescaping]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="143" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="155" namespace="global" package="Sutra">
        <name>$untranslated_sql</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="150">
          <description><![CDATA[The SQL from before translation]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="150" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="45" package="Flourish">
        <name>compose</name>
        <full_name>compose</full_name>
        <docblock line="37">
          <description><![CDATA[Composes text using fText if loaded]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="37" name="param" description="The message to compose" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="37" name="param" description="A string or number to insert into the message" type="mixed" variable="$component">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="37" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="37" name="return" description="The composed and possible translated message" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="45">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="70" package="Flourish">
        <name>iconv</name>
        <full_name>iconv</full_name>
        <docblock line="60">
          <description><![CDATA[This works around a bug in MAMP 1.9.4+ and PHP 5.3 where iconv()
does not seem to properly assign the return value to a variable, but
does work when returning the value.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="60" name="param" description="The incoming character encoding" type="string" variable="$in_charset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="60" name="param" description="The outgoing character encoding" type="string" variable="$out_charset">
            <type by_reference="false">string</type>
          </tag>
          <tag line="60" name="param" description="The string to convert" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="60" name="return" description="The converted string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="70">
          <name>$in_charset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="70">
          <name>$out_charset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="70">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="81" package="Flourish">
        <name>silenceNotices</name>
        <full_name>silenceNotices</full_name>
        <docblock line="76">
          <description><![CDATA[Turns off notices about broken database extensions much as the MSSQL DBLib driver]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="76" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="167" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="158">
          <description><![CDATA[Configures the result set]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="158" name="internal" description=""/>
          <tag line="158" name="param" description="The database object this result was created from" type="\fDatabase" variable="$database">
            <type by_reference="false">\fDatabase</type>
          </tag>
          <tag line="158" name="param" description="MSSQL only: the character set to transcode from since MSSQL doesn't do UTF-8" type="string" variable="$character_set">
            <type by_reference="false">string</type>
          </tag>
          <tag line="158" name="return" description="" type="\fUnbufferedResult">
            <type by_reference="false">\fUnbufferedResult</type>
          </tag>
        </docblock>
        <argument line="167">
          <name>$database</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="167">
          <name>$character_set</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="188" package="Flourish">
        <name>__destruct</name>
        <full_name>__destruct</full_name>
        <docblock line="181">
          <description><![CDATA[Frees up the result object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="181" name="internal" description=""/>
          <tag line="181" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="254" package="Flourish">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="246">
          <description><![CDATA[All requests that hit this method should be requests for callbacks]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="246" name="internal" description=""/>
          <tag line="246" name="param" description="The method to create a callback for" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="246" name="return" description="The callback for the method requested" type="callback">
            <type by_reference="false">callback</type>
          </tag>
        </docblock>
        <argument line="254">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="265" package="Flourish">
        <name>advanceCurrentRow</name>
        <full_name>advanceCurrentRow</full_name>
        <docblock line="260">
          <description><![CDATA[Gets the next row from the result and assigns it to the current row]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="260" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="386" package="Flourish">
        <name>asObjects</name>
        <full_name>asObjects</full_name>
        <docblock line="381">
          <description><![CDATA[Sets the object to return rows as objects instead of associative arrays (the default)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="381" name="return" description="The result object, to allow for method chaining" type="\fUnbufferedResult">
            <type by_reference="false">\fUnbufferedResult</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="402" package="Flourish">
        <name>current</name>
        <full_name>current</full_name>
        <docblock line="393">
          <description><![CDATA[Returns the current row in the result set (required by iterator interface)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="393" name="throws" description="When the query did not return any rows" type="\fNoRowsException">
            <type by_reference="false">\fNoRowsException</type>
          </tag>
          <tag line="393" name="throws" description="When there are no rows left in the result" type="\fNoRemainingException">
            <type by_reference="false">\fNoRemainingException</type>
          </tag>
          <tag line="393" name="internal" description=""/>
          <tag line="393" name="return" description="The current row" type="array|\stdClass">
            <type by_reference="false">array</type>
            <type by_reference="false">\stdClass</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="432" package="Flourish">
        <name>decodeMSSQLNationalColumns</name>
        <full_name>decodeMSSQLNationalColumns</full_name>
        <docblock line="426">
          <description><![CDATA[Decodes national (unicode) character data coming out of MSSQL into UTF-8]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="426" name="param" description="The row from the database" type="array" variable="$row">
            <type by_reference="false">array</type>
          </tag>
          <tag line="426" name="return" description="The fixed row" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="432">
          <name>$row</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="463" package="Flourish">
        <name>fetchRow</name>
        <full_name>fetchRow</full_name>
        <docblock line="455">
          <description><![CDATA[Returns the row next row in the result set (where the pointer is currently assigned to)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="455" name="throws" description="When the query did not return any rows" type="\fNoRowsException">
            <type by_reference="false">\fNoRowsException</type>
          </tag>
          <tag line="455" name="throws" description="When there are no rows left in the result" type="\fNoRemainingException">
            <type by_reference="false">\fNoRemainingException</type>
          </tag>
          <tag line="455" name="return" description="The next row in the result" type="array|\stdClass">
            <type by_reference="false">array</type>
            <type by_reference="false">\stdClass</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="479" package="Flourish">
        <name>fixDblibMSSQLDriver</name>
        <full_name>fixDblibMSSQLDriver</full_name>
        <docblock line="473">
          <description><![CDATA[Warns the user about bugs in the DBLib driver for MSSQL, fixes some bugs]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="473" name="param" description="The row from the database" type="array" variable="$row">
            <type by_reference="false">array</type>
          </tag>
          <tag line="473" name="return" description="The fixed row" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="479">
          <name>$row</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="552" package="Flourish">
        <name>getResult</name>
        <full_name>getResult</full_name>
        <docblock line="545">
          <description><![CDATA[Returns the result]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="545" name="internal" description=""/>
          <tag line="545" name="return" description="The result of the query" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="565" package="Flourish">
        <name>getSQL</name>
        <full_name>getSQL</full_name>
        <docblock line="560">
          <description><![CDATA[Returns the SQL used in the query]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="560" name="return" description="The SQL used in the query" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="576" package="Flourish">
        <name>getUntranslatedSQL</name>
        <full_name>getUntranslatedSQL</full_name>
        <docblock line="571">
          <description><![CDATA[Returns the SQL as it was before translation]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="571" name="return" description="The SQL from before translation" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="591" package="Flourish">
        <name>key</name>
        <full_name>key</full_name>
        <docblock line="582">
          <description><![CDATA[Returns the current row number (required by iterator interface)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="582" name="throws" description="When the query did not return any rows" type="\fNoRowsException">
            <type by_reference="false">\fNoRowsException</type>
          </tag>
          <tag line="582" name="throws" description="When there are no rows left in the result" type="\fNoRemainingException">
            <type by_reference="false">\fNoRemainingException</type>
          </tag>
          <tag line="582" name="internal" description=""/>
          <tag line="582" name="return" description="The current row number" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="612" package="Flourish">
        <name>next</name>
        <full_name>next</full_name>
        <docblock line="603">
          <description><![CDATA[Advances to the next row in the result (required by iterator interface)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="603" name="throws" description="When the query did not return any rows" type="\fNoRowsException">
            <type by_reference="false">\fNoRowsException</type>
          </tag>
          <tag line="603" name="throws" description="When there are no rows left in the result" type="\fNoRemainingException">
            <type by_reference="false">\fNoRemainingException</type>
          </tag>
          <tag line="603" name="internal" description=""/>
          <tag line="603" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="632" package="Flourish">
        <name>rewind</name>
        <full_name>rewind</full_name>
        <docblock line="625">
          <description><![CDATA[Rewinds the query (required by iterator interface)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="625" name="internal" description=""/>
          <tag line="625" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="652" package="Flourish">
        <name>setResult</name>
        <full_name>setResult</full_name>
        <docblock line="644">
          <description><![CDATA[Sets the result from the query]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="644" name="internal" description=""/>
          <tag line="644" name="param" description="The result from the query" type="mixed" variable="$result">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="644" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="652">
          <name>$result</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="666" package="Flourish">
        <name>setSQL</name>
        <full_name>setSQL</full_name>
        <docblock line="658">
          <description><![CDATA[Sets the SQL used in the query]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="658" name="internal" description=""/>
          <tag line="658" name="param" description="The SQL used in the query" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="658" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="666">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="680" package="Flourish">
        <name>setUntranslatedSQL</name>
        <full_name>setUntranslatedSQL</full_name>
        <docblock line="672">
          <description><![CDATA[Sets the SQL from before translation]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="672" name="internal" description=""/>
          <tag line="672" name="param" description="The SQL from before translation" type="string" variable="$untranslated_sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="672" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="680">
          <name>$untranslated_sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="694" package="Flourish">
        <name>tossIfNoRows</name>
        <full_name>tossIfNoRows</full_name>
        <docblock line="686">
          <description><![CDATA[Throws an fNoResultException if the query did not return any rows]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="686" name="throws" description="When the query did not return any rows" type="\fNoRowsException">
            <type by_reference="false">\fNoRowsException</type>
          </tag>
          <tag line="686" name="param" description="The message to use for the exception if there are no rows in this result set" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="686" name="return" description="The result object, to allow for method chaining" type="\fUnbufferedResult">
            <type by_reference="false">\fUnbufferedResult</type>
          </tag>
        </docblock>
        <argument line="694">
          <name>$message</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="718" package="Flourish">
        <name>unescape</name>
        <full_name>unescape</full_name>
        <docblock line="709">
          <description><![CDATA[Sets the result object to unescape all values as they are retrieved from the object]]></description>
          <long-description><![CDATA[<p>The data types should be from the list of types supported by
fDatabase::unescape().</p>]]></long-description>
          <tag line="709" name="param" description="An associative array with column names as the keys and the data types as the values" type="array" variable="$column_data_type_map">
            <type by_reference="false">array</type>
          </tag>
          <tag line="709" name="return" description="The result object, to allow for method chaining" type="\fUnbufferedResult">
            <type by_reference="false">\fUnbufferedResult</type>
          </tag>
        </docblock>
        <argument line="718">
          <name>$column_data_type_map</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="738" package="Flourish">
        <name>valid</name>
        <full_name>valid</full_name>
        <docblock line="733">
          <description><![CDATA[Returns if the query has any rows left]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="733" name="return" description="If the iterator is still valid" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="756" package="Flourish">
        <name>validateState</name>
        <full_name>validateState</full_name>
        <docblock line="751">
          <description><![CDATA[Throws an exception if this object has been deconstructed already]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="751" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fUnbufferedResult.php</error>
      <notice line="37" code="50013">Parameter $component could not be found in compose()</notice>
      <notice line="37" code="50013">Parameter  could not be found in compose()</notice>
    </parse_markers>
  </file>
  <file path="php/flourish/fCRUD.php" hash="eac80fcb3520903a90fadef21c4e838d" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="19" package="Flourish">
      <extends/>
      <name>fCRUD</name>
      <full_name>\fCRUD</full_name>
      <docblock line="2">
        <description><![CDATA[Provides miscellaneous functionality for [http://en.wikipedia.org/wiki/Create,_read,_update_and_delete CRUD-like] pages]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2009 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fCRUD" link="http://flourishlib.com/fCRUD"/>
        <tag line="2" name="version" description="1.0.0b5"/>
        <tag line="2" name="changes" description="1.0.0b5  Updated class to use new fSession API [wb, 2009-10-23]"/>
        <tag line="2" name="changes" description="1.0.0b4  Updated class to use new fSession API [wb, 2009-05-08]"/>
        <tag line="2" name="changes" description="1.0.0b3  Backwards Compatiblity Break - moved ::printOption() to fHTML::printOption(), ::showChecked() to fHTML::showChecked(), ::removeListItems() and ::reorderListItems() to fException::splitMessage(), ::generateRequestToken() to fRequest::generateCSRFToken(), and ::validateRequestToken() to fRequest::validateCSRFToken() [wb, 2009-05-08]"/>
        <tag line="2" name="changes" description="1.0.0b2  Fixed a bug preventing loaded search values from being included in redirects [wb, 2009-03-18]"/>
        <tag line="2" name="changes" description="1.0.0b   The initial implementation [wb, 2007-06-14]"/>
      </docblock>
      <constant namespace="global" line="22" package="Flourish">
        <name>getColumnClass</name>
        <full_name>getColumnClass</full_name>
        <value><![CDATA['fCRUD::getColumnClass']]></value>
      </constant>
      <constant namespace="global" line="23" package="Flourish">
        <name>getRowClass</name>
        <full_name>getRowClass</full_name>
        <value><![CDATA['fCRUD::getRowClass']]></value>
      </constant>
      <constant namespace="global" line="24" package="Flourish">
        <name>getSearchValue</name>
        <full_name>getSearchValue</full_name>
        <value><![CDATA['fCRUD::getSearchValue']]></value>
      </constant>
      <constant namespace="global" line="25" package="Flourish">
        <name>getSortColumn</name>
        <full_name>getSortColumn</full_name>
        <value><![CDATA['fCRUD::getSortColumn']]></value>
      </constant>
      <constant namespace="global" line="26" package="Flourish">
        <name>getSortDirection</name>
        <full_name>getSortDirection</full_name>
        <value><![CDATA['fCRUD::getSortDirection']]></value>
      </constant>
      <constant namespace="global" line="27" package="Flourish">
        <name>printSortableColumn</name>
        <full_name>printSortableColumn</full_name>
        <value><![CDATA['fCRUD::printSortableColumn']]></value>
      </constant>
      <constant namespace="global" line="28" package="Flourish">
        <name>redirectWithLoadedValues</name>
        <full_name>redirectWithLoadedValues</full_name>
        <value><![CDATA['fCRUD::redirectWithLoadedValues']]></value>
      </constant>
      <constant namespace="global" line="29" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <value><![CDATA['fCRUD::reset']]></value>
      </constant>
      <property final="false" static="true" visibility="private" line="37" namespace="global" package="Sutra">
        <name>$loaded_values</name>
        <default><![CDATA[array()]]></default>
        <docblock line="32">
          <description><![CDATA[Any values that were loaded from the session, used for redirection]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="32" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="44" namespace="global" package="Sutra">
        <name>$row_number</name>
        <default><![CDATA[1]]></default>
        <docblock line="39">
          <description><![CDATA[The current row number for alternating rows]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="39" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="51" namespace="global" package="Sutra">
        <name>$search_values</name>
        <default><![CDATA[array()]]></default>
        <docblock line="46">
          <description><![CDATA[The values for a search form]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="46" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="58" namespace="global" package="Sutra">
        <name>$sort_column</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="53">
          <description><![CDATA[The column to sort by]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="53" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="65" namespace="global" package="Sutra">
        <name>$sort_direction</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="60">
          <description><![CDATA[The direction to sort]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="60" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="77" package="Flourish">
        <name>getColumnClass</name>
        <full_name>getColumnClass</full_name>
        <docblock line="68">
          <description><![CDATA[Return the string `'sorted'` if `$column` is the column that is currently being sorted by, otherwise returns `''`]]></description>
          <long-description><![CDATA[<p>This method will only be useful if used with the other sort methods
::printSortableColumn(), ::getSortColumn() and ::getSortDirection().</p>]]></long-description>
          <tag line="68" name="param" description="The column to check" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="68" name="return" description="The CSS class for the column, either `''` or `'sorted'`" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="77">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="92" package="Flourish">
        <name>getPreviousSearchValue</name>
        <full_name>getPreviousSearchValue</full_name>
        <docblock line="86">
          <description><![CDATA[Returns the previous values for the specified search field]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="86" name="param" description="The column to get the value for" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="86" name="return" description="The previous value" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="92">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="103" package="Flourish">
        <name>getPreviousSortColumn</name>
        <full_name>getPreviousSortColumn</full_name>
        <docblock line="98">
          <description><![CDATA[Return the previous sort column, if one exists]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="98" name="return" description="The previous sort column" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="114" package="Flourish">
        <name>getPreviousSortDirection</name>
        <full_name>getPreviousSortDirection</full_name>
        <docblock line="109">
          <description><![CDATA[Return the previous sort direction, if one exists]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="109" name="return" description="The previous sort direction" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="131" package="Flourish">
        <name>getRowClass</name>
        <full_name>getRowClass</full_name>
        <docblock line="120">
          <description><![CDATA[Returns a CSS class name for a row]]></description>
          <long-description><![CDATA[<p>Will return <code>'even'</code>, <code>'odd'</code>, or <code>'highlighted'</code> if the two parameters
are equal and not <code>NULL</code>. The first call to this method will return
the appropriate class concatenated with <code>' first'</code>.</p>]]></long-description>
          <tag line="120" name="param" description="The value from the row" type="mixed" variable="$row_value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="120" name="param" description="The value that was just added or updated" type="mixed" variable="$affected_value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="120" name="return" description="The css class" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="131">
          <name>$row_value</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="131">
          <name>$affected_value</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="159" package="Flourish">
        <name>getSearchValue</name>
        <full_name>getSearchValue</full_name>
        <docblock line="145">
          <description><![CDATA[Gets the current value of a search field]]></description>
          <long-description><![CDATA[<p>If a value is an empty string and no cast to is specified, the value will
become <code>NULL</code>.</p>

<p>If a query string of <code>?reset</code> is passed, all previous search values will
be erased.</p>]]></long-description>
          <tag line="145" name="param" description="The column that is being pulled back" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="145" name="param" description="The data type to cast to" type="string" variable="$cast_to">
            <type by_reference="false">string</type>
          </tag>
          <tag line="145" name="param" description="The default value" type="string" variable="$default">
            <type by_reference="false">string</type>
          </tag>
          <tag line="145" name="return" description="The current value" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="159">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="159">
          <name>$cast_to</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="159">
          <name>$default</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="185" package="Flourish">
        <name>getSortColumn</name>
        <full_name>getSortColumn</full_name>
        <docblock line="178">
          <description><![CDATA[Gets the current column to sort by, defaults to first one specified]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="178" name="param" description="The columns that can be sorted by, defaults to first" type="string" variable="$possible_column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="178" name="param" description="..." type="string" variable="">
            <type by_reference="false">string</type>
          </tag>
          <tag line="178" name="return" description="The column to sort by" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="185">
          <name>$possible_column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="216" package="Flourish">
        <name>getSortDirection</name>
        <full_name>getSortDirection</full_name>
        <docblock line="210">
          <description><![CDATA[Gets the current sort direction]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="210" name="param" description="The default direction, `'asc'` or `'desc'`" type="string" variable="$default_direction">
            <type by_reference="false">string</type>
          </tag>
          <tag line="210" name="return" description="The direction, `'asc'` or `'desc'`" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="216">
          <name>$default_direction</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="261" package="Flourish">
        <name>printSortableColumn</name>
        <full_name>printSortableColumn</full_name>
        <docblock line="235">
          <description><![CDATA[Prints a sortable column header `a` tag]]></description>
          <long-description><![CDATA[<p>The a tag will include the CSS class <code>'sortable_column'</code> and the
direction being sorted, <code>'asc'</code> or <code>'desc'</code>.</p>

<p>{{{</p>

<h1>!php</h1>

<p>fCRUD::printSortableColumn('name', 'Name');
}}}</p>

<p>would create the following HTML based on the page context</p>

<p>{{{</p>

<h1>!html</h1>

<p><!-- If name is the current sort column in the asc direction, the output would be -->
<a href="?sort=name&dir=desc" class="sorted_column asc">Name</a></p>

<p><!-- If name is not the current sort column, the output would be -->
<a href="?sort-name&dir=asc" class="sorted_column">Name</a>
}}}</p>]]></long-description>
          <tag line="235" name="param" description="The column to create the sortable header for" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="235" name="param" description="This will override the humanized version of the column" type="string" variable="$column_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="235" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="261">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="261">
          <name>$column_name</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="291" package="Flourish">
        <name>redirectWithLoadedValues</name>
        <full_name>redirectWithLoadedValues</full_name>
        <docblock line="286">
          <description><![CDATA[Checks to see if any values (search or sort) were loaded from the session, and if so redirects the user to the current URL with those values added]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="286" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="314" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="307">
          <description><![CDATA[Resets the configuration and data of the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="307" name="internal" description=""/>
          <tag line="307" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="333" package="Flourish">
        <name>setPreviousSearchValue</name>
        <full_name>setPreviousSearchValue</full_name>
        <docblock line="326">
          <description><![CDATA[Sets a value for a search field]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="326" name="param" description="The column to save the value for" type="string" variable="$column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="326" name="param" description="The value to save" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="326" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="333">
          <name>$column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="333">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="345" package="Flourish">
        <name>setPreviousSortColumn</name>
        <full_name>setPreviousSortColumn</full_name>
        <docblock line="339">
          <description><![CDATA[Set the sort column to be used on returning pages]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="339" name="param" description="The sort column to save" type="string" variable="$sort_column">
            <type by_reference="false">string</type>
          </tag>
          <tag line="339" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="345">
          <name>$sort_column</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="357" package="Flourish">
        <name>setPreviousSortDirection</name>
        <full_name>setPreviousSortDirection</full_name>
        <docblock line="351">
          <description><![CDATA[Set the sort direction to be used on returning pages]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="351" name="param" description="The sort direction to save" type="string" variable="$sort_direction">
            <type by_reference="false">string</type>
          </tag>
          <tag line="351" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="357">
          <name>$sort_direction</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="368" package="Flourish">
        <name>wasResetRequested</name>
        <full_name>wasResetRequested</full_name>
        <docblock line="363">
          <description><![CDATA[Indicates if a reset was requested for search values]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="363" name="return" description="If a reset was requested" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="380" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="375">
          <description><![CDATA[Prevent instantiation]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="375" name="return" description="" type="\fCRUD">
            <type by_reference="false">\fCRUD</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fCRUD.php</error>
      <notice line="178" code="50013">Parameter  could not be found in getSortColumn()</notice>
    </parse_markers>
  </file>
  <file path="php/flourish/fNumber.php" hash="cd7248519a4d1c8e2dbed48bee1f5d5b" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="17" package="Flourish">
      <extends/>
      <name>fNumber</name>
      <full_name>\fNumber</full_name>
      <docblock line="2">
        <description><![CDATA[Provides large/precise number support]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2008-2011 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fNumber" link="http://flourishlib.com/fNumber"/>
        <tag line="2" name="version" description="1.0.0b3"/>
        <tag line="2" name="changes" description="1.0.0b3  Added the `$remove_zero_fraction` parameter to ::format() [wb, 2011-02-02]"/>
        <tag line="2" name="changes" description="1.0.0b2  Fixed a bug with parsing decimal numbers in scientific notation [wb, 2010-04-13]"/>
        <tag line="2" name="changes" description="1.0.0b   The initial implementation [wb, 2008-07-21]"/>
      </docblock>
      <constant namespace="global" line="20" package="Flourish">
        <name>baseConvert</name>
        <full_name>baseConvert</full_name>
        <value><![CDATA['fNumber::baseConvert']]></value>
      </constant>
      <constant namespace="global" line="21" package="Flourish">
        <name>pi</name>
        <full_name>pi</full_name>
        <value><![CDATA['fNumber::pi']]></value>
      </constant>
      <constant namespace="global" line="22" package="Flourish">
        <name>registerFormatCallback</name>
        <full_name>registerFormatCallback</full_name>
        <value><![CDATA['fNumber::registerFormatCallback']]></value>
      </constant>
      <constant namespace="global" line="23" package="Flourish">
        <name>registerUnformatCallback</name>
        <full_name>registerUnformatCallback</full_name>
        <value><![CDATA['fNumber::registerUnformatCallback']]></value>
      </constant>
      <constant namespace="global" line="24" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <value><![CDATA['fNumber::reset']]></value>
      </constant>
      <property final="false" static="true" visibility="private" line="32" namespace="global" package="Sutra">
        <name>$format_callback</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="27">
          <description><![CDATA[A callback to process all values through]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="27" name="var" description="" type="callback">
            <type by_reference="false">callback</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="39" namespace="global" package="Sutra">
        <name>$unformat_callback</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="34">
          <description><![CDATA[A callback to process all values through]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="34" name="var" description="" type="callback">
            <type by_reference="false">callback</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="861" namespace="global" package="Sutra">
        <name>$scale</name>
        <default><![CDATA[]]></default>
        <docblock line="856">
          <description><![CDATA[The scale (number of digits after the decimal) of the number]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="856" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="868" namespace="global" package="Sutra">
        <name>$value</name>
        <default><![CDATA[]]></default>
        <docblock line="863">
          <description><![CDATA[The value of the number]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="863" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="50" package="Flourish">
        <name>baseConvert</name>
        <full_name>baseConvert</full_name>
        <docblock line="42">
          <description><![CDATA[Converts any positive integer between any two bases ranging from `2` to `16`]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="42" name="param" description="The positive integer to convert" type="\fNumber|string" variable="$number">
            <type by_reference="false">\fNumber</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="42" name="param" description="The base to convert from - must be between `2` and `16`" type="integer" variable="$from_base">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="42" name="param" description="The base to convert to - must be between `2` and `16`" type="integer" variable="$to_base">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="42" name="return" description="The number converted to the new base" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$number</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="50">
          <name>$from_base</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="50">
          <name>$to_base</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="137" package="Flourish">
        <name>cmp</name>
        <full_name>cmp</full_name>
        <docblock line="130">
          <description><![CDATA[Compared the two numbers]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="130" name="param" description="The first number to compare" type="string" variable="$number1">
            <type by_reference="false">string</type>
          </tag>
          <tag line="130" name="param" description="The second number to compare" type="string" variable="$number2">
            <type by_reference="false">string</type>
          </tag>
          <tag line="130" name="return" description="Less than `0` if `$number1` is less than `$number2`, `0` if equal, greater than `0` if `$number1` is greater than `$number2`" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="137">
          <name>$number1</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="137">
          <name>$number2</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="160" package="Flourish">
        <name>fixSign</name>
        <full_name>fixSign</full_name>
        <docblock line="154">
          <description><![CDATA[Makes sure a number has a sign]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="154" name="param" description="The number to check" type="string" variable="$number">
            <type by_reference="false">string</type>
          </tag>
          <tag line="154" name="return" description="The number with a sign" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="160">
          <name>$number</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="176" package="Flourish">
        <name>isZero</name>
        <full_name>isZero</full_name>
        <docblock line="170">
          <description><![CDATA[Checks to see if a number is equal to zero]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="170" name="param" description="The number to check, first character should be the sign" type="string" variable="$number">
            <type by_reference="false">string</type>
          </tag>
          <tag line="170" name="return" description="If the number is equal to zero" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="176">
          <name>$number</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="192" package="Flourish">
        <name>normalize</name>
        <full_name>normalize</full_name>
        <docblock line="182">
          <description><![CDATA[Normalizes two numbers to the same number of decimal places]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="182" name="throws" description="When `$number1` or `$number2` is not a valid number" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="182" name="param" description="The first number to normalize" type="\fNumber|string" variable="$number1">
            <type by_reference="false">\fNumber</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="182" name="param" description="The second number to normalize" type="\fNumber|string" variable="$number2">
            <type by_reference="false">\fNumber</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="182" name="param" description="The number of decimal places to normalize to" type="integer" variable="$scale">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="182" name="return" description="The two normalized numbers as strings" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="192">
          <name>$number1</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="192">
          <name>$number2</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="192">
          <name>$scale</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="241" package="Flourish">
        <name>parse</name>
        <full_name>parse</full_name>
        <docblock line="232">
          <description><![CDATA[Parses a number to ensure it is valid]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="232" name="throws" description="When `$number` is not a valid number" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="232" name="param" description="The number to parse" type="object|string" variable="$number">
            <type by_reference="false">object</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="232" name="param" description="The element to return: `'number'`, `'integer'`, `'fraction'`, `'array'`" type="string" variable="$element">
            <type by_reference="false">string</type>
          </tag>
          <tag line="232" name="return" description="The requested parsed element" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="241">
          <name>$number</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="241">
          <name>$element</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="342" package="Flourish">
        <name>performAdd</name>
        <full_name>performAdd</full_name>
        <docblock line="332">
          <description><![CDATA[Adds two numbers together]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="332" name="throws" description="When `$number1` or `$number2` is not a valid number" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="332" name="param" description="The first addend" type="string" variable="$number1">
            <type by_reference="false">string</type>
          </tag>
          <tag line="332" name="param" description="The second addend" type="string" variable="$number2">
            <type by_reference="false">string</type>
          </tag>
          <tag line="332" name="param" description="The number of digits after the decimal" type="integer" variable="$scale">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="332" name="return" description="The sum of the two numbers" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="342">
          <name>$number1</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="342">
          <name>$number2</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="342">
          <name>$scale</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="392" package="Flourish">
        <name>performDiv</name>
        <full_name>performDiv</full_name>
        <docblock line="381">
          <description><![CDATA[Divides a number by another]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="381" name="throws" description="When `$dividend` or `$divisor` is not a valid number" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="381" name="param" description="The number to be divided" type="string" variable="$dividend">
            <type by_reference="false">string</type>
          </tag>
          <tag line="381" name="param" description="The number to divide by" type="string" variable="$divisor">
            <type by_reference="false">string</type>
          </tag>
          <tag line="381" name="param" description="&amp;$remainder The remainder from the division" type="integer" variable="$remainder">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="381" name="param" description="The number of digits to return after the decimal" type="integer" variable="$scale">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="381" name="return" description="The quotient" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="392">
          <name>$dividend</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="392">
          <name>$divisor</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="392">
          <name>$remainder</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="392">
          <name>$scale</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="553" package="Flourish">
        <name>performMul</name>
        <full_name>performMul</full_name>
        <docblock line="545">
          <description><![CDATA[Multiplies two numbers]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="545" name="param" description="The number to be multiplied" type="string" variable="$multiplicand">
            <type by_reference="false">string</type>
          </tag>
          <tag line="545" name="param" description="The number of times to multiply the multiplicand" type="string" variable="$multiplier">
            <type by_reference="false">string</type>
          </tag>
          <tag line="545" name="param" description="The number of digits after the decimal" type="integer" variable="$scale">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="545" name="return" description="The product" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="553">
          <name>$multiplicand</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="553">
          <name>$multiplier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="553">
          <name>$scale</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="627" package="Flourish">
        <name>performPow</name>
        <full_name>performPow</full_name>
        <docblock line="618">
          <description><![CDATA[Calculates the integer power of a number]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="618" name="throws" description="When `$number` or `$power` is not a valid number or when `$power` is outside of the normal 32-bit integer range" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="618" name="param" description="The number to raise to the power" type="string" variable="$number">
            <type by_reference="false">string</type>
          </tag>
          <tag line="618" name="param" description="The power to raise to, must be between `−2,147,483,648` and `2,147,483,647`" type="string" variable="$power">
            <type by_reference="false">string</type>
          </tag>
          <tag line="618" name="return" description="The product" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="627">
          <name>$number</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="627">
          <name>$power</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="627">
          <name>$scale</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="674" package="Flourish">
        <name>performSub</name>
        <full_name>performSub</full_name>
        <docblock line="665">
          <description><![CDATA[Subtracts the second number from the first]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="665" name="throws" description="When `$minuend` or `$subtrahend` is not a valid number" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="665" name="param" description="The number to subtract from" type="string" variable="$minuend">
            <type by_reference="false">string</type>
          </tag>
          <tag line="665" name="param" description="The number to subtract" type="string" variable="$subtrahend">
            <type by_reference="false">string</type>
          </tag>
          <tag line="665" name="return" description="The difference" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="674">
          <name>$minuend</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="674">
          <name>$subtrahend</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="674">
          <name>$scale</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="729" package="Flourish">
        <name>pi</name>
        <full_name>pi</full_name>
        <docblock line="723">
          <description><![CDATA[Returns the value for pi with a scale of up to 500]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="723" name="param" description="The number of places after the decimal to return" type="integer" variable="$scale">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="723" name="return" description="Pi" type="\fNumber">
            <type by_reference="false">\fNumber</type>
          </tag>
        </docblock>
        <argument line="729">
          <name>$scale</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="764" package="Flourish">
        <name>registerFormatCallback</name>
        <full_name>registerFormatCallback</full_name>
        <docblock line="752">
          <description><![CDATA[Allows setting a callback to translate or modify any return values from ::format()]]></description>
          <long-description><![CDATA[<p>The callback should accept two parameters:
 - <code>$value</code>: the string value of the number
 - <code>$remove_zero_fraction</code>: a boolean indicating if a zero fraction should be removed</p>

<p>The callback should return a string, the formatted <code>$value</code>.</p>]]></long-description>
          <tag line="752" name="param" description="The callback to pass the fNumber value to - see method description for parameters" type="callback" variable="$callback">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="752" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="764">
          <name>$callback</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="779" package="Flourish">
        <name>registerUnformatCallback</name>
        <full_name>registerUnformatCallback</full_name>
        <docblock line="773">
          <description><![CDATA[Allows setting a callback to clean any formatted values so they can be properly parsed - useful for languages where `,` is used as the decimal point]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="773" name="param" description="The callback to pass formatted strings to. Should accept a formatted string and return a string the is a valid number using `.` as the decimal point." type="callback" variable="$callback">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="773" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="779">
          <name>$callback</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="795" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="788">
          <description><![CDATA[Resets the configuration of the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="788" name="internal" description=""/>
          <tag line="788" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="809" package="Flourish">
        <name>setScale</name>
        <full_name>setScale</full_name>
        <docblock line="802">
          <description><![CDATA[Sets the scale for a number]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="802" name="param" description="The number to set the scale for" type="string" variable="$number">
            <type by_reference="false">string</type>
          </tag>
          <tag line="802" name="param" description="The number of digits to have after the decimal" type="integer" variable="$scale">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="802" name="return" description="The scaled number" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="809">
          <name>$number</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="809">
          <name>$scale</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="837" package="Flourish">
        <name>stripLeadingZeroes</name>
        <full_name>stripLeadingZeroes</full_name>
        <docblock line="831">
          <description><![CDATA[Strips the leading zeroes off of a number]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="831" name="param" description="The number to strip" type="string" variable="$number">
            <type by_reference="false">string</type>
          </tag>
          <tag line="831" name="return" description="The number with leading zeroes stripped" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="837">
          <name>$number</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="880" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="871">
          <description><![CDATA[Creates a large/precise number]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="871" name="throws" description="When `$value` is not a valid number" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="871" name="param" description="The value for the number - any valid PHP integer or float format including values with `e` exponents" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="871" name="param" description="The number of digits after the decimal place, defaults to number of digits in `$value`" type="integer" variable="$scale">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="871" name="return" description="" type="\fNumber">
            <type by_reference="false">\fNumber</type>
          </tag>
        </docblock>
        <argument line="880">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="880">
          <name>$scale</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="905" package="Flourish">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="897">
          <description><![CDATA[All requests that hit this method should be requests for callbacks]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="897" name="internal" description=""/>
          <tag line="897" name="param" description="The method to create a callback for" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="897" name="return" description="The callback for the method requested" type="callback">
            <type by_reference="false">callback</type>
          </tag>
        </docblock>
        <argument line="905">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="916" package="Flourish">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="911">
          <description><![CDATA[Converts the object to an string]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="911" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="928" package="Flourish">
        <name>abs</name>
        <full_name>abs</full_name>
        <docblock line="922">
          <description><![CDATA[Returns the absolute value of this number]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="922" name="param" description="The number of places after the decimal - overrides the scale for this number" type="integer" variable="$scale">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="922" name="return" description="The absolute number" type="\fNumber">
            <type by_reference="false">\fNumber</type>
          </tag>
        </docblock>
        <argument line="928">
          <name>$scale</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="944" package="Flourish">
        <name>add</name>
        <full_name>add</full_name>
        <docblock line="935">
          <description><![CDATA[Adds two numbers together]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="935" name="throws" description="When `$addend` is not a valid number" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="935" name="param" description="The addend" type="\fNumber|string" variable="$addend">
            <type by_reference="false">\fNumber</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="935" name="param" description="The number of places after the decimal - overrides the scale for this number" type="integer" variable="$scale">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="935" name="return" description="The sum" type="\fNumber">
            <type by_reference="false">\fNumber</type>
          </tag>
        </docblock>
        <argument line="944">
          <name>$addend</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="944">
          <name>$scale</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="964" package="Flourish">
        <name>ceil</name>
        <full_name>ceil</full_name>
        <docblock line="959">
          <description><![CDATA[Rounds the number to the next highest integer]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="959" name="return" description="The next highest integer" type="\fNumber">
            <type by_reference="false">\fNumber</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="992" package="Flourish">
        <name>div</name>
        <full_name>div</full_name>
        <docblock line="983">
          <description><![CDATA[Divides this number by the one passed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="983" name="throws" description="When `$divisor` is not a valid number" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="983" name="param" description="The divisor" type="\fNumber|string" variable="$divisor">
            <type by_reference="false">\fNumber</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="983" name="param" description="The number of places after the decimal - overrides the scale for this number" type="integer" variable="$scale">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="983" name="return" description="The quotient" type="\fNumber">
            <type by_reference="false">\fNumber</type>
          </tag>
        </docblock>
        <argument line="992">
          <name>$divisor</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="992">
          <name>$scale</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1023" package="Flourish">
        <name>eq</name>
        <full_name>eq</full_name>
        <docblock line="1014">
          <description><![CDATA[Indicates if this value is equal to the one passed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1014" name="throws" description="When `$number` is not a valid number" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="1014" name="param" description="The number to compare to" type="\fNumber|string" variable="$number">
            <type by_reference="false">\fNumber</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="1014" name="param" description="The number of decimal places to compare - will use all available if not specified" type="integer" variable="$scale">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1014" name="return" description="If this number is equal to the one passed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="1023">
          <name>$number</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1023">
          <name>$scale</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1043" package="Flourish">
        <name>fixScale</name>
        <full_name>fixScale</full_name>
        <docblock line="1037">
          <description><![CDATA[Makes sure the scale is an int greater than `-1` - will return the current scale if the one passed is `NULL`]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1037" name="param" description="The scale to check" type="integer" variable="$scale">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1037" name="return" description="The number of digits after the decimal place" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="1043">
          <name>$scale</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1058" package="Flourish">
        <name>floor</name>
        <full_name>floor</full_name>
        <docblock line="1053">
          <description><![CDATA[Rounds the number to the next lowest integer]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1053" name="return" description="The next lowest integer" type="\fNumber">
            <type by_reference="false">\fNumber</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1086" package="Flourish">
        <name>fmod</name>
        <full_name>fmod</full_name>
        <docblock line="1077">
          <description><![CDATA[Returns the float remainder of dividing this number by the divisor provided]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1077" name="throws" description="When `$divisor` is not a valid number" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="1077" name="param" description="The divisor" type="\fNumber|string" variable="$divisor">
            <type by_reference="false">\fNumber</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="1077" name="param" description="The number of places after the decimal - overrides the scale for this number" type="integer" variable="$scale">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1077" name="return" description="The remainder" type="\fNumber">
            <type by_reference="false">\fNumber</type>
          </tag>
        </docblock>
        <argument line="1086">
          <name>$divisor</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1086">
          <name>$scale</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1121" package="Flourish">
        <name>format</name>
        <full_name>format</full_name>
        <docblock line="1115">
          <description><![CDATA[Formats the number to include thousands separators]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1115" name="param" description="If `TRUE` and all digits after the decimal place are `0`, the decimal place and all zeros are removed" type="boolean" variable="$remove_zero_fraction">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1115" name="return" description="The formatted value" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1121">
          <name>$remove_zero_fraction</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1159" package="Flourish">
        <name>getScale</name>
        <full_name>getScale</full_name>
        <docblock line="1154">
          <description><![CDATA[Returns the scale of this number]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1154" name="return" description="The scale of this number" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1174" package="Flourish">
        <name>gt</name>
        <full_name>gt</full_name>
        <docblock line="1165">
          <description><![CDATA[Indicates if this value is greater than the one passed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1165" name="throws" description="When `$number` is not a valid number" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="1165" name="param" description="The number to compare to" type="\fNumber|string" variable="$number">
            <type by_reference="false">\fNumber</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="1165" name="param" description="The number of decimal places to compare - will use all available if not specified" type="integer" variable="$scale">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1165" name="return" description="If this number is less than the one passed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="1174">
          <name>$number</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1174">
          <name>$scale</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1197" package="Flourish">
        <name>gte</name>
        <full_name>gte</full_name>
        <docblock line="1188">
          <description><![CDATA[Indicates if this value is greater than or equal to the one passed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1188" name="throws" description="When `$number` is not a valid number" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="1188" name="param" description="The number to compare to" type="\fNumber|string" variable="$number">
            <type by_reference="false">\fNumber</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="1188" name="param" description="The number of decimal places to compare - will use all available if not specified" type="integer" variable="$scale">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1188" name="return" description="If this number is greater than or equal to the one passed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="1197">
          <name>$number</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1197">
          <name>$scale</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1220" package="Flourish">
        <name>lt</name>
        <full_name>lt</full_name>
        <docblock line="1211">
          <description><![CDATA[Indicates if this value is less than the one passed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1211" name="throws" description="When `$number` is not a valid number" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="1211" name="param" description="The number to compare to" type="\fNumber|string" variable="$number">
            <type by_reference="false">\fNumber</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="1211" name="param" description="The number of decimal places to compare - will use all available if not specified" type="integer" variable="$scale">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1211" name="return" description="If this number is less than the one passed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="1220">
          <name>$number</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1220">
          <name>$scale</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1243" package="Flourish">
        <name>lte</name>
        <full_name>lte</full_name>
        <docblock line="1234">
          <description><![CDATA[Indicates if this value is less than or equal to the one passed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1234" name="throws" description="When `$number` is not a valid number" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="1234" name="param" description="The number to compare to" type="\fNumber|string" variable="$number">
            <type by_reference="false">\fNumber</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="1234" name="param" description="The number of decimal places to compare - will use all available if not specified" type="integer" variable="$scale">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1234" name="return" description="If this number is less than or equal to the one passed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="1243">
          <name>$number</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1243">
          <name>$scale</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1265" package="Flourish">
        <name>mod</name>
        <full_name>mod</full_name>
        <docblock line="1257">
          <description><![CDATA[Returns the remainder of dividing this number by the divisor provided.]]></description>
          <long-description><![CDATA[<p>All floats are converted to integers.</p>]]></long-description>
          <tag line="1257" name="throws" description="When `$divisor` is not a valid number" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="1257" name="param" description="The divisor - will be converted to an integer if it is a float" type="\fNumber|string" variable="$divisor">
            <type by_reference="false">\fNumber</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="1257" name="return" description="The remainder" type="\fNumber">
            <type by_reference="false">\fNumber</type>
          </tag>
        </docblock>
        <argument line="1265">
          <name>$divisor</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1291" package="Flourish">
        <name>mul</name>
        <full_name>mul</full_name>
        <docblock line="1282">
          <description><![CDATA[Multiplies two numbers]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1282" name="throws" description="When `$multiplier` is not a valid number" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="1282" name="param" description="The multiplier" type="\fNumber|string" variable="$multiplier">
            <type by_reference="false">\fNumber</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="1282" name="param" description="The number of places after the decimal - overrides the scale for this number" type="integer" variable="$scale">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1282" name="return" description="The product" type="\fNumber">
            <type by_reference="false">\fNumber</type>
          </tag>
        </docblock>
        <argument line="1291">
          <name>$multiplier</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1291">
          <name>$scale</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1312" package="Flourish">
        <name>neg</name>
        <full_name>neg</full_name>
        <docblock line="1306">
          <description><![CDATA[Negates this number]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1306" name="param" description="The number of places after the decimal - overrides the scale for this number" type="integer" variable="$scale">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1306" name="return" description="The negated number" type="\fNumber">
            <type by_reference="false">\fNumber</type>
          </tag>
        </docblock>
        <argument line="1312">
          <name>$scale</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1330" package="Flourish">
        <name>pow</name>
        <full_name>pow</full_name>
        <docblock line="1321">
          <description><![CDATA[Raise this number to the power specified]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1321" name="throws" description="When `$exponent` is not a valid number" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="1321" name="param" description="The power to raise to - all non integer values will be truncated to integers" type="integer" variable="$exponent">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1321" name="param" description="The number of places after the decimal - overrides the scale for this number" type="integer" variable="$scale">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1321" name="return" description="The product" type="\fNumber">
            <type by_reference="false">\fNumber</type>
          </tag>
        </docblock>
        <argument line="1330">
          <name>$exponent</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1330">
          <name>$scale</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1356" package="Flourish">
        <name>powmod</name>
        <full_name>powmod</full_name>
        <docblock line="1344">
          <description><![CDATA[Gets the remainder of this integer number raised to the integer `$exponent`, divided by the integer `$modulus`]]></description>
          <long-description><![CDATA[<p>This method is faster than doing <code>$num-&gt;pow($exponent)-&gt;mod($modulus)</code>
and is primarily useful for cryptographic functionality.</p>]]></long-description>
          <tag line="1344" name="throws" description="When `$exponent` or `$modulus` is not a valid number" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="1344" name="param" description="The power to raise to - all non integer values will be truncated to integers" type="\fNumber|string" variable="$exponent">
            <type by_reference="false">\fNumber</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="1344" name="param" description="The value to divide by - all non integer values will be truncated to integers" type="\fNumber|string" variable="$modulus">
            <type by_reference="false">\fNumber</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="1344" name="return" description="The remainder" type="\fNumber">
            <type by_reference="false">\fNumber</type>
          </tag>
        </docblock>
        <argument line="1356">
          <name>$exponent</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1356">
          <name>$modulus</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1414" package="Flourish">
        <name>round</name>
        <full_name>round</full_name>
        <docblock line="1408">
          <description><![CDATA[Rounds this number to the specified number of digits after the decimal - negative scales round the number by places to the left of the decimal]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1408" name="param" description="The number of places after (or before if negative) the decimal to round to" type="integer" variable="$scale">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1408" name="return" description="The rounded result" type="\fNumber">
            <type by_reference="false">\fNumber</type>
          </tag>
        </docblock>
        <argument line="1414">
          <name>$scale</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1461" package="Flourish">
        <name>sign</name>
        <full_name>sign</full_name>
        <docblock line="1456">
          <description><![CDATA[Returns the sign of the number]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1456" name="return" description="`-1` if negative, `0` if zero, `1` if positive" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1476" package="Flourish">
        <name>sqrt</name>
        <full_name>sqrt</full_name>
        <docblock line="1470">
          <description><![CDATA[Returns the square root of this number]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1470" name="param" description="The number of places after the decimal - overrides the scale for this number" type="integer" variable="$scale">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1470" name="return" description="The square root" type="\fNumber">
            <type by_reference="false">\fNumber</type>
          </tag>
        </docblock>
        <argument line="1476">
          <name>$scale</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1571" package="Flourish">
        <name>sub</name>
        <full_name>sub</full_name>
        <docblock line="1562">
          <description><![CDATA[Subtracts two numbers]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1562" name="throws" description="When `$subtrahend` is not a valid number" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="1562" name="param" description="The subtrahend" type="\fNumber|string" variable="$subtrahend">
            <type by_reference="false">\fNumber</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="1562" name="param" description="The number of places after the decimal - overrides the scale for this number" type="integer" variable="$scale">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1562" name="return" description="The difference" type="\fNumber">
            <type by_reference="false">\fNumber</type>
          </tag>
        </docblock>
        <argument line="1571">
          <name>$subtrahend</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1571">
          <name>$scale</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1592" package="Flourish">
        <name>trunc</name>
        <full_name>trunc</full_name>
        <docblock line="1586">
          <description><![CDATA[Scales (truncates or expands) the number to the specified number of digits after the decimal - negative scales round the number by places to the left of the decimal]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1586" name="param" description="The number of places after (or before if negative) the decimal" type="integer" variable="$scale">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1586" name="return" description="The square root" type="\fNumber">
            <type by_reference="false">\fNumber</type>
          </tag>
        </docblock>
        <argument line="1592">
          <name>$scale</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fNumber.php</error>
      <error line="618" code="50015">Argument $scale is missing from the Docblock of performPow()</error>
      <error line="665" code="50015">Argument $scale is missing from the Docblock of performSub()</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fRecordSet.php" hash="50a83c148cbdf3b2e18c31180401f47d" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="61" package="Flourish">
      <extends/>
      <implements>\IteratorAggregate</implements>
      <implements>\ArrayAccess</implements>
      <implements>\Countable</implements>
      <name>fRecordSet</name>
      <full_name>\fRecordSet</full_name>
      <docblock line="2">
        <description><![CDATA[A lightweight, iterable set of fActiveRecord-based objects]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2012 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fRecordSet" link="http://flourishlib.com/fRecordSet"/>
        <tag line="2" name="version" description="1.0.0b47"/>
        <tag line="2" name="changes" description="1.0.0b47  Fixed the new version of ::precount() to work with tables having an explicit schema [wb, 2012-09-21]"/>
        <tag line="2" name="changes" description="1,0,0b46  Fixed a bug with ::precount() not working for self-joining tables [wb, 2012-09-16]"/>
        <tag line="2" name="changes" description="1.0.0b45  Added support for the starts with like, `^~`, and ends with like, `$~`, operators to both ::build() and ::filter() [wb, 2011-06-20]"/>
        <tag line="2" name="changes" description="1.0.0b44  Backwards Compatibility Break - ::sort() and ::sortByCallback() now return a new fRecordSet instead of sorting the record set in place [wb, 2011-06-20]"/>
        <tag line="2" name="changes" description="1.0.0b43  Added the ability to pass SQL and values to ::buildFromSQL(), added the ability to manually pass the `$limit` and `$page` to ::buildFromArray() and ::buildFromSQL(), changed ::slice() to remember `$limit` and `$page` if possible when `$remember_original_count` is `TRUE` [wb, 2011-01-11]"/>
        <tag line="2" name="changes" description="1.0.0b42  Updated class to use fORM::getRelatedClass() [wb, 2010-11-24]"/>
        <tag line="2" name="changes" description="1.0.0b41  Added support for PHP 5.3 namespaced fActiveRecord classes [wb, 2010-11-11]"/>
        <tag line="2" name="changes" description="1.0.0b40  Added the ::tally() method [wb, 2010-09-28]"/>
        <tag line="2" name="changes" description="1.0.0b39  Backwards Compatibility Break - removed the methods ::fetchRecord(), ::current(), ::key(), ::next(), ::rewind() and ::valid() and the Iterator interface - and the `$pointer` parameter for callbacks registered via fORM::registerRecordSetMethod() was replaced with the `$method_name` parameter - added the methods ::getIterator(), ::getLimit(), ::getPage(), ::getPages(), ::getRecord(), ::offsetExists(), ::offsetGet(), ::offsetSet() and ::offsetUnset() and the IteratorAggregate and ArrayAccess interfaces [wb, 2010-09-28]"/>
        <tag line="2" name="changes" description="1.0.0b38  Updated code to work with the new fORM API [wb, 2010-08-06]"/>
        <tag line="2" name="changes" description="1.0.0b37  Fixed a typo/bug in ::reduce() [wb, 2010-06-30]"/>
        <tag line="2" name="changes" description="1.0.0b36  Replaced create_function() with a private method call [wb, 2010-06-08]"/>
        <tag line="2" name="changes" description="1.0.0b35  Added the ::chunk() and ::split() methods [wb, 2010-05-20]"/>
        <tag line="2" name="changes" description="1.0.0b34  Added an integer cast to ::count() to fix issues with the dblib MSSQL driver [wb, 2010-04-09]"/>
        <tag line="2" name="changes" description="1.0.0b33  Updated the class to force configure classes before peforming actions with them [wb, 2010-03-30]"/>
        <tag line="2" name="changes" description="1.0.0b32  Fixed a column aliasing issue with SQLite [wb, 2010-01-25]"/>
        <tag line="2" name="changes" description="1.0.0b31  Added the ability to compare columns in ::build() with the `=:`, `!:`, `&lt;:`, `&lt;=:`, `&gt;:` and `&gt;=:` operators [wb, 2009-12-08]"/>
        <tag line="2" name="changes" description="1.0.0b30  Fixed a bug affecting where conditions with columns that are not null but have a default value [wb, 2009-11-03]"/>
        <tag line="2" name="changes" description="1.0.0b29  Updated code for the new fORMDatabase and fORMSchema APIs [wb, 2009-10-28]"/>
        <tag line="2" name="changes" description="1.0.0b28  Fixed ::prebuild() and ::precount() to work across all databases, changed SQL statements to use value placeholders, identifier escaping and schema support [wb, 2009-10-22]"/>
        <tag line="2" name="changes" description="1.0.0b27  Changed fRecordSet::build() to fix bad $page numbers instead of throwing an fProgrammerException [wb, 2009-10-05]"/>
        <tag line="2" name="changes" description="1.0.0b26  Updated the documentation for ::build() and ::filter() to reflect new functionality [wb, 2009-09-21]"/>
        <tag line="2" name="changes" description="1.0.0b25  Fixed ::map() to work with string-style static method callbacks in PHP 5.1 [wb, 2009-09-18]"/>
        <tag line="2" name="changes" description="1.0.0b24  Backwards Compatibility Break - renamed ::buildFromRecords() to ::buildFromArray(). Added ::buildFromCall(), ::buildFromMap() and `::build{RelatedRecords}()` [wb, 2009-09-16]"/>
        <tag line="2" name="changes" description="1.0.0b23  Added an extra parameter to ::diff(), ::filter(), ::intersect(), ::slice() and ::unique() to save the number of records in the current set as the non-limited count for the new set [wb, 2009-09-15]"/>
        <tag line="2" name="changes" description="1.0.0b22  Changed ::__construct() to accept any Iterator instead of just an fResult object [wb, 2009-08-12]"/>
        <tag line="2" name="changes" description="1.0.0b21  Added performance tweaks to ::prebuild() and ::precreate() [wb, 2009-07-31]"/>
        <tag line="2" name="changes" description="1.0.0b20  Changed the class to implement Countable, making the [http://php.net/count `count()`] function work [wb, 2009-07-29]"/>
        <tag line="2" name="changes" description="1.0.0b19  Fixed bugs with ::diff() and ::intersect() and empty record sets [wb, 2009-07-29]"/>
        <tag line="2" name="changes" description="1.0.0b18  Added method chaining support to prebuild, precount and precreate methods [wb, 2009-07-15]"/>
        <tag line="2" name="changes" description="1.0.0b17  Changed ::__call() to pass the parameters to the callback [wb, 2009-07-14]"/>
        <tag line="2" name="changes" description="1.0.0b16  Updated documentation for the intersection operator `&gt;&lt;` [wb, 2009-07-13]"/>
        <tag line="2" name="changes" description="1.0.0b15  Added the methods ::diff() and ::intersect() [wb, 2009-07-13]"/>
        <tag line="2" name="changes" description="1.0.0b14  Added the methods ::contains() and ::unique() [wb, 2009-07-09]"/>
        <tag line="2" name="changes" description="1.0.0b13  Added documentation to ::build() about the intersection operator `&gt;&lt;` [wb, 2009-07-09]"/>
        <tag line="2" name="changes" description="1.0.0b12  Added documentation to ::build() about the `AND LIKE` operator `&amp;~` [wb, 2009-07-09]"/>
        <tag line="2" name="changes" description="1.0.0b11  Added documentation to ::build() about the `NOT LIKE` operator `!~` [wb, 2009-07-08]"/>
        <tag line="2" name="changes" description="1.0.0b10  Moved the private method ::checkConditions() to fActiveRecord::checkConditions() [wb, 2009-07-08]"/>
        <tag line="2" name="changes" description="1.0.0b9   Changed ::build() to only fall back to ordering by primary keys if one exists [wb, 2009-06-26]"/>
        <tag line="2" name="changes" description="1.0.0b8   Updated ::merge() to accept arrays of fActiveRecords or a single fActiveRecord in addition to an fRecordSet [wb, 2009-06-02]"/>
        <tag line="2" name="changes" description="1.0.0b7   Backwards Compatibility Break - Removed ::flagAssociate() and ::isFlaggedForAssociation(), callbacks registered via fORM::registerRecordSetMethod() no longer receive the `$associate` parameter [wb, 2009-06-02]"/>
        <tag line="2" name="changes" description="1.0.0b6   Changed ::tossIfEmpty() to return the record set to allow for method chaining [wb, 2009-05-18]"/>
        <tag line="2" name="changes" description="1.0.0b5   ::build() now allows NULL for `$where_conditions` and `$order_bys`, added a check to the SQL passed to ::buildFromSQL() [wb, 2009-05-03]"/>
        <tag line="2" name="changes" description="1.0.0b4   ::__call() was changed to prevent exceptions coming from fGrammar when an unknown method is called [wb, 2009-03-27]"/>
        <tag line="2" name="changes" description="1.0.0b3   ::sort() and ::sortByCallback() now return the record set to allow for method chaining [wb, 2009-03-23]"/>
        <tag line="2" name="changes" description="1.0.0b2   Added support for != and &lt;&gt; to ::build() and ::filter() [wb, 2008-12-04]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2007-08-04]"/>
      </docblock>
      <constant namespace="global" line="64" package="Flourish">
        <name>build</name>
        <full_name>build</full_name>
        <value><![CDATA['fRecordSet::build']]></value>
      </constant>
      <constant namespace="global" line="65" package="Flourish">
        <name>buildFromArray</name>
        <full_name>buildFromArray</full_name>
        <value><![CDATA['fRecordSet::buildFromArray']]></value>
      </constant>
      <constant namespace="global" line="66" package="Flourish">
        <name>buildFromSQL</name>
        <full_name>buildFromSQL</full_name>
        <value><![CDATA['fRecordSet::buildFromSQL']]></value>
      </constant>
      <property final="false" static="false" visibility="private" line="483" namespace="global" package="Sutra">
        <name>$class</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="478">
          <description><![CDATA[The class of the contained records]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="478" name="var" description="" type="string|array">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="490" namespace="global" package="Sutra">
        <name>$limit</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="485">
          <description><![CDATA[The limit that was used when creating the set]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="485" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="497" namespace="global" package="Sutra">
        <name>$page</name>
        <default><![CDATA[1]]></default>
        <docblock line="492">
          <description><![CDATA[The page of results the record set represents]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="492" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="504" namespace="global" package="Sutra">
        <name>$non_limited_count</name>
        <default><![CDATA[NULL]]></default>
        <docblock line="499">
          <description><![CDATA[The number of rows that would have been returned if a `LIMIT` clause had not been used, or the SQL to get that number]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="499" name="var" description="" type="integer|string">
            <type by_reference="false">integer</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="511" namespace="global" package="Sutra">
        <name>$records</name>
        <default><![CDATA[array()]]></default>
        <docblock line="506">
          <description><![CDATA[An array of the records in the set, initially empty]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="506" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="205" package="Flourish">
        <name>build</name>
        <full_name>build</full_name>
        <docblock line="69">
          <description><![CDATA[Creates an fRecordSet by specifying the class to create plus the where conditions and order by rules]]></description>
          <long-description><![CDATA[<p>The where conditions array can contain <code>key =&gt; value</code> entries in any of
the following formats:</p>

<p>{{{
'column='                    => VALUE,                       // column = VALUE
'column!'                    => VALUE                        // column &lt;> VALUE
'column!='                   => VALUE                        // column &lt;> VALUE
'column&lt;>'                   => VALUE                        // column &lt;> VALUE
'column~'                    => VALUE                        // column LIKE '%VALUE%'
'column^~'                   => VALUE                        // column LIKE 'VALUE%'
'column$~'                   => VALUE                        // column LIKE '%VALUE'
'column!~'                   => VALUE                        // column NOT LIKE '%VALUE%'
'column&lt;'                    => VALUE                        // column &lt; VALUE
'column&lt;='                   => VALUE                        // column &lt;= VALUE
'column>'                    => VALUE                        // column > VALUE
'column>='                   => VALUE                        // column >= VALUE
'column=:'                   => 'other_column'               // column = other_column
'column!:'                   => 'other_column'               // column &lt;> other_column
'column!=:'                  => 'other_column'               // column &lt;> other_column
'column&lt;>:'                  => 'other_column'               // column &lt;> other_column
'column&lt;:'                   => 'other_column'               // column &lt; other_column
'column&lt;=:'                  => 'other_column'               // column &lt;= other_column
'column>:'                   => 'other_column'               // column > other_column
'column>=:'                  => 'other_column'               // column >= other_column
'column='                    => array(VALUE, VALUE2, ... )   // column IN (VALUE, VALUE2, ... )
'column!'                    => array(VALUE, VALUE2, ... )   // column NOT IN (VALUE, VALUE2, ... )
'column!='                   => array(VALUE, VALUE2, ... )   // column NOT IN (VALUE, VALUE2, ... )
'column&lt;>'                   => array(VALUE, VALUE2, ... )   // column NOT IN (VALUE, VALUE2, ... )
'column~'                    => array(VALUE, VALUE2, ... )   // (column LIKE '%VALUE%' OR column LIKE '%VALUE2%' OR column ... )
'column^~'                   => array(VALUE, VALUE2, ... )   // (column LIKE 'VALUE%' OR column LIKE 'VALUE2%' OR column ... )
'column$~'                   => array(VALUE, VALUE2, ... )   // (column LIKE '%VALUE' OR column LIKE '%VALUE2' OR column ... )
'column&amp;~'                   => array(VALUE, VALUE2, ... )   // (column LIKE '%VALUE%' AND column LIKE '%VALUE2%' AND column ... )
'column!~'                   => array(VALUE, VALUE2, ... )   // (column NOT LIKE '%VALUE%' AND column NOT LIKE '%VALUE2%' AND column ... )
'column!|column2&lt;|column3='  => array(VALUE, VALUE2, VALUE3) // (column &lt;> '%VALUE%' OR column2 &lt; '%VALUE2%' OR column3 = '%VALUE3%')
'column|column2>&lt;'           => array(VALUE, VALUE2)         // WHEN VALUE === NULL: ((column2 IS NULL AND column = VALUE) OR (column2 IS NOT NULL AND column &lt;= VALUE AND column2 >= VALUE))
                                                             // WHEN VALUE !== NULL: ((column &lt;= VALUE AND column2 >= VALUE) OR (column >= VALUE AND column &lt;= VALUE2))
'column|column2|column3~'    => VALUE                        // (column LIKE '%VALUE%' OR column2 LIKE '%VALUE%' OR column3 LIKE '%VALUE%')
'column|column2|column3~'    => array(VALUE, VALUE2, ... )   // ((column LIKE '%VALUE%' OR column2 LIKE '%VALUE%' OR column3 LIKE '%VALUE%') AND (column LIKE '%VALUE2%' OR column2 LIKE '%VALUE2%' OR column3 LIKE '%VALUE2%') AND ... )
}}}</p>

<p>When creating a condition in the form <code>column|column2|column3~</code>, if the
value for the condition is a single string that contains spaces, the
string will be parsed for search terms. The search term parsing will
handle quoted phrases and normal words and will strip punctuation and
stop words (such as "the" and "a").</p>

<p>The order bys array can contain <code>key =&gt; value</code> entries in any of the
following formats:</p>

<p>{{{
'column'     => 'asc'      // 'first_name' => 'asc'
'column'     => 'desc'     // 'last_name'  => 'desc'
'expression' => 'asc'      // "CASE first_name WHEN 'smith' THEN 1 ELSE 2 END" => 'asc'
'expression' => 'desc'     // "CASE first_name WHEN 'smith' THEN 1 ELSE 2 END" => 'desc'
}}}</p>

<p>The column in both the where conditions and order bys can be in any of
the formats:</p>

<p>{{{
'column'                                                         // e.g. 'first_name'
'current_table.column'                                           // e.g. 'users.first_name'
'related_table.column'                                           // e.g. 'user_groups.name'
'related_table{route}.column'                                    // e.g. 'user_groups{user_group_id}.name'
'related_table=>once_removed_related_table.column'               // e.g. 'user_groups=>permissions.level'
'related_table{route}=>once_removed_related_table.column'        // e.g. 'user_groups{user_group_id}=>permissions.level'
'related_table=>once_removed_related_table{route}.column'        // e.g. 'user_groups=>permissions{read}.level'
'related_table{route}=>once_removed_related_table{route}.column' // e.g. 'user_groups{user_group_id}=>permissions{read}.level'
'column||other_column'                                           // e.g. 'first_name||last_name' - this concatenates the column values
}}}</p>

<p>In addition to using plain column names for where conditions, it is also
possible to pass an aggregate function wrapped around a column in place
of a column name, but only for certain comparison types. //Note that for
column comparisons, the function may be placed on either column or both.//</p>

<p>{{{
'function(column)='   => VALUE,                       // function(column) = VALUE
'function(column)!'   => VALUE                        // function(column) &lt;> VALUE
'function(column)!=   => VALUE                        // function(column) &lt;> VALUE
'function(column)&lt;>'  => VALUE                        // function(column) &lt;> VALUE
'function(column)~'   => VALUE                        // function(column) LIKE '%VALUE%'
'function(column)^~'  => VALUE                        // function(column) LIKE 'VALUE%'
'function(column)$~'  => VALUE                        // function(column) LIKE '%VALUE'
'function(column)!~'  => VALUE                        // function(column) NOT LIKE '%VALUE%'
'function(column)&lt;'   => VALUE                        // function(column) &lt; VALUE
'function(column)&lt;='  => VALUE                        // function(column) &lt;= VALUE
'function(column)>'   => VALUE                        // function(column) > VALUE
'function(column)>='  => VALUE                        // function(column) >= VALUE
'function(column)=:'  => 'other_column'               // function(column) = other_column
'function(column)!:'  => 'other_column'               // function(column) &lt;> other_column
'function(column)!=:' => 'other_column'               // function(column) &lt;> other_column
'function(column)&lt;>:' => 'other_column'               // function(column) &lt;> other_column
'function(column)&lt;:'  => 'other_column'               // function(column) &lt; other_column
'function(column)&lt;=:' => 'other_column'               // function(column) &lt;= other_column
'function(column)>:'  => 'other_column'               // function(column) > other_column
'function(column)>=:' => 'other_column'               // function(column) >= other_column
'function(column)='   => array(VALUE, VALUE2, ... )   // function(column) IN (VALUE, VALUE2, ... )
'function(column)!'   => array(VALUE, VALUE2, ... )   // function(column) NOT IN (VALUE, VALUE2, ... )
'function(column)!='  => array(VALUE, VALUE2, ... )   // function(column) NOT IN (VALUE, VALUE2, ... )
'function(column)&lt;>'  => array(VALUE, VALUE2, ... )   // function(column) NOT IN (VALUE, VALUE2, ... )
}}}</p>

<p>The aggregate functions <code>AVG()</code>, <code>COUNT()</code>, <code>MAX()</code>, <code>MIN()</code> and
<code>SUM()</code> are supported across all database types.</p>

<p>Below is an example of using where conditions and order bys. Please note
that values should <strong>not</strong> be escaped for the database, but should just
be normal PHP values.</p>

<p>{{{</p>

<h1>!php</h1>

<p>return fRecordSet::build(
    'User',
    array(
        'first_name='      => 'John',
        'status!'          => 'Inactive',
        'groups.group_id=' => 2
    ),
    array(
        'last_name'   => 'asc',
        'date_joined' => 'desc'
    )
);
}}}</p>]]></long-description>
          <tag line="69" name="param" description="The class to create the fRecordSet of" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="69" name="param" description="The `column =&gt; value` comparisons for the `WHERE` clause" type="array" variable="$where_conditions">
            <type by_reference="false">array</type>
          </tag>
          <tag line="69" name="param" description="The `column =&gt; direction` values to use for the `ORDER BY` clause" type="array" variable="$order_bys">
            <type by_reference="false">array</type>
          </tag>
          <tag line="69" name="param" description="The number of records to fetch" type="integer" variable="$limit">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="69" name="param" description="The page offset to use when limiting records" type="integer" variable="$page">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="69" name="return" description="A set of fActiveRecord objects" type="\fRecordSet">
            <type by_reference="false">\fRecordSet</type>
          </tag>
        </docblock>
        <argument line="205">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="205">
          <name>$where_conditions</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="205">
          <name>$order_bys</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="205">
          <name>$limit</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="205">
          <name>$page</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="293" package="Flourish">
        <name>buildFromArray</name>
        <full_name>buildFromArray</full_name>
        <docblock line="281">
          <description><![CDATA[Creates an fRecordSet from an array of records]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="281" name="internal" description=""/>
          <tag line="281" name="param" description="The class or classes of the records" type="string|array" variable="$class">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="281" name="param" description="The records to create the set from, the order of the record set will be the same as the order of the array." type="array" variable="$records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="281" name="param" description="The total number of records - this should only be provided if the array is a segment of a larger array - this is informational only and does not affect the array" type="integer" variable="$total_records">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="281" name="param" description="The maximum number of records the array was limited to - this is informational only and does not affect the array" type="integer" variable="$limit">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="281" name="param" description="The page of records the array is from - this is informational only and does not affect the array" type="integer" variable="$page">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="281" name="return" description="A set of fActiveRecord objects" type="\fRecordSet">
            <type by_reference="false">\fRecordSet</type>
          </tag>
        </docblock>
        <argument line="293">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="293">
          <name>$records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="293">
          <name>$total_records</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="293">
          <name>$limit</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="293">
          <name>$page</name>
          <default><![CDATA[1]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="372" package="Flourish">
        <name>buildFromSQL</name>
        <full_name>buildFromSQL</full_name>
        <docblock line="313">
          <description><![CDATA[Creates an fRecordSet from an SQL statement]]></description>
          <long-description><![CDATA[<p>The SQL statement should select all columns from a single table with a *
pattern since that is what an fActiveRecord models. If any columns are
left out or added, strange error may happen when loading or saving
records.</p>

<p>Here is an example of an appropriate SQL statement:</p>

<p>{{{</p>

<h1>!sql</h1>

<p>SELECT users.* FROM users INNER JOIN groups ON users.group_id = groups.group_id WHERE groups.name = 'Public'
}}}</p>

<p>Here is an example of a SQL statement that will cause errors:</p>

<p>{{{</p>

<h1>!sql</h1>

<p>SELECT users.*, groups.name FROM users INNER JOIN groups ON users.group_id = groups.group_id WHERE groups.group_id = 2
}}}</p>

<p>The <code>$non_limited_count_sql</code> should only be passed when the <code>$sql</code>
contains a <code>LIMIT</code> clause and should contain a count of the records when
a <code>LIMIT</code> is not imposed.</p>

<p>Here is an example of a <code>$sql</code> statement with a <code>LIMIT</code> clause and a
corresponding <code>$non_limited_count_sql</code>:</p>

<p>{{{</p>

<h1>!php</h1>

<p>fRecordSet::buildFromSQL('User', 'SELECT * FROM users LIMIT 5', 'SELECT count(*) FROM users');
}}}</p>

<p>The <code>$non_limited_count_sql</code> is used when ::count() is called with <code>TRUE</code>
passed as the parameter.</p>

<p>Both the <code>$sql</code> and <code>$non_limited_count_sql</code> can be passed as a string
SQL statement, or an array containing a SQL statement and the values to
escape into it:</p>

<p>{{{</p>

<h1>!php</h1>

<p>fRecordSet::buildFromSQL(
    'User',
    array("SELECT * FROM users WHERE date_created > %d LIMIT %i OFFSET %i", $start_date, 10, 10*($page-1)),
    array("SELECT * FROM users WHERE date_created > %d", $start_date),
    10,
    $page
)
}}}</p>]]></long-description>
          <tag line="313" name="param" description="The class to create the fRecordSet of" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="313" name="param" description="The SQL to create the set from, or an array of the SQL statement plus values to escape" type="string|array" variable="$sql">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="313" name="param" description="An SQL statement, or an array of the SQL statement plus values to escape, to get the total number of rows that would have been returned if a `LIMIT` clause had not been used. Should only be passed if a `LIMIT` clause is used in `$sql`." type="string|array" variable="$non_limited_count_sql">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="313" name="param" description="The number of records the SQL statement was limited to - this is information only and does not affect the SQL" type="integer" variable="$limit">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="313" name="param" description="The page of records the SQL statement returned - this is information only and does not affect the SQL" type="integer" variable="$page">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="313" name="return" description="A set of fActiveRecord objects" type="\fRecordSet">
            <type by_reference="false">\fRecordSet</type>
          </tag>
        </docblock>
        <argument line="372">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="372">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="372">
          <name>$non_limited_count_sql</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="372">
          <name>$limit</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="372">
          <name>$page</name>
          <default><![CDATA[1]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="414" package="Flourish">
        <name>compose</name>
        <full_name>compose</full_name>
        <docblock line="406">
          <description><![CDATA[Composes text using fText if loaded]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="406" name="param" description="The message to compose" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="406" name="param" description="A string or number to insert into the message" type="mixed" variable="$component">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="406" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="406" name="return" description="The composed and possible translated message" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="414">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="436" package="Flourish">
        <name>tally</name>
        <full_name>tally</full_name>
        <docblock line="429">
          <description><![CDATA[Counts the number of records that match the conditions specified]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="429" name="param" description="The class of records to count" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="429" name="param" description="An array of where clause parameters in the same format as ::build()" type="mixed" variable="$where_conditions">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="429" name="return" description="The number of records" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="436">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="436">
          <name>$where_conditions</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="533" package="Flourish">
        <name>__call</name>
        <full_name>__call</full_name>
        <docblock line="514">
          <description><![CDATA[Allows for preloading various data related to the record set in single database queries, as opposed to one query per record]]></description>
          <long-description><![CDATA[<p>This method will handle methods in the format <code>verbRelatedRecords()</code> for
the verbs <code>build</code>, <code>prebuild</code>, <code>precount</code> and <code>precreate</code>.</p>

<p><code>build</code> calls <code>create{RelatedClass}()</code> on each record in the set and
returns the result as a new record set. The relationship route can be
passed as an optional parameter.</p>

<p><code>prebuild</code> builds *-to-many record sets for all records in the record
set. <code>precount</code> will count records in *-to-many record sets for every
record in the record set. <code>precreate</code> will create a *-to-one record
for every record in the record set.</p>]]></long-description>
          <tag line="514" name="param" description="The name of the method called" type="string" variable="$method_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="514" name="param" description="The parameters passed" type="string" variable="$parameters">
            <type by_reference="false">string</type>
          </tag>
          <tag line="514" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="533">
          <name>$method_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="533">
          <name>$parameters</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="597" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="587">
          <description><![CDATA[Sets the contents of the set]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="587" name="param" description="The type(s) of records the object will contain" type="string|array" variable="$class">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="587" name="param" description="The Iterator object of the records to create or an array of records" type="\Iterator|array" variable="$records">
            <type by_reference="false">\Iterator</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="587" name="param" description="An SQL statement to get the total number of records sans a `LIMIT` clause or a integer of the total number of records" type="string|integer" variable="$non_limited_count">
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="587" name="param" description="The number of records the set was limited to" type="integer" variable="$limit">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="587" name="param" description="The page of records that was built" type="integer" variable="$page">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="587" name="return" description="" type="\fRecordSet">
            <type by_reference="false">\fRecordSet</type>
          </tag>
        </docblock>
        <argument line="597">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="597">
          <name>$records</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="597">
          <name>$non_limited_count</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="597">
          <name>$limit</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="597">
          <name>$page</name>
          <default><![CDATA[1]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="629" package="Flourish">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="621">
          <description><![CDATA[All requests that hit this method should be requests for callbacks]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="621" name="internal" description=""/>
          <tag line="621" name="param" description="The method to create a callback for" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="621" name="return" description="The callback for the method requested" type="callback">
            <type by_reference="false">callback</type>
          </tag>
        </docblock>
        <argument line="629">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="645" package="Flourish">
        <name>addOrderByParams</name>
        <full_name>addOrderByParams</full_name>
        <docblock line="635">
          <description><![CDATA[Adds an `ORDER BY` clause to the SQL for the primary keys of this record set]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="635" name="param" description="The database the query will be executed on" type="\fDatabase" variable="$db">
            <type by_reference="false">\fDatabase</type>
          </tag>
          <tag line="635" name="param" description="The schema for the database" type="\fSchema" variable="$schema">
            <type by_reference="false">\fSchema</type>
          </tag>
          <tag line="635" name="param" description="The parameters for the fDatabase::query() call" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="635" name="param" description="The related class to add the order bys for" type="string" variable="$related_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="635" name="param" description="The route to this table from another table" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="635" name="return" description="The params with the `ORDER BY` clause added" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="645">
          <name>$db</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="645">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="645">
          <name>$params</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="645">
          <name>$related_class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="645">
          <name>$route</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="719" package="Flourish">
        <name>addWhereParams</name>
        <full_name>addWhereParams</full_name>
        <docblock line="710">
          <description><![CDATA[Adds `WHERE` params to the SQL for the primary keys of this record set]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="710" name="param" description="The database the query will be executed on" type="\fDatabase" variable="$db">
            <type by_reference="false">\fDatabase</type>
          </tag>
          <tag line="710" name="param" description="The schema for the database" type="\fSchema" variable="$schema">
            <type by_reference="false">\fSchema</type>
          </tag>
          <tag line="710" name="param" description="The parameters for the fDatabase::query() call" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="710" name="param" description="The route to this table from another table" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="710" name="return" description="The params with the `WHERE` clause added" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="719">
          <name>$db</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="719">
          <name>$schema</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="719">
          <name>$params</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="719">
          <name>$route</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="779" package="Flourish">
        <name>buildFromCall</name>
        <full_name>buildFromCall</full_name>
        <docblock line="771">
          <description><![CDATA[Calls a specific method on each object, returning an fRecordSet of the results]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="771" name="param" description="The method to call" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="771" name="param" description="A parameter to pass for each call to the method" type="mixed" variable="$parameter">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="771" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="771" name="return" description="A set of records that resulted from calling the method" type="\fRecordSet">
            <type by_reference="false">\fRecordSet</type>
          </tag>
        </docblock>
        <argument line="779">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="818" package="Flourish">
        <name>buildFromMap</name>
        <full_name>buildFromMap</full_name>
        <docblock line="810">
          <description><![CDATA[Maps each record in the set to a callback function, returning an fRecordSet of the results]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="810" name="param" description="The callback to pass the values to" type="callback" variable="$callback">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="810" name="param" description="The parameter to pass to the callback - see method description for details" type="mixed" variable="$parameter">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="810" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="810" name="return" description="A set of records that resulted from the mapping operation" type="\fRecordSet">
            <type by_reference="false">\fRecordSet</type>
          </tag>
        </docblock>
        <argument line="818">
          <name>$callback</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="857" package="Flourish">
        <name>call</name>
        <full_name>call</full_name>
        <docblock line="849">
          <description><![CDATA[Calls a specific method on each object, returning an array of the results]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="849" name="param" description="The method to call" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="849" name="param" description="A parameter to pass for each call to the method" type="mixed" variable="$parameter">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="849" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="849" name="return" description="An array the size of the record set with one result from each record/method" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="857">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="881" package="Flourish">
        <name>chunk</name>
        <full_name>chunk</full_name>
        <docblock line="872">
          <description><![CDATA[Chunks the record set into an array of fRecordSet objects]]></description>
          <long-description><![CDATA[<p>Each fRecordSet would contain <code>$number</code> records, except for the last,
which will contain between 1 and <code>$number</code> records.</p>]]></long-description>
          <tag line="872" name="param" description="The number of fActiveRecord objects to place in each fRecordSet" type="integer" variable="$number">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="872" name="return" description="An array of fRecordSet objects" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="881">
          <name>$number</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="898" package="Flourish">
        <name>contains</name>
        <full_name>contains</full_name>
        <docblock line="892">
          <description><![CDATA[Checks if the record set contains the record specified]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="892" name="param" description="The record to check, must exist in the database" type="\fActiveRecord" variable="$record">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="892" name="return" description="If the record specified is in this record set" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="898">
          <name>$record</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="932" package="Flourish">
        <name>count</name>
        <full_name>count</full_name>
        <docblock line="926">
          <description><![CDATA[Returns the number of records in the set]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="926" name="param" description="If set to `TRUE`, this method will return the number of records that would be in the set if there was no `LIMIT` clause" type="boolean" variable="$ignore_limit">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="926" name="return" description="The number of records in the set" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="932">
          <name>$ignore_limit</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="959" package="Flourish">
        <name>diff</name>
        <full_name>diff</full_name>
        <docblock line="952">
          <description><![CDATA[Removes all passed records from the current record set]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="952" name="param" description="The record set, array of records, or record to remove from the current record set, all instances will be removed" type="\fRecordSet|array|\fActiveRecord" variable="$records">
            <type by_reference="false">\fRecordSet</type>
            <type by_reference="false">array</type>
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="952" name="param" description="If the number of records in the current set should be saved as the non-limited count for the new set - the page will be reset to `1` either way" type="boolean" variable="$remember_original_count">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="952" name="return" description="The records not present in the passed records" type="\fRecordSet">
            <type by_reference="false">\fRecordSet</type>
          </tag>
        </docblock>
        <argument line="959">
          <name>$records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="959">
          <name>$remember_original_count</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1051" package="Flourish">
        <name>filter</name>
        <full_name>filter</full_name>
        <docblock line="998">
          <description><![CDATA[Filters the records in the record set via a callback]]></description>
          <long-description><![CDATA[<p>The <code>$callback</code> parameter can be one of three different forms to filter
the records in the set:</p>

<ul>
<li>A callback that accepts a single record and returns <code>FALSE</code> if it should be removed</li>
<li>A psuedo-callback in the form <code>'{record}::methodName'</code> to filter out any records where the output of <code>$record-&gt;methodName()</code> is equivalent to <code>FALSE</code></li>
<li>A conditions array that will remove any records that don't meet all of the conditions</li>
</ul>

<p>The conditions array can use one or more of the following <code>key =&gt; value</code>
syntaxes to perform various comparisons. The array keys are method
names followed by a comparison operator.</p>

<p>{{{
// The following forms work for any $value that is not an array
'methodName='                           => $value  // If the output is equal to $value
'methodName!'                           => $value  // If the output is not equal to $value
'methodName!='                          => $value  // If the output is not equal to $value
'methodName&lt;>'                          => $value  // If the output is not equal to $value
'methodName&lt;'                           => $value  // If the output is less than $value
'methodName&lt;='                          => $value  // If the output is less than or equal to $value
'methodName>'                           => $value  // If the output is greater than $value
'methodName>='                          => $value  // If the output is greater than or equal to $value
'methodName~'                           => $value  // If the output contains the $value (case insensitive)
'methodName^~'                          => $value  // If the output starts with the $value (case insensitive)
'methodName$~'                          => $value  // If the output ends with the $value (case insensitive)
'methodName!~'                          => $value  // If the output does not contain the $value (case insensitive)
'methodName|methodName2|methodName3~'   => $value  // Parses $value as a search string and make sure each term is present in at least one output (case insensitive)</p>

<p>// The following forms work for any $array that is an array
'methodName='                           => $array  // If the output is equal to at least one value in $array
'methodName!'                           => $array  // If the output is not equal to any value in $array
'methodName!='                          => $array  // If the output is not equal to any value in $array
'methodName&lt;>'                          => $array  // If the output is not equal to any value in $array
'methodName~'                           => $array  // If the output contains one of the strings in $array (case insensitive)
'methodName^~'                          => $array  // If the output starts with one of the strings in $array (case insensitive)
'methodName$~'                          => $array  // If the output ends with one of the strings in $array (case insensitive)
'methodName!~'                          => $array  // If the output contains none of the strings in $array (case insensitive)
'methodName&amp;~'                          => $array  // If the output contains all of the strings in $array (case insensitive)
'methodName|methodName2|methodName3~'   => $array  // If each value in the array is present in the output of at least one method (case insensitive)</p>

<p>// The following works for an equal number of methods and values in the array
'methodName!|methodName2&lt;|methodName3=' => array($value, $value2, $value3) // An OR statement - one of the method to value comparisons must be TRUE</p>

<p>// The following accepts exactly two methods and two values, although the second value may be NULL
'methodName|methodName2>&lt;'              => array($value, $value2) // If the range of values from the methods intersects the range of $value and $value2 - should be dates, times, timestamps or numbers
}}}</p>]]></long-description>
          <tag line="998" name="param" description="The way in which to filter the records - see method description for possible forms" type="callback|string|array" variable="$procedure">
            <type by_reference="false">callback</type>
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="998" name="param" description="If the number of records in the current set should be saved as the non-limited count for the new set - the page will be reset to `1` either way" type="boolean" variable="$remember_original_count">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="998" name="return" description="A new fRecordSet with the filtered records" type="\fRecordSet">
            <type by_reference="false">\fRecordSet</type>
          </tag>
        </docblock>
        <argument line="1051">
          <name>$procedure</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1051">
          <name>$remember_original_count</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1111" package="Flourish">
        <name>getClass</name>
        <full_name>getClass</full_name>
        <docblock line="1106">
          <description><![CDATA[Returns the class name of the record being stored]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1106" name="return" description="The class name(s) of the records in the set" type="string|array">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1126" package="Flourish">
        <name>getIterator</name>
        <full_name>getIterator</full_name>
        <docblock line="1117">
          <description><![CDATA[Returns an iterator for the record set]]></description>
          <long-description><![CDATA[<p>This method is required by the IteratorAggregate interface.</p>]]></long-description>
          <tag line="1117" name="internal" description=""/>
          <tag line="1117" name="return" description="An iterator for the record set" type="\ArrayIterator">
            <type by_reference="false">\ArrayIterator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1137" package="Flourish">
        <name>getLimit</name>
        <full_name>getLimit</full_name>
        <docblock line="1132">
          <description><![CDATA[Returns the number of records the set was limited to]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1132" name="return" description="The number of records the set was limited to" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1148" package="Flourish">
        <name>getPage</name>
        <full_name>getPage</full_name>
        <docblock line="1143">
          <description><![CDATA[Returns the page of records this set represents]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1143" name="return" description="The page of records this set represents" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1159" package="Flourish">
        <name>getPages</name>
        <full_name>getPages</full_name>
        <docblock line="1154">
          <description><![CDATA[Returns the number of pages of records exist for the limit used when creating this set]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1154" name="return" description="The number of pages of records that exist for the limit specified" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1176" package="Flourish">
        <name>getRecord</name>
        <full_name>getRecord</full_name>
        <docblock line="1168">
          <description><![CDATA[Returns the record at the zero-based index specified]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1168" name="throws" description="When the index is beyond the end of the set" type="\fNoRemainingException">
            <type by_reference="false">\fNoRemainingException</type>
          </tag>
          <tag line="1168" name="param" description="The index of the record to return" type="integer" variable="$index">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1168" name="return" description="The record requested" type="\fActiveRecord">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
        </docblock>
        <argument line="1176">
          <name>$index</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1187" package="Flourish">
        <name>getRecords</name>
        <full_name>getRecords</full_name>
        <docblock line="1182">
          <description><![CDATA[Returns all of the records in the set]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1182" name="return" description="The records in the set" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1198" package="Flourish">
        <name>getPrimaryKeys</name>
        <full_name>getPrimaryKeys</full_name>
        <docblock line="1193">
          <description><![CDATA[Returns the primary keys for all of the records in the set]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1193" name="return" description="The primary keys of all the records in the set" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1235" package="Flourish">
        <name>intersect</name>
        <full_name>intersect</full_name>
        <docblock line="1228">
          <description><![CDATA[Returns all records in the current record set that are also present in the passed records]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1228" name="param" description="The record set, array of records, or record to create an intersection of with the current record set" type="\fRecordSet|array|\fActiveRecord" variable="$records">
            <type by_reference="false">\fRecordSet</type>
            <type by_reference="false">array</type>
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="1228" name="param" description="If the number of records in the current set should be saved as the non-limited count for the new set - the page will be reset to `1` either way" type="boolean" variable="$remember_original_count">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1228" name="return" description="The records present in the current record set that are also present in the passed records" type="\fRecordSet">
            <type by_reference="false">\fRecordSet</type>
          </tag>
        </docblock>
        <argument line="1235">
          <name>$records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1235">
          <name>$remember_original_count</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1303" package="Flourish">
        <name>map</name>
        <full_name>map</full_name>
        <docblock line="1274">
          <description><![CDATA[Performs an [http://php.net/array_map array_map()] on the record in the set]]></description>
          <long-description><![CDATA[<p>The record will be passed to the callback as the first parameter unless
it's position is specified by the placeholder string <code>'{record}'</code>.</p>

<p>Additional parameters can be passed to the callback in one of two
different ways:</p>

<ul>
<li>Passing a non-array value will cause it to be passed to the callback</li>
<li>Passing an array value will cause the array values to be passed to the callback with their corresponding record</li>
</ul>

<p>If an array parameter is too long (more items than records in the set)
it will be truncated. If an array parameter is too short (less items
than records in the set) it will be padded with <code>NULL</code> values.</p>

<p>To allow passing the record as a specific parameter to the callback, a
placeholder string <code>'{record}'</code> will be replaced with a the record. It
is also possible to specify <code>'{record}::methodName'</code> to cause the output
of a method from the record to be passed instead of the whole record.</p>

<p>It is also possible to pass the zero-based record index to the callback
by passing a parameter that contains <code>'{index}'</code>.</p>]]></long-description>
          <tag line="1274" name="param" description="The callback to pass the values to" type="callback" variable="$callback">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="1274" name="param" description="The parameter to pass to the callback - see method description for details" type="mixed" variable="$parameter">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1274" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1274" name="return" description="An array of the results from the callback" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1303">
          <name>$callback</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1358" package="Flourish">
        <name>merge</name>
        <full_name>merge</full_name>
        <docblock line="1352">
          <description><![CDATA[Merges the record set with more records]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1352" name="param" description="The record set, array of records, or record to merge with the current record set, duplicates will **not** be removed" type="\fRecordSet|array|\fActiveRecord" variable="$records">
            <type by_reference="false">\fRecordSet</type>
            <type by_reference="false">array</type>
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="1352" name="return" description="The merged record sets" type="\fRecordSet">
            <type by_reference="false">\fRecordSet</type>
          </tag>
        </docblock>
        <argument line="1358">
          <name>$records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1417" package="Flourish">
        <name>offsetExists</name>
        <full_name>offsetExists</full_name>
        <docblock line="1407">
          <description><![CDATA[Checks to see if an offset exists]]></description>
          <long-description><![CDATA[<p>This method is required by the ArrayAccess interface.</p>]]></long-description>
          <tag line="1407" name="internal" description=""/>
          <tag line="1407" name="param" description="The offset to check" type="mixed" variable="$offset">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1407" name="return" description="If the offset exists" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="1417">
          <name>$offset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1435" package="Flourish">
        <name>offsetGet</name>
        <full_name>offsetGet</full_name>
        <docblock line="1423">
          <description><![CDATA[Returns a record based on the offset]]></description>
          <long-description><![CDATA[<p>This method is required by the ArrayAccess interface.</p>]]></long-description>
          <tag line="1423" name="internal" description=""/>
          <tag line="1423" name="throws" description="When the offset specified is beyond the last record" type="\fNoRemainingException">
            <type by_reference="false">\fNoRemainingException</type>
          </tag>
          <tag line="1423" name="param" description="The offset of the record to get" type="mixed" variable="$offset">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1423" name="return" description="The requested record" type="\fActiveRecord">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
        </docblock>
        <argument line="1435">
          <name>$offset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1464" package="Flourish">
        <name>offsetSet</name>
        <full_name>offsetSet</full_name>
        <docblock line="1453">
          <description><![CDATA[Prevents setting values to the record set]]></description>
          <long-description><![CDATA[<p>This method is required by the ArrayAccess interface.</p>]]></long-description>
          <tag line="1453" name="internal" description=""/>
          <tag line="1453" name="param" description="The offset to set" type="mixed" variable="$offset">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1453" name="param" description="The value to set to the offset" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1453" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1464">
          <name>$offset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1464">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1483" package="Flourish">
        <name>offsetUnset</name>
        <full_name>offsetUnset</full_name>
        <docblock line="1473">
          <description><![CDATA[Prevents unsetting values from the record set]]></description>
          <long-description><![CDATA[<p>This method is required by the ArrayAccess interface.</p>]]></long-description>
          <tag line="1473" name="internal" description=""/>
          <tag line="1473" name="param" description="The offset to unset" type="mixed" variable="$offset">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1473" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1483">
          <name>$offset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1499" package="Flourish">
        <name>prebuild</name>
        <full_name>prebuild</full_name>
        <docblock line="1492">
          <description><![CDATA[Builds the related records for all records in this set in one DB query]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1492" name="param" description="This should be the name of a related class" type="string" variable="$related_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1492" name="param" description="This should be a column name or a join table name and is only required when there are multiple routes to a related table. If there are multiple routes and this is not specified, an fProgrammerException will be thrown." type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1492" name="return" description="The record set object, to allow for method chaining" type="\fRecordSet">
            <type by_reference="false">\fRecordSet</type>
          </tag>
        </docblock>
        <argument line="1499">
          <name>$related_class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1499">
          <name>$route</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1613" package="Flourish">
        <name>precount</name>
        <full_name>precount</full_name>
        <docblock line="1606">
          <description><![CDATA[Counts the related records for all records in this set in one DB query]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1606" name="param" description="This should be the name of a related class" type="string" variable="$related_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1606" name="param" description="This should be a column name or a join table name and is only required when there are multiple routes to a related table. If there are multiple routes and this is not specified, an fProgrammerException will be thrown." type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1606" name="return" description="The record set object, to allow for method chaining" type="\fRecordSet">
            <type by_reference="false">\fRecordSet</type>
          </tag>
        </docblock>
        <argument line="1613">
          <name>$related_class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1613">
          <name>$route</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1703" package="Flourish">
        <name>precreate</name>
        <full_name>precreate</full_name>
        <docblock line="1696">
          <description><![CDATA[Creates the objects for related records that are in a one-to-one or many-to-one relationship with the current class in a single DB query]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1696" name="param" description="This should be the name of a related class" type="string" variable="$related_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1696" name="param" description="This should be the column name of the foreign key and is only required when there are multiple routes to a related table. If there are multiple routes and this is not specified, an fProgrammerException will be thrown." type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1696" name="return" description="The record set object, to allow for method chaining" type="\fRecordSet">
            <type by_reference="false">\fRecordSet</type>
          </tag>
        </docblock>
        <argument line="1703">
          <name>$related_class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1703">
          <name>$route</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1764" package="Flourish">
        <name>reduce</name>
        <full_name>reduce</full_name>
        <docblock line="1741">
          <description><![CDATA[Reduces the record set to a single value via a callback]]></description>
          <long-description><![CDATA[<p>The callback should take two parameters and return a single value:</p>

<ul>
<li>The initial value and the first record for the first call</li>
<li>The result of the last call plus the next record for the second and subsequent calls</li>
</ul>

<p>{{{</p>

<h1>!php</h1>

<p>function my_reduce($sum, $record)
{
    return $sum + $record->getQuantity();
)
// For the first record, 0.0 will be passed as the $sum, then subsequent
// calls end up getting the return value of the last call to my_reduce()
$total_quantity = $record_set->reduce('my_reduce', 0.0);
}}}</p>]]></long-description>
          <tag line="1741" name="param" description="The callback to pass the records to - see method description for details" type="callback" variable="$callback">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="1741" name="param" description="The initial value to seed reduce with" type="mixed" variable="$initial_value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1741" name="return" description="The result of the reduce operation" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="1764">
          <name>$callback</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1764">
          <name>$initial_value</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1792" package="Flourish">
        <name>slice</name>
        <full_name>slice</full_name>
        <docblock line="1784">
          <description><![CDATA[Slices a section of records from the set and returns a new set containing those]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1784" name="param" description="The index to start at, negative indexes will slice that many records from the end" type="integer" variable="$offset">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1784" name="param" description="The number of records to return, negative values will stop that many records before the end, `NULL` will return all records to the end of the set - if there are not enough records, less than `$length` will be returned" type="integer" variable="$length">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1784" name="param" description="If the number of records in the current set should be saved as the non-limited count for the new set - the page will be reset to `1` either way" type="boolean" variable="$remember_original_count">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1784" name="return" description="The new slice of records" type="\fRecordSet">
            <type by_reference="false">\fRecordSet</type>
          </tag>
        </docblock>
        <argument line="1792">
          <name>$offset</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1792">
          <name>$length</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="1792">
          <name>$remember_original_count</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1829" package="Flourish">
        <name>sort</name>
        <full_name>sort</full_name>
        <docblock line="1820">
          <description><![CDATA[Sorts the set by the return value of a method from the class created and rewind the interator]]></description>
          <long-description><![CDATA[<p>This methods uses fUTF8::inatcmp() to perform comparisons.</p>]]></long-description>
          <tag line="1820" name="param" description="The method to call on each object to get the value to sort by" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1820" name="param" description="Either `'asc'` or `'desc'`" type="string" variable="$direction">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1820" name="return" description="A new record set object, with the records sorted as requested" type="\fRecordSet">
            <type by_reference="false">\fRecordSet</type>
          </tag>
        </docblock>
        <argument line="1829">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1829">
          <name>$direction</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1857" package="Flourish">
        <name>sortCallback</name>
        <full_name>sortCallback</full_name>
        <docblock line="1850">
          <description><![CDATA[A usort callback to sort by methods on records]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1850" name="param" description="The first record to compare" type="\fActiveRecord" variable="$a">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="1850" name="param" description="The second record to compare" type="\fActiveRecord" variable="$b">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="1850" name="return" description="&lt; 0 if `$a` is less than `$b`, 0 if `$a` = `$b`, &gt; 0 if `$a` is greater than `$b`" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="1857">
          <name>$a</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1857">
          <name>$b</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1872" package="Flourish">
        <name>sortByCallback</name>
        <full_name>sortByCallback</full_name>
        <docblock line="1866">
          <description><![CDATA[Sorts the set by passing the callback to [http://php.net/usort `usort()`] and rewinds the interator]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1866" name="param" description="The function/method to pass to `usort()`" type="mixed" variable="$callback">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1866" name="return" description="A new record set object, with the records sorted as requested" type="\fRecordSet">
            <type by_reference="false">\fRecordSet</type>
          </tag>
        </docblock>
        <argument line="1872">
          <name>$callback</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1896" package="Flourish">
        <name>split</name>
        <full_name>split</full_name>
        <docblock line="1887">
          <description><![CDATA[Splits the record set into an array of fRecordSet objects]]></description>
          <long-description><![CDATA[<p>Each fRecordSet would contain ceil(number of records/<code>$number</code>) records,
except for the last, which will contain between 1 and ceil(…) records.</p>]]></long-description>
          <tag line="1887" name="param" description="The number of fRecordSet objects to create" type="integer" variable="$number">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1887" name="return" description="An array of fRecordSet objects" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1896">
          <name>$number</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1915" package="Flourish">
        <name>tossIfEmpty</name>
        <full_name>tossIfEmpty</full_name>
        <docblock line="1907">
          <description><![CDATA[Throws an fEmptySetException if the record set is empty]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1907" name="throws" description="When there are no record in the set" type="\fEmptySetException">
            <type by_reference="false">\fEmptySetException</type>
          </tag>
          <tag line="1907" name="param" description="The message to use for the exception if there are no records in this set" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1907" name="return" description="The record set object, to allow for method chaining" type="\fRecordSet">
            <type by_reference="false">\fRecordSet</type>
          </tag>
        </docblock>
        <argument line="1915">
          <name>$message</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1946" package="Flourish">
        <name>unique</name>
        <full_name>unique</full_name>
        <docblock line="1940">
          <description><![CDATA[Returns a new fRecordSet containing only unique records in the record set]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1940" name="param" description="If the number of records in the current set should be saved as the non-limited count for the new set - the page will be reset to `1` either way" type="boolean" variable="$remember_original_count">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1940" name="return" description="The new record set with only unique records" type="\fRecordSet">
            <type by_reference="false">\fRecordSet</type>
          </tag>
        </docblock>
        <argument line="1946">
          <name>$remember_original_count</name>
          <default><![CDATA[FALSE]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1978" package="Flourish">
        <name>validateSingleClass</name>
        <full_name>validateSingleClass</full_name>
        <docblock line="1972">
          <description><![CDATA[Ensures the record set only contains a single kind of record to prevent issues with certain operations]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1972" name="param" description="The operation being performed - used in the exception thrown" type="string" variable="$operation">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1972" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1978">
          <name>$operation</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fRecordSet.php</error>
      <notice line="406" code="50013">Parameter $component could not be found in compose()</notice>
      <notice line="406" code="50013">Parameter  could not be found in compose()</notice>
      <notice line="771" code="50013">Parameter $parameter could not be found in buildFromCall()</notice>
      <notice line="771" code="50013">Parameter  could not be found in buildFromCall()</notice>
      <notice line="810" code="50013">Parameter $parameter could not be found in buildFromMap()</notice>
      <notice line="810" code="50013">Parameter  could not be found in buildFromMap()</notice>
      <notice line="849" code="50013">Parameter $parameter could not be found in call()</notice>
      <notice line="849" code="50013">Parameter  could not be found in call()</notice>
      <notice line="1274" code="50013">Parameter $parameter could not be found in map()</notice>
      <notice line="1274" code="50013">Parameter  could not be found in map()</notice>
    </parse_markers>
  </file>
  <file path="php/flourish/fORMRelated.php" hash="694f856834b245b4b3687061f34898f8" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="63" package="Flourish">
      <extends/>
      <name>fORMRelated</name>
      <full_name>\fORMRelated</full_name>
      <docblock line="2">
        <description><![CDATA[Handles related record tasks for fActiveRecord classes]]></description>
        <long-description><![CDATA[<p>The functionality of this class only works with single-field <code>FOREIGN KEY</code>
constraints.</p>]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2007-2011 Will Bond, others"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="author" description="Will Bond, iMarc LLC [wb-imarc] &lt;will@imarc.net&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fORMRelated" link="http://flourishlib.com/fORMRelated"/>
        <tag line="2" name="version" description="1.0.0b44"/>
        <tag line="2" name="changes" description="1.0.0b44  Added missing information for has and list methods to ::reflect() [wb, 2011-09-07]"/>
        <tag line="2" name="changes" description="1.0.0b43  Fixed some bugs in handling relationships between PHP 5.3 namespaced classes [wb, 2011-05-26]"/>
        <tag line="2" name="changes" description="1.0.0b42  Fixed a bug with ::associateRecords() not associating record set via primary key [wb, 2011-05-23]"/>
        <tag line="2" name="changes" description="1.0.0b41  Fixed a bug in generating errors messages for many-to-many relationships [wb, 2011-03-07]"/>
        <tag line="2" name="changes" description="1.0.0b40  Updated ::getRelatedRecordName() to use fText if loaded [wb, 2011-02-02]"/>
        <tag line="2" name="changes" description="1.0.0b39  Fixed a bug with ::validate() not properly removing validation messages about a related primary key value not being present yet, if the column and related column names were different [wb, 2010-11-24]"/>
        <tag line="2" name="changes" description="1.0.0b38  Updated ::overrideRelatedRecordName() to prefix any namespace from `$class` to `$related_class` if not already present [wb, 2010-11-24]"/>
        <tag line="2" name="changes" description="1.0.0b37  Fixed a documentation typo [wb, 2010-11-04]"/>
        <tag line="2" name="changes" description="1.0.0b36  Fixed ::getPrimaryKeys() to not throw SQL exceptions [wb, 2010-10-20]"/>
        <tag line="2" name="changes" description="1.0.0b35  Backwards Compatibility Break - changed the validation messages array to use nesting for child records [wb-imarc+wb, 2010-10-03]"/>
        <tag line="2" name="changes" description="1.0.0b35  Updated ::getPrimaryKeys() to always return primary keys in a consistent order when no order bys are specified [wb, 2010-07-26]"/>
        <tag line="2" name="changes" description="1.0.0b34  Updated the class to work with fixes in fORMRelated [wb, 2010-07-22]"/>
        <tag line="2" name="changes" description="1.0.0b33  Fixed the related table populate action to use the plural underscore_notation version of the related class name [wb, 2010-07-08]"/>
        <tag line="2" name="changes" description="1.0.0b32  Backwards Compatibility Break - related table populate action now use the underscore_notation version of the class name instead of the related table name, allowing for related tables in non-standard schemas [wb, 2010-06-23]"/>
        <tag line="2" name="changes" description="1.0.0b31  Fixed ::reflect() to properly show parameters for associate methods [wb, 2010-06-08]"/>
        <tag line="2" name="changes" description="1.0.0b30  Fixed a bug where related record error messages could be overwritten if there were multiple related records with the same error [wb, 2010-05-29]"/>
        <tag line="2" name="changes" description="1.0.0b29  Changed validation messages array to use column name keys [wb, 2010-05-26]"/>
        <tag line="2" name="changes" description="1.0.0b28  Updated ::associateRecords() to accept just a single fActiveRecord [wb, 2010-05-06]"/>
        <tag line="2" name="changes" description="1.0.0b27  Updated the class to force configure classes before peforming actions with them [wb, 2010-03-30]"/>
        <tag line="2" name="changes" description="1.0.0b26  Fixed ::reflect() to show the proper return values for `associate`, `link` and `populate` methods [wb, 2010-03-15]"/>
        <tag line="2" name="changes" description="1.0.0b25  Fixed a bug when storing a one-to-one related record with different column names on each end of the relationship [wb, 2010-03-04]"/>
        <tag line="2" name="changes" description="1.0.0b24  Added the ability to associate a single record via primary key [wb, 2010-03-03]"/>
        <tag line="2" name="changes" description="1.0.0b23  Fixed a column aliasing issue with SQLite [wb, 2010-01-25]"/>
        <tag line="2" name="changes" description="1.0.0b22  Fixed a bug with associating a non-contiguous array of fActiveRecord objects [wb, 2009-12-17]"/>
        <tag line="2" name="changes" description="1.0.0b21  Added support for the $force_cascade parameter of fActiveRecord::store(), added ::hasRecords() and fixed a bug with creating non-existent one-to-one related records [wb, 2009-12-16]"/>
        <tag line="2" name="changes" description="1.0.0b20  Updated code for the new fORMDatabase and fORMSchema APIs [wb, 2009-10-28]"/>
        <tag line="2" name="changes" description="1.0.0b19  Internal Backwards Compatibility Break - Added the `$class` parameter to ::storeManyToMany() - also fixed ::countRecords() to work across all databases, changed SQL statements to use value placeholders, identifier escaping and support schemas [wb, 2009-10-22]"/>
        <tag line="2" name="changes" description="1.0.0b18  Fixed a bug in ::countRecords() that would occur when multiple routes existed to the table being counted [wb, 2009-10-05]"/>
        <tag line="2" name="changes" description="1.0.0b17  Updated code for new fRecordSet API [wb, 2009-09-16]"/>
        <tag line="2" name="changes" description="1.0.0b16  Fixed a bug with ::createRecord() not creating non-existent record when the related value is NULL [wb, 2009-08-25]"/>
        <tag line="2" name="changes" description="1.0.0b15  Fixed a bug with ::createRecord() where foreign keys with a different column and related column name would not load properly [wb, 2009-08-17]"/>
        <tag line="2" name="changes" description="1.0.0b14  Fixed a bug with ::createRecord() when a foreign key constraint is on a column other than the primary key [wb, 2009-08-10]"/>
        <tag line="2" name="changes" description="1.0.0b13  ::setOrderBys() now (properly) only recognizes *-to-many relationships [wb, 2009-07-31]"/>
        <tag line="2" name="changes" description="1.0.0b12  Changed how related record values are set and how related validation messages are ignored because of recursive relationships [wb, 2009-07-29]"/>
        <tag line="2" name="changes" description="1.0.0b11  Fixed some bugs with one-to-one relationships [wb, 2009-07-21]"/>
        <tag line="2" name="changes" description="1.0.0b10  Fixed a couple of bugs with validating related records [wb, 2009-06-26]"/>
        <tag line="2" name="changes" description="1.0.0b9   Fixed a bug where ::store() would not save associations with no related records [wb, 2009-06-23]"/>
        <tag line="2" name="changes" description="1.0.0b8   Changed ::associateRecords() to work for *-to-many instead of just many-to-many relationships [wb, 2009-06-17]"/>
        <tag line="2" name="changes" description="1.0.0b7   Updated code for new fORM API, fixed API documentation bugs [wb, 2009-06-15]"/>
        <tag line="2" name="changes" description="1.0.0b6   Updated code to use new fValidationException::formatField() method [wb, 2009-06-04]"/>
        <tag line="2" name="changes" description="1.0.0b5   Added ::getPrimaryKeys() and ::setPrimaryKeys(), renamed ::setRecords() to ::setRecordSet() and ::tallyRecords() to ::setCount() [wb, 2009-06-02]"/>
        <tag line="2" name="changes" description="1.0.0b4   Updated code to handle new association method for related records and new `$related_records` structure, added ::store() and ::validate() [wb, 2009-06-02]"/>
        <tag line="2" name="changes" description="1.0.0b3   ::associateRecords() can now accept an array of records or primary keys instead of only an fRecordSet [wb, 2009-06-01]"/>
        <tag line="2" name="changes" description="1.0.0b2   ::populateRecords() now accepts any input field keys instead of sequential ones starting from 0 [wb, 2009-05-03]"/>
        <tag line="2" name="changes" description="1.0.0b    The initial implementation [wb, 2007-12-30]"/>
      </docblock>
      <constant namespace="global" line="66" package="Flourish">
        <name>associateRecords</name>
        <full_name>associateRecords</full_name>
        <value><![CDATA['fORMRelated::associateRecords']]></value>
      </constant>
      <constant namespace="global" line="67" package="Flourish">
        <name>buildRecords</name>
        <full_name>buildRecords</full_name>
        <value><![CDATA['fORMRelated::buildRecords']]></value>
      </constant>
      <constant namespace="global" line="68" package="Flourish">
        <name>countRecords</name>
        <full_name>countRecords</full_name>
        <value><![CDATA['fORMRelated::countRecords']]></value>
      </constant>
      <constant namespace="global" line="69" package="Flourish">
        <name>createRecord</name>
        <full_name>createRecord</full_name>
        <value><![CDATA['fORMRelated::createRecord']]></value>
      </constant>
      <constant namespace="global" line="70" package="Flourish">
        <name>determineRequestFilter</name>
        <full_name>determineRequestFilter</full_name>
        <value><![CDATA['fORMRelated::determineRequestFilter']]></value>
      </constant>
      <constant namespace="global" line="71" package="Flourish">
        <name>flagForAssociation</name>
        <full_name>flagForAssociation</full_name>
        <value><![CDATA['fORMRelated::flagForAssociation']]></value>
      </constant>
      <constant namespace="global" line="72" package="Flourish">
        <name>getOrderBys</name>
        <full_name>getOrderBys</full_name>
        <value><![CDATA['fORMRelated::getOrderBys']]></value>
      </constant>
      <constant namespace="global" line="73" package="Flourish">
        <name>getRelatedRecordName</name>
        <full_name>getRelatedRecordName</full_name>
        <value><![CDATA['fORMRelated::getRelatedRecordName']]></value>
      </constant>
      <constant namespace="global" line="74" package="Flourish">
        <name>hasRecords</name>
        <full_name>hasRecords</full_name>
        <value><![CDATA['fORMRelated::hasRecords']]></value>
      </constant>
      <constant namespace="global" line="75" package="Flourish">
        <name>linkRecords</name>
        <full_name>linkRecords</full_name>
        <value><![CDATA['fORMRelated::linkRecords']]></value>
      </constant>
      <constant namespace="global" line="76" package="Flourish">
        <name>overrideRelatedRecordName</name>
        <full_name>overrideRelatedRecordName</full_name>
        <value><![CDATA['fORMRelated::overrideRelatedRecordName']]></value>
      </constant>
      <constant namespace="global" line="77" package="Flourish">
        <name>populateRecords</name>
        <full_name>populateRecords</full_name>
        <value><![CDATA['fORMRelated::populateRecords']]></value>
      </constant>
      <constant namespace="global" line="78" package="Flourish">
        <name>reflect</name>
        <full_name>reflect</full_name>
        <value><![CDATA['fORMRelated::reflect']]></value>
      </constant>
      <constant namespace="global" line="79" package="Flourish">
        <name>registerValidationNameMethod</name>
        <full_name>registerValidationNameMethod</full_name>
        <value><![CDATA['fORMRelated::registerValidationNameMethod']]></value>
      </constant>
      <constant namespace="global" line="80" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <value><![CDATA['fORMRelated::reset']]></value>
      </constant>
      <constant namespace="global" line="81" package="Flourish">
        <name>setOrderBys</name>
        <full_name>setOrderBys</full_name>
        <value><![CDATA['fORMRelated::setOrderBys']]></value>
      </constant>
      <constant namespace="global" line="82" package="Flourish">
        <name>setCount</name>
        <full_name>setCount</full_name>
        <value><![CDATA['fORMRelated::setCount']]></value>
      </constant>
      <constant namespace="global" line="83" package="Flourish">
        <name>setPrimaryKeys</name>
        <full_name>setPrimaryKeys</full_name>
        <value><![CDATA['fORMRelated::setPrimaryKeys']]></value>
      </constant>
      <constant namespace="global" line="84" package="Flourish">
        <name>setRecordSet</name>
        <full_name>setRecordSet</full_name>
        <value><![CDATA['fORMRelated::setRecordSet']]></value>
      </constant>
      <constant namespace="global" line="85" package="Flourish">
        <name>store</name>
        <full_name>store</full_name>
        <value><![CDATA['fORMRelated::store']]></value>
      </constant>
      <constant namespace="global" line="86" package="Flourish">
        <name>storeManyToMany</name>
        <full_name>storeManyToMany</full_name>
        <value><![CDATA['fORMRelated::storeManyToMany']]></value>
      </constant>
      <constant namespace="global" line="87" package="Flourish">
        <name>storeOneToMany</name>
        <full_name>storeOneToMany</full_name>
        <value><![CDATA['fORMRelated::storeOneToMany']]></value>
      </constant>
      <constant namespace="global" line="88" package="Flourish">
        <name>validate</name>
        <full_name>validate</full_name>
        <value><![CDATA['fORMRelated::validate']]></value>
      </constant>
      <property final="false" static="true" visibility="private" line="96" namespace="global" package="Sutra">
        <name>$cache</name>
        <default><![CDATA[array()]]></default>
        <docblock line="91">
          <description><![CDATA[A generic cache for the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="91" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="103" namespace="global" package="Sutra">
        <name>$order_bys</name>
        <default><![CDATA[array()]]></default>
        <docblock line="98">
          <description><![CDATA[Rules that control what order related data is returned in]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="98" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="110" namespace="global" package="Sutra">
        <name>$related_record_names</name>
        <default><![CDATA[array()]]></default>
        <docblock line="105">
          <description><![CDATA[Names for related records]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="105" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="117" namespace="global" package="Sutra">
        <name>$validation_name_methods</name>
        <default><![CDATA[array()]]></default>
        <docblock line="112">
          <description><![CDATA[Methods to use for getting the name of related records when performing validation]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="112" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="132" package="Flourish">
        <name>associateRecord</name>
        <full_name>associateRecord</full_name>
        <docblock line="120">
          <description><![CDATA[Creates associations for one-to-one relationships]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="120" name="internal" description=""/>
          <tag line="120" name="param" description="The class to get the related values for" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="120" name="param" description="&amp;$related_records The related records existing for the fActiveRecord class" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="120" name="param" description="The class we are associating with the current record" type="string" variable="$related_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="120" name="param" description="The record (or primary key of the record) to be associated" type="\fActiveRecord|array|string|integer" variable="$record">
            <type by_reference="false">\fActiveRecord</type>
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="120" name="param" description="The route to use between the current class and the related class" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="120" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="132">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="132">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="132">
          <name>$related_class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="132">
          <name>$record</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="132">
          <name>$route</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="170" package="Flourish">
        <name>associateRecords</name>
        <full_name>associateRecords</full_name>
        <docblock line="158">
          <description><![CDATA[Creates associations for *-to-many relationships]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="158" name="internal" description=""/>
          <tag line="158" name="param" description="The class to get the related values for" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="158" name="param" description="&amp;$related_records The related records existing for the fActiveRecord class" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="158" name="param" description="The class we are associating with the current record" type="string" variable="$related_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="158" name="param" description="An fRecordSet, an array or records, or an array of primary keys of the records to be associated" type="\fRecordSet|array" variable="$records_to_associate">
            <type by_reference="false">\fRecordSet</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="158" name="param" description="The route to use between the current class and the related class" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="158" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="170">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="170">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="170">
          <name>$related_class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="170">
          <name>$records_to_associate</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="170">
          <name>$route</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="221" package="Flourish">
        <name>buildRecords</name>
        <full_name>buildRecords</full_name>
        <docblock line="209">
          <description><![CDATA[Builds a set of related records along a one-to-many or many-to-many relationship]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="209" name="internal" description=""/>
          <tag line="209" name="param" description="The class to get the related values for" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="209" name="param" description="&amp;$values The values for the fActiveRecord class" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="209" name="param" description="&amp;$related_records The related records existing for the fActiveRecord class" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="209" name="param" description="The class that is related to the current record" type="string" variable="$related_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="209" name="param" description="The route to follow for the class specified" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="209" name="return" description="A record set of the related records" type="\fRecordSet">
            <type by_reference="false">\fRecordSet</type>
          </tag>
        </docblock>
        <argument line="221">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="221">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="221">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="221">
          <name>$related_class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="221">
          <name>$route</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="273" package="Flourish">
        <name>compose</name>
        <full_name>compose</full_name>
        <docblock line="265">
          <description><![CDATA[Composes text using fText if loaded]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="265" name="param" description="The message to compose" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="265" name="param" description="A string or number to insert into the message" type="mixed" variable="$component">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="265" name="param" description="..." type="mixed" variable="">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="265" name="return" description="The composed and possible translated message" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="273">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="300" package="Flourish">
        <name>countRecords</name>
        <full_name>countRecords</full_name>
        <docblock line="288">
          <description><![CDATA[Counts the number of related one-to-many or many-to-many records]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="288" name="internal" description=""/>
          <tag line="288" name="param" description="The class to get the related values for" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="288" name="param" description="&amp;$values The values for the fActiveRecord class" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="288" name="param" description="&amp;$related_records The related records existing for the fActiveRecord class" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="288" name="param" description="The class that is related to the current record" type="string" variable="$related_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="288" name="param" description="The route to follow for the class specified" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="288" name="return" description="The number of related records" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="300">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="300">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="300">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="300">
          <name>$related_class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="300">
          <name>$route</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="380" package="Flourish">
        <name>createRecord</name>
        <full_name>createRecord</full_name>
        <docblock line="368">
          <description><![CDATA[Builds the object for the related class specified]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="368" name="internal" description=""/>
          <tag line="368" name="param" description="The class to create the related record for" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="368" name="param" description="The values existing in the fActiveRecord class" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="368" name="param" description="&amp;$related_records The related records for the record" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="368" name="param" description="The related class name" type="string" variable="$related_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="368" name="param" description="The route to the related class" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="368" name="return" description="An instance of the class specified" type="\fActiveRecord">
            <type by_reference="false">\fActiveRecord</type>
          </tag>
        </docblock>
        <argument line="380">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="380">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="380">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="380">
          <name>$related_class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="380">
          <name>$route</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="457" package="Flourish">
        <name>determineFirstPKColumn</name>
        <full_name>determineFirstPKColumn</full_name>
        <docblock line="447">
          <description><![CDATA[Figures out the first primary key column for a related class that is not the related column]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="447" name="internal" description=""/>
          <tag line="447" name="param" description="The class name of the main class" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="447" name="param" description="The related class being filtered for" type="string" variable="$related_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="447" name="param" description="The route to the related class" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="447" name="return" description="The first primary key column in the related class" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="457">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="457">
          <name>$related_class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="457">
          <name>$route</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="502" package="Flourish">
        <name>determineRequestFilter</name>
        <full_name>determineRequestFilter</full_name>
        <docblock line="492">
          <description><![CDATA[Figures out what filter to pass to fRequest::filter() for the specified related class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="492" name="internal" description=""/>
          <tag line="492" name="param" description="The class name of the main class" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="492" name="param" description="The related class being filtered for" type="string" variable="$related_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="492" name="param" description="The route to the related class" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="492" name="return" description="The prefix to filter the request fields by" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="502">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="502">
          <name>$related_class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="502">
          <name>$route</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="540" package="Flourish">
        <name>flagForAssociation</name>
        <full_name>flagForAssociation</full_name>
        <docblock line="529">
          <description><![CDATA[Sets the related records for a *-to-many relationship to be associated upon fActiveRecord::store()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="529" name="internal" description=""/>
          <tag line="529" name="param" description="The class to associate the related records to" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="529" name="param" description="&amp;$related_records The related records existing for the fActiveRecord class" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="529" name="param" description="The class we are associating with the current record" type="string" variable="$related_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="529" name="param" description="The route to use between the current class and the related class" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="529" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="540">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="540">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="540">
          <name>$related_class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="540">
          <name>$route</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="571" package="Flourish">
        <name>getOrderBys</name>
        <full_name>getOrderBys</full_name>
        <docblock line="561">
          <description><![CDATA[Gets the ordering to use when returning an fRecordSet of related objects]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="561" name="internal" description=""/>
          <tag line="561" name="param" description="The class to get the order bys for" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="561" name="param" description="The related class the ordering rules apply to" type="string" variable="$related_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="561" name="param" description="The route to the related table, should be a column name in the current table or a join table name" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="561" name="return" description="An array of the order bys - see fRecordSet::build() for format" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="571">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="571">
          <name>$related_class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="571">
          <name>$route</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="599" package="Flourish">
        <name>getPrimaryKeys</name>
        <full_name>getPrimaryKeys</full_name>
        <docblock line="587">
          <description><![CDATA[Gets the primary keys of the related records for *-to-many relationships]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="587" name="internal" description=""/>
          <tag line="587" name="param" description="The class to get the related primary keys for" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="587" name="param" description="&amp;$values The values for the fActiveRecord class" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="587" name="param" description="&amp;$related_records The related records existing for the fActiveRecord class" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="587" name="param" description="The class that is related to the current record" type="string" variable="$related_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="587" name="param" description="The route to follow for the class specified" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="587" name="return" description="The primary keys of the related records" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="599">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="599">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="599">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="599">
          <name>$related_class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="599">
          <name>$route</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="712" package="Flourish">
        <name>getRelatedRecordName</name>
        <full_name>getRelatedRecordName</full_name>
        <docblock line="700">
          <description><![CDATA[Returns the record name for a related class]]></description>
          <long-description><![CDATA[<p>The default record name of a related class is the result of
fGrammar::humanize() called on the class.</p>]]></long-description>
          <tag line="700" name="internal" description=""/>
          <tag line="700" name="param" description="The class to get the related class name for" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="700" name="param" description="The related class to get the record name of" type="string" variable="$related_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="700" name="return" description="The record name for the related class specified" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="712">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="712">
          <name>$related_class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="712">
          <name>$route</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="753" package="Flourish">
        <name>hasRecords</name>
        <full_name>hasRecords</full_name>
        <docblock line="741">
          <description><![CDATA[Indicates if a record has a one-to-one or any *-to-many related records]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="741" name="internal" description=""/>
          <tag line="741" name="param" description="The class to check related records for" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="741" name="param" description="&amp;$values The values for the record we are checking" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="741" name="param" description="&amp;$related_records The related records for the record we are checking" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="741" name="param" description="The related class we are checking for" type="string" variable="$related_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="741" name="param" description="The route to the related class" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="741" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="753">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="753">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="753">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="753">
          <name>$related_class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="753">
          <name>$route</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="787" package="Flourish">
        <name>linkRecords</name>
        <full_name>linkRecords</full_name>
        <docblock line="776">
          <description><![CDATA[Parses associations for many-to-many relationships from the page request]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="776" name="internal" description=""/>
          <tag line="776" name="param" description="The class to get link the related records to" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="776" name="param" description="&amp;$related_records The related records existing for the fActiveRecord class" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="776" name="param" description="The related class to populate" type="string" variable="$related_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="776" name="param" description="The route to the related class" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="776" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="787">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="787">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="787">
          <name>$related_class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="787">
          <name>$route</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="828" package="Flourish">
        <name>multidimensionArrayDiff</name>
        <full_name>multidimensionArrayDiff</full_name>
        <docblock line="821">
          <description><![CDATA[Does an [http://php.net/array_diff array_diff()] for two arrays that have arrays as values]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="821" name="param" description="The array to remove items from" type="array" variable="$array1">
            <type by_reference="false">array</type>
          </tag>
          <tag line="821" name="param" description="The array of items to remove" type="array" variable="$array2">
            <type by_reference="false">array</type>
          </tag>
          <tag line="821" name="return" description="The items in `$array1` that were not also in `$array2`" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="828">
          <name>$array1</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="828">
          <name>$array2</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="858" package="Flourish">
        <name>overrideRelatedRecordName</name>
        <full_name>overrideRelatedRecordName</full_name>
        <docblock line="846">
          <description><![CDATA[Allows overriding of default record names or related records]]></description>
          <long-description><![CDATA[<p>The default record name of a related record is the result of
fGrammar::humanize() called on the class name.</p>]]></long-description>
          <tag line="846" name="param" description="The class name or instance of the class to set the related record name for" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="846" name="param" description="The name of the related class, or an instance of it" type="mixed" variable="$related_class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="846" name="param" description="The human version of the related record" type="string" variable="$record_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="846" name="param" description="The route to the related class" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="846" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="858">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="858">
          <name>$related_class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="858">
          <name>$record_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="858">
          <name>$route</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="896" package="Flourish">
        <name>populateRecords</name>
        <full_name>populateRecords</full_name>
        <docblock line="885">
          <description><![CDATA[Sets the values for records in a one-to-many relationship with this record]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="885" name="internal" description=""/>
          <tag line="885" name="param" description="The class to populate the related records of" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="885" name="param" description="&amp;$related_records The related records existing for the fActiveRecord class" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="885" name="param" description="The related class to populate" type="string" variable="$related_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="885" name="param" description="The route to the related class" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="885" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="896">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="896">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="896">
          <name>$related_class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="896">
          <name>$route</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="956" package="Flourish">
        <name>reflect</name>
        <full_name>reflect</full_name>
        <docblock line="946">
          <description><![CDATA[Adds information about methods provided by this class to fActiveRecord]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="946" name="internal" description=""/>
          <tag line="946" name="param" description="The class to reflect the related record methods for" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="946" name="param" description="&amp;$signatures The associative array of `{method_name} =&gt; {signature}`" type="array" variable="$signatures">
            <type by_reference="false">array</type>
          </tag>
          <tag line="946" name="param" description="If the doc block comments for each method should be included" type="boolean" variable="$include_doc_comments">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="946" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="956">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="956">
          <name>$signatures</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="956">
          <name>$include_doc_comments</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1288" package="Flourish">
        <name>registerValidationNameMethod</name>
        <full_name>registerValidationNameMethod</full_name>
        <docblock line="1280">
          <description><![CDATA[Registers a method to use to get a name for a related record when doing validation]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1280" name="param" description="The class to register the method for" type="string|\fActiveRecord" variable="$class">
            <type by_reference="false">string</type>
            <type by_reference="false">\fActiveRecord</type>
          </tag>
          <tag line="1280" name="param" description="The related class to register the method for" type="string" variable="$related_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1280" name="param" description="The method to be called on the related class that will return the name" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1280" name="param" description="The route to the related class" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1288">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1288">
          <name>$related_class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1288">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1288">
          <name>$route</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1314" package="Flourish">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="1307">
          <description><![CDATA[Resets the configuration of the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1307" name="internal" description=""/>
          <tag line="1307" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1331" package="Flourish">
        <name>setOrderBys</name>
        <full_name>setOrderBys</full_name>
        <docblock line="1322">
          <description><![CDATA[Sets the ordering to use when returning an fRecordSet of related objects]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1322" name="param" description="The class name or instance of the class this ordering rule applies to" type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1322" name="param" description="The related class we are getting info from" type="string" variable="$related_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1322" name="param" description="An array of the order bys for this table.column combination - see fRecordSet::build() for format" type="array" variable="$order_bys">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1322" name="param" description="The route to the related table, this should be a column name in the current table or a join table name" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1322" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1331">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1331">
          <name>$related_class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1331">
          <name>$order_bys</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1331">
          <name>$route</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1370" package="Flourish">
        <name>setCount</name>
        <full_name>setCount</full_name>
        <docblock line="1357">
          <description><![CDATA[Records the number of related one-to-many or many-to-many records]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1357" name="internal" description=""/>
          <tag line="1357" name="param" description="The class to set the related records count for" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1357" name="param" description="&amp;$values The values for the fActiveRecord class" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1357" name="param" description="&amp;$related_records The related records existing for the fActiveRecord class" type="array" variable="$related_class">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1357" name="param" description="The class that is related to the current record" type="string" variable="$related_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1357" name="param" description="The number of records" type="integer" variable="$count">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="1357" name="param" description="The route to follow for the class specified" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1357" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1370">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1370">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1370">
          <name>$related_class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1370">
          <name>$count</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1370">
          <name>$route</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1411" package="Flourish">
        <name>setPrimaryKeys</name>
        <full_name>setPrimaryKeys</full_name>
        <docblock line="1399">
          <description><![CDATA[Sets the related records for *-to-many relationships, providing only primary keys]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1399" name="internal" description=""/>
          <tag line="1399" name="param" description="The class to set the related primary keys for" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1399" name="param" description="&amp;$related_records The related records existing for the fActiveRecord class" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1399" name="param" description="The class we are setting the records for" type="string" variable="$related_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1399" name="param" description="The records to set" type="array" variable="$primary_keys">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1399" name="param" description="The route to use between the current class and the related class" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1399" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1411">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1411">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1411">
          <name>$related_class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1411">
          <name>$primary_keys</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1411">
          <name>$route</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1448" package="Flourish">
        <name>setRecordSet</name>
        <full_name>setRecordSet</full_name>
        <docblock line="1436">
          <description><![CDATA[Sets the related records for *-to-many relationships]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1436" name="internal" description=""/>
          <tag line="1436" name="param" description="The class to set the related records for" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1436" name="param" description="&amp;$related_records The related records existing for the fActiveRecord class" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1436" name="param" description="The class we are associating with the current record" type="string" variable="$related_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1436" name="param" description="The records are associating" type="\fRecordSet" variable="$records">
            <type by_reference="false">\fRecordSet</type>
          </tag>
          <tag line="1436" name="param" description="The route to use between the current class and the related class" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1436" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1448">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1448">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1448">
          <name>$related_class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1448">
          <name>$records</name>
          <default><![CDATA[]]></default>
          <type>\fRecordSet</type>
        </argument>
        <argument line="1448">
          <name>$route</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1484" package="Flourish">
        <name>store</name>
        <full_name>store</full_name>
        <docblock line="1473">
          <description><![CDATA[Stores any many-to-many associations or any one-to-many records that have been flagged for association]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1473" name="internal" description=""/>
          <tag line="1473" name="param" description="The class to store the related records for" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1473" name="param" description="&amp;$values The current values for the main record being stored" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1473" name="param" description="&amp;$related_records The related records array" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1473" name="param" description="This flag will be passed to the fActiveRecord::delete() method on related records that are being deleted" type="boolean" variable="$force_cascade">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1473" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1484">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1484">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1484">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1484">
          <name>$force_cascade</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1519" package="Flourish">
        <name>storeManyToMany</name>
        <full_name>storeManyToMany</full_name>
        <docblock line="1508">
          <description><![CDATA[Associates a set of many-to-many related records with the current record]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1508" name="internal" description=""/>
          <tag line="1508" name="param" description="The class the relationship is being stored for" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1508" name="param" description="&amp;$values The current values for the main record being stored" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1508" name="param" description="The information about the relationship between this object and the records in the record set" type="array" variable="$relationship">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1508" name="param" description="An array containing the keys `'record_set'`, `'count'`, `'primary_keys'` and `'associate'`" type="array" variable="$related_info">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1508" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1519">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1519">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1519">
          <name>$relationship</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1519">
          <name>$related_info</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1599" package="Flourish">
        <name>storeOneToStar</name>
        <full_name>storeOneToStar</full_name>
        <docblock line="1585">
          <description><![CDATA[Stores a set of one-to-many related records in the database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1585" name="throws" description="When one of the &quot;many&quot; records throws an exception from fActiveRecord::store()" type="\fValidationException">
            <type by_reference="false">\fValidationException</type>
          </tag>
          <tag line="1585" name="internal" description=""/>
          <tag line="1585" name="param" description="The class to store the related records for" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1585" name="param" description="&amp;$values The current values for the main record being stored" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1585" name="param" description="&amp;$related_records The related records array" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1585" name="param" description="The related class being stored" type="string" variable="$related_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1585" name="param" description="The route to the related class" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1585" name="param" description="This flag will be passed to the fActiveRecord::delete() method on related records that are being deleted" type="boolean" variable="$force_cascade">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1585" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1599">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1599">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1599">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1599">
          <name>$related_class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1599">
          <name>$route</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1599">
          <name>$force_cascade</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1661" package="Flourish">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="1651">
          <description><![CDATA[Validates any many-to-many associations or any one-to-many records that have been flagged for association]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1651" name="internal" description=""/>
          <tag line="1651" name="param" description="The class to validate the related records for" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1651" name="param" description="&amp;$values The values for the object" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1651" name="param" description="&amp;$related_records The related records for the object" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1651" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1661">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1661">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1661">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="1703" package="Flourish">
        <name>validateOneToStar</name>
        <full_name>validateOneToStar</full_name>
        <docblock line="1693">
          <description><![CDATA[Validates one-to-* related records]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1693" name="param" description="The class to validate the related records for" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1693" name="param" description="&amp;$values The values for the object" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1693" name="param" description="&amp;$related_records The related records for the object" type="array" variable="$related_records">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1693" name="param" description="The name of the class for this record set" type="string" variable="$related_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1693" name="param" description="The route between the table and related table" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1693" name="return" description="An array of validation messages" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1703">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1703">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1703">
          <name>$related_records</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1703">
          <name>$related_class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1703">
          <name>$route</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="1789" package="Flourish">
        <name>validateManyToMany</name>
        <full_name>validateManyToMany</full_name>
        <docblock line="1780">
          <description><![CDATA[Validates many-to-many related records]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1780" name="param" description="The class to validate the related records for" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1780" name="param" description="The name of the class for this record set" type="string" variable="$related_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1780" name="param" description="The route between the table and related table" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1780" name="param" description="The related info to validate" type="array" variable="$related_info">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1780" name="return" description="An array of validation messages" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1789">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1789">
          <name>$related_class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1789">
          <name>$route</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1789">
          <name>$related_info</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="1824" package="Flourish">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="1819">
          <description><![CDATA[Forces use as a static class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1819" name="return" description="" type="\fORMRelated">
            <type by_reference="false">\fORMRelated</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fORMRelated.php</error>
      <notice line="265" code="50013">Parameter $component could not be found in compose()</notice>
      <notice line="265" code="50013">Parameter  could not be found in compose()</notice>
      <error line="700" code="50015">Argument $route is missing from the Docblock of getRelatedRecordName()</error>
      <error line="1357" code="50014">Name of argument $count does not match with the DocBlock's name $related_class in setCount()</error>
      <error line="1357" code="50014">Name of argument $route does not match with the DocBlock's name $count in setCount()</error>
    </parse_markers>
  </file>
  <file path="php/flourish/fAuthorizationException.php" hash="54b4fdb94f285eb6ad90ec6abeb1fa2f" package="Sutra">
    <class final="false" abstract="false" namespace="global" line="15" package="Flourish">
      <extends>\fExpectedException</extends>
      <name>fAuthorizationException</name>
      <full_name>\fAuthorizationException</full_name>
      <docblock line="2">
        <description><![CDATA[An exception caused by an authorization error]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="2" name="copyright" description="Copyright (c) 2011 Will Bond"/>
        <tag line="2" name="author" description="Will Bond [wb] &lt;will@flourishlib.com&gt;"/>
        <tag line="2" name="license" description="http://flourishlib.com/license"/>
        <tag line="2" name="package" description="Flourish"/>
        <tag line="2" name="link" description="http://flourishlib.com/fConnectivityException" link="http://flourishlib.com/fConnectivityException"/>
        <tag line="2" name="version" description="1.0.0b"/>
        <tag line="2" name="changes" description="1.0.0b  The initial implementation [wb, 2011-05-09]"/>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file php/flourish/fAuthorizationException.php</error>
    </parse_markers>
  </file>
  <package name="Flourish" full_name="Flourish"/>
  <package name="Sutra" full_name="Sutra"/>
  <namespace name="global" full_name="global"/>
  <marker count="2">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
